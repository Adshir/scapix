// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/annotation/Annotation.h>

#ifndef SCAPIX_DALVIK_ANNOTATION_TESTTARGET_H
#define SCAPIX_DALVIK_ANNOTATION_TESTTARGET_H

namespace scapix::java_api {

namespace java::lang { class Class; }
namespace java::lang { class String; }

namespace dalvik::annotation {

class TestTarget : public object_base<SCAPIX_META_STRING("dalvik/annotation/TestTarget"),
	java::lang::Object,
	java::lang::annotation::Annotation>
{
public:

	ref<java::lang::String> methodName();
	ref<java::lang::String> conceptName();
	ref<link::java::array<java::lang::Class>> methodArgs();

protected:

	TestTarget(handle_type h) : base_(h) {}

};

} // namespace dalvik::annotation
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/Class.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace dalvik::annotation {

inline ref<java::lang::String> TestTarget::methodName() { return call_method<SCAPIX_META_STRING("methodName"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TestTarget::conceptName() { return call_method<SCAPIX_META_STRING("conceptName"), ref<java::lang::String>>(); }
inline ref<link::java::array<java::lang::Class>> TestTarget::methodArgs() { return call_method<SCAPIX_META_STRING("methodArgs"), ref<link::java::array<java::lang::Class>>>(); }

} // namespace dalvik::annotation
} // namespace scapix::java_api

#endif // SCAPIX_DALVIK_ANNOTATION_TESTTARGET_H
