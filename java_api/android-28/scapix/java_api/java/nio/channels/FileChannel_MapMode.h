// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_NIO_CHANNELS_FILECHANNEL_MAPMODE_H
#define SCAPIX_JAVA_NIO_CHANNELS_FILECHANNEL_MAPMODE_H

namespace scapix::java_api {

namespace java::lang { class String; }

namespace java::nio::channels {

class FileChannel_MapMode : public object_base<SCAPIX_META_STRING("java/nio/channels/FileChannel$MapMode"),
	java::lang::Object>
{
public:

	static ref<java::nio::channels::FileChannel_MapMode> PRIVATE_();
	static ref<java::nio::channels::FileChannel_MapMode> READ_ONLY_();
	static ref<java::nio::channels::FileChannel_MapMode> READ_WRITE_();

	ref<java::lang::String> toString();

protected:

	FileChannel_MapMode(handle_type h) : base_(h) {}

};

} // namespace java::nio::channels
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace java::nio::channels {

inline ref<java::nio::channels::FileChannel_MapMode> FileChannel_MapMode::PRIVATE_() { return get_static_field<SCAPIX_META_STRING("PRIVATE"), ref<java::nio::channels::FileChannel_MapMode>>(); }
inline ref<java::nio::channels::FileChannel_MapMode> FileChannel_MapMode::READ_ONLY_() { return get_static_field<SCAPIX_META_STRING("READ_ONLY"), ref<java::nio::channels::FileChannel_MapMode>>(); }
inline ref<java::nio::channels::FileChannel_MapMode> FileChannel_MapMode::READ_WRITE_() { return get_static_field<SCAPIX_META_STRING("READ_WRITE"), ref<java::nio::channels::FileChannel_MapMode>>(); }
inline ref<java::lang::String> FileChannel_MapMode::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }

} // namespace java::nio::channels
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_NIO_CHANNELS_FILECHANNEL_MAPMODE_H
