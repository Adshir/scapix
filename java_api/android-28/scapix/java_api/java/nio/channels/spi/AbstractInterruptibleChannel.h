// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/nio/channels/Channel.h>
#include <scapix/java_api/java/nio/channels/InterruptibleChannel.h>

#ifndef SCAPIX_JAVA_NIO_CHANNELS_SPI_ABSTRACTINTERRUPTIBLECHANNEL_H
#define SCAPIX_JAVA_NIO_CHANNELS_SPI_ABSTRACTINTERRUPTIBLECHANNEL_H

namespace scapix::java_api {
namespace java::nio::channels::spi {

class AbstractInterruptibleChannel : public object_base<SCAPIX_META_STRING("java/nio/channels/spi/AbstractInterruptibleChannel"),
	java::lang::Object,
	java::nio::channels::Channel,
	java::nio::channels::InterruptibleChannel>
{
public:

	void close();
	jboolean isOpen();

protected:

	AbstractInterruptibleChannel(handle_type h) : base_(h) {}

};

} // namespace java::nio::channels::spi
} // namespace scapix::java_api


namespace scapix::java_api {
namespace java::nio::channels::spi {

inline void AbstractInterruptibleChannel::close() { return call_method<SCAPIX_META_STRING("close"), void>(); }
inline jboolean AbstractInterruptibleChannel::isOpen() { return call_method<SCAPIX_META_STRING("isOpen"), jboolean>(); }

} // namespace java::nio::channels::spi
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_NIO_CHANNELS_SPI_ABSTRACTINTERRUPTIBLECHANNEL_H
