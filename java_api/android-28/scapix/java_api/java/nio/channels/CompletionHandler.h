// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_NIO_CHANNELS_COMPLETIONHANDLER_H
#define SCAPIX_JAVA_NIO_CHANNELS_COMPLETIONHANDLER_H

namespace scapix::java_api {

namespace java::lang { class Throwable; }

namespace java::nio::channels {

class CompletionHandler : public object_base<SCAPIX_META_STRING("java/nio/channels/CompletionHandler"),
	java::lang::Object>
{
public:

	void completed(ref<java::lang::Object> p1, ref<java::lang::Object> p2);
	void failed(ref<java::lang::Throwable> p1, ref<java::lang::Object> p2);

protected:

	CompletionHandler(handle_type h) : base_(h) {}

};

} // namespace java::nio::channels
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/Throwable.h>

namespace scapix::java_api {
namespace java::nio::channels {

inline void CompletionHandler::completed(ref<java::lang::Object> p1, ref<java::lang::Object> p2) { return call_method<SCAPIX_META_STRING("completed"), void>(p1, p2); }
inline void CompletionHandler::failed(ref<java::lang::Throwable> p1, ref<java::lang::Object> p2) { return call_method<SCAPIX_META_STRING("failed"), void>(p1, p2); }

} // namespace java::nio::channels
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_NIO_CHANNELS_COMPLETIONHANDLER_H
