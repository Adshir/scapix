// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/nio/channels/NetworkChannel.h>

#ifndef SCAPIX_JAVA_NIO_CHANNELS_MULTICASTCHANNEL_H
#define SCAPIX_JAVA_NIO_CHANNELS_MULTICASTCHANNEL_H

namespace scapix::java_api {

namespace java::net { class InetAddress; }
namespace java::net { class NetworkInterface; }
namespace java::nio::channels { class MembershipKey; }

namespace java::nio::channels {

class MulticastChannel : public object_base<SCAPIX_META_STRING("java/nio/channels/MulticastChannel"),
	java::lang::Object,
	java::nio::channels::NetworkChannel>
{
public:

	void close();
	ref<java::nio::channels::MembershipKey> join(ref<java::net::InetAddress> p1, ref<java::net::NetworkInterface> p2);
	ref<java::nio::channels::MembershipKey> join(ref<java::net::InetAddress> p1, ref<java::net::NetworkInterface> p2, ref<java::net::InetAddress> p3);

protected:

	MulticastChannel(handle_type h) : base_(h) {}

};

} // namespace java::nio::channels
} // namespace scapix::java_api

#include <scapix/java_api/java/net/InetAddress.h>
#include <scapix/java_api/java/net/NetworkInterface.h>
#include <scapix/java_api/java/nio/channels/MembershipKey.h>

namespace scapix::java_api {
namespace java::nio::channels {

inline void MulticastChannel::close() { return call_method<SCAPIX_META_STRING("close"), void>(); }
inline ref<java::nio::channels::MembershipKey> MulticastChannel::join(ref<java::net::InetAddress> p1, ref<java::net::NetworkInterface> p2) { return call_method<SCAPIX_META_STRING("join"), ref<java::nio::channels::MembershipKey>>(p1, p2); }
inline ref<java::nio::channels::MembershipKey> MulticastChannel::join(ref<java::net::InetAddress> p1, ref<java::net::NetworkInterface> p2, ref<java::net::InetAddress> p3) { return call_method<SCAPIX_META_STRING("join"), ref<java::nio::channels::MembershipKey>>(p1, p2, p3); }

} // namespace java::nio::channels
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_NIO_CHANNELS_MULTICASTCHANNEL_H
