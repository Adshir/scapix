// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_NIO_FILE_FILESTORE_H
#define SCAPIX_JAVA_NIO_FILE_FILESTORE_H

namespace scapix::java_api {

namespace java::lang { class Class; }
namespace java::lang { class String; }
namespace java::nio::file::attribute { class FileStoreAttributeView; }

namespace java::nio::file {

class FileStore : public object_base<SCAPIX_META_STRING("java/nio/file/FileStore"),
	java::lang::Object>
{
public:

	ref<java::lang::String> name();
	ref<java::lang::String> type();
	jboolean isReadOnly();
	jlong getTotalSpace();
	jlong getUsableSpace();
	jlong getUnallocatedSpace();
	jboolean supportsFileAttributeView(ref<java::lang::Class> p1);
	jboolean supportsFileAttributeView(ref<java::lang::String> p1);
	ref<java::nio::file::attribute::FileStoreAttributeView> getFileStoreAttributeView(ref<java::lang::Class> p1);
	ref<java::lang::Object> getAttribute(ref<java::lang::String> p1);

protected:

	FileStore(handle_type h) : base_(h) {}

};

} // namespace java::nio::file
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/Class.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/nio/file/attribute/FileStoreAttributeView.h>

namespace scapix::java_api {
namespace java::nio::file {

inline ref<java::lang::String> FileStore::name() { return call_method<SCAPIX_META_STRING("name"), ref<java::lang::String>>(); }
inline ref<java::lang::String> FileStore::type() { return call_method<SCAPIX_META_STRING("type"), ref<java::lang::String>>(); }
inline jboolean FileStore::isReadOnly() { return call_method<SCAPIX_META_STRING("isReadOnly"), jboolean>(); }
inline jlong FileStore::getTotalSpace() { return call_method<SCAPIX_META_STRING("getTotalSpace"), jlong>(); }
inline jlong FileStore::getUsableSpace() { return call_method<SCAPIX_META_STRING("getUsableSpace"), jlong>(); }
inline jlong FileStore::getUnallocatedSpace() { return call_method<SCAPIX_META_STRING("getUnallocatedSpace"), jlong>(); }
inline jboolean FileStore::supportsFileAttributeView(ref<java::lang::Class> p1) { return call_method<SCAPIX_META_STRING("supportsFileAttributeView"), jboolean>(p1); }
inline jboolean FileStore::supportsFileAttributeView(ref<java::lang::String> p1) { return call_method<SCAPIX_META_STRING("supportsFileAttributeView"), jboolean>(p1); }
inline ref<java::nio::file::attribute::FileStoreAttributeView> FileStore::getFileStoreAttributeView(ref<java::lang::Class> p1) { return call_method<SCAPIX_META_STRING("getFileStoreAttributeView"), ref<java::nio::file::attribute::FileStoreAttributeView>>(p1); }
inline ref<java::lang::Object> FileStore::getAttribute(ref<java::lang::String> p1) { return call_method<SCAPIX_META_STRING("getAttribute"), ref<java::lang::Object>>(p1); }

} // namespace java::nio::file
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_NIO_FILE_FILESTORE_H
