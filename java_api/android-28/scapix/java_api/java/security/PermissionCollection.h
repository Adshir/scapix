// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/io/Serializable.h>

#ifndef SCAPIX_JAVA_SECURITY_PERMISSIONCOLLECTION_H
#define SCAPIX_JAVA_SECURITY_PERMISSIONCOLLECTION_H

namespace scapix::java_api {

namespace java::security { class Permission; }
namespace java::util { class Enumeration; }

namespace java::security {

class PermissionCollection : public object_base<SCAPIX_META_STRING("java/security/PermissionCollection"),
	java::lang::Object,
	java::io::Serializable>
{
public:

	static ref<PermissionCollection> new_object();
	void add(ref<java::security::Permission> p1);
	jboolean implies(ref<java::security::Permission> p1);
	ref<java::util::Enumeration> elements();
	void setReadOnly();
	jboolean isReadOnly();

protected:

	PermissionCollection(handle_type h) : base_(h) {}

};

} // namespace java::security
} // namespace scapix::java_api

#include <scapix/java_api/java/security/Permission.h>
#include <scapix/java_api/java/util/Enumeration.h>

namespace scapix::java_api {
namespace java::security {

inline ref<PermissionCollection> PermissionCollection::new_object() { return base_::new_object(); }
inline void PermissionCollection::add(ref<java::security::Permission> p1) { return call_method<SCAPIX_META_STRING("add"), void>(p1); }
inline jboolean PermissionCollection::implies(ref<java::security::Permission> p1) { return call_method<SCAPIX_META_STRING("implies"), jboolean>(p1); }
inline ref<java::util::Enumeration> PermissionCollection::elements() { return call_method<SCAPIX_META_STRING("elements"), ref<java::util::Enumeration>>(); }
inline void PermissionCollection::setReadOnly() { return call_method<SCAPIX_META_STRING("setReadOnly"), void>(); }
inline jboolean PermissionCollection::isReadOnly() { return call_method<SCAPIX_META_STRING("isReadOnly"), jboolean>(); }

} // namespace java::security
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_SECURITY_PERMISSIONCOLLECTION_H
