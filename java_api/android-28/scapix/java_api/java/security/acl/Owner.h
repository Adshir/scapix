// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_SECURITY_ACL_OWNER_H
#define SCAPIX_JAVA_SECURITY_ACL_OWNER_H

namespace scapix::java_api {

namespace java::security { class Principal; }

namespace java::security::acl {

class Owner : public object_base<SCAPIX_META_STRING("java/security/acl/Owner"),
	java::lang::Object>
{
public:

	jboolean addOwner(ref<java::security::Principal> p1, ref<java::security::Principal> p2);
	jboolean deleteOwner(ref<java::security::Principal> p1, ref<java::security::Principal> p2);
	jboolean isOwner(ref<java::security::Principal> p1);

protected:

	Owner(handle_type h) : base_(h) {}

};

} // namespace java::security::acl
} // namespace scapix::java_api

#include <scapix/java_api/java/security/Principal.h>

namespace scapix::java_api {
namespace java::security::acl {

inline jboolean Owner::addOwner(ref<java::security::Principal> p1, ref<java::security::Principal> p2) { return call_method<SCAPIX_META_STRING("addOwner"), jboolean>(p1, p2); }
inline jboolean Owner::deleteOwner(ref<java::security::Principal> p1, ref<java::security::Principal> p2) { return call_method<SCAPIX_META_STRING("deleteOwner"), jboolean>(p1, p2); }
inline jboolean Owner::isOwner(ref<java::security::Principal> p1) { return call_method<SCAPIX_META_STRING("isOwner"), jboolean>(p1); }

} // namespace java::security::acl
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_SECURITY_ACL_OWNER_H
