// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_SECURITY_SECURITY_H
#define SCAPIX_JAVA_SECURITY_SECURITY_H

namespace scapix::java_api {

namespace java::lang { class String; }
namespace java::security { class Provider; }
namespace java::util { class Map; }
namespace java::util { class Set; }

namespace java::security {

class Security : public object_base<SCAPIX_META_STRING("java/security/Security"),
	java::lang::Object>
{
public:

	static ref<java::lang::String> getAlgorithmProperty(ref<java::lang::String> algName, ref<java::lang::String> propName);
	static jint insertProviderAt(ref<java::security::Provider> provider, jint position);
	static jint addProvider(ref<java::security::Provider> provider);
	static void removeProvider(ref<java::lang::String> name);
	static ref<link::java::array<java::security::Provider>> getProviders();
	static ref<java::security::Provider> getProvider(ref<java::lang::String> name);
	static ref<link::java::array<java::security::Provider>> getProviders(ref<java::lang::String> filter);
	static ref<link::java::array<java::security::Provider>> getProviders(ref<java::util::Map> filter);
	static ref<java::lang::String> getProperty(ref<java::lang::String> key);
	static void setProperty(ref<java::lang::String> key, ref<java::lang::String> datum);
	static ref<java::util::Set> getAlgorithms(ref<java::lang::String> serviceName);

protected:

	Security(handle_type h) : base_(h) {}

};

} // namespace java::security
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/security/Provider.h>
#include <scapix/java_api/java/util/Map.h>
#include <scapix/java_api/java/util/Set.h>

namespace scapix::java_api {
namespace java::security {

inline ref<java::lang::String> Security::getAlgorithmProperty(ref<java::lang::String> algName, ref<java::lang::String> propName) { return call_static_method<SCAPIX_META_STRING("getAlgorithmProperty"), ref<java::lang::String>>(algName, propName); }
inline jint Security::insertProviderAt(ref<java::security::Provider> provider, jint position) { return call_static_method<SCAPIX_META_STRING("insertProviderAt"), jint>(provider, position); }
inline jint Security::addProvider(ref<java::security::Provider> provider) { return call_static_method<SCAPIX_META_STRING("addProvider"), jint>(provider); }
inline void Security::removeProvider(ref<java::lang::String> name) { return call_static_method<SCAPIX_META_STRING("removeProvider"), void>(name); }
inline ref<link::java::array<java::security::Provider>> Security::getProviders() { return call_static_method<SCAPIX_META_STRING("getProviders"), ref<link::java::array<java::security::Provider>>>(); }
inline ref<java::security::Provider> Security::getProvider(ref<java::lang::String> name) { return call_static_method<SCAPIX_META_STRING("getProvider"), ref<java::security::Provider>>(name); }
inline ref<link::java::array<java::security::Provider>> Security::getProviders(ref<java::lang::String> filter) { return call_static_method<SCAPIX_META_STRING("getProviders"), ref<link::java::array<java::security::Provider>>>(filter); }
inline ref<link::java::array<java::security::Provider>> Security::getProviders(ref<java::util::Map> filter) { return call_static_method<SCAPIX_META_STRING("getProviders"), ref<link::java::array<java::security::Provider>>>(filter); }
inline ref<java::lang::String> Security::getProperty(ref<java::lang::String> key) { return call_static_method<SCAPIX_META_STRING("getProperty"), ref<java::lang::String>>(key); }
inline void Security::setProperty(ref<java::lang::String> key, ref<java::lang::String> datum) { return call_static_method<SCAPIX_META_STRING("setProperty"), void>(key, datum); }
inline ref<java::util::Set> Security::getAlgorithms(ref<java::lang::String> serviceName) { return call_static_method<SCAPIX_META_STRING("getAlgorithms"), ref<java::util::Set>>(serviceName); }

} // namespace java::security
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_SECURITY_SECURITY_H
