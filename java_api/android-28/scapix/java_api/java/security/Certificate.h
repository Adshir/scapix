// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_SECURITY_CERTIFICATE_H
#define SCAPIX_JAVA_SECURITY_CERTIFICATE_H

namespace scapix::java_api {

namespace java::io { class InputStream; }
namespace java::io { class OutputStream; }
namespace java::lang { class String; }
namespace java::security { class Principal; }
namespace java::security { class PublicKey; }

namespace java::security {

class Certificate : public object_base<SCAPIX_META_STRING("java/security/Certificate"),
	java::lang::Object>
{
public:

	ref<java::security::Principal> getGuarantor();
	ref<java::security::Principal> getPrincipal();
	ref<java::security::PublicKey> getPublicKey();
	void encode(ref<java::io::OutputStream> p1);
	void decode(ref<java::io::InputStream> p1);
	ref<java::lang::String> getFormat();
	ref<java::lang::String> toString(jboolean p1);

protected:

	Certificate(handle_type h) : base_(h) {}

};

} // namespace java::security
} // namespace scapix::java_api

#include <scapix/java_api/java/io/InputStream.h>
#include <scapix/java_api/java/io/OutputStream.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/security/Principal.h>
#include <scapix/java_api/java/security/PublicKey.h>

namespace scapix::java_api {
namespace java::security {

inline ref<java::security::Principal> Certificate::getGuarantor() { return call_method<SCAPIX_META_STRING("getGuarantor"), ref<java::security::Principal>>(); }
inline ref<java::security::Principal> Certificate::getPrincipal() { return call_method<SCAPIX_META_STRING("getPrincipal"), ref<java::security::Principal>>(); }
inline ref<java::security::PublicKey> Certificate::getPublicKey() { return call_method<SCAPIX_META_STRING("getPublicKey"), ref<java::security::PublicKey>>(); }
inline void Certificate::encode(ref<java::io::OutputStream> p1) { return call_method<SCAPIX_META_STRING("encode"), void>(p1); }
inline void Certificate::decode(ref<java::io::InputStream> p1) { return call_method<SCAPIX_META_STRING("decode"), void>(p1); }
inline ref<java::lang::String> Certificate::getFormat() { return call_method<SCAPIX_META_STRING("getFormat"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Certificate::toString(jboolean p1) { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(p1); }

} // namespace java::security
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_SECURITY_CERTIFICATE_H
