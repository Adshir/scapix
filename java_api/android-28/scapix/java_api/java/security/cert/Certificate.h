// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/io/Serializable.h>

#ifndef SCAPIX_JAVA_SECURITY_CERT_CERTIFICATE_H
#define SCAPIX_JAVA_SECURITY_CERT_CERTIFICATE_H

namespace scapix::java_api {

namespace java::lang { class String; }
namespace java::security { class Provider; }
namespace java::security { class PublicKey; }

namespace java::security::cert {

class Certificate : public object_base<SCAPIX_META_STRING("java/security/cert/Certificate"),
	java::lang::Object,
	java::io::Serializable>
{
public:

	ref<java::lang::String> getType();
	jboolean equals(ref<java::lang::Object> other);
	jint hashCode();
	ref<link::java::array<jbyte>> getEncoded();
	void verify(ref<java::security::PublicKey> p1);
	void verify(ref<java::security::PublicKey> p1, ref<java::lang::String> p2);
	void verify(ref<java::security::PublicKey> key, ref<java::security::Provider> sigProvider);
	ref<java::lang::String> toString();
	ref<java::security::PublicKey> getPublicKey();

protected:

	Certificate(handle_type h) : base_(h) {}

};

} // namespace java::security::cert
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/security/Provider.h>
#include <scapix/java_api/java/security/PublicKey.h>

namespace scapix::java_api {
namespace java::security::cert {

inline ref<java::lang::String> Certificate::getType() { return call_method<SCAPIX_META_STRING("getType"), ref<java::lang::String>>(); }
inline jboolean Certificate::equals(ref<java::lang::Object> other) { return call_method<SCAPIX_META_STRING("equals"), jboolean>(other); }
inline jint Certificate::hashCode() { return call_method<SCAPIX_META_STRING("hashCode"), jint>(); }
inline ref<link::java::array<jbyte>> Certificate::getEncoded() { return call_method<SCAPIX_META_STRING("getEncoded"), ref<link::java::array<jbyte>>>(); }
inline void Certificate::verify(ref<java::security::PublicKey> p1) { return call_method<SCAPIX_META_STRING("verify"), void>(p1); }
inline void Certificate::verify(ref<java::security::PublicKey> p1, ref<java::lang::String> p2) { return call_method<SCAPIX_META_STRING("verify"), void>(p1, p2); }
inline void Certificate::verify(ref<java::security::PublicKey> key, ref<java::security::Provider> sigProvider) { return call_method<SCAPIX_META_STRING("verify"), void>(key, sigProvider); }
inline ref<java::lang::String> Certificate::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }
inline ref<java::security::PublicKey> Certificate::getPublicKey() { return call_method<SCAPIX_META_STRING("getPublicKey"), ref<java::security::PublicKey>>(); }

} // namespace java::security::cert
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_SECURITY_CERT_CERTIFICATE_H
