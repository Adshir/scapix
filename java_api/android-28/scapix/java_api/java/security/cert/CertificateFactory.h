// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_SECURITY_CERT_CERTIFICATEFACTORY_H
#define SCAPIX_JAVA_SECURITY_CERT_CERTIFICATEFACTORY_H

namespace scapix::java_api {

namespace java::io { class InputStream; }
namespace java::lang { class String; }
namespace java::security { class Provider; }
namespace java::security::cert { class CRL; }
namespace java::security::cert { class CertPath; }
namespace java::security::cert { class Certificate; }
namespace java::util { class Collection; }
namespace java::util { class Iterator; }
namespace java::util { class List; }

namespace java::security::cert {

class CertificateFactory : public object_base<SCAPIX_META_STRING("java/security/cert/CertificateFactory"),
	java::lang::Object>
{
public:

	static ref<java::security::cert::CertificateFactory> getInstance(ref<java::lang::String> type);
	static ref<java::security::cert::CertificateFactory> getInstance(ref<java::lang::String> type, ref<java::lang::String> provider);
	static ref<java::security::cert::CertificateFactory> getInstance(ref<java::lang::String> type, ref<java::security::Provider> provider);
	ref<java::security::Provider> getProvider();
	ref<java::lang::String> getType();
	ref<java::security::cert::Certificate> generateCertificate(ref<java::io::InputStream> inStream);
	ref<java::util::Iterator> getCertPathEncodings();
	ref<java::security::cert::CertPath> generateCertPath(ref<java::io::InputStream> inStream);
	ref<java::security::cert::CertPath> generateCertPath(ref<java::io::InputStream> inStream, ref<java::lang::String> encoding);
	ref<java::security::cert::CertPath> generateCertPath(ref<java::util::List> certificates);
	ref<java::util::Collection> generateCertificates(ref<java::io::InputStream> inStream);
	ref<java::security::cert::CRL> generateCRL(ref<java::io::InputStream> inStream);
	ref<java::util::Collection> generateCRLs(ref<java::io::InputStream> inStream);

protected:

	CertificateFactory(handle_type h) : base_(h) {}

};

} // namespace java::security::cert
} // namespace scapix::java_api

#include <scapix/java_api/java/io/InputStream.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/security/Provider.h>
#include <scapix/java_api/java/security/cert/CRL.h>
#include <scapix/java_api/java/security/cert/CertPath.h>
#include <scapix/java_api/java/security/cert/Certificate.h>
#include <scapix/java_api/java/util/Collection.h>
#include <scapix/java_api/java/util/Iterator.h>
#include <scapix/java_api/java/util/List.h>

namespace scapix::java_api {
namespace java::security::cert {

inline ref<java::security::cert::CertificateFactory> CertificateFactory::getInstance(ref<java::lang::String> type) { return call_static_method<SCAPIX_META_STRING("getInstance"), ref<java::security::cert::CertificateFactory>>(type); }
inline ref<java::security::cert::CertificateFactory> CertificateFactory::getInstance(ref<java::lang::String> type, ref<java::lang::String> provider) { return call_static_method<SCAPIX_META_STRING("getInstance"), ref<java::security::cert::CertificateFactory>>(type, provider); }
inline ref<java::security::cert::CertificateFactory> CertificateFactory::getInstance(ref<java::lang::String> type, ref<java::security::Provider> provider) { return call_static_method<SCAPIX_META_STRING("getInstance"), ref<java::security::cert::CertificateFactory>>(type, provider); }
inline ref<java::security::Provider> CertificateFactory::getProvider() { return call_method<SCAPIX_META_STRING("getProvider"), ref<java::security::Provider>>(); }
inline ref<java::lang::String> CertificateFactory::getType() { return call_method<SCAPIX_META_STRING("getType"), ref<java::lang::String>>(); }
inline ref<java::security::cert::Certificate> CertificateFactory::generateCertificate(ref<java::io::InputStream> inStream) { return call_method<SCAPIX_META_STRING("generateCertificate"), ref<java::security::cert::Certificate>>(inStream); }
inline ref<java::util::Iterator> CertificateFactory::getCertPathEncodings() { return call_method<SCAPIX_META_STRING("getCertPathEncodings"), ref<java::util::Iterator>>(); }
inline ref<java::security::cert::CertPath> CertificateFactory::generateCertPath(ref<java::io::InputStream> inStream) { return call_method<SCAPIX_META_STRING("generateCertPath"), ref<java::security::cert::CertPath>>(inStream); }
inline ref<java::security::cert::CertPath> CertificateFactory::generateCertPath(ref<java::io::InputStream> inStream, ref<java::lang::String> encoding) { return call_method<SCAPIX_META_STRING("generateCertPath"), ref<java::security::cert::CertPath>>(inStream, encoding); }
inline ref<java::security::cert::CertPath> CertificateFactory::generateCertPath(ref<java::util::List> certificates) { return call_method<SCAPIX_META_STRING("generateCertPath"), ref<java::security::cert::CertPath>>(certificates); }
inline ref<java::util::Collection> CertificateFactory::generateCertificates(ref<java::io::InputStream> inStream) { return call_method<SCAPIX_META_STRING("generateCertificates"), ref<java::util::Collection>>(inStream); }
inline ref<java::security::cert::CRL> CertificateFactory::generateCRL(ref<java::io::InputStream> inStream) { return call_method<SCAPIX_META_STRING("generateCRL"), ref<java::security::cert::CRL>>(inStream); }
inline ref<java::util::Collection> CertificateFactory::generateCRLs(ref<java::io::InputStream> inStream) { return call_method<SCAPIX_META_STRING("generateCRLs"), ref<java::util::Collection>>(inStream); }

} // namespace java::security::cert
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_SECURITY_CERT_CERTIFICATEFACTORY_H
