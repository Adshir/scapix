// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_SECURITY_CERT_EXTENSION_H
#define SCAPIX_JAVA_SECURITY_CERT_EXTENSION_H

namespace scapix::java_api {

namespace java::io { class OutputStream; }
namespace java::lang { class String; }

namespace java::security::cert {

class Extension : public object_base<SCAPIX_META_STRING("java/security/cert/Extension"),
	java::lang::Object>
{
public:

	ref<java::lang::String> getId();
	jboolean isCritical();
	ref<link::java::array<jbyte>> getValue();
	void encode(ref<java::io::OutputStream> p1);

protected:

	Extension(handle_type h) : base_(h) {}

};

} // namespace java::security::cert
} // namespace scapix::java_api

#include <scapix/java_api/java/io/OutputStream.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace java::security::cert {

inline ref<java::lang::String> Extension::getId() { return call_method<SCAPIX_META_STRING("getId"), ref<java::lang::String>>(); }
inline jboolean Extension::isCritical() { return call_method<SCAPIX_META_STRING("isCritical"), jboolean>(); }
inline ref<link::java::array<jbyte>> Extension::getValue() { return call_method<SCAPIX_META_STRING("getValue"), ref<link::java::array<jbyte>>>(); }
inline void Extension::encode(ref<java::io::OutputStream> p1) { return call_method<SCAPIX_META_STRING("encode"), void>(p1); }

} // namespace java::security::cert
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_SECURITY_CERT_EXTENSION_H
