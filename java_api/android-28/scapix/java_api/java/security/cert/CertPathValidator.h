// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_SECURITY_CERT_CERTPATHVALIDATOR_H
#define SCAPIX_JAVA_SECURITY_CERT_CERTPATHVALIDATOR_H

namespace scapix::java_api {

namespace java::lang { class String; }
namespace java::security { class Provider; }
namespace java::security::cert { class CertPath; }
namespace java::security::cert { class CertPathChecker; }
namespace java::security::cert { class CertPathParameters; }
namespace java::security::cert { class CertPathValidatorResult; }

namespace java::security::cert {

class CertPathValidator : public object_base<SCAPIX_META_STRING("java/security/cert/CertPathValidator"),
	java::lang::Object>
{
public:

	static ref<java::security::cert::CertPathValidator> getInstance(ref<java::lang::String> algorithm);
	static ref<java::security::cert::CertPathValidator> getInstance(ref<java::lang::String> algorithm, ref<java::lang::String> provider);
	static ref<java::security::cert::CertPathValidator> getInstance(ref<java::lang::String> algorithm, ref<java::security::Provider> provider);
	ref<java::security::Provider> getProvider();
	ref<java::lang::String> getAlgorithm();
	ref<java::security::cert::CertPathValidatorResult> validate(ref<java::security::cert::CertPath> certPath, ref<java::security::cert::CertPathParameters> params);
	static ref<java::lang::String> getDefaultType();
	ref<java::security::cert::CertPathChecker> getRevocationChecker();

protected:

	CertPathValidator(handle_type h) : base_(h) {}

};

} // namespace java::security::cert
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/security/Provider.h>
#include <scapix/java_api/java/security/cert/CertPath.h>
#include <scapix/java_api/java/security/cert/CertPathChecker.h>
#include <scapix/java_api/java/security/cert/CertPathParameters.h>
#include <scapix/java_api/java/security/cert/CertPathValidatorResult.h>

namespace scapix::java_api {
namespace java::security::cert {

inline ref<java::security::cert::CertPathValidator> CertPathValidator::getInstance(ref<java::lang::String> algorithm) { return call_static_method<SCAPIX_META_STRING("getInstance"), ref<java::security::cert::CertPathValidator>>(algorithm); }
inline ref<java::security::cert::CertPathValidator> CertPathValidator::getInstance(ref<java::lang::String> algorithm, ref<java::lang::String> provider) { return call_static_method<SCAPIX_META_STRING("getInstance"), ref<java::security::cert::CertPathValidator>>(algorithm, provider); }
inline ref<java::security::cert::CertPathValidator> CertPathValidator::getInstance(ref<java::lang::String> algorithm, ref<java::security::Provider> provider) { return call_static_method<SCAPIX_META_STRING("getInstance"), ref<java::security::cert::CertPathValidator>>(algorithm, provider); }
inline ref<java::security::Provider> CertPathValidator::getProvider() { return call_method<SCAPIX_META_STRING("getProvider"), ref<java::security::Provider>>(); }
inline ref<java::lang::String> CertPathValidator::getAlgorithm() { return call_method<SCAPIX_META_STRING("getAlgorithm"), ref<java::lang::String>>(); }
inline ref<java::security::cert::CertPathValidatorResult> CertPathValidator::validate(ref<java::security::cert::CertPath> certPath, ref<java::security::cert::CertPathParameters> params) { return call_method<SCAPIX_META_STRING("validate"), ref<java::security::cert::CertPathValidatorResult>>(certPath, params); }
inline ref<java::lang::String> CertPathValidator::getDefaultType() { return call_static_method<SCAPIX_META_STRING("getDefaultType"), ref<java::lang::String>>(); }
inline ref<java::security::cert::CertPathChecker> CertPathValidator::getRevocationChecker() { return call_method<SCAPIX_META_STRING("getRevocationChecker"), ref<java::security::cert::CertPathChecker>>(); }

} // namespace java::security::cert
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_SECURITY_CERT_CERTPATHVALIDATOR_H
