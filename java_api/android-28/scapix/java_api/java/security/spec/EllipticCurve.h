// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_SECURITY_SPEC_ELLIPTICCURVE_H
#define SCAPIX_JAVA_SECURITY_SPEC_ELLIPTICCURVE_H

namespace scapix::java_api {

namespace java::math { class BigInteger; }
namespace java::security::spec { class ECField; }

namespace java::security::spec {

class EllipticCurve : public object_base<SCAPIX_META_STRING("java/security/spec/EllipticCurve"),
	java::lang::Object>
{
public:

	static ref<EllipticCurve> new_object(ref<java::security::spec::ECField> field, ref<java::math::BigInteger> a, ref<java::math::BigInteger> b);
	static ref<EllipticCurve> new_object(ref<java::security::spec::ECField> field, ref<java::math::BigInteger> a, ref<java::math::BigInteger> b, ref<link::java::array<jbyte>> seed);
	ref<java::security::spec::ECField> getField();
	ref<java::math::BigInteger> getA();
	ref<java::math::BigInteger> getB();
	ref<link::java::array<jbyte>> getSeed();
	jboolean equals(ref<java::lang::Object> obj);
	jint hashCode();

protected:

	EllipticCurve(handle_type h) : base_(h) {}

};

} // namespace java::security::spec
} // namespace scapix::java_api

#include <scapix/java_api/java/math/BigInteger.h>
#include <scapix/java_api/java/security/spec/ECField.h>

namespace scapix::java_api {
namespace java::security::spec {

inline ref<EllipticCurve> EllipticCurve::new_object(ref<java::security::spec::ECField> field, ref<java::math::BigInteger> a, ref<java::math::BigInteger> b) { return base_::new_object(field, a, b); }
inline ref<EllipticCurve> EllipticCurve::new_object(ref<java::security::spec::ECField> field, ref<java::math::BigInteger> a, ref<java::math::BigInteger> b, ref<link::java::array<jbyte>> seed) { return base_::new_object(field, a, b, seed); }
inline ref<java::security::spec::ECField> EllipticCurve::getField() { return call_method<SCAPIX_META_STRING("getField"), ref<java::security::spec::ECField>>(); }
inline ref<java::math::BigInteger> EllipticCurve::getA() { return call_method<SCAPIX_META_STRING("getA"), ref<java::math::BigInteger>>(); }
inline ref<java::math::BigInteger> EllipticCurve::getB() { return call_method<SCAPIX_META_STRING("getB"), ref<java::math::BigInteger>>(); }
inline ref<link::java::array<jbyte>> EllipticCurve::getSeed() { return call_method<SCAPIX_META_STRING("getSeed"), ref<link::java::array<jbyte>>>(); }
inline jboolean EllipticCurve::equals(ref<java::lang::Object> obj) { return call_method<SCAPIX_META_STRING("equals"), jboolean>(obj); }
inline jint EllipticCurve::hashCode() { return call_method<SCAPIX_META_STRING("hashCode"), jint>(); }

} // namespace java::security::spec
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_SECURITY_SPEC_ELLIPTICCURVE_H
