// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_SECURITY_SPEC_ECPOINT_H
#define SCAPIX_JAVA_SECURITY_SPEC_ECPOINT_H

namespace scapix::java_api {

namespace java::math { class BigInteger; }

namespace java::security::spec {

class ECPoint : public object_base<SCAPIX_META_STRING("java/security/spec/ECPoint"),
	java::lang::Object>
{
public:

	static ref<java::security::spec::ECPoint> POINT_INFINITY_();

	static ref<ECPoint> new_object(ref<java::math::BigInteger> x, ref<java::math::BigInteger> y);
	ref<java::math::BigInteger> getAffineX();
	ref<java::math::BigInteger> getAffineY();
	jboolean equals(ref<java::lang::Object> obj);
	jint hashCode();

protected:

	ECPoint(handle_type h) : base_(h) {}

};

} // namespace java::security::spec
} // namespace scapix::java_api

#include <scapix/java_api/java/math/BigInteger.h>

namespace scapix::java_api {
namespace java::security::spec {

inline ref<java::security::spec::ECPoint> ECPoint::POINT_INFINITY_() { return get_static_field<SCAPIX_META_STRING("POINT_INFINITY"), ref<java::security::spec::ECPoint>>(); }
inline ref<ECPoint> ECPoint::new_object(ref<java::math::BigInteger> x, ref<java::math::BigInteger> y) { return base_::new_object(x, y); }
inline ref<java::math::BigInteger> ECPoint::getAffineX() { return call_method<SCAPIX_META_STRING("getAffineX"), ref<java::math::BigInteger>>(); }
inline ref<java::math::BigInteger> ECPoint::getAffineY() { return call_method<SCAPIX_META_STRING("getAffineY"), ref<java::math::BigInteger>>(); }
inline jboolean ECPoint::equals(ref<java::lang::Object> obj) { return call_method<SCAPIX_META_STRING("equals"), jboolean>(obj); }
inline jint ECPoint::hashCode() { return call_method<SCAPIX_META_STRING("hashCode"), jint>(); }

} // namespace java::security::spec
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_SECURITY_SPEC_ECPOINT_H
