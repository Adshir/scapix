// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Enum.h>

#ifndef SCAPIX_JAVA_TIME_FORMAT_TEXTSTYLE_H
#define SCAPIX_JAVA_TIME_FORMAT_TEXTSTYLE_H

namespace scapix::java_api {

namespace java::lang { class String; }

namespace java::time::format {

class TextStyle : public object_base<SCAPIX_META_STRING("java/time/format/TextStyle"),
	java::lang::Enum>
{
public:

	static ref<java::time::format::TextStyle> FULL_();
	static ref<java::time::format::TextStyle> FULL_STANDALONE_();
	static ref<java::time::format::TextStyle> SHORT_();
	static ref<java::time::format::TextStyle> SHORT_STANDALONE_();
	static ref<java::time::format::TextStyle> NARROW_();
	static ref<java::time::format::TextStyle> NARROW_STANDALONE_();

	static ref<link::java::array<java::time::format::TextStyle>> values();
	static ref<java::time::format::TextStyle> valueOf(ref<java::lang::String> name);
	jboolean isStandalone();
	ref<java::time::format::TextStyle> asStandalone();
	ref<java::time::format::TextStyle> asNormal();

protected:

	TextStyle(handle_type h) : base_(h) {}

};

} // namespace java::time::format
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace java::time::format {

inline ref<java::time::format::TextStyle> TextStyle::FULL_() { return get_static_field<SCAPIX_META_STRING("FULL"), ref<java::time::format::TextStyle>>(); }
inline ref<java::time::format::TextStyle> TextStyle::FULL_STANDALONE_() { return get_static_field<SCAPIX_META_STRING("FULL_STANDALONE"), ref<java::time::format::TextStyle>>(); }
inline ref<java::time::format::TextStyle> TextStyle::SHORT_() { return get_static_field<SCAPIX_META_STRING("SHORT"), ref<java::time::format::TextStyle>>(); }
inline ref<java::time::format::TextStyle> TextStyle::SHORT_STANDALONE_() { return get_static_field<SCAPIX_META_STRING("SHORT_STANDALONE"), ref<java::time::format::TextStyle>>(); }
inline ref<java::time::format::TextStyle> TextStyle::NARROW_() { return get_static_field<SCAPIX_META_STRING("NARROW"), ref<java::time::format::TextStyle>>(); }
inline ref<java::time::format::TextStyle> TextStyle::NARROW_STANDALONE_() { return get_static_field<SCAPIX_META_STRING("NARROW_STANDALONE"), ref<java::time::format::TextStyle>>(); }
inline ref<link::java::array<java::time::format::TextStyle>> TextStyle::values() { return call_static_method<SCAPIX_META_STRING("values"), ref<link::java::array<java::time::format::TextStyle>>>(); }
inline ref<java::time::format::TextStyle> TextStyle::valueOf(ref<java::lang::String> name) { return call_static_method<SCAPIX_META_STRING("valueOf"), ref<java::time::format::TextStyle>>(name); }
inline jboolean TextStyle::isStandalone() { return call_method<SCAPIX_META_STRING("isStandalone"), jboolean>(); }
inline ref<java::time::format::TextStyle> TextStyle::asStandalone() { return call_method<SCAPIX_META_STRING("asStandalone"), ref<java::time::format::TextStyle>>(); }
inline ref<java::time::format::TextStyle> TextStyle::asNormal() { return call_method<SCAPIX_META_STRING("asNormal"), ref<java::time::format::TextStyle>>(); }

} // namespace java::time::format
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_TIME_FORMAT_TEXTSTYLE_H
