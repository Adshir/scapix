// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/util/zip/ZipInputStream.h>

#ifndef SCAPIX_JAVA_UTIL_JAR_JARINPUTSTREAM_H
#define SCAPIX_JAVA_UTIL_JAR_JARINPUTSTREAM_H

namespace scapix::java_api {

namespace java::io { class InputStream; }
namespace java::util::jar { class JarEntry; }
namespace java::util::jar { class Manifest; }
namespace java::util::zip { class ZipEntry; }

namespace java::util::jar {

class JarInputStream : public object_base<SCAPIX_META_STRING("java/util/jar/JarInputStream"),
	java::util::zip::ZipInputStream>
{
public:

	static jint CENATT_();
	static jint CENATX_();
	static jint CENCOM_();
	static jint CENCRC_();
	static jint CENDSK_();
	static jint CENEXT_();
	static jint CENFLG_();
	static jint CENHDR_();
	static jint CENHOW_();
	static jint CENLEN_();
	static jint CENNAM_();
	static jint CENOFF_();
	static jlong CENSIG_();
	static jint CENSIZ_();
	static jint CENTIM_();
	static jint CENVEM_();
	static jint CENVER_();
	static jint ENDCOM_();
	static jint ENDHDR_();
	static jint ENDOFF_();
	static jlong ENDSIG_();
	static jint ENDSIZ_();
	static jint ENDSUB_();
	static jint ENDTOT_();
	static jint EXTCRC_();
	static jint EXTHDR_();
	static jint EXTLEN_();
	static jlong EXTSIG_();
	static jint EXTSIZ_();
	static jint LOCCRC_();
	static jint LOCEXT_();
	static jint LOCFLG_();
	static jint LOCHDR_();
	static jint LOCHOW_();
	static jint LOCLEN_();
	static jint LOCNAM_();
	static jlong LOCSIG_();
	static jint LOCSIZ_();
	static jint LOCTIM_();
	static jint LOCVER_();

	static ref<JarInputStream> new_object(ref<java::io::InputStream> in);
	static ref<JarInputStream> new_object(ref<java::io::InputStream> in, jboolean verify);
	ref<java::util::jar::Manifest> getManifest();
	ref<java::util::zip::ZipEntry> getNextEntry();
	ref<java::util::jar::JarEntry> getNextJarEntry();
	jint read(ref<link::java::array<jbyte>> b, jint off, jint len);

protected:

	JarInputStream(handle_type h) : base_(h) {}

};

} // namespace java::util::jar
} // namespace scapix::java_api

#include <scapix/java_api/java/io/InputStream.h>
#include <scapix/java_api/java/util/jar/JarEntry.h>
#include <scapix/java_api/java/util/jar/Manifest.h>
#include <scapix/java_api/java/util/zip/ZipEntry.h>

namespace scapix::java_api {
namespace java::util::jar {

inline jint JarInputStream::CENATT_() { return get_static_field<SCAPIX_META_STRING("CENATT"), jint>(); }
inline jint JarInputStream::CENATX_() { return get_static_field<SCAPIX_META_STRING("CENATX"), jint>(); }
inline jint JarInputStream::CENCOM_() { return get_static_field<SCAPIX_META_STRING("CENCOM"), jint>(); }
inline jint JarInputStream::CENCRC_() { return get_static_field<SCAPIX_META_STRING("CENCRC"), jint>(); }
inline jint JarInputStream::CENDSK_() { return get_static_field<SCAPIX_META_STRING("CENDSK"), jint>(); }
inline jint JarInputStream::CENEXT_() { return get_static_field<SCAPIX_META_STRING("CENEXT"), jint>(); }
inline jint JarInputStream::CENFLG_() { return get_static_field<SCAPIX_META_STRING("CENFLG"), jint>(); }
inline jint JarInputStream::CENHDR_() { return get_static_field<SCAPIX_META_STRING("CENHDR"), jint>(); }
inline jint JarInputStream::CENHOW_() { return get_static_field<SCAPIX_META_STRING("CENHOW"), jint>(); }
inline jint JarInputStream::CENLEN_() { return get_static_field<SCAPIX_META_STRING("CENLEN"), jint>(); }
inline jint JarInputStream::CENNAM_() { return get_static_field<SCAPIX_META_STRING("CENNAM"), jint>(); }
inline jint JarInputStream::CENOFF_() { return get_static_field<SCAPIX_META_STRING("CENOFF"), jint>(); }
inline jlong JarInputStream::CENSIG_() { return get_static_field<SCAPIX_META_STRING("CENSIG"), jlong>(); }
inline jint JarInputStream::CENSIZ_() { return get_static_field<SCAPIX_META_STRING("CENSIZ"), jint>(); }
inline jint JarInputStream::CENTIM_() { return get_static_field<SCAPIX_META_STRING("CENTIM"), jint>(); }
inline jint JarInputStream::CENVEM_() { return get_static_field<SCAPIX_META_STRING("CENVEM"), jint>(); }
inline jint JarInputStream::CENVER_() { return get_static_field<SCAPIX_META_STRING("CENVER"), jint>(); }
inline jint JarInputStream::ENDCOM_() { return get_static_field<SCAPIX_META_STRING("ENDCOM"), jint>(); }
inline jint JarInputStream::ENDHDR_() { return get_static_field<SCAPIX_META_STRING("ENDHDR"), jint>(); }
inline jint JarInputStream::ENDOFF_() { return get_static_field<SCAPIX_META_STRING("ENDOFF"), jint>(); }
inline jlong JarInputStream::ENDSIG_() { return get_static_field<SCAPIX_META_STRING("ENDSIG"), jlong>(); }
inline jint JarInputStream::ENDSIZ_() { return get_static_field<SCAPIX_META_STRING("ENDSIZ"), jint>(); }
inline jint JarInputStream::ENDSUB_() { return get_static_field<SCAPIX_META_STRING("ENDSUB"), jint>(); }
inline jint JarInputStream::ENDTOT_() { return get_static_field<SCAPIX_META_STRING("ENDTOT"), jint>(); }
inline jint JarInputStream::EXTCRC_() { return get_static_field<SCAPIX_META_STRING("EXTCRC"), jint>(); }
inline jint JarInputStream::EXTHDR_() { return get_static_field<SCAPIX_META_STRING("EXTHDR"), jint>(); }
inline jint JarInputStream::EXTLEN_() { return get_static_field<SCAPIX_META_STRING("EXTLEN"), jint>(); }
inline jlong JarInputStream::EXTSIG_() { return get_static_field<SCAPIX_META_STRING("EXTSIG"), jlong>(); }
inline jint JarInputStream::EXTSIZ_() { return get_static_field<SCAPIX_META_STRING("EXTSIZ"), jint>(); }
inline jint JarInputStream::LOCCRC_() { return get_static_field<SCAPIX_META_STRING("LOCCRC"), jint>(); }
inline jint JarInputStream::LOCEXT_() { return get_static_field<SCAPIX_META_STRING("LOCEXT"), jint>(); }
inline jint JarInputStream::LOCFLG_() { return get_static_field<SCAPIX_META_STRING("LOCFLG"), jint>(); }
inline jint JarInputStream::LOCHDR_() { return get_static_field<SCAPIX_META_STRING("LOCHDR"), jint>(); }
inline jint JarInputStream::LOCHOW_() { return get_static_field<SCAPIX_META_STRING("LOCHOW"), jint>(); }
inline jint JarInputStream::LOCLEN_() { return get_static_field<SCAPIX_META_STRING("LOCLEN"), jint>(); }
inline jint JarInputStream::LOCNAM_() { return get_static_field<SCAPIX_META_STRING("LOCNAM"), jint>(); }
inline jlong JarInputStream::LOCSIG_() { return get_static_field<SCAPIX_META_STRING("LOCSIG"), jlong>(); }
inline jint JarInputStream::LOCSIZ_() { return get_static_field<SCAPIX_META_STRING("LOCSIZ"), jint>(); }
inline jint JarInputStream::LOCTIM_() { return get_static_field<SCAPIX_META_STRING("LOCTIM"), jint>(); }
inline jint JarInputStream::LOCVER_() { return get_static_field<SCAPIX_META_STRING("LOCVER"), jint>(); }
inline ref<JarInputStream> JarInputStream::new_object(ref<java::io::InputStream> in) { return base_::new_object(in); }
inline ref<JarInputStream> JarInputStream::new_object(ref<java::io::InputStream> in, jboolean verify) { return base_::new_object(in, verify); }
inline ref<java::util::jar::Manifest> JarInputStream::getManifest() { return call_method<SCAPIX_META_STRING("getManifest"), ref<java::util::jar::Manifest>>(); }
inline ref<java::util::zip::ZipEntry> JarInputStream::getNextEntry() { return call_method<SCAPIX_META_STRING("getNextEntry"), ref<java::util::zip::ZipEntry>>(); }
inline ref<java::util::jar::JarEntry> JarInputStream::getNextJarEntry() { return call_method<SCAPIX_META_STRING("getNextJarEntry"), ref<java::util::jar::JarEntry>>(); }
inline jint JarInputStream::read(ref<link::java::array<jbyte>> b, jint off, jint len) { return call_method<SCAPIX_META_STRING("read"), jint>(b, off, len); }

} // namespace java::util::jar
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_UTIL_JAR_JARINPUTSTREAM_H
