// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_UTIL_FUNCTION_PREDICATE_H
#define SCAPIX_JAVA_UTIL_FUNCTION_PREDICATE_H

namespace scapix::java_api {
namespace java::util::function {

class Predicate : public object_base<SCAPIX_META_STRING("java/util/function/Predicate"),
	java::lang::Object>
{
public:

	jboolean test(ref<java::lang::Object> p1);
	ref<java::util::function::Predicate> and_(ref<java::util::function::Predicate> other);
	ref<java::util::function::Predicate> negate();
	ref<java::util::function::Predicate> or_(ref<java::util::function::Predicate> other);
	static ref<java::util::function::Predicate> isEqual(ref<java::lang::Object> targetRef);

protected:

	Predicate(handle_type h) : base_(h) {}

};

} // namespace java::util::function
} // namespace scapix::java_api


namespace scapix::java_api {
namespace java::util::function {

inline jboolean Predicate::test(ref<java::lang::Object> p1) { return call_method<SCAPIX_META_STRING("test"), jboolean>(p1); }
inline ref<java::util::function::Predicate> Predicate::and_(ref<java::util::function::Predicate> other) { return call_method<SCAPIX_META_STRING("and"), ref<java::util::function::Predicate>>(other); }
inline ref<java::util::function::Predicate> Predicate::negate() { return call_method<SCAPIX_META_STRING("negate"), ref<java::util::function::Predicate>>(); }
inline ref<java::util::function::Predicate> Predicate::or_(ref<java::util::function::Predicate> other) { return call_method<SCAPIX_META_STRING("or"), ref<java::util::function::Predicate>>(other); }
inline ref<java::util::function::Predicate> Predicate::isEqual(ref<java::lang::Object> targetRef) { return call_static_method<SCAPIX_META_STRING("isEqual"), ref<java::util::function::Predicate>>(targetRef); }

} // namespace java::util::function
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_UTIL_FUNCTION_PREDICATE_H
