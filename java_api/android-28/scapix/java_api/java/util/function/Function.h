// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_UTIL_FUNCTION_FUNCTION_H
#define SCAPIX_JAVA_UTIL_FUNCTION_FUNCTION_H

namespace scapix::java_api {
namespace java::util::function {

class Function : public object_base<SCAPIX_META_STRING("java/util/function/Function"),
	java::lang::Object>
{
public:

	ref<java::lang::Object> apply(ref<java::lang::Object> p1);
	ref<java::util::function::Function> compose(ref<java::util::function::Function> before);
	ref<java::util::function::Function> andThen(ref<java::util::function::Function> after);
	static ref<java::util::function::Function> identity();

protected:

	Function(handle_type h) : base_(h) {}

};

} // namespace java::util::function
} // namespace scapix::java_api


namespace scapix::java_api {
namespace java::util::function {

inline ref<java::lang::Object> Function::apply(ref<java::lang::Object> p1) { return call_method<SCAPIX_META_STRING("apply"), ref<java::lang::Object>>(p1); }
inline ref<java::util::function::Function> Function::compose(ref<java::util::function::Function> before) { return call_method<SCAPIX_META_STRING("compose"), ref<java::util::function::Function>>(before); }
inline ref<java::util::function::Function> Function::andThen(ref<java::util::function::Function> after) { return call_method<SCAPIX_META_STRING("andThen"), ref<java::util::function::Function>>(after); }
inline ref<java::util::function::Function> Function::identity() { return call_static_method<SCAPIX_META_STRING("identity"), ref<java::util::function::Function>>(); }

} // namespace java::util::function
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_UTIL_FUNCTION_FUNCTION_H
