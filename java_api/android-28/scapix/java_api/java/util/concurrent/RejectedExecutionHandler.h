// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_UTIL_CONCURRENT_REJECTEDEXECUTIONHANDLER_H
#define SCAPIX_JAVA_UTIL_CONCURRENT_REJECTEDEXECUTIONHANDLER_H

namespace scapix::java_api {

namespace java::lang { class Runnable; }
namespace java::util::concurrent { class ThreadPoolExecutor; }

namespace java::util::concurrent {

class RejectedExecutionHandler : public object_base<SCAPIX_META_STRING("java/util/concurrent/RejectedExecutionHandler"),
	java::lang::Object>
{
public:

	void rejectedExecution(ref<java::lang::Runnable> p1, ref<java::util::concurrent::ThreadPoolExecutor> p2);

protected:

	RejectedExecutionHandler(handle_type h) : base_(h) {}

};

} // namespace java::util::concurrent
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/Runnable.h>
#include <scapix/java_api/java/util/concurrent/ThreadPoolExecutor.h>

namespace scapix::java_api {
namespace java::util::concurrent {

inline void RejectedExecutionHandler::rejectedExecution(ref<java::lang::Runnable> p1, ref<java::util::concurrent::ThreadPoolExecutor> p2) { return call_method<SCAPIX_META_STRING("rejectedExecution"), void>(p1, p2); }

} // namespace java::util::concurrent
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_UTIL_CONCURRENT_REJECTEDEXECUTIONHANDLER_H
