// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/util/Spliterator_OfPrimitive.h>

#ifndef SCAPIX_JAVA_UTIL_SPLITERATOR_OFDOUBLE_H
#define SCAPIX_JAVA_UTIL_SPLITERATOR_OFDOUBLE_H

namespace scapix::java_api {

namespace java::util::function { class Consumer; }
namespace java::util::function { class DoubleConsumer; }

namespace java::util {

class Spliterator_OfDouble : public object_base<SCAPIX_META_STRING("java/util/Spliterator$OfDouble"),
	java::lang::Object,
	java::util::Spliterator_OfPrimitive>
{
public:

	ref<java::util::Spliterator_OfDouble> trySplit();
	jboolean tryAdvance(ref<java::util::function::DoubleConsumer> p1);
	void forEachRemaining(ref<java::util::function::DoubleConsumer> action);
	jboolean tryAdvance(ref<java::util::function::Consumer> action);
	void forEachRemaining(ref<java::util::function::Consumer> action);

protected:

	Spliterator_OfDouble(handle_type h) : base_(h) {}

};

} // namespace java::util
} // namespace scapix::java_api

#include <scapix/java_api/java/util/function/Consumer.h>
#include <scapix/java_api/java/util/function/DoubleConsumer.h>

namespace scapix::java_api {
namespace java::util {

inline ref<java::util::Spliterator_OfDouble> Spliterator_OfDouble::trySplit() { return call_method<SCAPIX_META_STRING("trySplit"), ref<java::util::Spliterator_OfDouble>>(); }
inline jboolean Spliterator_OfDouble::tryAdvance(ref<java::util::function::DoubleConsumer> p1) { return call_method<SCAPIX_META_STRING("tryAdvance"), jboolean>(p1); }
inline void Spliterator_OfDouble::forEachRemaining(ref<java::util::function::DoubleConsumer> action) { return call_method<SCAPIX_META_STRING("forEachRemaining"), void>(action); }
inline jboolean Spliterator_OfDouble::tryAdvance(ref<java::util::function::Consumer> action) { return call_method<SCAPIX_META_STRING("tryAdvance"), jboolean>(action); }
inline void Spliterator_OfDouble::forEachRemaining(ref<java::util::function::Consumer> action) { return call_method<SCAPIX_META_STRING("forEachRemaining"), void>(action); }

} // namespace java::util
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_UTIL_SPLITERATOR_OFDOUBLE_H
