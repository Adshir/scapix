// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/util/Hashtable.h>

#ifndef SCAPIX_JAVA_UTIL_PROPERTIES_H
#define SCAPIX_JAVA_UTIL_PROPERTIES_H

namespace scapix::java_api {

namespace java::io { class InputStream; }
namespace java::io { class OutputStream; }
namespace java::io { class PrintStream; }
namespace java::io { class PrintWriter; }
namespace java::io { class Reader; }
namespace java::io { class Writer; }
namespace java::lang { class Object; }
namespace java::lang { class String; }
namespace java::util { class Enumeration; }
namespace java::util { class Set; }

namespace java::util {

class Properties : public object_base<SCAPIX_META_STRING("java/util/Properties"),
	java::util::Hashtable>
{
public:

	static ref<Properties> new_object();
	static ref<Properties> new_object(ref<java::util::Properties> defaults);
	ref<java::lang::Object> setProperty(ref<java::lang::String> key, ref<java::lang::String> value);
	void load(ref<java::io::Reader> reader);
	void load(ref<java::io::InputStream> inStream);
	void save(ref<java::io::OutputStream> out, ref<java::lang::String> comments);
	void store(ref<java::io::Writer> writer, ref<java::lang::String> comments);
	void store(ref<java::io::OutputStream> out, ref<java::lang::String> comments);
	void loadFromXML(ref<java::io::InputStream> in);
	void storeToXML(ref<java::io::OutputStream> os, ref<java::lang::String> comment);
	void storeToXML(ref<java::io::OutputStream> os, ref<java::lang::String> comment, ref<java::lang::String> encoding);
	ref<java::lang::String> getProperty(ref<java::lang::String> key);
	ref<java::lang::String> getProperty(ref<java::lang::String> key, ref<java::lang::String> defaultValue);
	ref<java::util::Enumeration> propertyNames();
	ref<java::util::Set> stringPropertyNames();
	void list(ref<java::io::PrintStream> out);
	void list(ref<java::io::PrintWriter> out);

protected:

	Properties(handle_type h) : base_(h) {}

};

} // namespace java::util
} // namespace scapix::java_api

#include <scapix/java_api/java/io/InputStream.h>
#include <scapix/java_api/java/io/OutputStream.h>
#include <scapix/java_api/java/io/PrintStream.h>
#include <scapix/java_api/java/io/PrintWriter.h>
#include <scapix/java_api/java/io/Reader.h>
#include <scapix/java_api/java/io/Writer.h>
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Enumeration.h>
#include <scapix/java_api/java/util/Set.h>

namespace scapix::java_api {
namespace java::util {

inline ref<Properties> Properties::new_object() { return base_::new_object(); }
inline ref<Properties> Properties::new_object(ref<java::util::Properties> defaults) { return base_::new_object(defaults); }
inline ref<java::lang::Object> Properties::setProperty(ref<java::lang::String> key, ref<java::lang::String> value) { return call_method<SCAPIX_META_STRING("setProperty"), ref<java::lang::Object>>(key, value); }
inline void Properties::load(ref<java::io::Reader> reader) { return call_method<SCAPIX_META_STRING("load"), void>(reader); }
inline void Properties::load(ref<java::io::InputStream> inStream) { return call_method<SCAPIX_META_STRING("load"), void>(inStream); }
inline void Properties::save(ref<java::io::OutputStream> out, ref<java::lang::String> comments) { return call_method<SCAPIX_META_STRING("save"), void>(out, comments); }
inline void Properties::store(ref<java::io::Writer> writer, ref<java::lang::String> comments) { return call_method<SCAPIX_META_STRING("store"), void>(writer, comments); }
inline void Properties::store(ref<java::io::OutputStream> out, ref<java::lang::String> comments) { return call_method<SCAPIX_META_STRING("store"), void>(out, comments); }
inline void Properties::loadFromXML(ref<java::io::InputStream> in) { return call_method<SCAPIX_META_STRING("loadFromXML"), void>(in); }
inline void Properties::storeToXML(ref<java::io::OutputStream> os, ref<java::lang::String> comment) { return call_method<SCAPIX_META_STRING("storeToXML"), void>(os, comment); }
inline void Properties::storeToXML(ref<java::io::OutputStream> os, ref<java::lang::String> comment, ref<java::lang::String> encoding) { return call_method<SCAPIX_META_STRING("storeToXML"), void>(os, comment, encoding); }
inline ref<java::lang::String> Properties::getProperty(ref<java::lang::String> key) { return call_method<SCAPIX_META_STRING("getProperty"), ref<java::lang::String>>(key); }
inline ref<java::lang::String> Properties::getProperty(ref<java::lang::String> key, ref<java::lang::String> defaultValue) { return call_method<SCAPIX_META_STRING("getProperty"), ref<java::lang::String>>(key, defaultValue); }
inline ref<java::util::Enumeration> Properties::propertyNames() { return call_method<SCAPIX_META_STRING("propertyNames"), ref<java::util::Enumeration>>(); }
inline ref<java::util::Set> Properties::stringPropertyNames() { return call_method<SCAPIX_META_STRING("stringPropertyNames"), ref<java::util::Set>>(); }
inline void Properties::list(ref<java::io::PrintStream> out) { return call_method<SCAPIX_META_STRING("list"), void>(out); }
inline void Properties::list(ref<java::io::PrintWriter> out) { return call_method<SCAPIX_META_STRING("list"), void>(out); }

} // namespace java::util
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_UTIL_PROPERTIES_H
