// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/util/logging/Handler.h>

#ifndef SCAPIX_JAVA_UTIL_LOGGING_MEMORYHANDLER_H
#define SCAPIX_JAVA_UTIL_LOGGING_MEMORYHANDLER_H

namespace scapix::java_api {

namespace java::util::logging { class Level; }
namespace java::util::logging { class LogRecord; }

namespace java::util::logging {

class MemoryHandler : public object_base<SCAPIX_META_STRING("java/util/logging/MemoryHandler"),
	java::util::logging::Handler>
{
public:

	static ref<MemoryHandler> new_object();
	static ref<MemoryHandler> new_object(ref<java::util::logging::Handler> target, jint size, ref<java::util::logging::Level> pushLevel);
	void publish(ref<java::util::logging::LogRecord> record);
	void push();
	void flush();
	void close();
	void setPushLevel(ref<java::util::logging::Level> newLevel);
	ref<java::util::logging::Level> getPushLevel();
	jboolean isLoggable(ref<java::util::logging::LogRecord> record);

protected:

	MemoryHandler(handle_type h) : base_(h) {}

};

} // namespace java::util::logging
} // namespace scapix::java_api

#include <scapix/java_api/java/util/logging/Level.h>
#include <scapix/java_api/java/util/logging/LogRecord.h>

namespace scapix::java_api {
namespace java::util::logging {

inline ref<MemoryHandler> MemoryHandler::new_object() { return base_::new_object(); }
inline ref<MemoryHandler> MemoryHandler::new_object(ref<java::util::logging::Handler> target, jint size, ref<java::util::logging::Level> pushLevel) { return base_::new_object(target, size, pushLevel); }
inline void MemoryHandler::publish(ref<java::util::logging::LogRecord> record) { return call_method<SCAPIX_META_STRING("publish"), void>(record); }
inline void MemoryHandler::push() { return call_method<SCAPIX_META_STRING("push"), void>(); }
inline void MemoryHandler::flush() { return call_method<SCAPIX_META_STRING("flush"), void>(); }
inline void MemoryHandler::close() { return call_method<SCAPIX_META_STRING("close"), void>(); }
inline void MemoryHandler::setPushLevel(ref<java::util::logging::Level> newLevel) { return call_method<SCAPIX_META_STRING("setPushLevel"), void>(newLevel); }
inline ref<java::util::logging::Level> MemoryHandler::getPushLevel() { return call_method<SCAPIX_META_STRING("getPushLevel"), ref<java::util::logging::Level>>(); }
inline jboolean MemoryHandler::isLoggable(ref<java::util::logging::LogRecord> record) { return call_method<SCAPIX_META_STRING("isLoggable"), jboolean>(record); }

} // namespace java::util::logging
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_UTIL_LOGGING_MEMORYHANDLER_H
