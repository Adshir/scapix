// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_UTIL_MAP_ENTRY_H
#define SCAPIX_JAVA_UTIL_MAP_ENTRY_H

namespace scapix::java_api {

namespace java::util { class Comparator; }

namespace java::util {

class Map_Entry : public object_base<SCAPIX_META_STRING("java/util/Map$Entry"),
	java::lang::Object>
{
public:

	ref<java::lang::Object> getKey();
	ref<java::lang::Object> getValue();
	ref<java::lang::Object> setValue(ref<java::lang::Object> p1);
	jboolean equals(ref<java::lang::Object> p1);
	jint hashCode();
	static ref<java::util::Comparator> comparingByKey();
	static ref<java::util::Comparator> comparingByValue();
	static ref<java::util::Comparator> comparingByKey(ref<java::util::Comparator> cmp);
	static ref<java::util::Comparator> comparingByValue(ref<java::util::Comparator> cmp);

protected:

	Map_Entry(handle_type h) : base_(h) {}

};

} // namespace java::util
} // namespace scapix::java_api

#include <scapix/java_api/java/util/Comparator.h>

namespace scapix::java_api {
namespace java::util {

inline ref<java::lang::Object> Map_Entry::getKey() { return call_method<SCAPIX_META_STRING("getKey"), ref<java::lang::Object>>(); }
inline ref<java::lang::Object> Map_Entry::getValue() { return call_method<SCAPIX_META_STRING("getValue"), ref<java::lang::Object>>(); }
inline ref<java::lang::Object> Map_Entry::setValue(ref<java::lang::Object> p1) { return call_method<SCAPIX_META_STRING("setValue"), ref<java::lang::Object>>(p1); }
inline jboolean Map_Entry::equals(ref<java::lang::Object> p1) { return call_method<SCAPIX_META_STRING("equals"), jboolean>(p1); }
inline jint Map_Entry::hashCode() { return call_method<SCAPIX_META_STRING("hashCode"), jint>(); }
inline ref<java::util::Comparator> Map_Entry::comparingByKey() { return call_static_method<SCAPIX_META_STRING("comparingByKey"), ref<java::util::Comparator>>(); }
inline ref<java::util::Comparator> Map_Entry::comparingByValue() { return call_static_method<SCAPIX_META_STRING("comparingByValue"), ref<java::util::Comparator>>(); }
inline ref<java::util::Comparator> Map_Entry::comparingByKey(ref<java::util::Comparator> cmp) { return call_static_method<SCAPIX_META_STRING("comparingByKey"), ref<java::util::Comparator>>(cmp); }
inline ref<java::util::Comparator> Map_Entry::comparingByValue(ref<java::util::Comparator> cmp) { return call_static_method<SCAPIX_META_STRING("comparingByValue"), ref<java::util::Comparator>>(cmp); }

} // namespace java::util
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_UTIL_MAP_ENTRY_H
