// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/util/EventObject.h>

#ifndef SCAPIX_JAVA_UTIL_PREFS_NODECHANGEEVENT_H
#define SCAPIX_JAVA_UTIL_PREFS_NODECHANGEEVENT_H

namespace scapix::java_api {

namespace java::util::prefs { class Preferences; }

namespace java::util::prefs {

class NodeChangeEvent : public object_base<SCAPIX_META_STRING("java/util/prefs/NodeChangeEvent"),
	java::util::EventObject>
{
public:

	static ref<NodeChangeEvent> new_object(ref<java::util::prefs::Preferences> parent, ref<java::util::prefs::Preferences> child);
	ref<java::util::prefs::Preferences> getParent();
	ref<java::util::prefs::Preferences> getChild();

protected:

	NodeChangeEvent(handle_type h) : base_(h) {}

};

} // namespace java::util::prefs
} // namespace scapix::java_api

#include <scapix/java_api/java/util/prefs/Preferences.h>

namespace scapix::java_api {
namespace java::util::prefs {

inline ref<NodeChangeEvent> NodeChangeEvent::new_object(ref<java::util::prefs::Preferences> parent, ref<java::util::prefs::Preferences> child) { return base_::new_object(parent, child); }
inline ref<java::util::prefs::Preferences> NodeChangeEvent::getParent() { return call_method<SCAPIX_META_STRING("getParent"), ref<java::util::prefs::Preferences>>(); }
inline ref<java::util::prefs::Preferences> NodeChangeEvent::getChild() { return call_method<SCAPIX_META_STRING("getChild"), ref<java::util::prefs::Preferences>>(); }

} // namespace java::util::prefs
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_UTIL_PREFS_NODECHANGEEVENT_H
