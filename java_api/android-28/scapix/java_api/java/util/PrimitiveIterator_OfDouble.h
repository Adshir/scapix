// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/util/PrimitiveIterator.h>

#ifndef SCAPIX_JAVA_UTIL_PRIMITIVEITERATOR_OFDOUBLE_H
#define SCAPIX_JAVA_UTIL_PRIMITIVEITERATOR_OFDOUBLE_H

namespace scapix::java_api {

namespace java::lang { class Double; }
namespace java::util::function { class Consumer; }
namespace java::util::function { class DoubleConsumer; }

namespace java::util {

class PrimitiveIterator_OfDouble : public object_base<SCAPIX_META_STRING("java/util/PrimitiveIterator$OfDouble"),
	java::lang::Object,
	java::util::PrimitiveIterator>
{
public:

	jdouble nextDouble();
	void forEachRemaining(ref<java::util::function::DoubleConsumer> action);
	ref<java::lang::Double> next();
	void forEachRemaining(ref<java::util::function::Consumer> action);

protected:

	PrimitiveIterator_OfDouble(handle_type h) : base_(h) {}

};

} // namespace java::util
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/Double.h>
#include <scapix/java_api/java/util/function/Consumer.h>
#include <scapix/java_api/java/util/function/DoubleConsumer.h>

namespace scapix::java_api {
namespace java::util {

inline jdouble PrimitiveIterator_OfDouble::nextDouble() { return call_method<SCAPIX_META_STRING("nextDouble"), jdouble>(); }
inline void PrimitiveIterator_OfDouble::forEachRemaining(ref<java::util::function::DoubleConsumer> action) { return call_method<SCAPIX_META_STRING("forEachRemaining"), void>(action); }
inline ref<java::lang::Double> PrimitiveIterator_OfDouble::next() { return call_method<SCAPIX_META_STRING("next"), ref<java::lang::Double>>(); }
inline void PrimitiveIterator_OfDouble::forEachRemaining(ref<java::util::function::Consumer> action) { return call_method<SCAPIX_META_STRING("forEachRemaining"), void>(action); }

} // namespace java::util
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_UTIL_PRIMITIVEITERATOR_OFDOUBLE_H
