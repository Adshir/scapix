// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/util/Spliterator_OfInt.h>

#ifndef SCAPIX_JAVA_UTIL_SPLITERATORS_ABSTRACTINTSPLITERATOR_H
#define SCAPIX_JAVA_UTIL_SPLITERATORS_ABSTRACTINTSPLITERATOR_H

namespace scapix::java_api {


namespace java::util {

class Spliterators_AbstractIntSpliterator : public object_base<SCAPIX_META_STRING("java/util/Spliterators$AbstractIntSpliterator"),
	java::lang::Object,
	java::util::Spliterator_OfInt>
{
public:

	ref<java::util::Spliterator_OfInt> trySplit();
	jlong estimateSize();
	jint characteristics();

protected:

	Spliterators_AbstractIntSpliterator(handle_type h) : base_(h) {}

};

} // namespace java::util
} // namespace scapix::java_api


namespace scapix::java_api {
namespace java::util {

inline ref<java::util::Spliterator_OfInt> Spliterators_AbstractIntSpliterator::trySplit() { return call_method<SCAPIX_META_STRING("trySplit"), ref<java::util::Spliterator_OfInt>>(); }
inline jlong Spliterators_AbstractIntSpliterator::estimateSize() { return call_method<SCAPIX_META_STRING("estimateSize"), jlong>(); }
inline jint Spliterators_AbstractIntSpliterator::characteristics() { return call_method<SCAPIX_META_STRING("characteristics"), jint>(); }

} // namespace java::util
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_UTIL_SPLITERATORS_ABSTRACTINTSPLITERATOR_H
