// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/util/AbstractList.h>

#ifndef SCAPIX_JAVA_UTIL_ABSTRACTSEQUENTIALLIST_H
#define SCAPIX_JAVA_UTIL_ABSTRACTSEQUENTIALLIST_H

namespace scapix::java_api {

namespace java::lang { class Object; }
namespace java::util { class Collection; }
namespace java::util { class Iterator; }
namespace java::util { class ListIterator; }

namespace java::util {

class AbstractSequentialList : public object_base<SCAPIX_META_STRING("java/util/AbstractSequentialList"),
	java::util::AbstractList>
{
public:

	ref<java::lang::Object> get(jint index);
	ref<java::lang::Object> set(jint index, ref<java::lang::Object> element);
	void add(jint index, ref<java::lang::Object> element);
	ref<java::lang::Object> remove(jint index);
	jboolean addAll(jint index, ref<java::util::Collection> c);
	ref<java::util::Iterator> iterator();
	ref<java::util::ListIterator> listIterator(jint p1);

protected:

	AbstractSequentialList(handle_type h) : base_(h) {}

};

} // namespace java::util
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/util/Collection.h>
#include <scapix/java_api/java/util/Iterator.h>
#include <scapix/java_api/java/util/ListIterator.h>

namespace scapix::java_api {
namespace java::util {

inline ref<java::lang::Object> AbstractSequentialList::get(jint index) { return call_method<SCAPIX_META_STRING("get"), ref<java::lang::Object>>(index); }
inline ref<java::lang::Object> AbstractSequentialList::set(jint index, ref<java::lang::Object> element) { return call_method<SCAPIX_META_STRING("set"), ref<java::lang::Object>>(index, element); }
inline void AbstractSequentialList::add(jint index, ref<java::lang::Object> element) { return call_method<SCAPIX_META_STRING("add"), void>(index, element); }
inline ref<java::lang::Object> AbstractSequentialList::remove(jint index) { return call_method<SCAPIX_META_STRING("remove"), ref<java::lang::Object>>(index); }
inline jboolean AbstractSequentialList::addAll(jint index, ref<java::util::Collection> c) { return call_method<SCAPIX_META_STRING("addAll"), jboolean>(index, c); }
inline ref<java::util::Iterator> AbstractSequentialList::iterator() { return call_method<SCAPIX_META_STRING("iterator"), ref<java::util::Iterator>>(); }
inline ref<java::util::ListIterator> AbstractSequentialList::listIterator(jint p1) { return call_method<SCAPIX_META_STRING("listIterator"), ref<java::util::ListIterator>>(p1); }

} // namespace java::util
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_UTIL_ABSTRACTSEQUENTIALLIST_H
