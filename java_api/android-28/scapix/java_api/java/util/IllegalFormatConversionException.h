// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/util/IllegalFormatException.h>

#ifndef SCAPIX_JAVA_UTIL_ILLEGALFORMATCONVERSIONEXCEPTION_H
#define SCAPIX_JAVA_UTIL_ILLEGALFORMATCONVERSIONEXCEPTION_H

namespace scapix::java_api {

namespace java::lang { class Class; }
namespace java::lang { class String; }

namespace java::util {

class IllegalFormatConversionException : public object_base<SCAPIX_META_STRING("java/util/IllegalFormatConversionException"),
	java::util::IllegalFormatException>
{
public:

	static ref<IllegalFormatConversionException> new_object(jchar c, ref<java::lang::Class> arg);
	jchar getConversion();
	ref<java::lang::Class> getArgumentClass();
	ref<java::lang::String> getMessage();

protected:

	IllegalFormatConversionException(handle_type h) : base_(h) {}

};

} // namespace java::util
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/Class.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace java::util {

inline ref<IllegalFormatConversionException> IllegalFormatConversionException::new_object(jchar c, ref<java::lang::Class> arg) { return base_::new_object(c, arg); }
inline jchar IllegalFormatConversionException::getConversion() { return call_method<SCAPIX_META_STRING("getConversion"), jchar>(); }
inline ref<java::lang::Class> IllegalFormatConversionException::getArgumentClass() { return call_method<SCAPIX_META_STRING("getArgumentClass"), ref<java::lang::Class>>(); }
inline ref<java::lang::String> IllegalFormatConversionException::getMessage() { return call_method<SCAPIX_META_STRING("getMessage"), ref<java::lang::String>>(); }

} // namespace java::util
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_UTIL_ILLEGALFORMATCONVERSIONEXCEPTION_H
