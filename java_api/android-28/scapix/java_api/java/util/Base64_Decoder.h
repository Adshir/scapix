// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_UTIL_BASE64_DECODER_H
#define SCAPIX_JAVA_UTIL_BASE64_DECODER_H

namespace scapix::java_api {

namespace java::io { class InputStream; }
namespace java::lang { class String; }
namespace java::nio { class ByteBuffer; }

namespace java::util {

class Base64_Decoder : public object_base<SCAPIX_META_STRING("java/util/Base64$Decoder"),
	java::lang::Object>
{
public:

	ref<link::java::array<jbyte>> decode(ref<link::java::array<jbyte>> src);
	ref<link::java::array<jbyte>> decode(ref<java::lang::String> src);
	jint decode(ref<link::java::array<jbyte>> src, ref<link::java::array<jbyte>> dst);
	ref<java::nio::ByteBuffer> decode(ref<java::nio::ByteBuffer> buffer);
	ref<java::io::InputStream> wrap(ref<java::io::InputStream> is);

protected:

	Base64_Decoder(handle_type h) : base_(h) {}

};

} // namespace java::util
} // namespace scapix::java_api

#include <scapix/java_api/java/io/InputStream.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/nio/ByteBuffer.h>

namespace scapix::java_api {
namespace java::util {

inline ref<link::java::array<jbyte>> Base64_Decoder::decode(ref<link::java::array<jbyte>> src) { return call_method<SCAPIX_META_STRING("decode"), ref<link::java::array<jbyte>>>(src); }
inline ref<link::java::array<jbyte>> Base64_Decoder::decode(ref<java::lang::String> src) { return call_method<SCAPIX_META_STRING("decode"), ref<link::java::array<jbyte>>>(src); }
inline jint Base64_Decoder::decode(ref<link::java::array<jbyte>> src, ref<link::java::array<jbyte>> dst) { return call_method<SCAPIX_META_STRING("decode"), jint>(src, dst); }
inline ref<java::nio::ByteBuffer> Base64_Decoder::decode(ref<java::nio::ByteBuffer> buffer) { return call_method<SCAPIX_META_STRING("decode"), ref<java::nio::ByteBuffer>>(buffer); }
inline ref<java::io::InputStream> Base64_Decoder::wrap(ref<java::io::InputStream> is) { return call_method<SCAPIX_META_STRING("wrap"), ref<java::io::InputStream>>(is); }

} // namespace java::util
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_UTIL_BASE64_DECODER_H
