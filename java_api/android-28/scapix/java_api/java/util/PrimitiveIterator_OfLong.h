// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/util/PrimitiveIterator.h>

#ifndef SCAPIX_JAVA_UTIL_PRIMITIVEITERATOR_OFLONG_H
#define SCAPIX_JAVA_UTIL_PRIMITIVEITERATOR_OFLONG_H

namespace scapix::java_api {

namespace java::lang { class Long; }
namespace java::util::function { class Consumer; }
namespace java::util::function { class LongConsumer; }

namespace java::util {

class PrimitiveIterator_OfLong : public object_base<SCAPIX_META_STRING("java/util/PrimitiveIterator$OfLong"),
	java::lang::Object,
	java::util::PrimitiveIterator>
{
public:

	jlong nextLong();
	void forEachRemaining(ref<java::util::function::LongConsumer> action);
	ref<java::lang::Long> next();
	void forEachRemaining(ref<java::util::function::Consumer> action);

protected:

	PrimitiveIterator_OfLong(handle_type h) : base_(h) {}

};

} // namespace java::util
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/Long.h>
#include <scapix/java_api/java/util/function/Consumer.h>
#include <scapix/java_api/java/util/function/LongConsumer.h>

namespace scapix::java_api {
namespace java::util {

inline jlong PrimitiveIterator_OfLong::nextLong() { return call_method<SCAPIX_META_STRING("nextLong"), jlong>(); }
inline void PrimitiveIterator_OfLong::forEachRemaining(ref<java::util::function::LongConsumer> action) { return call_method<SCAPIX_META_STRING("forEachRemaining"), void>(action); }
inline ref<java::lang::Long> PrimitiveIterator_OfLong::next() { return call_method<SCAPIX_META_STRING("next"), ref<java::lang::Long>>(); }
inline void PrimitiveIterator_OfLong::forEachRemaining(ref<java::util::function::Consumer> action) { return call_method<SCAPIX_META_STRING("forEachRemaining"), void>(action); }

} // namespace java::util
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_UTIL_PRIMITIVEITERATOR_OFLONG_H
