// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/io/Serializable.h>

#ifndef SCAPIX_JAVA_LANG_STACKTRACEELEMENT_H
#define SCAPIX_JAVA_LANG_STACKTRACEELEMENT_H

namespace scapix::java_api {

namespace java::lang { class String; }

namespace java::lang {

class StackTraceElement : public object_base<SCAPIX_META_STRING("java/lang/StackTraceElement"),
	java::lang::Object,
	java::io::Serializable>
{
public:

	static ref<StackTraceElement> new_object(ref<java::lang::String> declaringClass, ref<java::lang::String> methodName, ref<java::lang::String> fileName, jint lineNumber);
	ref<java::lang::String> getFileName();
	jint getLineNumber();
	ref<java::lang::String> getClassName();
	ref<java::lang::String> getMethodName();
	jboolean isNativeMethod();
	ref<java::lang::String> toString();
	jboolean equals(ref<java::lang::Object> obj);
	jint hashCode();

protected:

	StackTraceElement(handle_type h) : base_(h) {}

};

} // namespace java::lang
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace java::lang {

inline ref<StackTraceElement> StackTraceElement::new_object(ref<java::lang::String> declaringClass, ref<java::lang::String> methodName, ref<java::lang::String> fileName, jint lineNumber) { return base_::new_object(declaringClass, methodName, fileName, lineNumber); }
inline ref<java::lang::String> StackTraceElement::getFileName() { return call_method<SCAPIX_META_STRING("getFileName"), ref<java::lang::String>>(); }
inline jint StackTraceElement::getLineNumber() { return call_method<SCAPIX_META_STRING("getLineNumber"), jint>(); }
inline ref<java::lang::String> StackTraceElement::getClassName() { return call_method<SCAPIX_META_STRING("getClassName"), ref<java::lang::String>>(); }
inline ref<java::lang::String> StackTraceElement::getMethodName() { return call_method<SCAPIX_META_STRING("getMethodName"), ref<java::lang::String>>(); }
inline jboolean StackTraceElement::isNativeMethod() { return call_method<SCAPIX_META_STRING("isNativeMethod"), jboolean>(); }
inline ref<java::lang::String> StackTraceElement::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }
inline jboolean StackTraceElement::equals(ref<java::lang::Object> obj) { return call_method<SCAPIX_META_STRING("equals"), jboolean>(obj); }
inline jint StackTraceElement::hashCode() { return call_method<SCAPIX_META_STRING("hashCode"), jint>(); }

} // namespace java::lang
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_LANG_STACKTRACEELEMENT_H
