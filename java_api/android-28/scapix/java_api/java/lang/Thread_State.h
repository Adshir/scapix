// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Enum.h>

#ifndef SCAPIX_JAVA_LANG_THREAD_STATE_H
#define SCAPIX_JAVA_LANG_THREAD_STATE_H

namespace scapix::java_api {

namespace java::lang { class String; }

namespace java::lang {

class Thread_State : public object_base<SCAPIX_META_STRING("java/lang/Thread$State"),
	java::lang::Enum>
{
public:

	static ref<java::lang::Thread_State> NEW_();
	static ref<java::lang::Thread_State> RUNNABLE_();
	static ref<java::lang::Thread_State> BLOCKED_();
	static ref<java::lang::Thread_State> WAITING_();
	static ref<java::lang::Thread_State> TIMED_WAITING_();
	static ref<java::lang::Thread_State> TERMINATED_();

	static ref<link::java::array<java::lang::Thread_State>> values();
	static ref<java::lang::Thread_State> valueOf(ref<java::lang::String> name);

protected:

	Thread_State(handle_type h) : base_(h) {}

};

} // namespace java::lang
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace java::lang {

inline ref<java::lang::Thread_State> Thread_State::NEW_() { return get_static_field<SCAPIX_META_STRING("NEW"), ref<java::lang::Thread_State>>(); }
inline ref<java::lang::Thread_State> Thread_State::RUNNABLE_() { return get_static_field<SCAPIX_META_STRING("RUNNABLE"), ref<java::lang::Thread_State>>(); }
inline ref<java::lang::Thread_State> Thread_State::BLOCKED_() { return get_static_field<SCAPIX_META_STRING("BLOCKED"), ref<java::lang::Thread_State>>(); }
inline ref<java::lang::Thread_State> Thread_State::WAITING_() { return get_static_field<SCAPIX_META_STRING("WAITING"), ref<java::lang::Thread_State>>(); }
inline ref<java::lang::Thread_State> Thread_State::TIMED_WAITING_() { return get_static_field<SCAPIX_META_STRING("TIMED_WAITING"), ref<java::lang::Thread_State>>(); }
inline ref<java::lang::Thread_State> Thread_State::TERMINATED_() { return get_static_field<SCAPIX_META_STRING("TERMINATED"), ref<java::lang::Thread_State>>(); }
inline ref<link::java::array<java::lang::Thread_State>> Thread_State::values() { return call_static_method<SCAPIX_META_STRING("values"), ref<link::java::array<java::lang::Thread_State>>>(); }
inline ref<java::lang::Thread_State> Thread_State::valueOf(ref<java::lang::String> name) { return call_static_method<SCAPIX_META_STRING("valueOf"), ref<java::lang::Thread_State>>(name); }

} // namespace java::lang
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_LANG_THREAD_STATE_H
