// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_LANG_INVOKE_CALLSITE_H
#define SCAPIX_JAVA_LANG_INVOKE_CALLSITE_H

namespace scapix::java_api {

namespace java::lang::invoke { class MethodHandle; }
namespace java::lang::invoke { class MethodType; }

namespace java::lang::invoke {

class CallSite : public object_base<SCAPIX_META_STRING("java/lang/invoke/CallSite"),
	java::lang::Object>
{
public:

	ref<java::lang::invoke::MethodType> type();
	ref<java::lang::invoke::MethodHandle> getTarget();
	void setTarget(ref<java::lang::invoke::MethodHandle> p1);
	ref<java::lang::invoke::MethodHandle> dynamicInvoker();

protected:

	CallSite(handle_type h) : base_(h) {}

};

} // namespace java::lang::invoke
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/invoke/MethodHandle.h>
#include <scapix/java_api/java/lang/invoke/MethodType.h>

namespace scapix::java_api {
namespace java::lang::invoke {

inline ref<java::lang::invoke::MethodType> CallSite::type() { return call_method<SCAPIX_META_STRING("type"), ref<java::lang::invoke::MethodType>>(); }
inline ref<java::lang::invoke::MethodHandle> CallSite::getTarget() { return call_method<SCAPIX_META_STRING("getTarget"), ref<java::lang::invoke::MethodHandle>>(); }
inline void CallSite::setTarget(ref<java::lang::invoke::MethodHandle> p1) { return call_method<SCAPIX_META_STRING("setTarget"), void>(p1); }
inline ref<java::lang::invoke::MethodHandle> CallSite::dynamicInvoker() { return call_method<SCAPIX_META_STRING("dynamicInvoker"), ref<java::lang::invoke::MethodHandle>>(); }

} // namespace java::lang::invoke
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_LANG_INVOKE_CALLSITE_H
