// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/invoke/CallSite.h>

#ifndef SCAPIX_JAVA_LANG_INVOKE_CONSTANTCALLSITE_H
#define SCAPIX_JAVA_LANG_INVOKE_CONSTANTCALLSITE_H

namespace scapix::java_api {

namespace java::lang::invoke { class MethodHandle; }

namespace java::lang::invoke {

class ConstantCallSite : public object_base<SCAPIX_META_STRING("java/lang/invoke/ConstantCallSite"),
	java::lang::invoke::CallSite>
{
public:

	static ref<ConstantCallSite> new_object(ref<java::lang::invoke::MethodHandle> target);
	ref<java::lang::invoke::MethodHandle> getTarget();
	void setTarget(ref<java::lang::invoke::MethodHandle> ignore);
	ref<java::lang::invoke::MethodHandle> dynamicInvoker();

protected:

	ConstantCallSite(handle_type h) : base_(h) {}

};

} // namespace java::lang::invoke
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/invoke/MethodHandle.h>

namespace scapix::java_api {
namespace java::lang::invoke {

inline ref<ConstantCallSite> ConstantCallSite::new_object(ref<java::lang::invoke::MethodHandle> target) { return base_::new_object(target); }
inline ref<java::lang::invoke::MethodHandle> ConstantCallSite::getTarget() { return call_method<SCAPIX_META_STRING("getTarget"), ref<java::lang::invoke::MethodHandle>>(); }
inline void ConstantCallSite::setTarget(ref<java::lang::invoke::MethodHandle> ignore) { return call_method<SCAPIX_META_STRING("setTarget"), void>(ignore); }
inline ref<java::lang::invoke::MethodHandle> ConstantCallSite::dynamicInvoker() { return call_method<SCAPIX_META_STRING("dynamicInvoker"), ref<java::lang::invoke::MethodHandle>>(); }

} // namespace java::lang::invoke
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_LANG_INVOKE_CONSTANTCALLSITE_H
