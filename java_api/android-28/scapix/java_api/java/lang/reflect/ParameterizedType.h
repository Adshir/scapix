// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/reflect/Type.h>

#ifndef SCAPIX_JAVA_LANG_REFLECT_PARAMETERIZEDTYPE_H
#define SCAPIX_JAVA_LANG_REFLECT_PARAMETERIZEDTYPE_H

namespace scapix::java_api {
namespace java::lang::reflect {

class ParameterizedType : public object_base<SCAPIX_META_STRING("java/lang/reflect/ParameterizedType"),
	java::lang::Object,
	java::lang::reflect::Type>
{
public:

	ref<link::java::array<java::lang::reflect::Type>> getActualTypeArguments();
	ref<java::lang::reflect::Type> getRawType();
	ref<java::lang::reflect::Type> getOwnerType();

protected:

	ParameterizedType(handle_type h) : base_(h) {}

};

} // namespace java::lang::reflect
} // namespace scapix::java_api


namespace scapix::java_api {
namespace java::lang::reflect {

inline ref<link::java::array<java::lang::reflect::Type>> ParameterizedType::getActualTypeArguments() { return call_method<SCAPIX_META_STRING("getActualTypeArguments"), ref<link::java::array<java::lang::reflect::Type>>>(); }
inline ref<java::lang::reflect::Type> ParameterizedType::getRawType() { return call_method<SCAPIX_META_STRING("getRawType"), ref<java::lang::reflect::Type>>(); }
inline ref<java::lang::reflect::Type> ParameterizedType::getOwnerType() { return call_method<SCAPIX_META_STRING("getOwnerType"), ref<java::lang::reflect::Type>>(); }

} // namespace java::lang::reflect
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_LANG_REFLECT_PARAMETERIZEDTYPE_H
