// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_LANG_ITERABLE_H
#define SCAPIX_JAVA_LANG_ITERABLE_H

namespace scapix::java_api {

namespace java::util { class Iterator; }
namespace java::util { class Spliterator; }
namespace java::util::function { class Consumer; }

namespace java::lang {

class Iterable : public object_base<SCAPIX_META_STRING("java/lang/Iterable"),
	java::lang::Object>
{
public:

	ref<java::util::Iterator> iterator();
	void forEach(ref<java::util::function::Consumer> action);
	ref<java::util::Spliterator> spliterator();

protected:

	Iterable(handle_type h) : base_(h) {}

};

} // namespace java::lang
} // namespace scapix::java_api

#include <scapix/java_api/java/util/Iterator.h>
#include <scapix/java_api/java/util/Spliterator.h>
#include <scapix/java_api/java/util/function/Consumer.h>

namespace scapix::java_api {
namespace java::lang {

inline ref<java::util::Iterator> Iterable::iterator() { return call_method<SCAPIX_META_STRING("iterator"), ref<java::util::Iterator>>(); }
inline void Iterable::forEach(ref<java::util::function::Consumer> action) { return call_method<SCAPIX_META_STRING("forEach"), void>(action); }
inline ref<java::util::Spliterator> Iterable::spliterator() { return call_method<SCAPIX_META_STRING("spliterator"), ref<java::util::Spliterator>>(); }

} // namespace java::lang
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_LANG_ITERABLE_H
