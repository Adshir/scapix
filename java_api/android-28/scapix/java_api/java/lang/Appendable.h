// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_LANG_APPENDABLE_H
#define SCAPIX_JAVA_LANG_APPENDABLE_H

namespace scapix::java_api {

namespace java::lang { class CharSequence; }

namespace java::lang {

class Appendable : public object_base<SCAPIX_META_STRING("java/lang/Appendable"),
	java::lang::Object>
{
public:

	ref<java::lang::Appendable> append(ref<java::lang::CharSequence> p1);
	ref<java::lang::Appendable> append(ref<java::lang::CharSequence> p1, jint p2, jint p3);
	ref<java::lang::Appendable> append(jchar p1);

protected:

	Appendable(handle_type h) : base_(h) {}

};

} // namespace java::lang
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/CharSequence.h>

namespace scapix::java_api {
namespace java::lang {

inline ref<java::lang::Appendable> Appendable::append(ref<java::lang::CharSequence> p1) { return call_method<SCAPIX_META_STRING("append"), ref<java::lang::Appendable>>(p1); }
inline ref<java::lang::Appendable> Appendable::append(ref<java::lang::CharSequence> p1, jint p2, jint p3) { return call_method<SCAPIX_META_STRING("append"), ref<java::lang::Appendable>>(p1, p2, p3); }
inline ref<java::lang::Appendable> Appendable::append(jchar p1) { return call_method<SCAPIX_META_STRING("append"), ref<java::lang::Appendable>>(p1); }

} // namespace java::lang
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_LANG_APPENDABLE_H
