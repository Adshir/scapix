// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/io/Serializable.h>

#ifndef SCAPIX_JAVA_LANG_NUMBER_H
#define SCAPIX_JAVA_LANG_NUMBER_H

namespace scapix::java_api {
namespace java::lang {

class Number : public object_base<SCAPIX_META_STRING("java/lang/Number"),
	java::lang::Object,
	java::io::Serializable>
{
public:

	static ref<Number> new_object();
	jint intValue();
	jlong longValue();
	jfloat floatValue();
	jdouble doubleValue();
	jbyte byteValue();
	jshort shortValue();

protected:

	Number(handle_type h) : base_(h) {}

};

} // namespace java::lang
} // namespace scapix::java_api


namespace scapix::java_api {
namespace java::lang {

inline ref<Number> Number::new_object() { return base_::new_object(); }
inline jint Number::intValue() { return call_method<SCAPIX_META_STRING("intValue"), jint>(); }
inline jlong Number::longValue() { return call_method<SCAPIX_META_STRING("longValue"), jlong>(); }
inline jfloat Number::floatValue() { return call_method<SCAPIX_META_STRING("floatValue"), jfloat>(); }
inline jdouble Number::doubleValue() { return call_method<SCAPIX_META_STRING("doubleValue"), jdouble>(); }
inline jbyte Number::byteValue() { return call_method<SCAPIX_META_STRING("byteValue"), jbyte>(); }
inline jshort Number::shortValue() { return call_method<SCAPIX_META_STRING("shortValue"), jshort>(); }

} // namespace java::lang
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_LANG_NUMBER_H
