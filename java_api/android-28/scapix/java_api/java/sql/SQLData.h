// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_SQL_SQLDATA_H
#define SCAPIX_JAVA_SQL_SQLDATA_H

namespace scapix::java_api {

namespace java::lang { class String; }
namespace java::sql { class SQLInput; }
namespace java::sql { class SQLOutput; }

namespace java::sql {

class SQLData : public object_base<SCAPIX_META_STRING("java/sql/SQLData"),
	java::lang::Object>
{
public:

	ref<java::lang::String> getSQLTypeName();
	void readSQL(ref<java::sql::SQLInput> p1, ref<java::lang::String> p2);
	void writeSQL(ref<java::sql::SQLOutput> p1);

protected:

	SQLData(handle_type h) : base_(h) {}

};

} // namespace java::sql
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/sql/SQLInput.h>
#include <scapix/java_api/java/sql/SQLOutput.h>

namespace scapix::java_api {
namespace java::sql {

inline ref<java::lang::String> SQLData::getSQLTypeName() { return call_method<SCAPIX_META_STRING("getSQLTypeName"), ref<java::lang::String>>(); }
inline void SQLData::readSQL(ref<java::sql::SQLInput> p1, ref<java::lang::String> p2) { return call_method<SCAPIX_META_STRING("readSQL"), void>(p1, p2); }
inline void SQLData::writeSQL(ref<java::sql::SQLOutput> p1) { return call_method<SCAPIX_META_STRING("writeSQL"), void>(p1); }

} // namespace java::sql
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_SQL_SQLDATA_H
