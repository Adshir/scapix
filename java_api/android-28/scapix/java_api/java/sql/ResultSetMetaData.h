// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/sql/Wrapper.h>

#ifndef SCAPIX_JAVA_SQL_RESULTSETMETADATA_H
#define SCAPIX_JAVA_SQL_RESULTSETMETADATA_H

namespace scapix::java_api {

namespace java::lang { class String; }

namespace java::sql {

class ResultSetMetaData : public object_base<SCAPIX_META_STRING("java/sql/ResultSetMetaData"),
	java::lang::Object,
	java::sql::Wrapper>
{
public:

	static jint columnNoNulls();
	static jint columnNullable();
	static jint columnNullableUnknown();

	jint getColumnCount();
	jboolean isAutoIncrement(jint p1);
	jboolean isCaseSensitive(jint p1);
	jboolean isSearchable(jint p1);
	jboolean isCurrency(jint p1);
	jint isNullable(jint p1);
	jboolean isSigned(jint p1);
	jint getColumnDisplaySize(jint p1);
	ref<java::lang::String> getColumnLabel(jint p1);
	ref<java::lang::String> getColumnName(jint p1);
	ref<java::lang::String> getSchemaName(jint p1);
	jint getPrecision(jint p1);
	jint getScale(jint p1);
	ref<java::lang::String> getTableName(jint p1);
	ref<java::lang::String> getCatalogName(jint p1);
	jint getColumnType(jint p1);
	ref<java::lang::String> getColumnTypeName(jint p1);
	jboolean isReadOnly(jint p1);
	jboolean isWritable(jint p1);
	jboolean isDefinitelyWritable(jint p1);
	ref<java::lang::String> getColumnClassName(jint p1);

protected:

	ResultSetMetaData(handle_type h) : base_(h) {}

};

} // namespace java::sql
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace java::sql {

inline jint ResultSetMetaData::columnNoNulls() { return get_static_field<SCAPIX_META_STRING("columnNoNulls"), jint>(); }
inline jint ResultSetMetaData::columnNullable() { return get_static_field<SCAPIX_META_STRING("columnNullable"), jint>(); }
inline jint ResultSetMetaData::columnNullableUnknown() { return get_static_field<SCAPIX_META_STRING("columnNullableUnknown"), jint>(); }
inline jint ResultSetMetaData::getColumnCount() { return call_method<SCAPIX_META_STRING("getColumnCount"), jint>(); }
inline jboolean ResultSetMetaData::isAutoIncrement(jint p1) { return call_method<SCAPIX_META_STRING("isAutoIncrement"), jboolean>(p1); }
inline jboolean ResultSetMetaData::isCaseSensitive(jint p1) { return call_method<SCAPIX_META_STRING("isCaseSensitive"), jboolean>(p1); }
inline jboolean ResultSetMetaData::isSearchable(jint p1) { return call_method<SCAPIX_META_STRING("isSearchable"), jboolean>(p1); }
inline jboolean ResultSetMetaData::isCurrency(jint p1) { return call_method<SCAPIX_META_STRING("isCurrency"), jboolean>(p1); }
inline jint ResultSetMetaData::isNullable(jint p1) { return call_method<SCAPIX_META_STRING("isNullable"), jint>(p1); }
inline jboolean ResultSetMetaData::isSigned(jint p1) { return call_method<SCAPIX_META_STRING("isSigned"), jboolean>(p1); }
inline jint ResultSetMetaData::getColumnDisplaySize(jint p1) { return call_method<SCAPIX_META_STRING("getColumnDisplaySize"), jint>(p1); }
inline ref<java::lang::String> ResultSetMetaData::getColumnLabel(jint p1) { return call_method<SCAPIX_META_STRING("getColumnLabel"), ref<java::lang::String>>(p1); }
inline ref<java::lang::String> ResultSetMetaData::getColumnName(jint p1) { return call_method<SCAPIX_META_STRING("getColumnName"), ref<java::lang::String>>(p1); }
inline ref<java::lang::String> ResultSetMetaData::getSchemaName(jint p1) { return call_method<SCAPIX_META_STRING("getSchemaName"), ref<java::lang::String>>(p1); }
inline jint ResultSetMetaData::getPrecision(jint p1) { return call_method<SCAPIX_META_STRING("getPrecision"), jint>(p1); }
inline jint ResultSetMetaData::getScale(jint p1) { return call_method<SCAPIX_META_STRING("getScale"), jint>(p1); }
inline ref<java::lang::String> ResultSetMetaData::getTableName(jint p1) { return call_method<SCAPIX_META_STRING("getTableName"), ref<java::lang::String>>(p1); }
inline ref<java::lang::String> ResultSetMetaData::getCatalogName(jint p1) { return call_method<SCAPIX_META_STRING("getCatalogName"), ref<java::lang::String>>(p1); }
inline jint ResultSetMetaData::getColumnType(jint p1) { return call_method<SCAPIX_META_STRING("getColumnType"), jint>(p1); }
inline ref<java::lang::String> ResultSetMetaData::getColumnTypeName(jint p1) { return call_method<SCAPIX_META_STRING("getColumnTypeName"), ref<java::lang::String>>(p1); }
inline jboolean ResultSetMetaData::isReadOnly(jint p1) { return call_method<SCAPIX_META_STRING("isReadOnly"), jboolean>(p1); }
inline jboolean ResultSetMetaData::isWritable(jint p1) { return call_method<SCAPIX_META_STRING("isWritable"), jboolean>(p1); }
inline jboolean ResultSetMetaData::isDefinitelyWritable(jint p1) { return call_method<SCAPIX_META_STRING("isDefinitelyWritable"), jboolean>(p1); }
inline ref<java::lang::String> ResultSetMetaData::getColumnClassName(jint p1) { return call_method<SCAPIX_META_STRING("getColumnClassName"), ref<java::lang::String>>(p1); }

} // namespace java::sql
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_SQL_RESULTSETMETADATA_H
