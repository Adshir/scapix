// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/sql/SQLException.h>

#ifndef SCAPIX_JAVA_SQL_SQLWARNING_H
#define SCAPIX_JAVA_SQL_SQLWARNING_H

namespace scapix::java_api {

namespace java::lang { class String; }
namespace java::lang { class Throwable; }

namespace java::sql {

class SQLWarning : public object_base<SCAPIX_META_STRING("java/sql/SQLWarning"),
	java::sql::SQLException>
{
public:

	static ref<SQLWarning> new_object(ref<java::lang::String> reason, ref<java::lang::String> SQLState, jint vendorCode);
	static ref<SQLWarning> new_object(ref<java::lang::String> reason, ref<java::lang::String> SQLState);
	static ref<SQLWarning> new_object(ref<java::lang::String> reason);
	static ref<SQLWarning> new_object();
	static ref<SQLWarning> new_object(ref<java::lang::Throwable> cause);
	static ref<SQLWarning> new_object(ref<java::lang::String> reason, ref<java::lang::Throwable> cause);
	static ref<SQLWarning> new_object(ref<java::lang::String> reason, ref<java::lang::String> SQLState, ref<java::lang::Throwable> cause);
	static ref<SQLWarning> new_object(ref<java::lang::String> reason, ref<java::lang::String> SQLState, jint vendorCode, ref<java::lang::Throwable> cause);
	ref<java::sql::SQLWarning> getNextWarning();
	void setNextWarning(ref<java::sql::SQLWarning> w);

protected:

	SQLWarning(handle_type h) : base_(h) {}

};

} // namespace java::sql
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/lang/Throwable.h>

namespace scapix::java_api {
namespace java::sql {

inline ref<SQLWarning> SQLWarning::new_object(ref<java::lang::String> reason, ref<java::lang::String> SQLState, jint vendorCode) { return base_::new_object(reason, SQLState, vendorCode); }
inline ref<SQLWarning> SQLWarning::new_object(ref<java::lang::String> reason, ref<java::lang::String> SQLState) { return base_::new_object(reason, SQLState); }
inline ref<SQLWarning> SQLWarning::new_object(ref<java::lang::String> reason) { return base_::new_object(reason); }
inline ref<SQLWarning> SQLWarning::new_object() { return base_::new_object(); }
inline ref<SQLWarning> SQLWarning::new_object(ref<java::lang::Throwable> cause) { return base_::new_object(cause); }
inline ref<SQLWarning> SQLWarning::new_object(ref<java::lang::String> reason, ref<java::lang::Throwable> cause) { return base_::new_object(reason, cause); }
inline ref<SQLWarning> SQLWarning::new_object(ref<java::lang::String> reason, ref<java::lang::String> SQLState, ref<java::lang::Throwable> cause) { return base_::new_object(reason, SQLState, cause); }
inline ref<SQLWarning> SQLWarning::new_object(ref<java::lang::String> reason, ref<java::lang::String> SQLState, jint vendorCode, ref<java::lang::Throwable> cause) { return base_::new_object(reason, SQLState, vendorCode, cause); }
inline ref<java::sql::SQLWarning> SQLWarning::getNextWarning() { return call_method<SCAPIX_META_STRING("getNextWarning"), ref<java::sql::SQLWarning>>(); }
inline void SQLWarning::setNextWarning(ref<java::sql::SQLWarning> w) { return call_method<SCAPIX_META_STRING("setNextWarning"), void>(w); }

} // namespace java::sql
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_SQL_SQLWARNING_H
