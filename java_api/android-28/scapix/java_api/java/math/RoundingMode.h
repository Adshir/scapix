// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Enum.h>

#ifndef SCAPIX_JAVA_MATH_ROUNDINGMODE_H
#define SCAPIX_JAVA_MATH_ROUNDINGMODE_H

namespace scapix::java_api {

namespace java::lang { class String; }

namespace java::math {

class RoundingMode : public object_base<SCAPIX_META_STRING("java/math/RoundingMode"),
	java::lang::Enum>
{
public:

	static ref<java::math::RoundingMode> UP_();
	static ref<java::math::RoundingMode> DOWN_();
	static ref<java::math::RoundingMode> CEILING_();
	static ref<java::math::RoundingMode> FLOOR_();
	static ref<java::math::RoundingMode> HALF_UP_();
	static ref<java::math::RoundingMode> HALF_DOWN_();
	static ref<java::math::RoundingMode> HALF_EVEN_();
	static ref<java::math::RoundingMode> UNNECESSARY_();

	static ref<link::java::array<java::math::RoundingMode>> values();
	static ref<java::math::RoundingMode> valueOf(ref<java::lang::String> name);
	static ref<java::math::RoundingMode> valueOf(jint mode);

protected:

	RoundingMode(handle_type h) : base_(h) {}

};

} // namespace java::math
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace java::math {

inline ref<java::math::RoundingMode> RoundingMode::UP_() { return get_static_field<SCAPIX_META_STRING("UP"), ref<java::math::RoundingMode>>(); }
inline ref<java::math::RoundingMode> RoundingMode::DOWN_() { return get_static_field<SCAPIX_META_STRING("DOWN"), ref<java::math::RoundingMode>>(); }
inline ref<java::math::RoundingMode> RoundingMode::CEILING_() { return get_static_field<SCAPIX_META_STRING("CEILING"), ref<java::math::RoundingMode>>(); }
inline ref<java::math::RoundingMode> RoundingMode::FLOOR_() { return get_static_field<SCAPIX_META_STRING("FLOOR"), ref<java::math::RoundingMode>>(); }
inline ref<java::math::RoundingMode> RoundingMode::HALF_UP_() { return get_static_field<SCAPIX_META_STRING("HALF_UP"), ref<java::math::RoundingMode>>(); }
inline ref<java::math::RoundingMode> RoundingMode::HALF_DOWN_() { return get_static_field<SCAPIX_META_STRING("HALF_DOWN"), ref<java::math::RoundingMode>>(); }
inline ref<java::math::RoundingMode> RoundingMode::HALF_EVEN_() { return get_static_field<SCAPIX_META_STRING("HALF_EVEN"), ref<java::math::RoundingMode>>(); }
inline ref<java::math::RoundingMode> RoundingMode::UNNECESSARY_() { return get_static_field<SCAPIX_META_STRING("UNNECESSARY"), ref<java::math::RoundingMode>>(); }
inline ref<link::java::array<java::math::RoundingMode>> RoundingMode::values() { return call_static_method<SCAPIX_META_STRING("values"), ref<link::java::array<java::math::RoundingMode>>>(); }
inline ref<java::math::RoundingMode> RoundingMode::valueOf(ref<java::lang::String> name) { return call_static_method<SCAPIX_META_STRING("valueOf"), ref<java::math::RoundingMode>>(name); }
inline ref<java::math::RoundingMode> RoundingMode::valueOf(jint mode) { return call_static_method<SCAPIX_META_STRING("valueOf"), ref<java::math::RoundingMode>>(mode); }

} // namespace java::math
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_MATH_ROUNDINGMODE_H
