// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/io/Serializable.h>

#ifndef SCAPIX_JAVA_IO_OBJECTSTREAMCLASS_H
#define SCAPIX_JAVA_IO_OBJECTSTREAMCLASS_H

namespace scapix::java_api {

namespace java::io { class ObjectStreamField; }
namespace java::lang { class Class; }
namespace java::lang { class String; }

namespace java::io {

class ObjectStreamClass : public object_base<SCAPIX_META_STRING("java/io/ObjectStreamClass"),
	java::lang::Object,
	java::io::Serializable>
{
public:

	static ref<link::java::array<java::io::ObjectStreamField>> NO_FIELDS_();

	static ref<java::io::ObjectStreamClass> lookup(ref<java::lang::Class> cl);
	static ref<java::io::ObjectStreamClass> lookupAny(ref<java::lang::Class> cl);
	ref<java::lang::String> getName();
	jlong getSerialVersionUID();
	ref<java::lang::Class> forClass();
	ref<link::java::array<java::io::ObjectStreamField>> getFields();
	ref<java::io::ObjectStreamField> getField(ref<java::lang::String> name);
	ref<java::lang::String> toString();

protected:

	ObjectStreamClass(handle_type h) : base_(h) {}

};

} // namespace java::io
} // namespace scapix::java_api

#include <scapix/java_api/java/io/ObjectStreamField.h>
#include <scapix/java_api/java/lang/Class.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace java::io {

inline ref<link::java::array<java::io::ObjectStreamField>> ObjectStreamClass::NO_FIELDS_() { return get_static_field<SCAPIX_META_STRING("NO_FIELDS"), ref<link::java::array<java::io::ObjectStreamField>>>(); }
inline ref<java::io::ObjectStreamClass> ObjectStreamClass::lookup(ref<java::lang::Class> cl) { return call_static_method<SCAPIX_META_STRING("lookup"), ref<java::io::ObjectStreamClass>>(cl); }
inline ref<java::io::ObjectStreamClass> ObjectStreamClass::lookupAny(ref<java::lang::Class> cl) { return call_static_method<SCAPIX_META_STRING("lookupAny"), ref<java::io::ObjectStreamClass>>(cl); }
inline ref<java::lang::String> ObjectStreamClass::getName() { return call_method<SCAPIX_META_STRING("getName"), ref<java::lang::String>>(); }
inline jlong ObjectStreamClass::getSerialVersionUID() { return call_method<SCAPIX_META_STRING("getSerialVersionUID"), jlong>(); }
inline ref<java::lang::Class> ObjectStreamClass::forClass() { return call_method<SCAPIX_META_STRING("forClass"), ref<java::lang::Class>>(); }
inline ref<link::java::array<java::io::ObjectStreamField>> ObjectStreamClass::getFields() { return call_method<SCAPIX_META_STRING("getFields"), ref<link::java::array<java::io::ObjectStreamField>>>(); }
inline ref<java::io::ObjectStreamField> ObjectStreamClass::getField(ref<java::lang::String> name) { return call_method<SCAPIX_META_STRING("getField"), ref<java::io::ObjectStreamField>>(name); }
inline ref<java::lang::String> ObjectStreamClass::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }

} // namespace java::io
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_IO_OBJECTSTREAMCLASS_H
