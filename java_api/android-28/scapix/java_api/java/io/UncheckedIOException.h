// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/RuntimeException.h>

#ifndef SCAPIX_JAVA_IO_UNCHECKEDIOEXCEPTION_H
#define SCAPIX_JAVA_IO_UNCHECKEDIOEXCEPTION_H

namespace scapix::java_api {

namespace java::io { class IOException; }
namespace java::lang { class String; }

namespace java::io {

class UncheckedIOException : public object_base<SCAPIX_META_STRING("java/io/UncheckedIOException"),
	java::lang::RuntimeException>
{
public:

	static ref<UncheckedIOException> new_object(ref<java::lang::String> message, ref<java::io::IOException> cause);
	static ref<UncheckedIOException> new_object(ref<java::io::IOException> cause);
	ref<java::io::IOException> getCause();

protected:

	UncheckedIOException(handle_type h) : base_(h) {}

};

} // namespace java::io
} // namespace scapix::java_api

#include <scapix/java_api/java/io/IOException.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace java::io {

inline ref<UncheckedIOException> UncheckedIOException::new_object(ref<java::lang::String> message, ref<java::io::IOException> cause) { return base_::new_object(message, cause); }
inline ref<UncheckedIOException> UncheckedIOException::new_object(ref<java::io::IOException> cause) { return base_::new_object(cause); }
inline ref<java::io::IOException> UncheckedIOException::getCause() { return call_method<SCAPIX_META_STRING("getCause"), ref<java::io::IOException>>(); }

} // namespace java::io
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_IO_UNCHECKEDIOEXCEPTION_H
