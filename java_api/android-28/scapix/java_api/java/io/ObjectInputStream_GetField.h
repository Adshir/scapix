// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_IO_OBJECTINPUTSTREAM_GETFIELD_H
#define SCAPIX_JAVA_IO_OBJECTINPUTSTREAM_GETFIELD_H

namespace scapix::java_api {

namespace java::io { class ObjectStreamClass; }
namespace java::lang { class String; }

namespace java::io {

class ObjectInputStream_GetField : public object_base<SCAPIX_META_STRING("java/io/ObjectInputStream$GetField"),
	java::lang::Object>
{
public:

	static ref<ObjectInputStream_GetField> new_object();
	ref<java::io::ObjectStreamClass> getObjectStreamClass();
	jboolean defaulted(ref<java::lang::String> p1);
	jboolean get(ref<java::lang::String> p1, jboolean p2);
	jbyte get(ref<java::lang::String> p1, jbyte p2);
	jchar get(ref<java::lang::String> p1, jchar p2);
	jshort get(ref<java::lang::String> p1, jshort p2);
	jint get(ref<java::lang::String> p1, jint p2);
	jlong get(ref<java::lang::String> p1, jlong p2);
	jfloat get(ref<java::lang::String> p1, jfloat p2);
	jdouble get(ref<java::lang::String> p1, jdouble p2);
	ref<java::lang::Object> get(ref<java::lang::String> p1, ref<java::lang::Object> p2);

protected:

	ObjectInputStream_GetField(handle_type h) : base_(h) {}

};

} // namespace java::io
} // namespace scapix::java_api

#include <scapix/java_api/java/io/ObjectStreamClass.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace java::io {

inline ref<ObjectInputStream_GetField> ObjectInputStream_GetField::new_object() { return base_::new_object(); }
inline ref<java::io::ObjectStreamClass> ObjectInputStream_GetField::getObjectStreamClass() { return call_method<SCAPIX_META_STRING("getObjectStreamClass"), ref<java::io::ObjectStreamClass>>(); }
inline jboolean ObjectInputStream_GetField::defaulted(ref<java::lang::String> p1) { return call_method<SCAPIX_META_STRING("defaulted"), jboolean>(p1); }
inline jboolean ObjectInputStream_GetField::get(ref<java::lang::String> p1, jboolean p2) { return call_method<SCAPIX_META_STRING("get"), jboolean>(p1, p2); }
inline jbyte ObjectInputStream_GetField::get(ref<java::lang::String> p1, jbyte p2) { return call_method<SCAPIX_META_STRING("get"), jbyte>(p1, p2); }
inline jchar ObjectInputStream_GetField::get(ref<java::lang::String> p1, jchar p2) { return call_method<SCAPIX_META_STRING("get"), jchar>(p1, p2); }
inline jshort ObjectInputStream_GetField::get(ref<java::lang::String> p1, jshort p2) { return call_method<SCAPIX_META_STRING("get"), jshort>(p1, p2); }
inline jint ObjectInputStream_GetField::get(ref<java::lang::String> p1, jint p2) { return call_method<SCAPIX_META_STRING("get"), jint>(p1, p2); }
inline jlong ObjectInputStream_GetField::get(ref<java::lang::String> p1, jlong p2) { return call_method<SCAPIX_META_STRING("get"), jlong>(p1, p2); }
inline jfloat ObjectInputStream_GetField::get(ref<java::lang::String> p1, jfloat p2) { return call_method<SCAPIX_META_STRING("get"), jfloat>(p1, p2); }
inline jdouble ObjectInputStream_GetField::get(ref<java::lang::String> p1, jdouble p2) { return call_method<SCAPIX_META_STRING("get"), jdouble>(p1, p2); }
inline ref<java::lang::Object> ObjectInputStream_GetField::get(ref<java::lang::String> p1, ref<java::lang::Object> p2) { return call_method<SCAPIX_META_STRING("get"), ref<java::lang::Object>>(p1, p2); }

} // namespace java::io
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_IO_OBJECTINPUTSTREAM_GETFIELD_H
