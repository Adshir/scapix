// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/util/EventListenerProxy.h>
#include <scapix/java_api/java/beans/PropertyChangeListener.h>

#ifndef SCAPIX_JAVA_BEANS_PROPERTYCHANGELISTENERPROXY_H
#define SCAPIX_JAVA_BEANS_PROPERTYCHANGELISTENERPROXY_H

namespace scapix::java_api {

namespace java::beans { class PropertyChangeEvent; }
namespace java::lang { class String; }

namespace java::beans {

class PropertyChangeListenerProxy : public object_base<SCAPIX_META_STRING("java/beans/PropertyChangeListenerProxy"),
	java::util::EventListenerProxy,
	java::beans::PropertyChangeListener>
{
public:

	static ref<PropertyChangeListenerProxy> new_object(ref<java::lang::String> propertyName, ref<java::beans::PropertyChangeListener> listener);
	void propertyChange(ref<java::beans::PropertyChangeEvent> event);
	ref<java::lang::String> getPropertyName();

protected:

	PropertyChangeListenerProxy(handle_type h) : base_(h) {}

};

} // namespace java::beans
} // namespace scapix::java_api

#include <scapix/java_api/java/beans/PropertyChangeEvent.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace java::beans {

inline ref<PropertyChangeListenerProxy> PropertyChangeListenerProxy::new_object(ref<java::lang::String> propertyName, ref<java::beans::PropertyChangeListener> listener) { return base_::new_object(propertyName, listener); }
inline void PropertyChangeListenerProxy::propertyChange(ref<java::beans::PropertyChangeEvent> event) { return call_method<SCAPIX_META_STRING("propertyChange"), void>(event); }
inline ref<java::lang::String> PropertyChangeListenerProxy::getPropertyName() { return call_method<SCAPIX_META_STRING("getPropertyName"), ref<java::lang::String>>(); }

} // namespace java::beans
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_BEANS_PROPERTYCHANGELISTENERPROXY_H
