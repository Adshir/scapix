// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVAX_XML_DATATYPE_DURATION_H
#define SCAPIX_JAVAX_XML_DATATYPE_DURATION_H

namespace scapix::java_api {

namespace java::lang { class Number; }
namespace java::lang { class String; }
namespace java::math { class BigDecimal; }
namespace java::util { class Calendar; }
namespace java::util { class Date; }
namespace javax::xml::datatype { class DatatypeConstants_Field; }
namespace javax::xml::namespace { class QName; }

namespace javax::xml::datatype {

class Duration : public object_base<SCAPIX_META_STRING("javax/xml/datatype/Duration"),
	java::lang::Object>
{
public:

	static ref<Duration> new_object();
	ref<javax::xml::namespace::QName> getXMLSchemaType();
	jint getSign();
	jint getYears();
	jint getMonths();
	jint getDays();
	jint getHours();
	jint getMinutes();
	jint getSeconds();
	jlong getTimeInMillis(ref<java::util::Calendar> startInstant);
	jlong getTimeInMillis(ref<java::util::Date> startInstant);
	ref<java::lang::Number> getField(ref<javax::xml::datatype::DatatypeConstants_Field> p1);
	jboolean isSet(ref<javax::xml::datatype::DatatypeConstants_Field> p1);
	ref<javax::xml::datatype::Duration> add(ref<javax::xml::datatype::Duration> p1);
	void addTo(ref<java::util::Calendar> p1);
	void addTo(ref<java::util::Date> date);
	ref<javax::xml::datatype::Duration> subtract(ref<javax::xml::datatype::Duration> rhs);
	ref<javax::xml::datatype::Duration> multiply(jint factor);
	ref<javax::xml::datatype::Duration> multiply(ref<java::math::BigDecimal> p1);
	ref<javax::xml::datatype::Duration> negate();
	ref<javax::xml::datatype::Duration> normalizeWith(ref<java::util::Calendar> p1);
	jint compare(ref<javax::xml::datatype::Duration> p1);
	jboolean isLongerThan(ref<javax::xml::datatype::Duration> duration);
	jboolean isShorterThan(ref<javax::xml::datatype::Duration> duration);
	jboolean equals(ref<java::lang::Object> duration);
	jint hashCode();
	ref<java::lang::String> toString();

protected:

	Duration(handle_type h) : base_(h) {}

};

} // namespace javax::xml::datatype
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/Number.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/math/BigDecimal.h>
#include <scapix/java_api/java/util/Calendar.h>
#include <scapix/java_api/java/util/Date.h>
#include <scapix/java_api/javax/xml/datatype/DatatypeConstants_Field.h>
#include <scapix/java_api/javax/xml/namespace/QName.h>

namespace scapix::java_api {
namespace javax::xml::datatype {

inline ref<Duration> Duration::new_object() { return base_::new_object(); }
inline ref<javax::xml::namespace::QName> Duration::getXMLSchemaType() { return call_method<SCAPIX_META_STRING("getXMLSchemaType"), ref<javax::xml::namespace::QName>>(); }
inline jint Duration::getSign() { return call_method<SCAPIX_META_STRING("getSign"), jint>(); }
inline jint Duration::getYears() { return call_method<SCAPIX_META_STRING("getYears"), jint>(); }
inline jint Duration::getMonths() { return call_method<SCAPIX_META_STRING("getMonths"), jint>(); }
inline jint Duration::getDays() { return call_method<SCAPIX_META_STRING("getDays"), jint>(); }
inline jint Duration::getHours() { return call_method<SCAPIX_META_STRING("getHours"), jint>(); }
inline jint Duration::getMinutes() { return call_method<SCAPIX_META_STRING("getMinutes"), jint>(); }
inline jint Duration::getSeconds() { return call_method<SCAPIX_META_STRING("getSeconds"), jint>(); }
inline jlong Duration::getTimeInMillis(ref<java::util::Calendar> startInstant) { return call_method<SCAPIX_META_STRING("getTimeInMillis"), jlong>(startInstant); }
inline jlong Duration::getTimeInMillis(ref<java::util::Date> startInstant) { return call_method<SCAPIX_META_STRING("getTimeInMillis"), jlong>(startInstant); }
inline ref<java::lang::Number> Duration::getField(ref<javax::xml::datatype::DatatypeConstants_Field> p1) { return call_method<SCAPIX_META_STRING("getField"), ref<java::lang::Number>>(p1); }
inline jboolean Duration::isSet(ref<javax::xml::datatype::DatatypeConstants_Field> p1) { return call_method<SCAPIX_META_STRING("isSet"), jboolean>(p1); }
inline ref<javax::xml::datatype::Duration> Duration::add(ref<javax::xml::datatype::Duration> p1) { return call_method<SCAPIX_META_STRING("add"), ref<javax::xml::datatype::Duration>>(p1); }
inline void Duration::addTo(ref<java::util::Calendar> p1) { return call_method<SCAPIX_META_STRING("addTo"), void>(p1); }
inline void Duration::addTo(ref<java::util::Date> date) { return call_method<SCAPIX_META_STRING("addTo"), void>(date); }
inline ref<javax::xml::datatype::Duration> Duration::subtract(ref<javax::xml::datatype::Duration> rhs) { return call_method<SCAPIX_META_STRING("subtract"), ref<javax::xml::datatype::Duration>>(rhs); }
inline ref<javax::xml::datatype::Duration> Duration::multiply(jint factor) { return call_method<SCAPIX_META_STRING("multiply"), ref<javax::xml::datatype::Duration>>(factor); }
inline ref<javax::xml::datatype::Duration> Duration::multiply(ref<java::math::BigDecimal> p1) { return call_method<SCAPIX_META_STRING("multiply"), ref<javax::xml::datatype::Duration>>(p1); }
inline ref<javax::xml::datatype::Duration> Duration::negate() { return call_method<SCAPIX_META_STRING("negate"), ref<javax::xml::datatype::Duration>>(); }
inline ref<javax::xml::datatype::Duration> Duration::normalizeWith(ref<java::util::Calendar> p1) { return call_method<SCAPIX_META_STRING("normalizeWith"), ref<javax::xml::datatype::Duration>>(p1); }
inline jint Duration::compare(ref<javax::xml::datatype::Duration> p1) { return call_method<SCAPIX_META_STRING("compare"), jint>(p1); }
inline jboolean Duration::isLongerThan(ref<javax::xml::datatype::Duration> duration) { return call_method<SCAPIX_META_STRING("isLongerThan"), jboolean>(duration); }
inline jboolean Duration::isShorterThan(ref<javax::xml::datatype::Duration> duration) { return call_method<SCAPIX_META_STRING("isShorterThan"), jboolean>(duration); }
inline jboolean Duration::equals(ref<java::lang::Object> duration) { return call_method<SCAPIX_META_STRING("equals"), jboolean>(duration); }
inline jint Duration::hashCode() { return call_method<SCAPIX_META_STRING("hashCode"), jint>(); }
inline ref<java::lang::String> Duration::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }

} // namespace javax::xml::datatype
} // namespace scapix::java_api

#endif // SCAPIX_JAVAX_XML_DATATYPE_DURATION_H
