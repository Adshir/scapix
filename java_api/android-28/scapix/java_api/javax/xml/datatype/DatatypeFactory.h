// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVAX_XML_DATATYPE_DATATYPEFACTORY_H
#define SCAPIX_JAVAX_XML_DATATYPE_DATATYPEFACTORY_H

namespace scapix::java_api {

namespace java::lang { class ClassLoader; }
namespace java::lang { class String; }
namespace java::math { class BigDecimal; }
namespace java::math { class BigInteger; }
namespace java::util { class GregorianCalendar; }
namespace javax::xml::datatype { class Duration; }
namespace javax::xml::datatype { class XMLGregorianCalendar; }

namespace javax::xml::datatype {

class DatatypeFactory : public object_base<SCAPIX_META_STRING("javax/xml/datatype/DatatypeFactory"),
	java::lang::Object>
{
public:

	static ref<java::lang::String> DATATYPEFACTORY_IMPLEMENTATION_CLASS_();
	static ref<java::lang::String> DATATYPEFACTORY_PROPERTY_();

	static ref<javax::xml::datatype::DatatypeFactory> newInstance();
	static ref<javax::xml::datatype::DatatypeFactory> newInstance(ref<java::lang::String> factoryClassName, ref<java::lang::ClassLoader> classLoader);
	ref<javax::xml::datatype::Duration> newDuration(ref<java::lang::String> p1);
	ref<javax::xml::datatype::Duration> newDuration(jlong p1);
	ref<javax::xml::datatype::Duration> newDuration(jboolean p1, ref<java::math::BigInteger> p2, ref<java::math::BigInteger> p3, ref<java::math::BigInteger> p4, ref<java::math::BigInteger> p5, ref<java::math::BigInteger> p6, ref<java::math::BigDecimal> p7);
	ref<javax::xml::datatype::Duration> newDuration(jboolean isPositive, jint years, jint months, jint days, jint hours, jint minutes, jint seconds);
	ref<javax::xml::datatype::Duration> newDurationDayTime(ref<java::lang::String> lexicalRepresentation);
	ref<javax::xml::datatype::Duration> newDurationDayTime(jlong durationInMilliseconds);
	ref<javax::xml::datatype::Duration> newDurationDayTime(jboolean isPositive, ref<java::math::BigInteger> day, ref<java::math::BigInteger> hour, ref<java::math::BigInteger> minute, ref<java::math::BigInteger> second);
	ref<javax::xml::datatype::Duration> newDurationDayTime(jboolean isPositive, jint day, jint hour, jint minute, jint second);
	ref<javax::xml::datatype::Duration> newDurationYearMonth(ref<java::lang::String> lexicalRepresentation);
	ref<javax::xml::datatype::Duration> newDurationYearMonth(jlong durationInMilliseconds);
	ref<javax::xml::datatype::Duration> newDurationYearMonth(jboolean isPositive, ref<java::math::BigInteger> year, ref<java::math::BigInteger> month);
	ref<javax::xml::datatype::Duration> newDurationYearMonth(jboolean isPositive, jint year, jint month);
	ref<javax::xml::datatype::XMLGregorianCalendar> newXMLGregorianCalendar();
	ref<javax::xml::datatype::XMLGregorianCalendar> newXMLGregorianCalendar(ref<java::lang::String> p1);
	ref<javax::xml::datatype::XMLGregorianCalendar> newXMLGregorianCalendar(ref<java::util::GregorianCalendar> p1);
	ref<javax::xml::datatype::XMLGregorianCalendar> newXMLGregorianCalendar(ref<java::math::BigInteger> p1, jint p2, jint p3, jint p4, jint p5, jint p6, ref<java::math::BigDecimal> p7, jint p8);
	ref<javax::xml::datatype::XMLGregorianCalendar> newXMLGregorianCalendar(jint year, jint month, jint day, jint hour, jint minute, jint second, jint millisecond, jint timezone);
	ref<javax::xml::datatype::XMLGregorianCalendar> newXMLGregorianCalendarDate(jint year, jint month, jint day, jint timezone);
	ref<javax::xml::datatype::XMLGregorianCalendar> newXMLGregorianCalendarTime(jint hours, jint minutes, jint seconds, jint timezone);
	ref<javax::xml::datatype::XMLGregorianCalendar> newXMLGregorianCalendarTime(jint hours, jint minutes, jint seconds, ref<java::math::BigDecimal> fractionalSecond, jint timezone);
	ref<javax::xml::datatype::XMLGregorianCalendar> newXMLGregorianCalendarTime(jint hours, jint minutes, jint seconds, jint milliseconds, jint timezone);

protected:

	DatatypeFactory(handle_type h) : base_(h) {}

};

} // namespace javax::xml::datatype
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/ClassLoader.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/math/BigDecimal.h>
#include <scapix/java_api/java/math/BigInteger.h>
#include <scapix/java_api/java/util/GregorianCalendar.h>
#include <scapix/java_api/javax/xml/datatype/Duration.h>
#include <scapix/java_api/javax/xml/datatype/XMLGregorianCalendar.h>

namespace scapix::java_api {
namespace javax::xml::datatype {

inline ref<java::lang::String> DatatypeFactory::DATATYPEFACTORY_IMPLEMENTATION_CLASS_() { return get_static_field<SCAPIX_META_STRING("DATATYPEFACTORY_IMPLEMENTATION_CLASS"), ref<java::lang::String>>(); }
inline ref<java::lang::String> DatatypeFactory::DATATYPEFACTORY_PROPERTY_() { return get_static_field<SCAPIX_META_STRING("DATATYPEFACTORY_PROPERTY"), ref<java::lang::String>>(); }
inline ref<javax::xml::datatype::DatatypeFactory> DatatypeFactory::newInstance() { return call_static_method<SCAPIX_META_STRING("newInstance"), ref<javax::xml::datatype::DatatypeFactory>>(); }
inline ref<javax::xml::datatype::DatatypeFactory> DatatypeFactory::newInstance(ref<java::lang::String> factoryClassName, ref<java::lang::ClassLoader> classLoader) { return call_static_method<SCAPIX_META_STRING("newInstance"), ref<javax::xml::datatype::DatatypeFactory>>(factoryClassName, classLoader); }
inline ref<javax::xml::datatype::Duration> DatatypeFactory::newDuration(ref<java::lang::String> p1) { return call_method<SCAPIX_META_STRING("newDuration"), ref<javax::xml::datatype::Duration>>(p1); }
inline ref<javax::xml::datatype::Duration> DatatypeFactory::newDuration(jlong p1) { return call_method<SCAPIX_META_STRING("newDuration"), ref<javax::xml::datatype::Duration>>(p1); }
inline ref<javax::xml::datatype::Duration> DatatypeFactory::newDuration(jboolean p1, ref<java::math::BigInteger> p2, ref<java::math::BigInteger> p3, ref<java::math::BigInteger> p4, ref<java::math::BigInteger> p5, ref<java::math::BigInteger> p6, ref<java::math::BigDecimal> p7) { return call_method<SCAPIX_META_STRING("newDuration"), ref<javax::xml::datatype::Duration>>(p1, p2, p3, p4, p5, p6, p7); }
inline ref<javax::xml::datatype::Duration> DatatypeFactory::newDuration(jboolean isPositive, jint years, jint months, jint days, jint hours, jint minutes, jint seconds) { return call_method<SCAPIX_META_STRING("newDuration"), ref<javax::xml::datatype::Duration>>(isPositive, years, months, days, hours, minutes, seconds); }
inline ref<javax::xml::datatype::Duration> DatatypeFactory::newDurationDayTime(ref<java::lang::String> lexicalRepresentation) { return call_method<SCAPIX_META_STRING("newDurationDayTime"), ref<javax::xml::datatype::Duration>>(lexicalRepresentation); }
inline ref<javax::xml::datatype::Duration> DatatypeFactory::newDurationDayTime(jlong durationInMilliseconds) { return call_method<SCAPIX_META_STRING("newDurationDayTime"), ref<javax::xml::datatype::Duration>>(durationInMilliseconds); }
inline ref<javax::xml::datatype::Duration> DatatypeFactory::newDurationDayTime(jboolean isPositive, ref<java::math::BigInteger> day, ref<java::math::BigInteger> hour, ref<java::math::BigInteger> minute, ref<java::math::BigInteger> second) { return call_method<SCAPIX_META_STRING("newDurationDayTime"), ref<javax::xml::datatype::Duration>>(isPositive, day, hour, minute, second); }
inline ref<javax::xml::datatype::Duration> DatatypeFactory::newDurationDayTime(jboolean isPositive, jint day, jint hour, jint minute, jint second) { return call_method<SCAPIX_META_STRING("newDurationDayTime"), ref<javax::xml::datatype::Duration>>(isPositive, day, hour, minute, second); }
inline ref<javax::xml::datatype::Duration> DatatypeFactory::newDurationYearMonth(ref<java::lang::String> lexicalRepresentation) { return call_method<SCAPIX_META_STRING("newDurationYearMonth"), ref<javax::xml::datatype::Duration>>(lexicalRepresentation); }
inline ref<javax::xml::datatype::Duration> DatatypeFactory::newDurationYearMonth(jlong durationInMilliseconds) { return call_method<SCAPIX_META_STRING("newDurationYearMonth"), ref<javax::xml::datatype::Duration>>(durationInMilliseconds); }
inline ref<javax::xml::datatype::Duration> DatatypeFactory::newDurationYearMonth(jboolean isPositive, ref<java::math::BigInteger> year, ref<java::math::BigInteger> month) { return call_method<SCAPIX_META_STRING("newDurationYearMonth"), ref<javax::xml::datatype::Duration>>(isPositive, year, month); }
inline ref<javax::xml::datatype::Duration> DatatypeFactory::newDurationYearMonth(jboolean isPositive, jint year, jint month) { return call_method<SCAPIX_META_STRING("newDurationYearMonth"), ref<javax::xml::datatype::Duration>>(isPositive, year, month); }
inline ref<javax::xml::datatype::XMLGregorianCalendar> DatatypeFactory::newXMLGregorianCalendar() { return call_method<SCAPIX_META_STRING("newXMLGregorianCalendar"), ref<javax::xml::datatype::XMLGregorianCalendar>>(); }
inline ref<javax::xml::datatype::XMLGregorianCalendar> DatatypeFactory::newXMLGregorianCalendar(ref<java::lang::String> p1) { return call_method<SCAPIX_META_STRING("newXMLGregorianCalendar"), ref<javax::xml::datatype::XMLGregorianCalendar>>(p1); }
inline ref<javax::xml::datatype::XMLGregorianCalendar> DatatypeFactory::newXMLGregorianCalendar(ref<java::util::GregorianCalendar> p1) { return call_method<SCAPIX_META_STRING("newXMLGregorianCalendar"), ref<javax::xml::datatype::XMLGregorianCalendar>>(p1); }
inline ref<javax::xml::datatype::XMLGregorianCalendar> DatatypeFactory::newXMLGregorianCalendar(ref<java::math::BigInteger> p1, jint p2, jint p3, jint p4, jint p5, jint p6, ref<java::math::BigDecimal> p7, jint p8) { return call_method<SCAPIX_META_STRING("newXMLGregorianCalendar"), ref<javax::xml::datatype::XMLGregorianCalendar>>(p1, p2, p3, p4, p5, p6, p7, p8); }
inline ref<javax::xml::datatype::XMLGregorianCalendar> DatatypeFactory::newXMLGregorianCalendar(jint year, jint month, jint day, jint hour, jint minute, jint second, jint millisecond, jint timezone) { return call_method<SCAPIX_META_STRING("newXMLGregorianCalendar"), ref<javax::xml::datatype::XMLGregorianCalendar>>(year, month, day, hour, minute, second, millisecond, timezone); }
inline ref<javax::xml::datatype::XMLGregorianCalendar> DatatypeFactory::newXMLGregorianCalendarDate(jint year, jint month, jint day, jint timezone) { return call_method<SCAPIX_META_STRING("newXMLGregorianCalendarDate"), ref<javax::xml::datatype::XMLGregorianCalendar>>(year, month, day, timezone); }
inline ref<javax::xml::datatype::XMLGregorianCalendar> DatatypeFactory::newXMLGregorianCalendarTime(jint hours, jint minutes, jint seconds, jint timezone) { return call_method<SCAPIX_META_STRING("newXMLGregorianCalendarTime"), ref<javax::xml::datatype::XMLGregorianCalendar>>(hours, minutes, seconds, timezone); }
inline ref<javax::xml::datatype::XMLGregorianCalendar> DatatypeFactory::newXMLGregorianCalendarTime(jint hours, jint minutes, jint seconds, ref<java::math::BigDecimal> fractionalSecond, jint timezone) { return call_method<SCAPIX_META_STRING("newXMLGregorianCalendarTime"), ref<javax::xml::datatype::XMLGregorianCalendar>>(hours, minutes, seconds, fractionalSecond, timezone); }
inline ref<javax::xml::datatype::XMLGregorianCalendar> DatatypeFactory::newXMLGregorianCalendarTime(jint hours, jint minutes, jint seconds, jint milliseconds, jint timezone) { return call_method<SCAPIX_META_STRING("newXMLGregorianCalendarTime"), ref<javax::xml::datatype::XMLGregorianCalendar>>(hours, minutes, seconds, milliseconds, timezone); }

} // namespace javax::xml::datatype
} // namespace scapix::java_api

#endif // SCAPIX_JAVAX_XML_DATATYPE_DATATYPEFACTORY_H
