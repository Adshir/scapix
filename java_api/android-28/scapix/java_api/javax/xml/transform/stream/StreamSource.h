// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/javax/xml/transform/Source.h>

#ifndef SCAPIX_JAVAX_XML_TRANSFORM_STREAM_STREAMSOURCE_H
#define SCAPIX_JAVAX_XML_TRANSFORM_STREAM_STREAMSOURCE_H

namespace scapix::java_api {

namespace java::io { class File; }
namespace java::io { class InputStream; }
namespace java::io { class Reader; }
namespace java::lang { class String; }

namespace javax::xml::transform::stream {

class StreamSource : public object_base<SCAPIX_META_STRING("javax/xml/transform/stream/StreamSource"),
	java::lang::Object,
	javax::xml::transform::Source>
{
public:

	static ref<java::lang::String> FEATURE_();

	static ref<StreamSource> new_object();
	static ref<StreamSource> new_object(ref<java::io::InputStream> inputStream);
	static ref<StreamSource> new_object(ref<java::io::InputStream> inputStream, ref<java::lang::String> systemId);
	static ref<StreamSource> new_object(ref<java::io::Reader> reader);
	static ref<StreamSource> new_object(ref<java::io::Reader> reader, ref<java::lang::String> systemId);
	static ref<StreamSource> new_object(ref<java::lang::String> systemId);
	static ref<StreamSource> new_object(ref<java::io::File> f);
	void setInputStream(ref<java::io::InputStream> inputStream);
	ref<java::io::InputStream> getInputStream();
	void setReader(ref<java::io::Reader> reader);
	ref<java::io::Reader> getReader();
	void setPublicId(ref<java::lang::String> publicId);
	ref<java::lang::String> getPublicId();
	void setSystemId(ref<java::lang::String> systemId);
	ref<java::lang::String> getSystemId();
	void setSystemId(ref<java::io::File> f);

protected:

	StreamSource(handle_type h) : base_(h) {}

};

} // namespace javax::xml::transform::stream
} // namespace scapix::java_api

#include <scapix/java_api/java/io/File.h>
#include <scapix/java_api/java/io/InputStream.h>
#include <scapix/java_api/java/io/Reader.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace javax::xml::transform::stream {

inline ref<java::lang::String> StreamSource::FEATURE_() { return get_static_field<SCAPIX_META_STRING("FEATURE"), ref<java::lang::String>>(); }
inline ref<StreamSource> StreamSource::new_object() { return base_::new_object(); }
inline ref<StreamSource> StreamSource::new_object(ref<java::io::InputStream> inputStream) { return base_::new_object(inputStream); }
inline ref<StreamSource> StreamSource::new_object(ref<java::io::InputStream> inputStream, ref<java::lang::String> systemId) { return base_::new_object(inputStream, systemId); }
inline ref<StreamSource> StreamSource::new_object(ref<java::io::Reader> reader) { return base_::new_object(reader); }
inline ref<StreamSource> StreamSource::new_object(ref<java::io::Reader> reader, ref<java::lang::String> systemId) { return base_::new_object(reader, systemId); }
inline ref<StreamSource> StreamSource::new_object(ref<java::lang::String> systemId) { return base_::new_object(systemId); }
inline ref<StreamSource> StreamSource::new_object(ref<java::io::File> f) { return base_::new_object(f); }
inline void StreamSource::setInputStream(ref<java::io::InputStream> inputStream) { return call_method<SCAPIX_META_STRING("setInputStream"), void>(inputStream); }
inline ref<java::io::InputStream> StreamSource::getInputStream() { return call_method<SCAPIX_META_STRING("getInputStream"), ref<java::io::InputStream>>(); }
inline void StreamSource::setReader(ref<java::io::Reader> reader) { return call_method<SCAPIX_META_STRING("setReader"), void>(reader); }
inline ref<java::io::Reader> StreamSource::getReader() { return call_method<SCAPIX_META_STRING("getReader"), ref<java::io::Reader>>(); }
inline void StreamSource::setPublicId(ref<java::lang::String> publicId) { return call_method<SCAPIX_META_STRING("setPublicId"), void>(publicId); }
inline ref<java::lang::String> StreamSource::getPublicId() { return call_method<SCAPIX_META_STRING("getPublicId"), ref<java::lang::String>>(); }
inline void StreamSource::setSystemId(ref<java::lang::String> systemId) { return call_method<SCAPIX_META_STRING("setSystemId"), void>(systemId); }
inline ref<java::lang::String> StreamSource::getSystemId() { return call_method<SCAPIX_META_STRING("getSystemId"), ref<java::lang::String>>(); }
inline void StreamSource::setSystemId(ref<java::io::File> f) { return call_method<SCAPIX_META_STRING("setSystemId"), void>(f); }

} // namespace javax::xml::transform::stream
} // namespace scapix::java_api

#endif // SCAPIX_JAVAX_XML_TRANSFORM_STREAM_STREAMSOURCE_H
