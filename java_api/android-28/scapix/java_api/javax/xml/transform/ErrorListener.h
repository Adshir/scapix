// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVAX_XML_TRANSFORM_ERRORLISTENER_H
#define SCAPIX_JAVAX_XML_TRANSFORM_ERRORLISTENER_H

namespace scapix::java_api {

namespace javax::xml::transform { class TransformerException; }

namespace javax::xml::transform {

class ErrorListener : public object_base<SCAPIX_META_STRING("javax/xml/transform/ErrorListener"),
	java::lang::Object>
{
public:

	void warning(ref<javax::xml::transform::TransformerException> p1);
	void error(ref<javax::xml::transform::TransformerException> p1);
	void fatalError(ref<javax::xml::transform::TransformerException> p1);

protected:

	ErrorListener(handle_type h) : base_(h) {}

};

} // namespace javax::xml::transform
} // namespace scapix::java_api

#include <scapix/java_api/javax/xml/transform/TransformerException.h>

namespace scapix::java_api {
namespace javax::xml::transform {

inline void ErrorListener::warning(ref<javax::xml::transform::TransformerException> p1) { return call_method<SCAPIX_META_STRING("warning"), void>(p1); }
inline void ErrorListener::error(ref<javax::xml::transform::TransformerException> p1) { return call_method<SCAPIX_META_STRING("error"), void>(p1); }
inline void ErrorListener::fatalError(ref<javax::xml::transform::TransformerException> p1) { return call_method<SCAPIX_META_STRING("fatalError"), void>(p1); }

} // namespace javax::xml::transform
} // namespace scapix::java_api

#endif // SCAPIX_JAVAX_XML_TRANSFORM_ERRORLISTENER_H
