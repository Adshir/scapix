// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/javax/xml/transform/TransformerFactory.h>

#ifndef SCAPIX_JAVAX_XML_TRANSFORM_SAX_SAXTRANSFORMERFACTORY_H
#define SCAPIX_JAVAX_XML_TRANSFORM_SAX_SAXTRANSFORMERFACTORY_H

namespace scapix::java_api {

namespace java::lang { class String; }
namespace javax::xml::transform { class Source; }
namespace javax::xml::transform { class Templates; }
namespace javax::xml::transform::sax { class TemplatesHandler; }
namespace javax::xml::transform::sax { class TransformerHandler; }
namespace org::xml::sax { class XMLFilter; }

namespace javax::xml::transform::sax {

class SAXTransformerFactory : public object_base<SCAPIX_META_STRING("javax/xml/transform/sax/SAXTransformerFactory"),
	javax::xml::transform::TransformerFactory>
{
public:

	static ref<java::lang::String> FEATURE_();
	static ref<java::lang::String> FEATURE_XMLFILTER_();

	ref<javax::xml::transform::sax::TransformerHandler> newTransformerHandler(ref<javax::xml::transform::Source> p1);
	ref<javax::xml::transform::sax::TransformerHandler> newTransformerHandler(ref<javax::xml::transform::Templates> p1);
	ref<javax::xml::transform::sax::TransformerHandler> newTransformerHandler();
	ref<javax::xml::transform::sax::TemplatesHandler> newTemplatesHandler();
	ref<org::xml::sax::XMLFilter> newXMLFilter(ref<javax::xml::transform::Source> p1);
	ref<org::xml::sax::XMLFilter> newXMLFilter(ref<javax::xml::transform::Templates> p1);

protected:

	SAXTransformerFactory(handle_type h) : base_(h) {}

};

} // namespace javax::xml::transform::sax
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/javax/xml/transform/Source.h>
#include <scapix/java_api/javax/xml/transform/Templates.h>
#include <scapix/java_api/javax/xml/transform/sax/TemplatesHandler.h>
#include <scapix/java_api/javax/xml/transform/sax/TransformerHandler.h>
#include <scapix/java_api/org/xml/sax/XMLFilter.h>

namespace scapix::java_api {
namespace javax::xml::transform::sax {

inline ref<java::lang::String> SAXTransformerFactory::FEATURE_() { return get_static_field<SCAPIX_META_STRING("FEATURE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> SAXTransformerFactory::FEATURE_XMLFILTER_() { return get_static_field<SCAPIX_META_STRING("FEATURE_XMLFILTER"), ref<java::lang::String>>(); }
inline ref<javax::xml::transform::sax::TransformerHandler> SAXTransformerFactory::newTransformerHandler(ref<javax::xml::transform::Source> p1) { return call_method<SCAPIX_META_STRING("newTransformerHandler"), ref<javax::xml::transform::sax::TransformerHandler>>(p1); }
inline ref<javax::xml::transform::sax::TransformerHandler> SAXTransformerFactory::newTransformerHandler(ref<javax::xml::transform::Templates> p1) { return call_method<SCAPIX_META_STRING("newTransformerHandler"), ref<javax::xml::transform::sax::TransformerHandler>>(p1); }
inline ref<javax::xml::transform::sax::TransformerHandler> SAXTransformerFactory::newTransformerHandler() { return call_method<SCAPIX_META_STRING("newTransformerHandler"), ref<javax::xml::transform::sax::TransformerHandler>>(); }
inline ref<javax::xml::transform::sax::TemplatesHandler> SAXTransformerFactory::newTemplatesHandler() { return call_method<SCAPIX_META_STRING("newTemplatesHandler"), ref<javax::xml::transform::sax::TemplatesHandler>>(); }
inline ref<org::xml::sax::XMLFilter> SAXTransformerFactory::newXMLFilter(ref<javax::xml::transform::Source> p1) { return call_method<SCAPIX_META_STRING("newXMLFilter"), ref<org::xml::sax::XMLFilter>>(p1); }
inline ref<org::xml::sax::XMLFilter> SAXTransformerFactory::newXMLFilter(ref<javax::xml::transform::Templates> p1) { return call_method<SCAPIX_META_STRING("newXMLFilter"), ref<org::xml::sax::XMLFilter>>(p1); }

} // namespace javax::xml::transform::sax
} // namespace scapix::java_api

#endif // SCAPIX_JAVAX_XML_TRANSFORM_SAX_SAXTRANSFORMERFACTORY_H
