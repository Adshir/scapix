// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/javax/microedition/khronos/opengles/GL.h>

#ifndef SCAPIX_JAVAX_MICROEDITION_KHRONOS_OPENGLES_GL11EXTENSIONPACK_H
#define SCAPIX_JAVAX_MICROEDITION_KHRONOS_OPENGLES_GL11EXTENSIONPACK_H

namespace scapix::java_api {

namespace java::nio { class Buffer; }
namespace java::nio { class FloatBuffer; }
namespace java::nio { class IntBuffer; }

namespace javax::microedition::khronos::opengles {

class GL11ExtensionPack : public object_base<SCAPIX_META_STRING("javax/microedition/khronos/opengles/GL11ExtensionPack"),
	java::lang::Object,
	javax::microedition::khronos::opengles::GL>
{
public:

	static jint GL_BLEND_DST_ALPHA_();
	static jint GL_BLEND_DST_RGB_();
	static jint GL_BLEND_EQUATION_();
	static jint GL_BLEND_EQUATION_ALPHA_();
	static jint GL_BLEND_EQUATION_RGB_();
	static jint GL_BLEND_SRC_ALPHA_();
	static jint GL_BLEND_SRC_RGB_();
	static jint GL_COLOR_ATTACHMENT0_OES_();
	static jint GL_COLOR_ATTACHMENT10_OES_();
	static jint GL_COLOR_ATTACHMENT11_OES_();
	static jint GL_COLOR_ATTACHMENT12_OES_();
	static jint GL_COLOR_ATTACHMENT13_OES_();
	static jint GL_COLOR_ATTACHMENT14_OES_();
	static jint GL_COLOR_ATTACHMENT15_OES_();
	static jint GL_COLOR_ATTACHMENT1_OES_();
	static jint GL_COLOR_ATTACHMENT2_OES_();
	static jint GL_COLOR_ATTACHMENT3_OES_();
	static jint GL_COLOR_ATTACHMENT4_OES_();
	static jint GL_COLOR_ATTACHMENT5_OES_();
	static jint GL_COLOR_ATTACHMENT6_OES_();
	static jint GL_COLOR_ATTACHMENT7_OES_();
	static jint GL_COLOR_ATTACHMENT8_OES_();
	static jint GL_COLOR_ATTACHMENT9_OES_();
	static jint GL_DECR_WRAP_();
	static jint GL_DEPTH_ATTACHMENT_OES_();
	static jint GL_DEPTH_COMPONENT_();
	static jint GL_DEPTH_COMPONENT16_();
	static jint GL_DEPTH_COMPONENT24_();
	static jint GL_DEPTH_COMPONENT32_();
	static jint GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_OES_();
	static jint GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_OES_();
	static jint GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_OES_();
	static jint GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_OES_();
	static jint GL_FRAMEBUFFER_BINDING_OES_();
	static jint GL_FRAMEBUFFER_COMPLETE_OES_();
	static jint GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_OES_();
	static jint GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_OES_();
	static jint GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_OES_();
	static jint GL_FRAMEBUFFER_INCOMPLETE_FORMATS_OES_();
	static jint GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_OES_();
	static jint GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_OES_();
	static jint GL_FRAMEBUFFER_OES_();
	static jint GL_FRAMEBUFFER_UNSUPPORTED_OES_();
	static jint GL_FUNC_ADD_();
	static jint GL_FUNC_REVERSE_SUBTRACT_();
	static jint GL_FUNC_SUBTRACT_();
	static jint GL_INCR_WRAP_();
	static jint GL_INVALID_FRAMEBUFFER_OPERATION_OES_();
	static jint GL_MAX_COLOR_ATTACHMENTS_OES_();
	static jint GL_MAX_CUBE_MAP_TEXTURE_SIZE_();
	static jint GL_MAX_RENDERBUFFER_SIZE_OES_();
	static jint GL_MIRRORED_REPEAT_();
	static jint GL_NORMAL_MAP_();
	static jint GL_REFLECTION_MAP_();
	static jint GL_RENDERBUFFER_ALPHA_SIZE_OES_();
	static jint GL_RENDERBUFFER_BINDING_OES_();
	static jint GL_RENDERBUFFER_BLUE_SIZE_OES_();
	static jint GL_RENDERBUFFER_DEPTH_SIZE_OES_();
	static jint GL_RENDERBUFFER_GREEN_SIZE_OES_();
	static jint GL_RENDERBUFFER_HEIGHT_OES_();
	static jint GL_RENDERBUFFER_INTERNAL_FORMAT_OES_();
	static jint GL_RENDERBUFFER_OES_();
	static jint GL_RENDERBUFFER_RED_SIZE_OES_();
	static jint GL_RENDERBUFFER_STENCIL_SIZE_OES_();
	static jint GL_RENDERBUFFER_WIDTH_OES_();
	static jint GL_RGB565_OES_();
	static jint GL_RGB5_A1_();
	static jint GL_RGB8_();
	static jint GL_RGBA4_();
	static jint GL_RGBA8_();
	static jint GL_STENCIL_ATTACHMENT_OES_();
	static jint GL_STENCIL_INDEX_();
	static jint GL_STENCIL_INDEX1_OES_();
	static jint GL_STENCIL_INDEX4_OES_();
	static jint GL_STENCIL_INDEX8_OES_();
	static jint GL_STR_();
	static jint GL_TEXTURE_BINDING_CUBE_MAP_();
	static jint GL_TEXTURE_CUBE_MAP_();
	static jint GL_TEXTURE_CUBE_MAP_NEGATIVE_X_();
	static jint GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_();
	static jint GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_();
	static jint GL_TEXTURE_CUBE_MAP_POSITIVE_X_();
	static jint GL_TEXTURE_CUBE_MAP_POSITIVE_Y_();
	static jint GL_TEXTURE_CUBE_MAP_POSITIVE_Z_();
	static jint GL_TEXTURE_GEN_MODE_();
	static jint GL_TEXTURE_GEN_STR_();

	void glBindFramebufferOES(jint p1, jint p2);
	void glBindRenderbufferOES(jint p1, jint p2);
	void glBindTexture(jint p1, jint p2);
	void glBlendEquation(jint p1);
	void glBlendEquationSeparate(jint p1, jint p2);
	void glBlendFuncSeparate(jint p1, jint p2, jint p3, jint p4);
	jint glCheckFramebufferStatusOES(jint p1);
	void glCompressedTexImage2D(jint p1, jint p2, jint p3, jint p4, jint p5, jint p6, jint p7, ref<java::nio::Buffer> p8);
	void glCopyTexImage2D(jint p1, jint p2, jint p3, jint p4, jint p5, jint p6, jint p7, jint p8);
	void glDeleteFramebuffersOES(jint p1, ref<link::java::array<jint>> p2, jint p3);
	void glDeleteFramebuffersOES(jint p1, ref<java::nio::IntBuffer> p2);
	void glDeleteRenderbuffersOES(jint p1, ref<link::java::array<jint>> p2, jint p3);
	void glDeleteRenderbuffersOES(jint p1, ref<java::nio::IntBuffer> p2);
	void glEnable(jint p1);
	void glFramebufferRenderbufferOES(jint p1, jint p2, jint p3, jint p4);
	void glFramebufferTexture2DOES(jint p1, jint p2, jint p3, jint p4, jint p5);
	void glGenerateMipmapOES(jint p1);
	void glGenFramebuffersOES(jint p1, ref<link::java::array<jint>> p2, jint p3);
	void glGenFramebuffersOES(jint p1, ref<java::nio::IntBuffer> p2);
	void glGenRenderbuffersOES(jint p1, ref<link::java::array<jint>> p2, jint p3);
	void glGenRenderbuffersOES(jint p1, ref<java::nio::IntBuffer> p2);
	void glGetFramebufferAttachmentParameterivOES(jint p1, jint p2, jint p3, ref<link::java::array<jint>> p4, jint p5);
	void glGetFramebufferAttachmentParameterivOES(jint p1, jint p2, jint p3, ref<java::nio::IntBuffer> p4);
	void glGetIntegerv(jint p1, ref<link::java::array<jint>> p2, jint p3);
	void glGetIntegerv(jint p1, ref<java::nio::IntBuffer> p2);
	void glGetRenderbufferParameterivOES(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4);
	void glGetRenderbufferParameterivOES(jint p1, jint p2, ref<java::nio::IntBuffer> p3);
	void glGetTexGenfv(jint p1, jint p2, ref<link::java::array<jfloat>> p3, jint p4);
	void glGetTexGenfv(jint p1, jint p2, ref<java::nio::FloatBuffer> p3);
	void glGetTexGeniv(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4);
	void glGetTexGeniv(jint p1, jint p2, ref<java::nio::IntBuffer> p3);
	void glGetTexGenxv(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4);
	void glGetTexGenxv(jint p1, jint p2, ref<java::nio::IntBuffer> p3);
	jboolean glIsFramebufferOES(jint p1);
	jboolean glIsRenderbufferOES(jint p1);
	void glRenderbufferStorageOES(jint p1, jint p2, jint p3, jint p4);
	void glStencilOp(jint p1, jint p2, jint p3);
	void glTexEnvf(jint p1, jint p2, jfloat p3);
	void glTexEnvfv(jint p1, jint p2, ref<link::java::array<jfloat>> p3, jint p4);
	void glTexEnvfv(jint p1, jint p2, ref<java::nio::FloatBuffer> p3);
	void glTexEnvx(jint p1, jint p2, jint p3);
	void glTexEnvxv(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4);
	void glTexEnvxv(jint p1, jint p2, ref<java::nio::IntBuffer> p3);
	void glTexGenf(jint p1, jint p2, jfloat p3);
	void glTexGenfv(jint p1, jint p2, ref<link::java::array<jfloat>> p3, jint p4);
	void glTexGenfv(jint p1, jint p2, ref<java::nio::FloatBuffer> p3);
	void glTexGeni(jint p1, jint p2, jint p3);
	void glTexGeniv(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4);
	void glTexGeniv(jint p1, jint p2, ref<java::nio::IntBuffer> p3);
	void glTexGenx(jint p1, jint p2, jint p3);
	void glTexGenxv(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4);
	void glTexGenxv(jint p1, jint p2, ref<java::nio::IntBuffer> p3);
	void glTexParameterf(jint p1, jint p2, jfloat p3);

protected:

	GL11ExtensionPack(handle_type h) : base_(h) {}

};

} // namespace javax::microedition::khronos::opengles
} // namespace scapix::java_api

#include <scapix/java_api/java/nio/Buffer.h>
#include <scapix/java_api/java/nio/FloatBuffer.h>
#include <scapix/java_api/java/nio/IntBuffer.h>

namespace scapix::java_api {
namespace javax::microedition::khronos::opengles {

inline jint GL11ExtensionPack::GL_BLEND_DST_ALPHA_() { return get_static_field<SCAPIX_META_STRING("GL_BLEND_DST_ALPHA"), jint>(); }
inline jint GL11ExtensionPack::GL_BLEND_DST_RGB_() { return get_static_field<SCAPIX_META_STRING("GL_BLEND_DST_RGB"), jint>(); }
inline jint GL11ExtensionPack::GL_BLEND_EQUATION_() { return get_static_field<SCAPIX_META_STRING("GL_BLEND_EQUATION"), jint>(); }
inline jint GL11ExtensionPack::GL_BLEND_EQUATION_ALPHA_() { return get_static_field<SCAPIX_META_STRING("GL_BLEND_EQUATION_ALPHA"), jint>(); }
inline jint GL11ExtensionPack::GL_BLEND_EQUATION_RGB_() { return get_static_field<SCAPIX_META_STRING("GL_BLEND_EQUATION_RGB"), jint>(); }
inline jint GL11ExtensionPack::GL_BLEND_SRC_ALPHA_() { return get_static_field<SCAPIX_META_STRING("GL_BLEND_SRC_ALPHA"), jint>(); }
inline jint GL11ExtensionPack::GL_BLEND_SRC_RGB_() { return get_static_field<SCAPIX_META_STRING("GL_BLEND_SRC_RGB"), jint>(); }
inline jint GL11ExtensionPack::GL_COLOR_ATTACHMENT0_OES_() { return get_static_field<SCAPIX_META_STRING("GL_COLOR_ATTACHMENT0_OES"), jint>(); }
inline jint GL11ExtensionPack::GL_COLOR_ATTACHMENT10_OES_() { return get_static_field<SCAPIX_META_STRING("GL_COLOR_ATTACHMENT10_OES"), jint>(); }
inline jint GL11ExtensionPack::GL_COLOR_ATTACHMENT11_OES_() { return get_static_field<SCAPIX_META_STRING("GL_COLOR_ATTACHMENT11_OES"), jint>(); }
inline jint GL11ExtensionPack::GL_COLOR_ATTACHMENT12_OES_() { return get_static_field<SCAPIX_META_STRING("GL_COLOR_ATTACHMENT12_OES"), jint>(); }
inline jint GL11ExtensionPack::GL_COLOR_ATTACHMENT13_OES_() { return get_static_field<SCAPIX_META_STRING("GL_COLOR_ATTACHMENT13_OES"), jint>(); }
inline jint GL11ExtensionPack::GL_COLOR_ATTACHMENT14_OES_() { return get_static_field<SCAPIX_META_STRING("GL_COLOR_ATTACHMENT14_OES"), jint>(); }
inline jint GL11ExtensionPack::GL_COLOR_ATTACHMENT15_OES_() { return get_static_field<SCAPIX_META_STRING("GL_COLOR_ATTACHMENT15_OES"), jint>(); }
inline jint GL11ExtensionPack::GL_COLOR_ATTACHMENT1_OES_() { return get_static_field<SCAPIX_META_STRING("GL_COLOR_ATTACHMENT1_OES"), jint>(); }
inline jint GL11ExtensionPack::GL_COLOR_ATTACHMENT2_OES_() { return get_static_field<SCAPIX_META_STRING("GL_COLOR_ATTACHMENT2_OES"), jint>(); }
inline jint GL11ExtensionPack::GL_COLOR_ATTACHMENT3_OES_() { return get_static_field<SCAPIX_META_STRING("GL_COLOR_ATTACHMENT3_OES"), jint>(); }
inline jint GL11ExtensionPack::GL_COLOR_ATTACHMENT4_OES_() { return get_static_field<SCAPIX_META_STRING("GL_COLOR_ATTACHMENT4_OES"), jint>(); }
inline jint GL11ExtensionPack::GL_COLOR_ATTACHMENT5_OES_() { return get_static_field<SCAPIX_META_STRING("GL_COLOR_ATTACHMENT5_OES"), jint>(); }
inline jint GL11ExtensionPack::GL_COLOR_ATTACHMENT6_OES_() { return get_static_field<SCAPIX_META_STRING("GL_COLOR_ATTACHMENT6_OES"), jint>(); }
inline jint GL11ExtensionPack::GL_COLOR_ATTACHMENT7_OES_() { return get_static_field<SCAPIX_META_STRING("GL_COLOR_ATTACHMENT7_OES"), jint>(); }
inline jint GL11ExtensionPack::GL_COLOR_ATTACHMENT8_OES_() { return get_static_field<SCAPIX_META_STRING("GL_COLOR_ATTACHMENT8_OES"), jint>(); }
inline jint GL11ExtensionPack::GL_COLOR_ATTACHMENT9_OES_() { return get_static_field<SCAPIX_META_STRING("GL_COLOR_ATTACHMENT9_OES"), jint>(); }
inline jint GL11ExtensionPack::GL_DECR_WRAP_() { return get_static_field<SCAPIX_META_STRING("GL_DECR_WRAP"), jint>(); }
inline jint GL11ExtensionPack::GL_DEPTH_ATTACHMENT_OES_() { return get_static_field<SCAPIX_META_STRING("GL_DEPTH_ATTACHMENT_OES"), jint>(); }
inline jint GL11ExtensionPack::GL_DEPTH_COMPONENT_() { return get_static_field<SCAPIX_META_STRING("GL_DEPTH_COMPONENT"), jint>(); }
inline jint GL11ExtensionPack::GL_DEPTH_COMPONENT16_() { return get_static_field<SCAPIX_META_STRING("GL_DEPTH_COMPONENT16"), jint>(); }
inline jint GL11ExtensionPack::GL_DEPTH_COMPONENT24_() { return get_static_field<SCAPIX_META_STRING("GL_DEPTH_COMPONENT24"), jint>(); }
inline jint GL11ExtensionPack::GL_DEPTH_COMPONENT32_() { return get_static_field<SCAPIX_META_STRING("GL_DEPTH_COMPONENT32"), jint>(); }
inline jint GL11ExtensionPack::GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_OES_() { return get_static_field<SCAPIX_META_STRING("GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_OES"), jint>(); }
inline jint GL11ExtensionPack::GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_OES_() { return get_static_field<SCAPIX_META_STRING("GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_OES"), jint>(); }
inline jint GL11ExtensionPack::GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_OES_() { return get_static_field<SCAPIX_META_STRING("GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_OES"), jint>(); }
inline jint GL11ExtensionPack::GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_OES_() { return get_static_field<SCAPIX_META_STRING("GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_OES"), jint>(); }
inline jint GL11ExtensionPack::GL_FRAMEBUFFER_BINDING_OES_() { return get_static_field<SCAPIX_META_STRING("GL_FRAMEBUFFER_BINDING_OES"), jint>(); }
inline jint GL11ExtensionPack::GL_FRAMEBUFFER_COMPLETE_OES_() { return get_static_field<SCAPIX_META_STRING("GL_FRAMEBUFFER_COMPLETE_OES"), jint>(); }
inline jint GL11ExtensionPack::GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_OES_() { return get_static_field<SCAPIX_META_STRING("GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_OES"), jint>(); }
inline jint GL11ExtensionPack::GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_OES_() { return get_static_field<SCAPIX_META_STRING("GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_OES"), jint>(); }
inline jint GL11ExtensionPack::GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_OES_() { return get_static_field<SCAPIX_META_STRING("GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_OES"), jint>(); }
inline jint GL11ExtensionPack::GL_FRAMEBUFFER_INCOMPLETE_FORMATS_OES_() { return get_static_field<SCAPIX_META_STRING("GL_FRAMEBUFFER_INCOMPLETE_FORMATS_OES"), jint>(); }
inline jint GL11ExtensionPack::GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_OES_() { return get_static_field<SCAPIX_META_STRING("GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_OES"), jint>(); }
inline jint GL11ExtensionPack::GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_OES_() { return get_static_field<SCAPIX_META_STRING("GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_OES"), jint>(); }
inline jint GL11ExtensionPack::GL_FRAMEBUFFER_OES_() { return get_static_field<SCAPIX_META_STRING("GL_FRAMEBUFFER_OES"), jint>(); }
inline jint GL11ExtensionPack::GL_FRAMEBUFFER_UNSUPPORTED_OES_() { return get_static_field<SCAPIX_META_STRING("GL_FRAMEBUFFER_UNSUPPORTED_OES"), jint>(); }
inline jint GL11ExtensionPack::GL_FUNC_ADD_() { return get_static_field<SCAPIX_META_STRING("GL_FUNC_ADD"), jint>(); }
inline jint GL11ExtensionPack::GL_FUNC_REVERSE_SUBTRACT_() { return get_static_field<SCAPIX_META_STRING("GL_FUNC_REVERSE_SUBTRACT"), jint>(); }
inline jint GL11ExtensionPack::GL_FUNC_SUBTRACT_() { return get_static_field<SCAPIX_META_STRING("GL_FUNC_SUBTRACT"), jint>(); }
inline jint GL11ExtensionPack::GL_INCR_WRAP_() { return get_static_field<SCAPIX_META_STRING("GL_INCR_WRAP"), jint>(); }
inline jint GL11ExtensionPack::GL_INVALID_FRAMEBUFFER_OPERATION_OES_() { return get_static_field<SCAPIX_META_STRING("GL_INVALID_FRAMEBUFFER_OPERATION_OES"), jint>(); }
inline jint GL11ExtensionPack::GL_MAX_COLOR_ATTACHMENTS_OES_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_COLOR_ATTACHMENTS_OES"), jint>(); }
inline jint GL11ExtensionPack::GL_MAX_CUBE_MAP_TEXTURE_SIZE_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_CUBE_MAP_TEXTURE_SIZE"), jint>(); }
inline jint GL11ExtensionPack::GL_MAX_RENDERBUFFER_SIZE_OES_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_RENDERBUFFER_SIZE_OES"), jint>(); }
inline jint GL11ExtensionPack::GL_MIRRORED_REPEAT_() { return get_static_field<SCAPIX_META_STRING("GL_MIRRORED_REPEAT"), jint>(); }
inline jint GL11ExtensionPack::GL_NORMAL_MAP_() { return get_static_field<SCAPIX_META_STRING("GL_NORMAL_MAP"), jint>(); }
inline jint GL11ExtensionPack::GL_REFLECTION_MAP_() { return get_static_field<SCAPIX_META_STRING("GL_REFLECTION_MAP"), jint>(); }
inline jint GL11ExtensionPack::GL_RENDERBUFFER_ALPHA_SIZE_OES_() { return get_static_field<SCAPIX_META_STRING("GL_RENDERBUFFER_ALPHA_SIZE_OES"), jint>(); }
inline jint GL11ExtensionPack::GL_RENDERBUFFER_BINDING_OES_() { return get_static_field<SCAPIX_META_STRING("GL_RENDERBUFFER_BINDING_OES"), jint>(); }
inline jint GL11ExtensionPack::GL_RENDERBUFFER_BLUE_SIZE_OES_() { return get_static_field<SCAPIX_META_STRING("GL_RENDERBUFFER_BLUE_SIZE_OES"), jint>(); }
inline jint GL11ExtensionPack::GL_RENDERBUFFER_DEPTH_SIZE_OES_() { return get_static_field<SCAPIX_META_STRING("GL_RENDERBUFFER_DEPTH_SIZE_OES"), jint>(); }
inline jint GL11ExtensionPack::GL_RENDERBUFFER_GREEN_SIZE_OES_() { return get_static_field<SCAPIX_META_STRING("GL_RENDERBUFFER_GREEN_SIZE_OES"), jint>(); }
inline jint GL11ExtensionPack::GL_RENDERBUFFER_HEIGHT_OES_() { return get_static_field<SCAPIX_META_STRING("GL_RENDERBUFFER_HEIGHT_OES"), jint>(); }
inline jint GL11ExtensionPack::GL_RENDERBUFFER_INTERNAL_FORMAT_OES_() { return get_static_field<SCAPIX_META_STRING("GL_RENDERBUFFER_INTERNAL_FORMAT_OES"), jint>(); }
inline jint GL11ExtensionPack::GL_RENDERBUFFER_OES_() { return get_static_field<SCAPIX_META_STRING("GL_RENDERBUFFER_OES"), jint>(); }
inline jint GL11ExtensionPack::GL_RENDERBUFFER_RED_SIZE_OES_() { return get_static_field<SCAPIX_META_STRING("GL_RENDERBUFFER_RED_SIZE_OES"), jint>(); }
inline jint GL11ExtensionPack::GL_RENDERBUFFER_STENCIL_SIZE_OES_() { return get_static_field<SCAPIX_META_STRING("GL_RENDERBUFFER_STENCIL_SIZE_OES"), jint>(); }
inline jint GL11ExtensionPack::GL_RENDERBUFFER_WIDTH_OES_() { return get_static_field<SCAPIX_META_STRING("GL_RENDERBUFFER_WIDTH_OES"), jint>(); }
inline jint GL11ExtensionPack::GL_RGB565_OES_() { return get_static_field<SCAPIX_META_STRING("GL_RGB565_OES"), jint>(); }
inline jint GL11ExtensionPack::GL_RGB5_A1_() { return get_static_field<SCAPIX_META_STRING("GL_RGB5_A1"), jint>(); }
inline jint GL11ExtensionPack::GL_RGB8_() { return get_static_field<SCAPIX_META_STRING("GL_RGB8"), jint>(); }
inline jint GL11ExtensionPack::GL_RGBA4_() { return get_static_field<SCAPIX_META_STRING("GL_RGBA4"), jint>(); }
inline jint GL11ExtensionPack::GL_RGBA8_() { return get_static_field<SCAPIX_META_STRING("GL_RGBA8"), jint>(); }
inline jint GL11ExtensionPack::GL_STENCIL_ATTACHMENT_OES_() { return get_static_field<SCAPIX_META_STRING("GL_STENCIL_ATTACHMENT_OES"), jint>(); }
inline jint GL11ExtensionPack::GL_STENCIL_INDEX_() { return get_static_field<SCAPIX_META_STRING("GL_STENCIL_INDEX"), jint>(); }
inline jint GL11ExtensionPack::GL_STENCIL_INDEX1_OES_() { return get_static_field<SCAPIX_META_STRING("GL_STENCIL_INDEX1_OES"), jint>(); }
inline jint GL11ExtensionPack::GL_STENCIL_INDEX4_OES_() { return get_static_field<SCAPIX_META_STRING("GL_STENCIL_INDEX4_OES"), jint>(); }
inline jint GL11ExtensionPack::GL_STENCIL_INDEX8_OES_() { return get_static_field<SCAPIX_META_STRING("GL_STENCIL_INDEX8_OES"), jint>(); }
inline jint GL11ExtensionPack::GL_STR_() { return get_static_field<SCAPIX_META_STRING("GL_STR"), jint>(); }
inline jint GL11ExtensionPack::GL_TEXTURE_BINDING_CUBE_MAP_() { return get_static_field<SCAPIX_META_STRING("GL_TEXTURE_BINDING_CUBE_MAP"), jint>(); }
inline jint GL11ExtensionPack::GL_TEXTURE_CUBE_MAP_() { return get_static_field<SCAPIX_META_STRING("GL_TEXTURE_CUBE_MAP"), jint>(); }
inline jint GL11ExtensionPack::GL_TEXTURE_CUBE_MAP_NEGATIVE_X_() { return get_static_field<SCAPIX_META_STRING("GL_TEXTURE_CUBE_MAP_NEGATIVE_X"), jint>(); }
inline jint GL11ExtensionPack::GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_() { return get_static_field<SCAPIX_META_STRING("GL_TEXTURE_CUBE_MAP_NEGATIVE_Y"), jint>(); }
inline jint GL11ExtensionPack::GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_() { return get_static_field<SCAPIX_META_STRING("GL_TEXTURE_CUBE_MAP_NEGATIVE_Z"), jint>(); }
inline jint GL11ExtensionPack::GL_TEXTURE_CUBE_MAP_POSITIVE_X_() { return get_static_field<SCAPIX_META_STRING("GL_TEXTURE_CUBE_MAP_POSITIVE_X"), jint>(); }
inline jint GL11ExtensionPack::GL_TEXTURE_CUBE_MAP_POSITIVE_Y_() { return get_static_field<SCAPIX_META_STRING("GL_TEXTURE_CUBE_MAP_POSITIVE_Y"), jint>(); }
inline jint GL11ExtensionPack::GL_TEXTURE_CUBE_MAP_POSITIVE_Z_() { return get_static_field<SCAPIX_META_STRING("GL_TEXTURE_CUBE_MAP_POSITIVE_Z"), jint>(); }
inline jint GL11ExtensionPack::GL_TEXTURE_GEN_MODE_() { return get_static_field<SCAPIX_META_STRING("GL_TEXTURE_GEN_MODE"), jint>(); }
inline jint GL11ExtensionPack::GL_TEXTURE_GEN_STR_() { return get_static_field<SCAPIX_META_STRING("GL_TEXTURE_GEN_STR"), jint>(); }
inline void GL11ExtensionPack::glBindFramebufferOES(jint p1, jint p2) { return call_method<SCAPIX_META_STRING("glBindFramebufferOES"), void>(p1, p2); }
inline void GL11ExtensionPack::glBindRenderbufferOES(jint p1, jint p2) { return call_method<SCAPIX_META_STRING("glBindRenderbufferOES"), void>(p1, p2); }
inline void GL11ExtensionPack::glBindTexture(jint p1, jint p2) { return call_method<SCAPIX_META_STRING("glBindTexture"), void>(p1, p2); }
inline void GL11ExtensionPack::glBlendEquation(jint p1) { return call_method<SCAPIX_META_STRING("glBlendEquation"), void>(p1); }
inline void GL11ExtensionPack::glBlendEquationSeparate(jint p1, jint p2) { return call_method<SCAPIX_META_STRING("glBlendEquationSeparate"), void>(p1, p2); }
inline void GL11ExtensionPack::glBlendFuncSeparate(jint p1, jint p2, jint p3, jint p4) { return call_method<SCAPIX_META_STRING("glBlendFuncSeparate"), void>(p1, p2, p3, p4); }
inline jint GL11ExtensionPack::glCheckFramebufferStatusOES(jint p1) { return call_method<SCAPIX_META_STRING("glCheckFramebufferStatusOES"), jint>(p1); }
inline void GL11ExtensionPack::glCompressedTexImage2D(jint p1, jint p2, jint p3, jint p4, jint p5, jint p6, jint p7, ref<java::nio::Buffer> p8) { return call_method<SCAPIX_META_STRING("glCompressedTexImage2D"), void>(p1, p2, p3, p4, p5, p6, p7, p8); }
inline void GL11ExtensionPack::glCopyTexImage2D(jint p1, jint p2, jint p3, jint p4, jint p5, jint p6, jint p7, jint p8) { return call_method<SCAPIX_META_STRING("glCopyTexImage2D"), void>(p1, p2, p3, p4, p5, p6, p7, p8); }
inline void GL11ExtensionPack::glDeleteFramebuffersOES(jint p1, ref<link::java::array<jint>> p2, jint p3) { return call_method<SCAPIX_META_STRING("glDeleteFramebuffersOES"), void>(p1, p2, p3); }
inline void GL11ExtensionPack::glDeleteFramebuffersOES(jint p1, ref<java::nio::IntBuffer> p2) { return call_method<SCAPIX_META_STRING("glDeleteFramebuffersOES"), void>(p1, p2); }
inline void GL11ExtensionPack::glDeleteRenderbuffersOES(jint p1, ref<link::java::array<jint>> p2, jint p3) { return call_method<SCAPIX_META_STRING("glDeleteRenderbuffersOES"), void>(p1, p2, p3); }
inline void GL11ExtensionPack::glDeleteRenderbuffersOES(jint p1, ref<java::nio::IntBuffer> p2) { return call_method<SCAPIX_META_STRING("glDeleteRenderbuffersOES"), void>(p1, p2); }
inline void GL11ExtensionPack::glEnable(jint p1) { return call_method<SCAPIX_META_STRING("glEnable"), void>(p1); }
inline void GL11ExtensionPack::glFramebufferRenderbufferOES(jint p1, jint p2, jint p3, jint p4) { return call_method<SCAPIX_META_STRING("glFramebufferRenderbufferOES"), void>(p1, p2, p3, p4); }
inline void GL11ExtensionPack::glFramebufferTexture2DOES(jint p1, jint p2, jint p3, jint p4, jint p5) { return call_method<SCAPIX_META_STRING("glFramebufferTexture2DOES"), void>(p1, p2, p3, p4, p5); }
inline void GL11ExtensionPack::glGenerateMipmapOES(jint p1) { return call_method<SCAPIX_META_STRING("glGenerateMipmapOES"), void>(p1); }
inline void GL11ExtensionPack::glGenFramebuffersOES(jint p1, ref<link::java::array<jint>> p2, jint p3) { return call_method<SCAPIX_META_STRING("glGenFramebuffersOES"), void>(p1, p2, p3); }
inline void GL11ExtensionPack::glGenFramebuffersOES(jint p1, ref<java::nio::IntBuffer> p2) { return call_method<SCAPIX_META_STRING("glGenFramebuffersOES"), void>(p1, p2); }
inline void GL11ExtensionPack::glGenRenderbuffersOES(jint p1, ref<link::java::array<jint>> p2, jint p3) { return call_method<SCAPIX_META_STRING("glGenRenderbuffersOES"), void>(p1, p2, p3); }
inline void GL11ExtensionPack::glGenRenderbuffersOES(jint p1, ref<java::nio::IntBuffer> p2) { return call_method<SCAPIX_META_STRING("glGenRenderbuffersOES"), void>(p1, p2); }
inline void GL11ExtensionPack::glGetFramebufferAttachmentParameterivOES(jint p1, jint p2, jint p3, ref<link::java::array<jint>> p4, jint p5) { return call_method<SCAPIX_META_STRING("glGetFramebufferAttachmentParameterivOES"), void>(p1, p2, p3, p4, p5); }
inline void GL11ExtensionPack::glGetFramebufferAttachmentParameterivOES(jint p1, jint p2, jint p3, ref<java::nio::IntBuffer> p4) { return call_method<SCAPIX_META_STRING("glGetFramebufferAttachmentParameterivOES"), void>(p1, p2, p3, p4); }
inline void GL11ExtensionPack::glGetIntegerv(jint p1, ref<link::java::array<jint>> p2, jint p3) { return call_method<SCAPIX_META_STRING("glGetIntegerv"), void>(p1, p2, p3); }
inline void GL11ExtensionPack::glGetIntegerv(jint p1, ref<java::nio::IntBuffer> p2) { return call_method<SCAPIX_META_STRING("glGetIntegerv"), void>(p1, p2); }
inline void GL11ExtensionPack::glGetRenderbufferParameterivOES(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4) { return call_method<SCAPIX_META_STRING("glGetRenderbufferParameterivOES"), void>(p1, p2, p3, p4); }
inline void GL11ExtensionPack::glGetRenderbufferParameterivOES(jint p1, jint p2, ref<java::nio::IntBuffer> p3) { return call_method<SCAPIX_META_STRING("glGetRenderbufferParameterivOES"), void>(p1, p2, p3); }
inline void GL11ExtensionPack::glGetTexGenfv(jint p1, jint p2, ref<link::java::array<jfloat>> p3, jint p4) { return call_method<SCAPIX_META_STRING("glGetTexGenfv"), void>(p1, p2, p3, p4); }
inline void GL11ExtensionPack::glGetTexGenfv(jint p1, jint p2, ref<java::nio::FloatBuffer> p3) { return call_method<SCAPIX_META_STRING("glGetTexGenfv"), void>(p1, p2, p3); }
inline void GL11ExtensionPack::glGetTexGeniv(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4) { return call_method<SCAPIX_META_STRING("glGetTexGeniv"), void>(p1, p2, p3, p4); }
inline void GL11ExtensionPack::glGetTexGeniv(jint p1, jint p2, ref<java::nio::IntBuffer> p3) { return call_method<SCAPIX_META_STRING("glGetTexGeniv"), void>(p1, p2, p3); }
inline void GL11ExtensionPack::glGetTexGenxv(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4) { return call_method<SCAPIX_META_STRING("glGetTexGenxv"), void>(p1, p2, p3, p4); }
inline void GL11ExtensionPack::glGetTexGenxv(jint p1, jint p2, ref<java::nio::IntBuffer> p3) { return call_method<SCAPIX_META_STRING("glGetTexGenxv"), void>(p1, p2, p3); }
inline jboolean GL11ExtensionPack::glIsFramebufferOES(jint p1) { return call_method<SCAPIX_META_STRING("glIsFramebufferOES"), jboolean>(p1); }
inline jboolean GL11ExtensionPack::glIsRenderbufferOES(jint p1) { return call_method<SCAPIX_META_STRING("glIsRenderbufferOES"), jboolean>(p1); }
inline void GL11ExtensionPack::glRenderbufferStorageOES(jint p1, jint p2, jint p3, jint p4) { return call_method<SCAPIX_META_STRING("glRenderbufferStorageOES"), void>(p1, p2, p3, p4); }
inline void GL11ExtensionPack::glStencilOp(jint p1, jint p2, jint p3) { return call_method<SCAPIX_META_STRING("glStencilOp"), void>(p1, p2, p3); }
inline void GL11ExtensionPack::glTexEnvf(jint p1, jint p2, jfloat p3) { return call_method<SCAPIX_META_STRING("glTexEnvf"), void>(p1, p2, p3); }
inline void GL11ExtensionPack::glTexEnvfv(jint p1, jint p2, ref<link::java::array<jfloat>> p3, jint p4) { return call_method<SCAPIX_META_STRING("glTexEnvfv"), void>(p1, p2, p3, p4); }
inline void GL11ExtensionPack::glTexEnvfv(jint p1, jint p2, ref<java::nio::FloatBuffer> p3) { return call_method<SCAPIX_META_STRING("glTexEnvfv"), void>(p1, p2, p3); }
inline void GL11ExtensionPack::glTexEnvx(jint p1, jint p2, jint p3) { return call_method<SCAPIX_META_STRING("glTexEnvx"), void>(p1, p2, p3); }
inline void GL11ExtensionPack::glTexEnvxv(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4) { return call_method<SCAPIX_META_STRING("glTexEnvxv"), void>(p1, p2, p3, p4); }
inline void GL11ExtensionPack::glTexEnvxv(jint p1, jint p2, ref<java::nio::IntBuffer> p3) { return call_method<SCAPIX_META_STRING("glTexEnvxv"), void>(p1, p2, p3); }
inline void GL11ExtensionPack::glTexGenf(jint p1, jint p2, jfloat p3) { return call_method<SCAPIX_META_STRING("glTexGenf"), void>(p1, p2, p3); }
inline void GL11ExtensionPack::glTexGenfv(jint p1, jint p2, ref<link::java::array<jfloat>> p3, jint p4) { return call_method<SCAPIX_META_STRING("glTexGenfv"), void>(p1, p2, p3, p4); }
inline void GL11ExtensionPack::glTexGenfv(jint p1, jint p2, ref<java::nio::FloatBuffer> p3) { return call_method<SCAPIX_META_STRING("glTexGenfv"), void>(p1, p2, p3); }
inline void GL11ExtensionPack::glTexGeni(jint p1, jint p2, jint p3) { return call_method<SCAPIX_META_STRING("glTexGeni"), void>(p1, p2, p3); }
inline void GL11ExtensionPack::glTexGeniv(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4) { return call_method<SCAPIX_META_STRING("glTexGeniv"), void>(p1, p2, p3, p4); }
inline void GL11ExtensionPack::glTexGeniv(jint p1, jint p2, ref<java::nio::IntBuffer> p3) { return call_method<SCAPIX_META_STRING("glTexGeniv"), void>(p1, p2, p3); }
inline void GL11ExtensionPack::glTexGenx(jint p1, jint p2, jint p3) { return call_method<SCAPIX_META_STRING("glTexGenx"), void>(p1, p2, p3); }
inline void GL11ExtensionPack::glTexGenxv(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4) { return call_method<SCAPIX_META_STRING("glTexGenxv"), void>(p1, p2, p3, p4); }
inline void GL11ExtensionPack::glTexGenxv(jint p1, jint p2, ref<java::nio::IntBuffer> p3) { return call_method<SCAPIX_META_STRING("glTexGenxv"), void>(p1, p2, p3); }
inline void GL11ExtensionPack::glTexParameterf(jint p1, jint p2, jfloat p3) { return call_method<SCAPIX_META_STRING("glTexParameterf"), void>(p1, p2, p3); }

} // namespace javax::microedition::khronos::opengles
} // namespace scapix::java_api

#endif // SCAPIX_JAVAX_MICROEDITION_KHRONOS_OPENGLES_GL11EXTENSIONPACK_H
