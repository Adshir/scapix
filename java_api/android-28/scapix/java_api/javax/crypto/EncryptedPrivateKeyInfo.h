// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVAX_CRYPTO_ENCRYPTEDPRIVATEKEYINFO_H
#define SCAPIX_JAVAX_CRYPTO_ENCRYPTEDPRIVATEKEYINFO_H

namespace scapix::java_api {

namespace java::lang { class String; }
namespace java::security { class AlgorithmParameters; }
namespace java::security { class Key; }
namespace java::security { class Provider; }
namespace java::security::spec { class PKCS8EncodedKeySpec; }
namespace javax::crypto { class Cipher; }

namespace javax::crypto {

class EncryptedPrivateKeyInfo : public object_base<SCAPIX_META_STRING("javax/crypto/EncryptedPrivateKeyInfo"),
	java::lang::Object>
{
public:

	static ref<EncryptedPrivateKeyInfo> new_object(ref<link::java::array<jbyte>> encoded);
	static ref<EncryptedPrivateKeyInfo> new_object(ref<java::lang::String> algName, ref<link::java::array<jbyte>> encryptedData);
	static ref<EncryptedPrivateKeyInfo> new_object(ref<java::security::AlgorithmParameters> algParams, ref<link::java::array<jbyte>> encryptedData);
	ref<java::lang::String> getAlgName();
	ref<java::security::AlgorithmParameters> getAlgParameters();
	ref<link::java::array<jbyte>> getEncryptedData();
	ref<java::security::spec::PKCS8EncodedKeySpec> getKeySpec(ref<javax::crypto::Cipher> cipher);
	ref<java::security::spec::PKCS8EncodedKeySpec> getKeySpec(ref<java::security::Key> decryptKey);
	ref<java::security::spec::PKCS8EncodedKeySpec> getKeySpec(ref<java::security::Key> decryptKey, ref<java::lang::String> providerName);
	ref<java::security::spec::PKCS8EncodedKeySpec> getKeySpec(ref<java::security::Key> decryptKey, ref<java::security::Provider> provider);
	ref<link::java::array<jbyte>> getEncoded();

protected:

	EncryptedPrivateKeyInfo(handle_type h) : base_(h) {}

};

} // namespace javax::crypto
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/security/AlgorithmParameters.h>
#include <scapix/java_api/java/security/Key.h>
#include <scapix/java_api/java/security/Provider.h>
#include <scapix/java_api/java/security/spec/PKCS8EncodedKeySpec.h>
#include <scapix/java_api/javax/crypto/Cipher.h>

namespace scapix::java_api {
namespace javax::crypto {

inline ref<EncryptedPrivateKeyInfo> EncryptedPrivateKeyInfo::new_object(ref<link::java::array<jbyte>> encoded) { return base_::new_object(encoded); }
inline ref<EncryptedPrivateKeyInfo> EncryptedPrivateKeyInfo::new_object(ref<java::lang::String> algName, ref<link::java::array<jbyte>> encryptedData) { return base_::new_object(algName, encryptedData); }
inline ref<EncryptedPrivateKeyInfo> EncryptedPrivateKeyInfo::new_object(ref<java::security::AlgorithmParameters> algParams, ref<link::java::array<jbyte>> encryptedData) { return base_::new_object(algParams, encryptedData); }
inline ref<java::lang::String> EncryptedPrivateKeyInfo::getAlgName() { return call_method<SCAPIX_META_STRING("getAlgName"), ref<java::lang::String>>(); }
inline ref<java::security::AlgorithmParameters> EncryptedPrivateKeyInfo::getAlgParameters() { return call_method<SCAPIX_META_STRING("getAlgParameters"), ref<java::security::AlgorithmParameters>>(); }
inline ref<link::java::array<jbyte>> EncryptedPrivateKeyInfo::getEncryptedData() { return call_method<SCAPIX_META_STRING("getEncryptedData"), ref<link::java::array<jbyte>>>(); }
inline ref<java::security::spec::PKCS8EncodedKeySpec> EncryptedPrivateKeyInfo::getKeySpec(ref<javax::crypto::Cipher> cipher) { return call_method<SCAPIX_META_STRING("getKeySpec"), ref<java::security::spec::PKCS8EncodedKeySpec>>(cipher); }
inline ref<java::security::spec::PKCS8EncodedKeySpec> EncryptedPrivateKeyInfo::getKeySpec(ref<java::security::Key> decryptKey) { return call_method<SCAPIX_META_STRING("getKeySpec"), ref<java::security::spec::PKCS8EncodedKeySpec>>(decryptKey); }
inline ref<java::security::spec::PKCS8EncodedKeySpec> EncryptedPrivateKeyInfo::getKeySpec(ref<java::security::Key> decryptKey, ref<java::lang::String> providerName) { return call_method<SCAPIX_META_STRING("getKeySpec"), ref<java::security::spec::PKCS8EncodedKeySpec>>(decryptKey, providerName); }
inline ref<java::security::spec::PKCS8EncodedKeySpec> EncryptedPrivateKeyInfo::getKeySpec(ref<java::security::Key> decryptKey, ref<java::security::Provider> provider) { return call_method<SCAPIX_META_STRING("getKeySpec"), ref<java::security::spec::PKCS8EncodedKeySpec>>(decryptKey, provider); }
inline ref<link::java::array<jbyte>> EncryptedPrivateKeyInfo::getEncoded() { return call_method<SCAPIX_META_STRING("getEncoded"), ref<link::java::array<jbyte>>>(); }

} // namespace javax::crypto
} // namespace scapix::java_api

#endif // SCAPIX_JAVAX_CRYPTO_ENCRYPTEDPRIVATEKEYINFO_H
