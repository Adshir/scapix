// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/javax/crypto/SecretKey.h>

#ifndef SCAPIX_JAVAX_CRYPTO_INTERFACES_PBEKEY_H
#define SCAPIX_JAVAX_CRYPTO_INTERFACES_PBEKEY_H

namespace scapix::java_api {
namespace javax::crypto::interfaces {

class PBEKey : public object_base<SCAPIX_META_STRING("javax/crypto/interfaces/PBEKey"),
	java::lang::Object,
	javax::crypto::SecretKey>
{
public:

	static jlong serialVersionUID();

	ref<link::java::array<jchar>> getPassword();
	ref<link::java::array<jbyte>> getSalt();
	jint getIterationCount();

protected:

	PBEKey(handle_type h) : base_(h) {}

};

} // namespace javax::crypto::interfaces
} // namespace scapix::java_api


namespace scapix::java_api {
namespace javax::crypto::interfaces {

inline jlong PBEKey::serialVersionUID() { return get_static_field<SCAPIX_META_STRING("serialVersionUID"), jlong>(); }
inline ref<link::java::array<jchar>> PBEKey::getPassword() { return call_method<SCAPIX_META_STRING("getPassword"), ref<link::java::array<jchar>>>(); }
inline ref<link::java::array<jbyte>> PBEKey::getSalt() { return call_method<SCAPIX_META_STRING("getSalt"), ref<link::java::array<jbyte>>>(); }
inline jint PBEKey::getIterationCount() { return call_method<SCAPIX_META_STRING("getIterationCount"), jint>(); }

} // namespace javax::crypto::interfaces
} // namespace scapix::java_api

#endif // SCAPIX_JAVAX_CRYPTO_INTERFACES_PBEKEY_H
