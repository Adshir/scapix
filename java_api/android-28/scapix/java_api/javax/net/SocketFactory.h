// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVAX_NET_SOCKETFACTORY_H
#define SCAPIX_JAVAX_NET_SOCKETFACTORY_H

namespace scapix::java_api {

namespace java::lang { class String; }
namespace java::net { class InetAddress; }
namespace java::net { class Socket; }

namespace javax::net {

class SocketFactory : public object_base<SCAPIX_META_STRING("javax/net/SocketFactory"),
	java::lang::Object>
{
public:

	static ref<javax::net::SocketFactory> getDefault();
	ref<java::net::Socket> createSocket();
	ref<java::net::Socket> createSocket(ref<java::lang::String> p1, jint p2);
	ref<java::net::Socket> createSocket(ref<java::lang::String> p1, jint p2, ref<java::net::InetAddress> p3, jint p4);
	ref<java::net::Socket> createSocket(ref<java::net::InetAddress> p1, jint p2);
	ref<java::net::Socket> createSocket(ref<java::net::InetAddress> p1, jint p2, ref<java::net::InetAddress> p3, jint p4);

protected:

	SocketFactory(handle_type h) : base_(h) {}

};

} // namespace javax::net
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/net/InetAddress.h>
#include <scapix/java_api/java/net/Socket.h>

namespace scapix::java_api {
namespace javax::net {

inline ref<javax::net::SocketFactory> SocketFactory::getDefault() { return call_static_method<SCAPIX_META_STRING("getDefault"), ref<javax::net::SocketFactory>>(); }
inline ref<java::net::Socket> SocketFactory::createSocket() { return call_method<SCAPIX_META_STRING("createSocket"), ref<java::net::Socket>>(); }
inline ref<java::net::Socket> SocketFactory::createSocket(ref<java::lang::String> p1, jint p2) { return call_method<SCAPIX_META_STRING("createSocket"), ref<java::net::Socket>>(p1, p2); }
inline ref<java::net::Socket> SocketFactory::createSocket(ref<java::lang::String> p1, jint p2, ref<java::net::InetAddress> p3, jint p4) { return call_method<SCAPIX_META_STRING("createSocket"), ref<java::net::Socket>>(p1, p2, p3, p4); }
inline ref<java::net::Socket> SocketFactory::createSocket(ref<java::net::InetAddress> p1, jint p2) { return call_method<SCAPIX_META_STRING("createSocket"), ref<java::net::Socket>>(p1, p2); }
inline ref<java::net::Socket> SocketFactory::createSocket(ref<java::net::InetAddress> p1, jint p2, ref<java::net::InetAddress> p3, jint p4) { return call_method<SCAPIX_META_STRING("createSocket"), ref<java::net::Socket>>(p1, p2, p3, p4); }

} // namespace javax::net
} // namespace scapix::java_api

#endif // SCAPIX_JAVAX_NET_SOCKETFACTORY_H
