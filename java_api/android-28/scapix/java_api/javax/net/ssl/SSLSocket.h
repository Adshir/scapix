// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/net/Socket.h>

#ifndef SCAPIX_JAVAX_NET_SSL_SSLSOCKET_H
#define SCAPIX_JAVAX_NET_SSL_SSLSOCKET_H

namespace scapix::java_api {

namespace java::lang { class String; }
namespace javax::net::ssl { class HandshakeCompletedListener; }
namespace javax::net::ssl { class SSLParameters; }
namespace javax::net::ssl { class SSLSession; }

namespace javax::net::ssl {

class SSLSocket : public object_base<SCAPIX_META_STRING("javax/net/ssl/SSLSocket"),
	java::net::Socket>
{
public:

	ref<link::java::array<java::lang::String>> getSupportedCipherSuites();
	ref<link::java::array<java::lang::String>> getEnabledCipherSuites();
	void setEnabledCipherSuites(ref<link::java::array<java::lang::String>> p1);
	ref<link::java::array<java::lang::String>> getSupportedProtocols();
	ref<link::java::array<java::lang::String>> getEnabledProtocols();
	void setEnabledProtocols(ref<link::java::array<java::lang::String>> p1);
	ref<javax::net::ssl::SSLSession> getSession();
	ref<javax::net::ssl::SSLSession> getHandshakeSession();
	void addHandshakeCompletedListener(ref<javax::net::ssl::HandshakeCompletedListener> p1);
	void removeHandshakeCompletedListener(ref<javax::net::ssl::HandshakeCompletedListener> p1);
	void startHandshake();
	void setUseClientMode(jboolean p1);
	jboolean getUseClientMode();
	void setNeedClientAuth(jboolean p1);
	jboolean getNeedClientAuth();
	void setWantClientAuth(jboolean p1);
	jboolean getWantClientAuth();
	void setEnableSessionCreation(jboolean p1);
	jboolean getEnableSessionCreation();
	ref<javax::net::ssl::SSLParameters> getSSLParameters();
	void setSSLParameters(ref<javax::net::ssl::SSLParameters> params);
	ref<java::lang::String> toString();

protected:

	SSLSocket(handle_type h) : base_(h) {}

};

} // namespace javax::net::ssl
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/javax/net/ssl/HandshakeCompletedListener.h>
#include <scapix/java_api/javax/net/ssl/SSLParameters.h>
#include <scapix/java_api/javax/net/ssl/SSLSession.h>

namespace scapix::java_api {
namespace javax::net::ssl {

inline ref<link::java::array<java::lang::String>> SSLSocket::getSupportedCipherSuites() { return call_method<SCAPIX_META_STRING("getSupportedCipherSuites"), ref<link::java::array<java::lang::String>>>(); }
inline ref<link::java::array<java::lang::String>> SSLSocket::getEnabledCipherSuites() { return call_method<SCAPIX_META_STRING("getEnabledCipherSuites"), ref<link::java::array<java::lang::String>>>(); }
inline void SSLSocket::setEnabledCipherSuites(ref<link::java::array<java::lang::String>> p1) { return call_method<SCAPIX_META_STRING("setEnabledCipherSuites"), void>(p1); }
inline ref<link::java::array<java::lang::String>> SSLSocket::getSupportedProtocols() { return call_method<SCAPIX_META_STRING("getSupportedProtocols"), ref<link::java::array<java::lang::String>>>(); }
inline ref<link::java::array<java::lang::String>> SSLSocket::getEnabledProtocols() { return call_method<SCAPIX_META_STRING("getEnabledProtocols"), ref<link::java::array<java::lang::String>>>(); }
inline void SSLSocket::setEnabledProtocols(ref<link::java::array<java::lang::String>> p1) { return call_method<SCAPIX_META_STRING("setEnabledProtocols"), void>(p1); }
inline ref<javax::net::ssl::SSLSession> SSLSocket::getSession() { return call_method<SCAPIX_META_STRING("getSession"), ref<javax::net::ssl::SSLSession>>(); }
inline ref<javax::net::ssl::SSLSession> SSLSocket::getHandshakeSession() { return call_method<SCAPIX_META_STRING("getHandshakeSession"), ref<javax::net::ssl::SSLSession>>(); }
inline void SSLSocket::addHandshakeCompletedListener(ref<javax::net::ssl::HandshakeCompletedListener> p1) { return call_method<SCAPIX_META_STRING("addHandshakeCompletedListener"), void>(p1); }
inline void SSLSocket::removeHandshakeCompletedListener(ref<javax::net::ssl::HandshakeCompletedListener> p1) { return call_method<SCAPIX_META_STRING("removeHandshakeCompletedListener"), void>(p1); }
inline void SSLSocket::startHandshake() { return call_method<SCAPIX_META_STRING("startHandshake"), void>(); }
inline void SSLSocket::setUseClientMode(jboolean p1) { return call_method<SCAPIX_META_STRING("setUseClientMode"), void>(p1); }
inline jboolean SSLSocket::getUseClientMode() { return call_method<SCAPIX_META_STRING("getUseClientMode"), jboolean>(); }
inline void SSLSocket::setNeedClientAuth(jboolean p1) { return call_method<SCAPIX_META_STRING("setNeedClientAuth"), void>(p1); }
inline jboolean SSLSocket::getNeedClientAuth() { return call_method<SCAPIX_META_STRING("getNeedClientAuth"), jboolean>(); }
inline void SSLSocket::setWantClientAuth(jboolean p1) { return call_method<SCAPIX_META_STRING("setWantClientAuth"), void>(p1); }
inline jboolean SSLSocket::getWantClientAuth() { return call_method<SCAPIX_META_STRING("getWantClientAuth"), jboolean>(); }
inline void SSLSocket::setEnableSessionCreation(jboolean p1) { return call_method<SCAPIX_META_STRING("setEnableSessionCreation"), void>(p1); }
inline jboolean SSLSocket::getEnableSessionCreation() { return call_method<SCAPIX_META_STRING("getEnableSessionCreation"), jboolean>(); }
inline ref<javax::net::ssl::SSLParameters> SSLSocket::getSSLParameters() { return call_method<SCAPIX_META_STRING("getSSLParameters"), ref<javax::net::ssl::SSLParameters>>(); }
inline void SSLSocket::setSSLParameters(ref<javax::net::ssl::SSLParameters> params) { return call_method<SCAPIX_META_STRING("setSSLParameters"), void>(params); }
inline ref<java::lang::String> SSLSocket::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }

} // namespace javax::net::ssl
} // namespace scapix::java_api

#endif // SCAPIX_JAVAX_NET_SSL_SSLSOCKET_H
