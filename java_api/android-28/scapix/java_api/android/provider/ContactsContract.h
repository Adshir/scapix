// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_PROVIDER_CONTACTSCONTRACT_H
#define SCAPIX_ANDROID_PROVIDER_CONTACTSCONTRACT_H

namespace scapix::java_api {

namespace android::net { class Uri; }
namespace java::lang { class String; }
namespace android::provider { class ContactsContract_SyncState; }
namespace android::provider { class ContactsContract_StatusUpdates; }
namespace android::provider { class ContactsContract_Settings; }
namespace android::provider { class ContactsContract_SearchSnippets; }
namespace android::provider { class ContactsContract_RawContactsEntity; }
namespace android::provider { class ContactsContract_RawContacts; }
namespace android::provider { class ContactsContract_QuickContact; }
namespace android::provider { class ContactsContract_ProviderStatus; }
namespace android::provider { class ContactsContract_ProfileSyncState; }
namespace android::provider { class ContactsContract_Profile; }
namespace android::provider { class ContactsContract_Presence; }
namespace android::provider { class ContactsContract_PinnedPositions; }
namespace android::provider { class ContactsContract_PhoneticNameStyle; }
namespace android::provider { class ContactsContract_PhoneLookup; }
namespace android::provider { class ContactsContract_Intents; }
namespace android::provider { class ContactsContract_Groups; }
namespace android::provider { class ContactsContract_FullNameStyle; }
namespace android::provider { class ContactsContract_DisplayPhoto; }
namespace android::provider { class ContactsContract_DisplayNameSources; }
namespace android::provider { class ContactsContract_Directory; }
namespace android::provider { class ContactsContract_DeletedContacts; }
namespace android::provider { class ContactsContract_DataUsageFeedback; }
namespace android::provider { class ContactsContract_Data; }
namespace android::provider { class ContactsContract_Contacts; }
namespace android::provider { class ContactsContract_CommonDataKinds; }
namespace android::provider { class ContactsContract_AggregationExceptions; }

namespace android::provider {

class ContactsContract : public object_base<SCAPIX_META_STRING("android/provider/ContactsContract"),
	java::lang::Object>
{
public:

	using SyncState = ContactsContract_SyncState;
	using StatusUpdates = ContactsContract_StatusUpdates;
	using Settings = ContactsContract_Settings;
	using SearchSnippets = ContactsContract_SearchSnippets;
	using RawContactsEntity = ContactsContract_RawContactsEntity;
	using RawContacts = ContactsContract_RawContacts;
	using QuickContact = ContactsContract_QuickContact;
	using ProviderStatus = ContactsContract_ProviderStatus;
	using ProfileSyncState = ContactsContract_ProfileSyncState;
	using Profile = ContactsContract_Profile;
	using Presence = ContactsContract_Presence;
	using PinnedPositions = ContactsContract_PinnedPositions;
	using PhoneticNameStyle = ContactsContract_PhoneticNameStyle;
	using PhoneLookup = ContactsContract_PhoneLookup;
	using Intents = ContactsContract_Intents;
	using Groups = ContactsContract_Groups;
	using FullNameStyle = ContactsContract_FullNameStyle;
	using DisplayPhoto = ContactsContract_DisplayPhoto;
	using DisplayNameSources = ContactsContract_DisplayNameSources;
	using Directory = ContactsContract_Directory;
	using DeletedContacts = ContactsContract_DeletedContacts;
	using DataUsageFeedback = ContactsContract_DataUsageFeedback;
	using Data = ContactsContract_Data;
	using Contacts = ContactsContract_Contacts;
	using CommonDataKinds = ContactsContract_CommonDataKinds;
	using AggregationExceptions = ContactsContract_AggregationExceptions;

	static ref<java::lang::String> AUTHORITY_();
	static ref<android::net::Uri> AUTHORITY_URI_();
	static ref<java::lang::String> CALLER_IS_SYNCADAPTER_();
	static ref<java::lang::String> DEFERRED_SNIPPETING_();
	static ref<java::lang::String> DEFERRED_SNIPPETING_QUERY_();
	static ref<java::lang::String> DIRECTORY_PARAM_KEY_();
	static ref<java::lang::String> LIMIT_PARAM_KEY_();
	static ref<java::lang::String> PRIMARY_ACCOUNT_NAME_();
	static ref<java::lang::String> PRIMARY_ACCOUNT_TYPE_();
	static ref<java::lang::String> REMOVE_DUPLICATE_ENTRIES_();
	static ref<java::lang::String> STREQUENT_PHONE_ONLY_();

	static ref<ContactsContract> new_object();
	static jboolean isProfileId(jlong id);

protected:

	ContactsContract(handle_type h) : base_(h) {}

};

} // namespace android::provider
} // namespace scapix::java_api

#include <scapix/java_api/android/net/Uri.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::provider {

inline ref<java::lang::String> ContactsContract::AUTHORITY_() { return get_static_field<SCAPIX_META_STRING("AUTHORITY"), ref<java::lang::String>>(); }
inline ref<android::net::Uri> ContactsContract::AUTHORITY_URI_() { return get_static_field<SCAPIX_META_STRING("AUTHORITY_URI"), ref<android::net::Uri>>(); }
inline ref<java::lang::String> ContactsContract::CALLER_IS_SYNCADAPTER_() { return get_static_field<SCAPIX_META_STRING("CALLER_IS_SYNCADAPTER"), ref<java::lang::String>>(); }
inline ref<java::lang::String> ContactsContract::DEFERRED_SNIPPETING_() { return get_static_field<SCAPIX_META_STRING("DEFERRED_SNIPPETING"), ref<java::lang::String>>(); }
inline ref<java::lang::String> ContactsContract::DEFERRED_SNIPPETING_QUERY_() { return get_static_field<SCAPIX_META_STRING("DEFERRED_SNIPPETING_QUERY"), ref<java::lang::String>>(); }
inline ref<java::lang::String> ContactsContract::DIRECTORY_PARAM_KEY_() { return get_static_field<SCAPIX_META_STRING("DIRECTORY_PARAM_KEY"), ref<java::lang::String>>(); }
inline ref<java::lang::String> ContactsContract::LIMIT_PARAM_KEY_() { return get_static_field<SCAPIX_META_STRING("LIMIT_PARAM_KEY"), ref<java::lang::String>>(); }
inline ref<java::lang::String> ContactsContract::PRIMARY_ACCOUNT_NAME_() { return get_static_field<SCAPIX_META_STRING("PRIMARY_ACCOUNT_NAME"), ref<java::lang::String>>(); }
inline ref<java::lang::String> ContactsContract::PRIMARY_ACCOUNT_TYPE_() { return get_static_field<SCAPIX_META_STRING("PRIMARY_ACCOUNT_TYPE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> ContactsContract::REMOVE_DUPLICATE_ENTRIES_() { return get_static_field<SCAPIX_META_STRING("REMOVE_DUPLICATE_ENTRIES"), ref<java::lang::String>>(); }
inline ref<java::lang::String> ContactsContract::STREQUENT_PHONE_ONLY_() { return get_static_field<SCAPIX_META_STRING("STREQUENT_PHONE_ONLY"), ref<java::lang::String>>(); }
inline ref<ContactsContract> ContactsContract::new_object() { return base_::new_object(); }
inline jboolean ContactsContract::isProfileId(jlong id) { return call_static_method<SCAPIX_META_STRING("isProfileId"), jboolean>(id); }

} // namespace android::provider
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_PROVIDER_CONTACTSCONTRACT_H
