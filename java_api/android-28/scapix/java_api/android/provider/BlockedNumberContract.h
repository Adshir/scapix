// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_PROVIDER_BLOCKEDNUMBERCONTRACT_H
#define SCAPIX_ANDROID_PROVIDER_BLOCKEDNUMBERCONTRACT_H

namespace scapix::java_api {

namespace android::content { class Context; }
namespace android::net { class Uri; }
namespace java::lang { class String; }
namespace android::provider { class BlockedNumberContract_BlockedNumbers; }

namespace android::provider {

class BlockedNumberContract : public object_base<SCAPIX_META_STRING("android/provider/BlockedNumberContract"),
	java::lang::Object>
{
public:

	using BlockedNumbers = BlockedNumberContract_BlockedNumbers;

	static ref<java::lang::String> AUTHORITY_();
	static ref<android::net::Uri> AUTHORITY_URI_();

	static jboolean isBlocked(ref<android::content::Context> context, ref<java::lang::String> phoneNumber);
	static jint unblock(ref<android::content::Context> context, ref<java::lang::String> phoneNumber);
	static jboolean canCurrentUserBlockNumbers(ref<android::content::Context> context);

protected:

	BlockedNumberContract(handle_type h) : base_(h) {}

};

} // namespace android::provider
} // namespace scapix::java_api

#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/net/Uri.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::provider {

inline ref<java::lang::String> BlockedNumberContract::AUTHORITY_() { return get_static_field<SCAPIX_META_STRING("AUTHORITY"), ref<java::lang::String>>(); }
inline ref<android::net::Uri> BlockedNumberContract::AUTHORITY_URI_() { return get_static_field<SCAPIX_META_STRING("AUTHORITY_URI"), ref<android::net::Uri>>(); }
inline jboolean BlockedNumberContract::isBlocked(ref<android::content::Context> context, ref<java::lang::String> phoneNumber) { return call_static_method<SCAPIX_META_STRING("isBlocked"), jboolean>(context, phoneNumber); }
inline jint BlockedNumberContract::unblock(ref<android::content::Context> context, ref<java::lang::String> phoneNumber) { return call_static_method<SCAPIX_META_STRING("unblock"), jint>(context, phoneNumber); }
inline jboolean BlockedNumberContract::canCurrentUserBlockNumbers(ref<android::content::Context> context) { return call_static_method<SCAPIX_META_STRING("canCurrentUserBlockNumbers"), jboolean>(context); }

} // namespace android::provider
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_PROVIDER_BLOCKEDNUMBERCONTRACT_H
