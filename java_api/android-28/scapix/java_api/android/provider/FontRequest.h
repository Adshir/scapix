// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_PROVIDER_FONTREQUEST_H
#define SCAPIX_ANDROID_PROVIDER_FONTREQUEST_H

namespace scapix::java_api {

namespace java::lang { class String; }
namespace java::util { class List; }

namespace android::provider {

class FontRequest : public object_base<SCAPIX_META_STRING("android/provider/FontRequest"),
	java::lang::Object>
{
public:

	static ref<FontRequest> new_object(ref<java::lang::String> providerAuthority, ref<java::lang::String> providerPackage, ref<java::lang::String> query);
	static ref<FontRequest> new_object(ref<java::lang::String> providerAuthority, ref<java::lang::String> providerPackage, ref<java::lang::String> query, ref<java::util::List> certificates);
	ref<java::lang::String> getProviderAuthority();
	ref<java::lang::String> getProviderPackage();
	ref<java::lang::String> getQuery();
	ref<java::util::List> getCertificates();
	ref<java::lang::String> toString();

protected:

	FontRequest(handle_type h) : base_(h) {}

};

} // namespace android::provider
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/List.h>

namespace scapix::java_api {
namespace android::provider {

inline ref<FontRequest> FontRequest::new_object(ref<java::lang::String> providerAuthority, ref<java::lang::String> providerPackage, ref<java::lang::String> query) { return base_::new_object(providerAuthority, providerPackage, query); }
inline ref<FontRequest> FontRequest::new_object(ref<java::lang::String> providerAuthority, ref<java::lang::String> providerPackage, ref<java::lang::String> query, ref<java::util::List> certificates) { return base_::new_object(providerAuthority, providerPackage, query, certificates); }
inline ref<java::lang::String> FontRequest::getProviderAuthority() { return call_method<SCAPIX_META_STRING("getProviderAuthority"), ref<java::lang::String>>(); }
inline ref<java::lang::String> FontRequest::getProviderPackage() { return call_method<SCAPIX_META_STRING("getProviderPackage"), ref<java::lang::String>>(); }
inline ref<java::lang::String> FontRequest::getQuery() { return call_method<SCAPIX_META_STRING("getQuery"), ref<java::lang::String>>(); }
inline ref<java::util::List> FontRequest::getCertificates() { return call_method<SCAPIX_META_STRING("getCertificates"), ref<java::util::List>>(); }
inline ref<java::lang::String> FontRequest::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }

} // namespace android::provider
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_PROVIDER_FONTREQUEST_H
