// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_ANDROID_PROVIDER_DOCUMENTSCONTRACT_PATH_H
#define SCAPIX_ANDROID_PROVIDER_DOCUMENTSCONTRACT_PATH_H

namespace scapix::java_api {

namespace android::os { class Parcel; }
namespace android::os { class Parcelable_Creator; }
namespace java::lang { class String; }
namespace java::util { class List; }

namespace android::provider {

class DocumentsContract_Path : public object_base<SCAPIX_META_STRING("android/provider/DocumentsContract$Path"),
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static ref<android::os::Parcelable_Creator> CREATOR_();

	static ref<DocumentsContract_Path> new_object(ref<java::lang::String> rootId, ref<java::util::List> path);
	ref<java::lang::String> getRootId();
	ref<java::util::List> getPath();
	jboolean equals(ref<java::lang::Object> o);
	jint hashCode();
	ref<java::lang::String> toString();
	void writeToParcel(ref<android::os::Parcel> dest, jint flags);
	jint describeContents();

protected:

	DocumentsContract_Path(handle_type h) : base_(h) {}

};

} // namespace android::provider
} // namespace scapix::java_api

#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/List.h>

namespace scapix::java_api {
namespace android::provider {

inline ref<android::os::Parcelable_Creator> DocumentsContract_Path::CREATOR_() { return get_static_field<SCAPIX_META_STRING("CREATOR"), ref<android::os::Parcelable_Creator>>(); }
inline ref<DocumentsContract_Path> DocumentsContract_Path::new_object(ref<java::lang::String> rootId, ref<java::util::List> path) { return base_::new_object(rootId, path); }
inline ref<java::lang::String> DocumentsContract_Path::getRootId() { return call_method<SCAPIX_META_STRING("getRootId"), ref<java::lang::String>>(); }
inline ref<java::util::List> DocumentsContract_Path::getPath() { return call_method<SCAPIX_META_STRING("getPath"), ref<java::util::List>>(); }
inline jboolean DocumentsContract_Path::equals(ref<java::lang::Object> o) { return call_method<SCAPIX_META_STRING("equals"), jboolean>(o); }
inline jint DocumentsContract_Path::hashCode() { return call_method<SCAPIX_META_STRING("hashCode"), jint>(); }
inline ref<java::lang::String> DocumentsContract_Path::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }
inline void DocumentsContract_Path::writeToParcel(ref<android::os::Parcel> dest, jint flags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(dest, flags); }
inline jint DocumentsContract_Path::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }

} // namespace android::provider
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_PROVIDER_DOCUMENTSCONTRACT_PATH_H
