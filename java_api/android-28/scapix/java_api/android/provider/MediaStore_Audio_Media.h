// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/provider/MediaStore_Audio_AudioColumns.h>

#ifndef SCAPIX_ANDROID_PROVIDER_MEDIASTORE_AUDIO_MEDIA_H
#define SCAPIX_ANDROID_PROVIDER_MEDIASTORE_AUDIO_MEDIA_H

namespace scapix::java_api {

namespace android::net { class Uri; }
namespace java::lang { class String; }

namespace android::provider {

class MediaStore_Audio_Media : public object_base<SCAPIX_META_STRING("android/provider/MediaStore$Audio$Media"),
	java::lang::Object,
	android::provider::MediaStore_Audio_AudioColumns>
{
public:

	static ref<java::lang::String> CONTENT_TYPE_();
	static ref<java::lang::String> DEFAULT_SORT_ORDER_();
	static ref<java::lang::String> ENTRY_CONTENT_TYPE_();
	static ref<android::net::Uri> EXTERNAL_CONTENT_URI_();
	static ref<java::lang::String> EXTRA_MAX_BYTES_();
	static ref<android::net::Uri> INTERNAL_CONTENT_URI_();
	static ref<java::lang::String> RECORD_SOUND_ACTION_();

	static ref<MediaStore_Audio_Media> new_object();
	static ref<android::net::Uri> getContentUri(ref<java::lang::String> volumeName);
	static ref<android::net::Uri> getContentUriForPath(ref<java::lang::String> path);

protected:

	MediaStore_Audio_Media(handle_type h) : base_(h) {}

};

} // namespace android::provider
} // namespace scapix::java_api

#include <scapix/java_api/android/net/Uri.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::provider {

inline ref<java::lang::String> MediaStore_Audio_Media::CONTENT_TYPE_() { return get_static_field<SCAPIX_META_STRING("CONTENT_TYPE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaStore_Audio_Media::DEFAULT_SORT_ORDER_() { return get_static_field<SCAPIX_META_STRING("DEFAULT_SORT_ORDER"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaStore_Audio_Media::ENTRY_CONTENT_TYPE_() { return get_static_field<SCAPIX_META_STRING("ENTRY_CONTENT_TYPE"), ref<java::lang::String>>(); }
inline ref<android::net::Uri> MediaStore_Audio_Media::EXTERNAL_CONTENT_URI_() { return get_static_field<SCAPIX_META_STRING("EXTERNAL_CONTENT_URI"), ref<android::net::Uri>>(); }
inline ref<java::lang::String> MediaStore_Audio_Media::EXTRA_MAX_BYTES_() { return get_static_field<SCAPIX_META_STRING("EXTRA_MAX_BYTES"), ref<java::lang::String>>(); }
inline ref<android::net::Uri> MediaStore_Audio_Media::INTERNAL_CONTENT_URI_() { return get_static_field<SCAPIX_META_STRING("INTERNAL_CONTENT_URI"), ref<android::net::Uri>>(); }
inline ref<java::lang::String> MediaStore_Audio_Media::RECORD_SOUND_ACTION_() { return get_static_field<SCAPIX_META_STRING("RECORD_SOUND_ACTION"), ref<java::lang::String>>(); }
inline ref<MediaStore_Audio_Media> MediaStore_Audio_Media::new_object() { return base_::new_object(); }
inline ref<android::net::Uri> MediaStore_Audio_Media::getContentUri(ref<java::lang::String> volumeName) { return call_static_method<SCAPIX_META_STRING("getContentUri"), ref<android::net::Uri>>(volumeName); }
inline ref<android::net::Uri> MediaStore_Audio_Media::getContentUriForPath(ref<java::lang::String> path) { return call_static_method<SCAPIX_META_STRING("getContentUriForPath"), ref<android::net::Uri>>(path); }

} // namespace android::provider
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_PROVIDER_MEDIASTORE_AUDIO_MEDIA_H
