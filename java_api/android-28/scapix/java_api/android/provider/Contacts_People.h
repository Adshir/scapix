// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/provider/BaseColumns.h>
#include <scapix/java_api/android/provider/Contacts_PeopleColumns.h>
#include <scapix/java_api/android/provider/Contacts_PhonesColumns.h>
#include <scapix/java_api/android/provider/Contacts_PresenceColumns.h>

#ifndef SCAPIX_ANDROID_PROVIDER_CONTACTS_PEOPLE_H
#define SCAPIX_ANDROID_PROVIDER_CONTACTS_PEOPLE_H

namespace scapix::java_api {

namespace android::content { class ContentResolver; }
namespace android::content { class ContentValues; }
namespace android::content { class Context; }
namespace android::database { class Cursor; }
namespace android::graphics { class Bitmap; }
namespace android::graphics { class BitmapFactory_Options; }
namespace android::net { class Uri; }
namespace java::io { class InputStream; }
namespace java::lang { class String; }
namespace android::provider { class Contacts_People_Phones; }
namespace android::provider { class Contacts_People_Extensions; }
namespace android::provider { class Contacts_People_ContactMethods; }

namespace android::provider {

class Contacts_People : public object_base<SCAPIX_META_STRING("android/provider/Contacts$People"),
	java::lang::Object,
	android::provider::BaseColumns,
	android::provider::Contacts_PeopleColumns,
	android::provider::Contacts_PhonesColumns,
	android::provider::Contacts_PresenceColumns>
{
public:

	using Phones = Contacts_People_Phones;
	using Extensions = Contacts_People_Extensions;
	using ContactMethods = Contacts_People_ContactMethods;

	static ref<android::net::Uri> CONTENT_FILTER_URI_();
	static ref<java::lang::String> CONTENT_ITEM_TYPE_();
	static ref<java::lang::String> CONTENT_TYPE_();
	static ref<android::net::Uri> CONTENT_URI_();
	static ref<java::lang::String> DEFAULT_SORT_ORDER_();
	static ref<android::net::Uri> DELETED_CONTENT_URI_();
	static ref<java::lang::String> PRIMARY_EMAIL_ID_();
	static ref<java::lang::String> PRIMARY_ORGANIZATION_ID_();
	static ref<java::lang::String> PRIMARY_PHONE_ID_();

	static void markAsContacted(ref<android::content::ContentResolver> resolver, jlong personId);
	static ref<android::net::Uri> addToMyContactsGroup(ref<android::content::ContentResolver> resolver, jlong personId);
	static ref<android::net::Uri> addToGroup(ref<android::content::ContentResolver> resolver, jlong personId, ref<java::lang::String> p3);
	static ref<android::net::Uri> addToGroup(ref<android::content::ContentResolver> resolver, jlong personId, jlong p3);
	static ref<android::net::Uri> createPersonInMyContactsGroup(ref<android::content::ContentResolver> resolver, ref<android::content::ContentValues> values);
	static ref<android::database::Cursor> queryGroups(ref<android::content::ContentResolver> resolver, jlong person);
	static void setPhotoData(ref<android::content::ContentResolver> cr, ref<android::net::Uri> person, ref<link::java::array<jbyte>> data);
	static ref<java::io::InputStream> openContactPhotoInputStream(ref<android::content::ContentResolver> cr, ref<android::net::Uri> person);
	static ref<android::graphics::Bitmap> loadContactPhoto(ref<android::content::Context> context, ref<android::net::Uri> person, jint placeholderImageResource, ref<android::graphics::BitmapFactory_Options> options);

protected:

	Contacts_People(handle_type h) : base_(h) {}

};

} // namespace android::provider
} // namespace scapix::java_api

#include <scapix/java_api/android/content/ContentResolver.h>
#include <scapix/java_api/android/content/ContentValues.h>
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/database/Cursor.h>
#include <scapix/java_api/android/graphics/Bitmap.h>
#include <scapix/java_api/android/graphics/BitmapFactory_Options.h>
#include <scapix/java_api/android/net/Uri.h>
#include <scapix/java_api/java/io/InputStream.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::provider {

inline ref<android::net::Uri> Contacts_People::CONTENT_FILTER_URI_() { return get_static_field<SCAPIX_META_STRING("CONTENT_FILTER_URI"), ref<android::net::Uri>>(); }
inline ref<java::lang::String> Contacts_People::CONTENT_ITEM_TYPE_() { return get_static_field<SCAPIX_META_STRING("CONTENT_ITEM_TYPE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Contacts_People::CONTENT_TYPE_() { return get_static_field<SCAPIX_META_STRING("CONTENT_TYPE"), ref<java::lang::String>>(); }
inline ref<android::net::Uri> Contacts_People::CONTENT_URI_() { return get_static_field<SCAPIX_META_STRING("CONTENT_URI"), ref<android::net::Uri>>(); }
inline ref<java::lang::String> Contacts_People::DEFAULT_SORT_ORDER_() { return get_static_field<SCAPIX_META_STRING("DEFAULT_SORT_ORDER"), ref<java::lang::String>>(); }
inline ref<android::net::Uri> Contacts_People::DELETED_CONTENT_URI_() { return get_static_field<SCAPIX_META_STRING("DELETED_CONTENT_URI"), ref<android::net::Uri>>(); }
inline ref<java::lang::String> Contacts_People::PRIMARY_EMAIL_ID_() { return get_static_field<SCAPIX_META_STRING("PRIMARY_EMAIL_ID"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Contacts_People::PRIMARY_ORGANIZATION_ID_() { return get_static_field<SCAPIX_META_STRING("PRIMARY_ORGANIZATION_ID"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Contacts_People::PRIMARY_PHONE_ID_() { return get_static_field<SCAPIX_META_STRING("PRIMARY_PHONE_ID"), ref<java::lang::String>>(); }
inline void Contacts_People::markAsContacted(ref<android::content::ContentResolver> resolver, jlong personId) { return call_static_method<SCAPIX_META_STRING("markAsContacted"), void>(resolver, personId); }
inline ref<android::net::Uri> Contacts_People::addToMyContactsGroup(ref<android::content::ContentResolver> resolver, jlong personId) { return call_static_method<SCAPIX_META_STRING("addToMyContactsGroup"), ref<android::net::Uri>>(resolver, personId); }
inline ref<android::net::Uri> Contacts_People::addToGroup(ref<android::content::ContentResolver> resolver, jlong personId, ref<java::lang::String> p3) { return call_static_method<SCAPIX_META_STRING("addToGroup"), ref<android::net::Uri>>(resolver, personId, p3); }
inline ref<android::net::Uri> Contacts_People::addToGroup(ref<android::content::ContentResolver> resolver, jlong personId, jlong p3) { return call_static_method<SCAPIX_META_STRING("addToGroup"), ref<android::net::Uri>>(resolver, personId, p3); }
inline ref<android::net::Uri> Contacts_People::createPersonInMyContactsGroup(ref<android::content::ContentResolver> resolver, ref<android::content::ContentValues> values) { return call_static_method<SCAPIX_META_STRING("createPersonInMyContactsGroup"), ref<android::net::Uri>>(resolver, values); }
inline ref<android::database::Cursor> Contacts_People::queryGroups(ref<android::content::ContentResolver> resolver, jlong person) { return call_static_method<SCAPIX_META_STRING("queryGroups"), ref<android::database::Cursor>>(resolver, person); }
inline void Contacts_People::setPhotoData(ref<android::content::ContentResolver> cr, ref<android::net::Uri> person, ref<link::java::array<jbyte>> data) { return call_static_method<SCAPIX_META_STRING("setPhotoData"), void>(cr, person, data); }
inline ref<java::io::InputStream> Contacts_People::openContactPhotoInputStream(ref<android::content::ContentResolver> cr, ref<android::net::Uri> person) { return call_static_method<SCAPIX_META_STRING("openContactPhotoInputStream"), ref<java::io::InputStream>>(cr, person); }
inline ref<android::graphics::Bitmap> Contacts_People::loadContactPhoto(ref<android::content::Context> context, ref<android::net::Uri> person, jint placeholderImageResource, ref<android::graphics::BitmapFactory_Options> options) { return call_static_method<SCAPIX_META_STRING("loadContactPhoto"), ref<android::graphics::Bitmap>>(context, person, placeholderImageResource, options); }

} // namespace android::provider
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_PROVIDER_CONTACTS_PEOPLE_H
