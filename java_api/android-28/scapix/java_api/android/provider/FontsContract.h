// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_PROVIDER_FONTSCONTRACT_H
#define SCAPIX_ANDROID_PROVIDER_FONTSCONTRACT_H

namespace scapix::java_api {

namespace android::content { class Context; }
namespace android::graphics { class Typeface; }
namespace android::os { class CancellationSignal; }
namespace android::os { class Handler; }
namespace android::provider { class FontRequest; }
namespace android::provider { class FontsContract_FontFamilyResult; }
namespace android::provider { class FontsContract_FontInfo; }
namespace android::provider { class FontsContract_FontRequestCallback; }
namespace android::provider { class FontsContract_Columns; }

namespace android::provider {

class FontsContract : public object_base<SCAPIX_META_STRING("android/provider/FontsContract"),
	java::lang::Object>
{
public:

	using FontRequestCallback = FontsContract_FontRequestCallback;
	using FontInfo = FontsContract_FontInfo;
	using FontFamilyResult = FontsContract_FontFamilyResult;
	using Columns = FontsContract_Columns;

	static void requestFonts(ref<android::content::Context> context, ref<android::provider::FontRequest> request, ref<android::os::Handler> handler, ref<android::os::CancellationSignal> cancellationSignal, ref<android::provider::FontsContract_FontRequestCallback> callback);
	static ref<android::provider::FontsContract_FontFamilyResult> fetchFonts(ref<android::content::Context> context, ref<android::os::CancellationSignal> cancellationSignal, ref<android::provider::FontRequest> request);
	static ref<android::graphics::Typeface> buildTypeface(ref<android::content::Context> context, ref<android::os::CancellationSignal> cancellationSignal, ref<link::java::array<android::provider::FontsContract_FontInfo>> fonts);

protected:

	FontsContract(handle_type h) : base_(h) {}

};

} // namespace android::provider
} // namespace scapix::java_api

#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/graphics/Typeface.h>
#include <scapix/java_api/android/os/CancellationSignal.h>
#include <scapix/java_api/android/os/Handler.h>
#include <scapix/java_api/android/provider/FontRequest.h>
#include <scapix/java_api/android/provider/FontsContract_FontFamilyResult.h>
#include <scapix/java_api/android/provider/FontsContract_FontInfo.h>
#include <scapix/java_api/android/provider/FontsContract_FontRequestCallback.h>

namespace scapix::java_api {
namespace android::provider {

inline void FontsContract::requestFonts(ref<android::content::Context> context, ref<android::provider::FontRequest> request, ref<android::os::Handler> handler, ref<android::os::CancellationSignal> cancellationSignal, ref<android::provider::FontsContract_FontRequestCallback> callback) { return call_static_method<SCAPIX_META_STRING("requestFonts"), void>(context, request, handler, cancellationSignal, callback); }
inline ref<android::provider::FontsContract_FontFamilyResult> FontsContract::fetchFonts(ref<android::content::Context> context, ref<android::os::CancellationSignal> cancellationSignal, ref<android::provider::FontRequest> request) { return call_static_method<SCAPIX_META_STRING("fetchFonts"), ref<android::provider::FontsContract_FontFamilyResult>>(context, cancellationSignal, request); }
inline ref<android::graphics::Typeface> FontsContract::buildTypeface(ref<android::content::Context> context, ref<android::os::CancellationSignal> cancellationSignal, ref<link::java::array<android::provider::FontsContract_FontInfo>> fonts) { return call_static_method<SCAPIX_META_STRING("buildTypeface"), ref<android::graphics::Typeface>>(context, cancellationSignal, fonts); }

} // namespace android::provider
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_PROVIDER_FONTSCONTRACT_H
