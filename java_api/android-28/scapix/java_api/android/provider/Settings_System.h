// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/provider/Settings_NameValueTable.h>

#ifndef SCAPIX_ANDROID_PROVIDER_SETTINGS_SYSTEM_H
#define SCAPIX_ANDROID_PROVIDER_SETTINGS_SYSTEM_H

namespace scapix::java_api {

namespace android::content { class ContentResolver; }
namespace android::content { class Context; }
namespace android::content::res { class Configuration; }
namespace android::net { class Uri; }
namespace java::lang { class String; }

namespace android::provider {

class Settings_System : public object_base<SCAPIX_META_STRING("android/provider/Settings$System"),
	android::provider::Settings_NameValueTable>
{
public:

	static ref<java::lang::String> ACCELEROMETER_ROTATION_();
	static ref<java::lang::String> ADB_ENABLED_();
	static ref<java::lang::String> AIRPLANE_MODE_ON_();
	static ref<java::lang::String> AIRPLANE_MODE_RADIOS_();
	static ref<java::lang::String> ALARM_ALERT_();
	static ref<java::lang::String> ALWAYS_FINISH_ACTIVITIES_();
	static ref<java::lang::String> ANDROID_ID_();
	static ref<java::lang::String> ANIMATOR_DURATION_SCALE_();
	static ref<java::lang::String> AUTO_TIME_();
	static ref<java::lang::String> AUTO_TIME_ZONE_();
	static ref<java::lang::String> BLUETOOTH_DISCOVERABILITY_();
	static ref<java::lang::String> BLUETOOTH_DISCOVERABILITY_TIMEOUT_();
	static ref<java::lang::String> BLUETOOTH_ON_();
	static ref<android::net::Uri> CONTENT_URI_();
	static ref<java::lang::String> DATA_ROAMING_();
	static ref<java::lang::String> DATE_FORMAT_();
	static ref<java::lang::String> DEBUG_APP_();
	static ref<android::net::Uri> DEFAULT_ALARM_ALERT_URI_();
	static ref<android::net::Uri> DEFAULT_NOTIFICATION_URI_();
	static ref<android::net::Uri> DEFAULT_RINGTONE_URI_();
	static ref<java::lang::String> DEVICE_PROVISIONED_();
	static ref<java::lang::String> DIM_SCREEN_();
	static ref<java::lang::String> DTMF_TONE_TYPE_WHEN_DIALING_();
	static ref<java::lang::String> DTMF_TONE_WHEN_DIALING_();
	static ref<java::lang::String> END_BUTTON_BEHAVIOR_();
	static ref<java::lang::String> FONT_SCALE_();
	static ref<java::lang::String> HAPTIC_FEEDBACK_ENABLED_();
	static ref<java::lang::String> HTTP_PROXY_();
	static ref<java::lang::String> INSTALL_NON_MARKET_APPS_();
	static ref<java::lang::String> LOCATION_PROVIDERS_ALLOWED_();
	static ref<java::lang::String> LOCK_PATTERN_ENABLED_();
	static ref<java::lang::String> LOCK_PATTERN_TACTILE_FEEDBACK_ENABLED_();
	static ref<java::lang::String> LOCK_PATTERN_VISIBLE_();
	static ref<java::lang::String> LOGGING_ID_();
	static ref<java::lang::String> MODE_RINGER_();
	static ref<java::lang::String> MODE_RINGER_STREAMS_AFFECTED_();
	static ref<java::lang::String> MUTE_STREAMS_AFFECTED_();
	static ref<java::lang::String> NETWORK_PREFERENCE_();
	static ref<java::lang::String> NEXT_ALARM_FORMATTED_();
	static ref<java::lang::String> NOTIFICATION_SOUND_();
	static ref<java::lang::String> PARENTAL_CONTROL_ENABLED_();
	static ref<java::lang::String> PARENTAL_CONTROL_LAST_UPDATE_();
	static ref<java::lang::String> PARENTAL_CONTROL_REDIRECT_URL_();
	static ref<java::lang::String> RADIO_BLUETOOTH_();
	static ref<java::lang::String> RADIO_CELL_();
	static ref<java::lang::String> RADIO_NFC_();
	static ref<java::lang::String> RADIO_WIFI_();
	static ref<java::lang::String> RINGTONE_();
	static ref<java::lang::String> SCREEN_BRIGHTNESS_();
	static ref<java::lang::String> SCREEN_BRIGHTNESS_MODE_();
	static jint SCREEN_BRIGHTNESS_MODE_AUTOMATIC_();
	static jint SCREEN_BRIGHTNESS_MODE_MANUAL_();
	static ref<java::lang::String> SCREEN_OFF_TIMEOUT_();
	static ref<java::lang::String> SETTINGS_CLASSNAME_();
	static ref<java::lang::String> SETUP_WIZARD_HAS_RUN_();
	static ref<java::lang::String> SHOW_GTALK_SERVICE_STATUS_();
	static ref<java::lang::String> SHOW_PROCESSES_();
	static ref<java::lang::String> SHOW_WEB_SUGGESTIONS_();
	static ref<java::lang::String> SOUND_EFFECTS_ENABLED_();
	static ref<java::lang::String> STAY_ON_WHILE_PLUGGED_IN_();
	static ref<java::lang::String> TEXT_AUTO_CAPS_();
	static ref<java::lang::String> TEXT_AUTO_PUNCTUATE_();
	static ref<java::lang::String> TEXT_AUTO_REPLACE_();
	static ref<java::lang::String> TEXT_SHOW_PASSWORD_();
	static ref<java::lang::String> TIME_12_24_();
	static ref<java::lang::String> TRANSITION_ANIMATION_SCALE_();
	static ref<java::lang::String> USB_MASS_STORAGE_ENABLED_();
	static ref<java::lang::String> USER_ROTATION_();
	static ref<java::lang::String> USE_GOOGLE_MAIL_();
	static ref<java::lang::String> VIBRATE_ON_();
	static ref<java::lang::String> VIBRATE_WHEN_RINGING_();
	static ref<java::lang::String> WAIT_FOR_DEBUGGER_();
	static ref<java::lang::String> WALLPAPER_ACTIVITY_();
	static ref<java::lang::String> WIFI_MAX_DHCP_RETRY_COUNT_();
	static ref<java::lang::String> WIFI_MOBILE_DATA_TRANSITION_WAKELOCK_TIMEOUT_MS_();
	static ref<java::lang::String> WIFI_NETWORKS_AVAILABLE_NOTIFICATION_ON_();
	static ref<java::lang::String> WIFI_NETWORKS_AVAILABLE_REPEAT_DELAY_();
	static ref<java::lang::String> WIFI_NUM_OPEN_NETWORKS_KEPT_();
	static ref<java::lang::String> WIFI_ON_();
	static ref<java::lang::String> WIFI_SLEEP_POLICY_();
	static jint WIFI_SLEEP_POLICY_DEFAULT_();
	static jint WIFI_SLEEP_POLICY_NEVER_();
	static jint WIFI_SLEEP_POLICY_NEVER_WHILE_PLUGGED_();
	static ref<java::lang::String> WIFI_STATIC_DNS1_();
	static ref<java::lang::String> WIFI_STATIC_DNS2_();
	static ref<java::lang::String> WIFI_STATIC_GATEWAY_();
	static ref<java::lang::String> WIFI_STATIC_IP_();
	static ref<java::lang::String> WIFI_STATIC_NETMASK_();
	static ref<java::lang::String> WIFI_USE_STATIC_IP_();
	static ref<java::lang::String> WIFI_WATCHDOG_ACCEPTABLE_PACKET_LOSS_PERCENTAGE_();
	static ref<java::lang::String> WIFI_WATCHDOG_AP_COUNT_();
	static ref<java::lang::String> WIFI_WATCHDOG_BACKGROUND_CHECK_DELAY_MS_();
	static ref<java::lang::String> WIFI_WATCHDOG_BACKGROUND_CHECK_ENABLED_();
	static ref<java::lang::String> WIFI_WATCHDOG_BACKGROUND_CHECK_TIMEOUT_MS_();
	static ref<java::lang::String> WIFI_WATCHDOG_INITIAL_IGNORED_PING_COUNT_();
	static ref<java::lang::String> WIFI_WATCHDOG_MAX_AP_CHECKS_();
	static ref<java::lang::String> WIFI_WATCHDOG_ON_();
	static ref<java::lang::String> WIFI_WATCHDOG_PING_COUNT_();
	static ref<java::lang::String> WIFI_WATCHDOG_PING_DELAY_MS_();
	static ref<java::lang::String> WIFI_WATCHDOG_PING_TIMEOUT_MS_();
	static ref<java::lang::String> WINDOW_ANIMATION_SCALE_();

	static ref<Settings_System> new_object();
	static ref<java::lang::String> getString(ref<android::content::ContentResolver> resolver, ref<java::lang::String> name);
	static jboolean putString(ref<android::content::ContentResolver> resolver, ref<java::lang::String> name, ref<java::lang::String> value);
	static ref<android::net::Uri> getUriFor(ref<java::lang::String> name);
	static jint getInt(ref<android::content::ContentResolver> cr, ref<java::lang::String> name, jint def);
	static jint getInt(ref<android::content::ContentResolver> cr, ref<java::lang::String> name);
	static jboolean putInt(ref<android::content::ContentResolver> cr, ref<java::lang::String> name, jint value);
	static jlong getLong(ref<android::content::ContentResolver> cr, ref<java::lang::String> name, jlong def);
	static jlong getLong(ref<android::content::ContentResolver> cr, ref<java::lang::String> name);
	static jboolean putLong(ref<android::content::ContentResolver> cr, ref<java::lang::String> name, jlong value);
	static jfloat getFloat(ref<android::content::ContentResolver> cr, ref<java::lang::String> name, jfloat def);
	static jfloat getFloat(ref<android::content::ContentResolver> cr, ref<java::lang::String> name);
	static jboolean putFloat(ref<android::content::ContentResolver> cr, ref<java::lang::String> name, jfloat value);
	static void getConfiguration(ref<android::content::ContentResolver> cr, ref<android::content::res::Configuration> outConfig);
	static jboolean putConfiguration(ref<android::content::ContentResolver> cr, ref<android::content::res::Configuration> config);
	static jboolean getShowGTalkServiceStatus(ref<android::content::ContentResolver> cr);
	static void setShowGTalkServiceStatus(ref<android::content::ContentResolver> cr, jboolean flag);
	static jboolean canWrite(ref<android::content::Context> context);

protected:

	Settings_System(handle_type h) : base_(h) {}

};

} // namespace android::provider
} // namespace scapix::java_api

#include <scapix/java_api/android/content/ContentResolver.h>
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/content/res/Configuration.h>
#include <scapix/java_api/android/net/Uri.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::provider {

inline ref<java::lang::String> Settings_System::ACCELEROMETER_ROTATION_() { return get_static_field<SCAPIX_META_STRING("ACCELEROMETER_ROTATION"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::ADB_ENABLED_() { return get_static_field<SCAPIX_META_STRING("ADB_ENABLED"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::AIRPLANE_MODE_ON_() { return get_static_field<SCAPIX_META_STRING("AIRPLANE_MODE_ON"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::AIRPLANE_MODE_RADIOS_() { return get_static_field<SCAPIX_META_STRING("AIRPLANE_MODE_RADIOS"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::ALARM_ALERT_() { return get_static_field<SCAPIX_META_STRING("ALARM_ALERT"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::ALWAYS_FINISH_ACTIVITIES_() { return get_static_field<SCAPIX_META_STRING("ALWAYS_FINISH_ACTIVITIES"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::ANDROID_ID_() { return get_static_field<SCAPIX_META_STRING("ANDROID_ID"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::ANIMATOR_DURATION_SCALE_() { return get_static_field<SCAPIX_META_STRING("ANIMATOR_DURATION_SCALE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::AUTO_TIME_() { return get_static_field<SCAPIX_META_STRING("AUTO_TIME"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::AUTO_TIME_ZONE_() { return get_static_field<SCAPIX_META_STRING("AUTO_TIME_ZONE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::BLUETOOTH_DISCOVERABILITY_() { return get_static_field<SCAPIX_META_STRING("BLUETOOTH_DISCOVERABILITY"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::BLUETOOTH_DISCOVERABILITY_TIMEOUT_() { return get_static_field<SCAPIX_META_STRING("BLUETOOTH_DISCOVERABILITY_TIMEOUT"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::BLUETOOTH_ON_() { return get_static_field<SCAPIX_META_STRING("BLUETOOTH_ON"), ref<java::lang::String>>(); }
inline ref<android::net::Uri> Settings_System::CONTENT_URI_() { return get_static_field<SCAPIX_META_STRING("CONTENT_URI"), ref<android::net::Uri>>(); }
inline ref<java::lang::String> Settings_System::DATA_ROAMING_() { return get_static_field<SCAPIX_META_STRING("DATA_ROAMING"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::DATE_FORMAT_() { return get_static_field<SCAPIX_META_STRING("DATE_FORMAT"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::DEBUG_APP_() { return get_static_field<SCAPIX_META_STRING("DEBUG_APP"), ref<java::lang::String>>(); }
inline ref<android::net::Uri> Settings_System::DEFAULT_ALARM_ALERT_URI_() { return get_static_field<SCAPIX_META_STRING("DEFAULT_ALARM_ALERT_URI"), ref<android::net::Uri>>(); }
inline ref<android::net::Uri> Settings_System::DEFAULT_NOTIFICATION_URI_() { return get_static_field<SCAPIX_META_STRING("DEFAULT_NOTIFICATION_URI"), ref<android::net::Uri>>(); }
inline ref<android::net::Uri> Settings_System::DEFAULT_RINGTONE_URI_() { return get_static_field<SCAPIX_META_STRING("DEFAULT_RINGTONE_URI"), ref<android::net::Uri>>(); }
inline ref<java::lang::String> Settings_System::DEVICE_PROVISIONED_() { return get_static_field<SCAPIX_META_STRING("DEVICE_PROVISIONED"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::DIM_SCREEN_() { return get_static_field<SCAPIX_META_STRING("DIM_SCREEN"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::DTMF_TONE_TYPE_WHEN_DIALING_() { return get_static_field<SCAPIX_META_STRING("DTMF_TONE_TYPE_WHEN_DIALING"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::DTMF_TONE_WHEN_DIALING_() { return get_static_field<SCAPIX_META_STRING("DTMF_TONE_WHEN_DIALING"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::END_BUTTON_BEHAVIOR_() { return get_static_field<SCAPIX_META_STRING("END_BUTTON_BEHAVIOR"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::FONT_SCALE_() { return get_static_field<SCAPIX_META_STRING("FONT_SCALE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::HAPTIC_FEEDBACK_ENABLED_() { return get_static_field<SCAPIX_META_STRING("HAPTIC_FEEDBACK_ENABLED"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::HTTP_PROXY_() { return get_static_field<SCAPIX_META_STRING("HTTP_PROXY"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::INSTALL_NON_MARKET_APPS_() { return get_static_field<SCAPIX_META_STRING("INSTALL_NON_MARKET_APPS"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::LOCATION_PROVIDERS_ALLOWED_() { return get_static_field<SCAPIX_META_STRING("LOCATION_PROVIDERS_ALLOWED"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::LOCK_PATTERN_ENABLED_() { return get_static_field<SCAPIX_META_STRING("LOCK_PATTERN_ENABLED"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::LOCK_PATTERN_TACTILE_FEEDBACK_ENABLED_() { return get_static_field<SCAPIX_META_STRING("LOCK_PATTERN_TACTILE_FEEDBACK_ENABLED"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::LOCK_PATTERN_VISIBLE_() { return get_static_field<SCAPIX_META_STRING("LOCK_PATTERN_VISIBLE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::LOGGING_ID_() { return get_static_field<SCAPIX_META_STRING("LOGGING_ID"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::MODE_RINGER_() { return get_static_field<SCAPIX_META_STRING("MODE_RINGER"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::MODE_RINGER_STREAMS_AFFECTED_() { return get_static_field<SCAPIX_META_STRING("MODE_RINGER_STREAMS_AFFECTED"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::MUTE_STREAMS_AFFECTED_() { return get_static_field<SCAPIX_META_STRING("MUTE_STREAMS_AFFECTED"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::NETWORK_PREFERENCE_() { return get_static_field<SCAPIX_META_STRING("NETWORK_PREFERENCE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::NEXT_ALARM_FORMATTED_() { return get_static_field<SCAPIX_META_STRING("NEXT_ALARM_FORMATTED"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::NOTIFICATION_SOUND_() { return get_static_field<SCAPIX_META_STRING("NOTIFICATION_SOUND"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::PARENTAL_CONTROL_ENABLED_() { return get_static_field<SCAPIX_META_STRING("PARENTAL_CONTROL_ENABLED"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::PARENTAL_CONTROL_LAST_UPDATE_() { return get_static_field<SCAPIX_META_STRING("PARENTAL_CONTROL_LAST_UPDATE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::PARENTAL_CONTROL_REDIRECT_URL_() { return get_static_field<SCAPIX_META_STRING("PARENTAL_CONTROL_REDIRECT_URL"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::RADIO_BLUETOOTH_() { return get_static_field<SCAPIX_META_STRING("RADIO_BLUETOOTH"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::RADIO_CELL_() { return get_static_field<SCAPIX_META_STRING("RADIO_CELL"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::RADIO_NFC_() { return get_static_field<SCAPIX_META_STRING("RADIO_NFC"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::RADIO_WIFI_() { return get_static_field<SCAPIX_META_STRING("RADIO_WIFI"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::RINGTONE_() { return get_static_field<SCAPIX_META_STRING("RINGTONE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::SCREEN_BRIGHTNESS_() { return get_static_field<SCAPIX_META_STRING("SCREEN_BRIGHTNESS"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::SCREEN_BRIGHTNESS_MODE_() { return get_static_field<SCAPIX_META_STRING("SCREEN_BRIGHTNESS_MODE"), ref<java::lang::String>>(); }
inline jint Settings_System::SCREEN_BRIGHTNESS_MODE_AUTOMATIC_() { return get_static_field<SCAPIX_META_STRING("SCREEN_BRIGHTNESS_MODE_AUTOMATIC"), jint>(); }
inline jint Settings_System::SCREEN_BRIGHTNESS_MODE_MANUAL_() { return get_static_field<SCAPIX_META_STRING("SCREEN_BRIGHTNESS_MODE_MANUAL"), jint>(); }
inline ref<java::lang::String> Settings_System::SCREEN_OFF_TIMEOUT_() { return get_static_field<SCAPIX_META_STRING("SCREEN_OFF_TIMEOUT"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::SETTINGS_CLASSNAME_() { return get_static_field<SCAPIX_META_STRING("SETTINGS_CLASSNAME"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::SETUP_WIZARD_HAS_RUN_() { return get_static_field<SCAPIX_META_STRING("SETUP_WIZARD_HAS_RUN"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::SHOW_GTALK_SERVICE_STATUS_() { return get_static_field<SCAPIX_META_STRING("SHOW_GTALK_SERVICE_STATUS"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::SHOW_PROCESSES_() { return get_static_field<SCAPIX_META_STRING("SHOW_PROCESSES"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::SHOW_WEB_SUGGESTIONS_() { return get_static_field<SCAPIX_META_STRING("SHOW_WEB_SUGGESTIONS"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::SOUND_EFFECTS_ENABLED_() { return get_static_field<SCAPIX_META_STRING("SOUND_EFFECTS_ENABLED"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::STAY_ON_WHILE_PLUGGED_IN_() { return get_static_field<SCAPIX_META_STRING("STAY_ON_WHILE_PLUGGED_IN"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::TEXT_AUTO_CAPS_() { return get_static_field<SCAPIX_META_STRING("TEXT_AUTO_CAPS"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::TEXT_AUTO_PUNCTUATE_() { return get_static_field<SCAPIX_META_STRING("TEXT_AUTO_PUNCTUATE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::TEXT_AUTO_REPLACE_() { return get_static_field<SCAPIX_META_STRING("TEXT_AUTO_REPLACE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::TEXT_SHOW_PASSWORD_() { return get_static_field<SCAPIX_META_STRING("TEXT_SHOW_PASSWORD"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::TIME_12_24_() { return get_static_field<SCAPIX_META_STRING("TIME_12_24"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::TRANSITION_ANIMATION_SCALE_() { return get_static_field<SCAPIX_META_STRING("TRANSITION_ANIMATION_SCALE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::USB_MASS_STORAGE_ENABLED_() { return get_static_field<SCAPIX_META_STRING("USB_MASS_STORAGE_ENABLED"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::USER_ROTATION_() { return get_static_field<SCAPIX_META_STRING("USER_ROTATION"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::USE_GOOGLE_MAIL_() { return get_static_field<SCAPIX_META_STRING("USE_GOOGLE_MAIL"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::VIBRATE_ON_() { return get_static_field<SCAPIX_META_STRING("VIBRATE_ON"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::VIBRATE_WHEN_RINGING_() { return get_static_field<SCAPIX_META_STRING("VIBRATE_WHEN_RINGING"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::WAIT_FOR_DEBUGGER_() { return get_static_field<SCAPIX_META_STRING("WAIT_FOR_DEBUGGER"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::WALLPAPER_ACTIVITY_() { return get_static_field<SCAPIX_META_STRING("WALLPAPER_ACTIVITY"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::WIFI_MAX_DHCP_RETRY_COUNT_() { return get_static_field<SCAPIX_META_STRING("WIFI_MAX_DHCP_RETRY_COUNT"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::WIFI_MOBILE_DATA_TRANSITION_WAKELOCK_TIMEOUT_MS_() { return get_static_field<SCAPIX_META_STRING("WIFI_MOBILE_DATA_TRANSITION_WAKELOCK_TIMEOUT_MS"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::WIFI_NETWORKS_AVAILABLE_NOTIFICATION_ON_() { return get_static_field<SCAPIX_META_STRING("WIFI_NETWORKS_AVAILABLE_NOTIFICATION_ON"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::WIFI_NETWORKS_AVAILABLE_REPEAT_DELAY_() { return get_static_field<SCAPIX_META_STRING("WIFI_NETWORKS_AVAILABLE_REPEAT_DELAY"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::WIFI_NUM_OPEN_NETWORKS_KEPT_() { return get_static_field<SCAPIX_META_STRING("WIFI_NUM_OPEN_NETWORKS_KEPT"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::WIFI_ON_() { return get_static_field<SCAPIX_META_STRING("WIFI_ON"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::WIFI_SLEEP_POLICY_() { return get_static_field<SCAPIX_META_STRING("WIFI_SLEEP_POLICY"), ref<java::lang::String>>(); }
inline jint Settings_System::WIFI_SLEEP_POLICY_DEFAULT_() { return get_static_field<SCAPIX_META_STRING("WIFI_SLEEP_POLICY_DEFAULT"), jint>(); }
inline jint Settings_System::WIFI_SLEEP_POLICY_NEVER_() { return get_static_field<SCAPIX_META_STRING("WIFI_SLEEP_POLICY_NEVER"), jint>(); }
inline jint Settings_System::WIFI_SLEEP_POLICY_NEVER_WHILE_PLUGGED_() { return get_static_field<SCAPIX_META_STRING("WIFI_SLEEP_POLICY_NEVER_WHILE_PLUGGED"), jint>(); }
inline ref<java::lang::String> Settings_System::WIFI_STATIC_DNS1_() { return get_static_field<SCAPIX_META_STRING("WIFI_STATIC_DNS1"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::WIFI_STATIC_DNS2_() { return get_static_field<SCAPIX_META_STRING("WIFI_STATIC_DNS2"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::WIFI_STATIC_GATEWAY_() { return get_static_field<SCAPIX_META_STRING("WIFI_STATIC_GATEWAY"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::WIFI_STATIC_IP_() { return get_static_field<SCAPIX_META_STRING("WIFI_STATIC_IP"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::WIFI_STATIC_NETMASK_() { return get_static_field<SCAPIX_META_STRING("WIFI_STATIC_NETMASK"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::WIFI_USE_STATIC_IP_() { return get_static_field<SCAPIX_META_STRING("WIFI_USE_STATIC_IP"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::WIFI_WATCHDOG_ACCEPTABLE_PACKET_LOSS_PERCENTAGE_() { return get_static_field<SCAPIX_META_STRING("WIFI_WATCHDOG_ACCEPTABLE_PACKET_LOSS_PERCENTAGE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::WIFI_WATCHDOG_AP_COUNT_() { return get_static_field<SCAPIX_META_STRING("WIFI_WATCHDOG_AP_COUNT"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::WIFI_WATCHDOG_BACKGROUND_CHECK_DELAY_MS_() { return get_static_field<SCAPIX_META_STRING("WIFI_WATCHDOG_BACKGROUND_CHECK_DELAY_MS"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::WIFI_WATCHDOG_BACKGROUND_CHECK_ENABLED_() { return get_static_field<SCAPIX_META_STRING("WIFI_WATCHDOG_BACKGROUND_CHECK_ENABLED"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::WIFI_WATCHDOG_BACKGROUND_CHECK_TIMEOUT_MS_() { return get_static_field<SCAPIX_META_STRING("WIFI_WATCHDOG_BACKGROUND_CHECK_TIMEOUT_MS"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::WIFI_WATCHDOG_INITIAL_IGNORED_PING_COUNT_() { return get_static_field<SCAPIX_META_STRING("WIFI_WATCHDOG_INITIAL_IGNORED_PING_COUNT"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::WIFI_WATCHDOG_MAX_AP_CHECKS_() { return get_static_field<SCAPIX_META_STRING("WIFI_WATCHDOG_MAX_AP_CHECKS"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::WIFI_WATCHDOG_ON_() { return get_static_field<SCAPIX_META_STRING("WIFI_WATCHDOG_ON"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::WIFI_WATCHDOG_PING_COUNT_() { return get_static_field<SCAPIX_META_STRING("WIFI_WATCHDOG_PING_COUNT"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::WIFI_WATCHDOG_PING_DELAY_MS_() { return get_static_field<SCAPIX_META_STRING("WIFI_WATCHDOG_PING_DELAY_MS"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::WIFI_WATCHDOG_PING_TIMEOUT_MS_() { return get_static_field<SCAPIX_META_STRING("WIFI_WATCHDOG_PING_TIMEOUT_MS"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Settings_System::WINDOW_ANIMATION_SCALE_() { return get_static_field<SCAPIX_META_STRING("WINDOW_ANIMATION_SCALE"), ref<java::lang::String>>(); }
inline ref<Settings_System> Settings_System::new_object() { return base_::new_object(); }
inline ref<java::lang::String> Settings_System::getString(ref<android::content::ContentResolver> resolver, ref<java::lang::String> name) { return call_static_method<SCAPIX_META_STRING("getString"), ref<java::lang::String>>(resolver, name); }
inline jboolean Settings_System::putString(ref<android::content::ContentResolver> resolver, ref<java::lang::String> name, ref<java::lang::String> value) { return call_static_method<SCAPIX_META_STRING("putString"), jboolean>(resolver, name, value); }
inline ref<android::net::Uri> Settings_System::getUriFor(ref<java::lang::String> name) { return call_static_method<SCAPIX_META_STRING("getUriFor"), ref<android::net::Uri>>(name); }
inline jint Settings_System::getInt(ref<android::content::ContentResolver> cr, ref<java::lang::String> name, jint def) { return call_static_method<SCAPIX_META_STRING("getInt"), jint>(cr, name, def); }
inline jint Settings_System::getInt(ref<android::content::ContentResolver> cr, ref<java::lang::String> name) { return call_static_method<SCAPIX_META_STRING("getInt"), jint>(cr, name); }
inline jboolean Settings_System::putInt(ref<android::content::ContentResolver> cr, ref<java::lang::String> name, jint value) { return call_static_method<SCAPIX_META_STRING("putInt"), jboolean>(cr, name, value); }
inline jlong Settings_System::getLong(ref<android::content::ContentResolver> cr, ref<java::lang::String> name, jlong def) { return call_static_method<SCAPIX_META_STRING("getLong"), jlong>(cr, name, def); }
inline jlong Settings_System::getLong(ref<android::content::ContentResolver> cr, ref<java::lang::String> name) { return call_static_method<SCAPIX_META_STRING("getLong"), jlong>(cr, name); }
inline jboolean Settings_System::putLong(ref<android::content::ContentResolver> cr, ref<java::lang::String> name, jlong value) { return call_static_method<SCAPIX_META_STRING("putLong"), jboolean>(cr, name, value); }
inline jfloat Settings_System::getFloat(ref<android::content::ContentResolver> cr, ref<java::lang::String> name, jfloat def) { return call_static_method<SCAPIX_META_STRING("getFloat"), jfloat>(cr, name, def); }
inline jfloat Settings_System::getFloat(ref<android::content::ContentResolver> cr, ref<java::lang::String> name) { return call_static_method<SCAPIX_META_STRING("getFloat"), jfloat>(cr, name); }
inline jboolean Settings_System::putFloat(ref<android::content::ContentResolver> cr, ref<java::lang::String> name, jfloat value) { return call_static_method<SCAPIX_META_STRING("putFloat"), jboolean>(cr, name, value); }
inline void Settings_System::getConfiguration(ref<android::content::ContentResolver> cr, ref<android::content::res::Configuration> outConfig) { return call_static_method<SCAPIX_META_STRING("getConfiguration"), void>(cr, outConfig); }
inline jboolean Settings_System::putConfiguration(ref<android::content::ContentResolver> cr, ref<android::content::res::Configuration> config) { return call_static_method<SCAPIX_META_STRING("putConfiguration"), jboolean>(cr, config); }
inline jboolean Settings_System::getShowGTalkServiceStatus(ref<android::content::ContentResolver> cr) { return call_static_method<SCAPIX_META_STRING("getShowGTalkServiceStatus"), jboolean>(cr); }
inline void Settings_System::setShowGTalkServiceStatus(ref<android::content::ContentResolver> cr, jboolean flag) { return call_static_method<SCAPIX_META_STRING("setShowGTalkServiceStatus"), void>(cr, flag); }
inline jboolean Settings_System::canWrite(ref<android::content::Context> context) { return call_static_method<SCAPIX_META_STRING("canWrite"), jboolean>(context); }

} // namespace android::provider
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_PROVIDER_SETTINGS_SYSTEM_H
