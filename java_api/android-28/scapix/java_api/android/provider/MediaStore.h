// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_PROVIDER_MEDIASTORE_H
#define SCAPIX_ANDROID_PROVIDER_MEDIASTORE_H

namespace scapix::java_api {

namespace android::content { class Context; }
namespace android::net { class Uri; }
namespace java::lang { class String; }
namespace android::provider { class MediaStore_Video; }
namespace android::provider { class MediaStore_MediaColumns; }
namespace android::provider { class MediaStore_Images; }
namespace android::provider { class MediaStore_Files; }
namespace android::provider { class MediaStore_Audio; }

namespace android::provider {

class MediaStore : public object_base<SCAPIX_META_STRING("android/provider/MediaStore"),
	java::lang::Object>
{
public:

	using Video = MediaStore_Video;
	using MediaColumns = MediaStore_MediaColumns;
	using Images = MediaStore_Images;
	using Files = MediaStore_Files;
	using Audio = MediaStore_Audio;

	static ref<java::lang::String> ACTION_IMAGE_CAPTURE_();
	static ref<java::lang::String> ACTION_IMAGE_CAPTURE_SECURE_();
	static ref<java::lang::String> ACTION_VIDEO_CAPTURE_();
	static ref<java::lang::String> AUTHORITY_();
	static ref<java::lang::String> EXTRA_DURATION_LIMIT_();
	static ref<java::lang::String> EXTRA_FINISH_ON_COMPLETION_();
	static ref<java::lang::String> EXTRA_FULL_SCREEN_();
	static ref<java::lang::String> EXTRA_MEDIA_ALBUM_();
	static ref<java::lang::String> EXTRA_MEDIA_ARTIST_();
	static ref<java::lang::String> EXTRA_MEDIA_FOCUS_();
	static ref<java::lang::String> EXTRA_MEDIA_GENRE_();
	static ref<java::lang::String> EXTRA_MEDIA_PLAYLIST_();
	static ref<java::lang::String> EXTRA_MEDIA_RADIO_CHANNEL_();
	static ref<java::lang::String> EXTRA_MEDIA_TITLE_();
	static ref<java::lang::String> EXTRA_OUTPUT_();
	static ref<java::lang::String> EXTRA_SCREEN_ORIENTATION_();
	static ref<java::lang::String> EXTRA_SHOW_ACTION_ICONS_();
	static ref<java::lang::String> EXTRA_SIZE_LIMIT_();
	static ref<java::lang::String> EXTRA_VIDEO_QUALITY_();
	static ref<java::lang::String> INTENT_ACTION_MEDIA_PLAY_FROM_SEARCH_();
	static ref<java::lang::String> INTENT_ACTION_MEDIA_SEARCH_();
	static ref<java::lang::String> INTENT_ACTION_MUSIC_PLAYER_();
	static ref<java::lang::String> INTENT_ACTION_STILL_IMAGE_CAMERA_();
	static ref<java::lang::String> INTENT_ACTION_STILL_IMAGE_CAMERA_SECURE_();
	static ref<java::lang::String> INTENT_ACTION_TEXT_OPEN_FROM_SEARCH_();
	static ref<java::lang::String> INTENT_ACTION_VIDEO_CAMERA_();
	static ref<java::lang::String> INTENT_ACTION_VIDEO_PLAY_FROM_SEARCH_();
	static ref<java::lang::String> MEDIA_IGNORE_FILENAME_();
	static ref<java::lang::String> MEDIA_SCANNER_VOLUME_();
	static ref<java::lang::String> META_DATA_STILL_IMAGE_CAMERA_PREWARM_SERVICE_();
	static ref<java::lang::String> UNKNOWN_STRING_();

	static ref<MediaStore> new_object();
	static ref<android::net::Uri> getMediaScannerUri();
	static ref<java::lang::String> getVersion(ref<android::content::Context> context);
	static ref<android::net::Uri> getDocumentUri(ref<android::content::Context> context, ref<android::net::Uri> mediaUri);

protected:

	MediaStore(handle_type h) : base_(h) {}

};

} // namespace android::provider
} // namespace scapix::java_api

#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/net/Uri.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::provider {

inline ref<java::lang::String> MediaStore::ACTION_IMAGE_CAPTURE_() { return get_static_field<SCAPIX_META_STRING("ACTION_IMAGE_CAPTURE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaStore::ACTION_IMAGE_CAPTURE_SECURE_() { return get_static_field<SCAPIX_META_STRING("ACTION_IMAGE_CAPTURE_SECURE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaStore::ACTION_VIDEO_CAPTURE_() { return get_static_field<SCAPIX_META_STRING("ACTION_VIDEO_CAPTURE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaStore::AUTHORITY_() { return get_static_field<SCAPIX_META_STRING("AUTHORITY"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaStore::EXTRA_DURATION_LIMIT_() { return get_static_field<SCAPIX_META_STRING("EXTRA_DURATION_LIMIT"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaStore::EXTRA_FINISH_ON_COMPLETION_() { return get_static_field<SCAPIX_META_STRING("EXTRA_FINISH_ON_COMPLETION"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaStore::EXTRA_FULL_SCREEN_() { return get_static_field<SCAPIX_META_STRING("EXTRA_FULL_SCREEN"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaStore::EXTRA_MEDIA_ALBUM_() { return get_static_field<SCAPIX_META_STRING("EXTRA_MEDIA_ALBUM"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaStore::EXTRA_MEDIA_ARTIST_() { return get_static_field<SCAPIX_META_STRING("EXTRA_MEDIA_ARTIST"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaStore::EXTRA_MEDIA_FOCUS_() { return get_static_field<SCAPIX_META_STRING("EXTRA_MEDIA_FOCUS"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaStore::EXTRA_MEDIA_GENRE_() { return get_static_field<SCAPIX_META_STRING("EXTRA_MEDIA_GENRE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaStore::EXTRA_MEDIA_PLAYLIST_() { return get_static_field<SCAPIX_META_STRING("EXTRA_MEDIA_PLAYLIST"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaStore::EXTRA_MEDIA_RADIO_CHANNEL_() { return get_static_field<SCAPIX_META_STRING("EXTRA_MEDIA_RADIO_CHANNEL"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaStore::EXTRA_MEDIA_TITLE_() { return get_static_field<SCAPIX_META_STRING("EXTRA_MEDIA_TITLE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaStore::EXTRA_OUTPUT_() { return get_static_field<SCAPIX_META_STRING("EXTRA_OUTPUT"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaStore::EXTRA_SCREEN_ORIENTATION_() { return get_static_field<SCAPIX_META_STRING("EXTRA_SCREEN_ORIENTATION"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaStore::EXTRA_SHOW_ACTION_ICONS_() { return get_static_field<SCAPIX_META_STRING("EXTRA_SHOW_ACTION_ICONS"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaStore::EXTRA_SIZE_LIMIT_() { return get_static_field<SCAPIX_META_STRING("EXTRA_SIZE_LIMIT"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaStore::EXTRA_VIDEO_QUALITY_() { return get_static_field<SCAPIX_META_STRING("EXTRA_VIDEO_QUALITY"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaStore::INTENT_ACTION_MEDIA_PLAY_FROM_SEARCH_() { return get_static_field<SCAPIX_META_STRING("INTENT_ACTION_MEDIA_PLAY_FROM_SEARCH"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaStore::INTENT_ACTION_MEDIA_SEARCH_() { return get_static_field<SCAPIX_META_STRING("INTENT_ACTION_MEDIA_SEARCH"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaStore::INTENT_ACTION_MUSIC_PLAYER_() { return get_static_field<SCAPIX_META_STRING("INTENT_ACTION_MUSIC_PLAYER"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaStore::INTENT_ACTION_STILL_IMAGE_CAMERA_() { return get_static_field<SCAPIX_META_STRING("INTENT_ACTION_STILL_IMAGE_CAMERA"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaStore::INTENT_ACTION_STILL_IMAGE_CAMERA_SECURE_() { return get_static_field<SCAPIX_META_STRING("INTENT_ACTION_STILL_IMAGE_CAMERA_SECURE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaStore::INTENT_ACTION_TEXT_OPEN_FROM_SEARCH_() { return get_static_field<SCAPIX_META_STRING("INTENT_ACTION_TEXT_OPEN_FROM_SEARCH"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaStore::INTENT_ACTION_VIDEO_CAMERA_() { return get_static_field<SCAPIX_META_STRING("INTENT_ACTION_VIDEO_CAMERA"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaStore::INTENT_ACTION_VIDEO_PLAY_FROM_SEARCH_() { return get_static_field<SCAPIX_META_STRING("INTENT_ACTION_VIDEO_PLAY_FROM_SEARCH"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaStore::MEDIA_IGNORE_FILENAME_() { return get_static_field<SCAPIX_META_STRING("MEDIA_IGNORE_FILENAME"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaStore::MEDIA_SCANNER_VOLUME_() { return get_static_field<SCAPIX_META_STRING("MEDIA_SCANNER_VOLUME"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaStore::META_DATA_STILL_IMAGE_CAMERA_PREWARM_SERVICE_() { return get_static_field<SCAPIX_META_STRING("META_DATA_STILL_IMAGE_CAMERA_PREWARM_SERVICE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaStore::UNKNOWN_STRING_() { return get_static_field<SCAPIX_META_STRING("UNKNOWN_STRING"), ref<java::lang::String>>(); }
inline ref<MediaStore> MediaStore::new_object() { return base_::new_object(); }
inline ref<android::net::Uri> MediaStore::getMediaScannerUri() { return call_static_method<SCAPIX_META_STRING("getMediaScannerUri"), ref<android::net::Uri>>(); }
inline ref<java::lang::String> MediaStore::getVersion(ref<android::content::Context> context) { return call_static_method<SCAPIX_META_STRING("getVersion"), ref<java::lang::String>>(context); }
inline ref<android::net::Uri> MediaStore::getDocumentUri(ref<android::content::Context> context, ref<android::net::Uri> mediaUri) { return call_static_method<SCAPIX_META_STRING("getDocumentUri"), ref<android::net::Uri>>(context, mediaUri); }

} // namespace android::provider
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_PROVIDER_MEDIASTORE_H
