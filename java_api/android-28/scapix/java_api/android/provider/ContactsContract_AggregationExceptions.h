// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/provider/BaseColumns.h>

#ifndef SCAPIX_ANDROID_PROVIDER_CONTACTSCONTRACT_AGGREGATIONEXCEPTIONS_H
#define SCAPIX_ANDROID_PROVIDER_CONTACTSCONTRACT_AGGREGATIONEXCEPTIONS_H

namespace scapix::java_api {

namespace android::net { class Uri; }
namespace java::lang { class String; }

namespace android::provider {

class ContactsContract_AggregationExceptions : public object_base<SCAPIX_META_STRING("android/provider/ContactsContract$AggregationExceptions"),
	java::lang::Object,
	android::provider::BaseColumns>
{
public:

	static ref<java::lang::String> CONTENT_ITEM_TYPE_();
	static ref<java::lang::String> CONTENT_TYPE_();
	static ref<android::net::Uri> CONTENT_URI_();
	static ref<java::lang::String> RAW_CONTACT_ID1_();
	static ref<java::lang::String> RAW_CONTACT_ID2_();
	static ref<java::lang::String> TYPE_();
	static jint TYPE_AUTOMATIC_();
	static jint TYPE_KEEP_SEPARATE_();
	static jint TYPE_KEEP_TOGETHER_();


protected:

	ContactsContract_AggregationExceptions(handle_type h) : base_(h) {}

};

} // namespace android::provider
} // namespace scapix::java_api

#include <scapix/java_api/android/net/Uri.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::provider {

inline ref<java::lang::String> ContactsContract_AggregationExceptions::CONTENT_ITEM_TYPE_() { return get_static_field<SCAPIX_META_STRING("CONTENT_ITEM_TYPE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> ContactsContract_AggregationExceptions::CONTENT_TYPE_() { return get_static_field<SCAPIX_META_STRING("CONTENT_TYPE"), ref<java::lang::String>>(); }
inline ref<android::net::Uri> ContactsContract_AggregationExceptions::CONTENT_URI_() { return get_static_field<SCAPIX_META_STRING("CONTENT_URI"), ref<android::net::Uri>>(); }
inline ref<java::lang::String> ContactsContract_AggregationExceptions::RAW_CONTACT_ID1_() { return get_static_field<SCAPIX_META_STRING("RAW_CONTACT_ID1"), ref<java::lang::String>>(); }
inline ref<java::lang::String> ContactsContract_AggregationExceptions::RAW_CONTACT_ID2_() { return get_static_field<SCAPIX_META_STRING("RAW_CONTACT_ID2"), ref<java::lang::String>>(); }
inline ref<java::lang::String> ContactsContract_AggregationExceptions::TYPE_() { return get_static_field<SCAPIX_META_STRING("TYPE"), ref<java::lang::String>>(); }
inline jint ContactsContract_AggregationExceptions::TYPE_AUTOMATIC_() { return get_static_field<SCAPIX_META_STRING("TYPE_AUTOMATIC"), jint>(); }
inline jint ContactsContract_AggregationExceptions::TYPE_KEEP_SEPARATE_() { return get_static_field<SCAPIX_META_STRING("TYPE_KEEP_SEPARATE"), jint>(); }
inline jint ContactsContract_AggregationExceptions::TYPE_KEEP_TOGETHER_() { return get_static_field<SCAPIX_META_STRING("TYPE_KEEP_TOGETHER"), jint>(); }

} // namespace android::provider
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_PROVIDER_CONTACTSCONTRACT_AGGREGATIONEXCEPTIONS_H
