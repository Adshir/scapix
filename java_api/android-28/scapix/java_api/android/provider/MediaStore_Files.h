// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_PROVIDER_MEDIASTORE_FILES_H
#define SCAPIX_ANDROID_PROVIDER_MEDIASTORE_FILES_H

namespace scapix::java_api {

namespace android::net { class Uri; }
namespace java::lang { class String; }
namespace android::provider { class MediaStore_Files_FileColumns; }

namespace android::provider {

class MediaStore_Files : public object_base<SCAPIX_META_STRING("android/provider/MediaStore$Files"),
	java::lang::Object>
{
public:

	using FileColumns = MediaStore_Files_FileColumns;

	static ref<MediaStore_Files> new_object();
	static ref<android::net::Uri> getContentUri(ref<java::lang::String> volumeName);
	static ref<android::net::Uri> getContentUri(ref<java::lang::String> volumeName, jlong rowId);

protected:

	MediaStore_Files(handle_type h) : base_(h) {}

};

} // namespace android::provider
} // namespace scapix::java_api

#include <scapix/java_api/android/net/Uri.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::provider {

inline ref<MediaStore_Files> MediaStore_Files::new_object() { return base_::new_object(); }
inline ref<android::net::Uri> MediaStore_Files::getContentUri(ref<java::lang::String> volumeName) { return call_static_method<SCAPIX_META_STRING("getContentUri"), ref<android::net::Uri>>(volumeName); }
inline ref<android::net::Uri> MediaStore_Files::getContentUri(ref<java::lang::String> volumeName, jlong rowId) { return call_static_method<SCAPIX_META_STRING("getContentUri"), ref<android::net::Uri>>(volumeName, rowId); }

} // namespace android::provider
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_PROVIDER_MEDIASTORE_FILES_H
