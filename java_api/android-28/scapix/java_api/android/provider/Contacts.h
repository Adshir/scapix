// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_PROVIDER_CONTACTS_H
#define SCAPIX_ANDROID_PROVIDER_CONTACTS_H

namespace scapix::java_api {

namespace android::net { class Uri; }
namespace java::lang { class String; }
namespace android::provider { class Contacts_SettingsColumns; }
namespace android::provider { class Contacts_Settings; }
namespace android::provider { class Contacts_PresenceColumns; }
namespace android::provider { class Contacts_PhotosColumns; }
namespace android::provider { class Contacts_Photos; }
namespace android::provider { class Contacts_PhonesColumns; }
namespace android::provider { class Contacts_Phones; }
namespace android::provider { class Contacts_PeopleColumns; }
namespace android::provider { class Contacts_People; }
namespace android::provider { class Contacts_Organizations; }
namespace android::provider { class Contacts_OrganizationColumns; }
namespace android::provider { class Contacts_Intents; }
namespace android::provider { class Contacts_GroupsColumns; }
namespace android::provider { class Contacts_Groups; }
namespace android::provider { class Contacts_GroupMembership; }
namespace android::provider { class Contacts_ExtensionsColumns; }
namespace android::provider { class Contacts_Extensions; }
namespace android::provider { class Contacts_ContactMethodsColumns; }
namespace android::provider { class Contacts_ContactMethods; }

namespace android::provider {

class Contacts : public object_base<SCAPIX_META_STRING("android/provider/Contacts"),
	java::lang::Object>
{
public:

	using SettingsColumns = Contacts_SettingsColumns;
	using Settings = Contacts_Settings;
	using PresenceColumns = Contacts_PresenceColumns;
	using PhotosColumns = Contacts_PhotosColumns;
	using Photos = Contacts_Photos;
	using PhonesColumns = Contacts_PhonesColumns;
	using Phones = Contacts_Phones;
	using PeopleColumns = Contacts_PeopleColumns;
	using People = Contacts_People;
	using Organizations = Contacts_Organizations;
	using OrganizationColumns = Contacts_OrganizationColumns;
	using Intents = Contacts_Intents;
	using GroupsColumns = Contacts_GroupsColumns;
	using Groups = Contacts_Groups;
	using GroupMembership = Contacts_GroupMembership;
	using ExtensionsColumns = Contacts_ExtensionsColumns;
	using Extensions = Contacts_Extensions;
	using ContactMethodsColumns = Contacts_ContactMethodsColumns;
	using ContactMethods = Contacts_ContactMethods;

	static ref<java::lang::String> AUTHORITY_();
	static ref<android::net::Uri> CONTENT_URI_();
	static jint KIND_EMAIL_();
	static jint KIND_IM_();
	static jint KIND_ORGANIZATION_();
	static jint KIND_PHONE_();
	static jint KIND_POSTAL_();


protected:

	Contacts(handle_type h) : base_(h) {}

};

} // namespace android::provider
} // namespace scapix::java_api

#include <scapix/java_api/android/net/Uri.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::provider {

inline ref<java::lang::String> Contacts::AUTHORITY_() { return get_static_field<SCAPIX_META_STRING("AUTHORITY"), ref<java::lang::String>>(); }
inline ref<android::net::Uri> Contacts::CONTENT_URI_() { return get_static_field<SCAPIX_META_STRING("CONTENT_URI"), ref<android::net::Uri>>(); }
inline jint Contacts::KIND_EMAIL_() { return get_static_field<SCAPIX_META_STRING("KIND_EMAIL"), jint>(); }
inline jint Contacts::KIND_IM_() { return get_static_field<SCAPIX_META_STRING("KIND_IM"), jint>(); }
inline jint Contacts::KIND_ORGANIZATION_() { return get_static_field<SCAPIX_META_STRING("KIND_ORGANIZATION"), jint>(); }
inline jint Contacts::KIND_PHONE_() { return get_static_field<SCAPIX_META_STRING("KIND_PHONE"), jint>(); }
inline jint Contacts::KIND_POSTAL_() { return get_static_field<SCAPIX_META_STRING("KIND_POSTAL"), jint>(); }

} // namespace android::provider
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_PROVIDER_CONTACTS_H
