// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_PROVIDER_MEDIASTORE_AUDIO_H
#define SCAPIX_ANDROID_PROVIDER_MEDIASTORE_AUDIO_H

namespace scapix::java_api {

namespace java::lang { class String; }
namespace android::provider { class MediaStore_Audio_Radio; }
namespace android::provider { class MediaStore_Audio_PlaylistsColumns; }
namespace android::provider { class MediaStore_Audio_Playlists; }
namespace android::provider { class MediaStore_Audio_Media; }
namespace android::provider { class MediaStore_Audio_GenresColumns; }
namespace android::provider { class MediaStore_Audio_Genres; }
namespace android::provider { class MediaStore_Audio_AudioColumns; }
namespace android::provider { class MediaStore_Audio_Artists; }
namespace android::provider { class MediaStore_Audio_ArtistColumns; }
namespace android::provider { class MediaStore_Audio_Albums; }
namespace android::provider { class MediaStore_Audio_AlbumColumns; }

namespace android::provider {

class MediaStore_Audio : public object_base<SCAPIX_META_STRING("android/provider/MediaStore$Audio"),
	java::lang::Object>
{
public:

	using Radio = MediaStore_Audio_Radio;
	using PlaylistsColumns = MediaStore_Audio_PlaylistsColumns;
	using Playlists = MediaStore_Audio_Playlists;
	using Media = MediaStore_Audio_Media;
	using GenresColumns = MediaStore_Audio_GenresColumns;
	using Genres = MediaStore_Audio_Genres;
	using AudioColumns = MediaStore_Audio_AudioColumns;
	using Artists = MediaStore_Audio_Artists;
	using ArtistColumns = MediaStore_Audio_ArtistColumns;
	using Albums = MediaStore_Audio_Albums;
	using AlbumColumns = MediaStore_Audio_AlbumColumns;

	static ref<MediaStore_Audio> new_object();
	static ref<java::lang::String> keyFor(ref<java::lang::String> name);

protected:

	MediaStore_Audio(handle_type h) : base_(h) {}

};

} // namespace android::provider
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::provider {

inline ref<MediaStore_Audio> MediaStore_Audio::new_object() { return base_::new_object(); }
inline ref<java::lang::String> MediaStore_Audio::keyFor(ref<java::lang::String> name) { return call_static_method<SCAPIX_META_STRING("keyFor"), ref<java::lang::String>>(name); }

} // namespace android::provider
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_PROVIDER_MEDIASTORE_AUDIO_H
