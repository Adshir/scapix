// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/provider/MediaStore_Audio_AudioColumns.h>

#ifndef SCAPIX_ANDROID_PROVIDER_MEDIASTORE_AUDIO_PLAYLISTS_MEMBERS_H
#define SCAPIX_ANDROID_PROVIDER_MEDIASTORE_AUDIO_PLAYLISTS_MEMBERS_H

namespace scapix::java_api {

namespace android::content { class ContentResolver; }
namespace android::net { class Uri; }
namespace java::lang { class String; }

namespace android::provider {

class MediaStore_Audio_Playlists_Members : public object_base<SCAPIX_META_STRING("android/provider/MediaStore$Audio$Playlists$Members"),
	java::lang::Object,
	android::provider::MediaStore_Audio_AudioColumns>
{
public:

	static ref<java::lang::String> AUDIO_ID_();
	static ref<java::lang::String> CONTENT_DIRECTORY_();
	static ref<java::lang::String> DEFAULT_SORT_ORDER_();
	static ref<java::lang::String> PLAYLIST_ID_();
	static ref<java::lang::String> PLAY_ORDER_();
	static ref<java::lang::String> _ID_();

	static ref<MediaStore_Audio_Playlists_Members> new_object();
	static ref<android::net::Uri> getContentUri(ref<java::lang::String> volumeName, jlong playlistId);
	static jboolean moveItem(ref<android::content::ContentResolver> res, jlong playlistId, jint p3, jint from);

protected:

	MediaStore_Audio_Playlists_Members(handle_type h) : base_(h) {}

};

} // namespace android::provider
} // namespace scapix::java_api

#include <scapix/java_api/android/content/ContentResolver.h>
#include <scapix/java_api/android/net/Uri.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::provider {

inline ref<java::lang::String> MediaStore_Audio_Playlists_Members::AUDIO_ID_() { return get_static_field<SCAPIX_META_STRING("AUDIO_ID"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaStore_Audio_Playlists_Members::CONTENT_DIRECTORY_() { return get_static_field<SCAPIX_META_STRING("CONTENT_DIRECTORY"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaStore_Audio_Playlists_Members::DEFAULT_SORT_ORDER_() { return get_static_field<SCAPIX_META_STRING("DEFAULT_SORT_ORDER"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaStore_Audio_Playlists_Members::PLAYLIST_ID_() { return get_static_field<SCAPIX_META_STRING("PLAYLIST_ID"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaStore_Audio_Playlists_Members::PLAY_ORDER_() { return get_static_field<SCAPIX_META_STRING("PLAY_ORDER"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaStore_Audio_Playlists_Members::_ID_() { return get_static_field<SCAPIX_META_STRING("_ID"), ref<java::lang::String>>(); }
inline ref<MediaStore_Audio_Playlists_Members> MediaStore_Audio_Playlists_Members::new_object() { return base_::new_object(); }
inline ref<android::net::Uri> MediaStore_Audio_Playlists_Members::getContentUri(ref<java::lang::String> volumeName, jlong playlistId) { return call_static_method<SCAPIX_META_STRING("getContentUri"), ref<android::net::Uri>>(volumeName, playlistId); }
inline jboolean MediaStore_Audio_Playlists_Members::moveItem(ref<android::content::ContentResolver> res, jlong playlistId, jint p3, jint from) { return call_static_method<SCAPIX_META_STRING("moveItem"), jboolean>(res, playlistId, p3, from); }

} // namespace android::provider
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_PROVIDER_MEDIASTORE_AUDIO_PLAYLISTS_MEMBERS_H
