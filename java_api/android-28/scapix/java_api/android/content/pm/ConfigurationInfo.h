// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_ANDROID_CONTENT_PM_CONFIGURATIONINFO_H
#define SCAPIX_ANDROID_CONTENT_PM_CONFIGURATIONINFO_H

namespace scapix::java_api {

namespace android::os { class Parcel; }
namespace android::os { class Parcelable_Creator; }
namespace java::lang { class String; }

namespace android::content::pm {

class ConfigurationInfo : public object_base<SCAPIX_META_STRING("android/content/pm/ConfigurationInfo"),
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static ref<android::os::Parcelable_Creator> CREATOR_();
	static jint GL_ES_VERSION_UNDEFINED_();
	static jint INPUT_FEATURE_FIVE_WAY_NAV_();
	static jint INPUT_FEATURE_HARD_KEYBOARD_();
	jint reqGlEsVersion();
	void reqGlEsVersion(jint);
	jint reqInputFeatures();
	void reqInputFeatures(jint);
	jint reqKeyboardType();
	void reqKeyboardType(jint);
	jint reqNavigation();
	void reqNavigation(jint);
	jint reqTouchScreen();
	void reqTouchScreen(jint);

	static ref<ConfigurationInfo> new_object();
	static ref<ConfigurationInfo> new_object(ref<android::content::pm::ConfigurationInfo> orig);
	ref<java::lang::String> toString();
	jint describeContents();
	void writeToParcel(ref<android::os::Parcel> dest, jint parcelableFlags);
	ref<java::lang::String> getGlEsVersion();

protected:

	ConfigurationInfo(handle_type h) : base_(h) {}

};

} // namespace android::content::pm
} // namespace scapix::java_api

#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::content::pm {

inline ref<android::os::Parcelable_Creator> ConfigurationInfo::CREATOR_() { return get_static_field<SCAPIX_META_STRING("CREATOR"), ref<android::os::Parcelable_Creator>>(); }
inline jint ConfigurationInfo::GL_ES_VERSION_UNDEFINED_() { return get_static_field<SCAPIX_META_STRING("GL_ES_VERSION_UNDEFINED"), jint>(); }
inline jint ConfigurationInfo::INPUT_FEATURE_FIVE_WAY_NAV_() { return get_static_field<SCAPIX_META_STRING("INPUT_FEATURE_FIVE_WAY_NAV"), jint>(); }
inline jint ConfigurationInfo::INPUT_FEATURE_HARD_KEYBOARD_() { return get_static_field<SCAPIX_META_STRING("INPUT_FEATURE_HARD_KEYBOARD"), jint>(); }
inline jint ConfigurationInfo::reqGlEsVersion() { return get_field<SCAPIX_META_STRING("reqGlEsVersion"), jint>(); }
inline void ConfigurationInfo::reqGlEsVersion(jint v) { set_field<SCAPIX_META_STRING("reqGlEsVersion"), jint>(v); }
inline jint ConfigurationInfo::reqInputFeatures() { return get_field<SCAPIX_META_STRING("reqInputFeatures"), jint>(); }
inline void ConfigurationInfo::reqInputFeatures(jint v) { set_field<SCAPIX_META_STRING("reqInputFeatures"), jint>(v); }
inline jint ConfigurationInfo::reqKeyboardType() { return get_field<SCAPIX_META_STRING("reqKeyboardType"), jint>(); }
inline void ConfigurationInfo::reqKeyboardType(jint v) { set_field<SCAPIX_META_STRING("reqKeyboardType"), jint>(v); }
inline jint ConfigurationInfo::reqNavigation() { return get_field<SCAPIX_META_STRING("reqNavigation"), jint>(); }
inline void ConfigurationInfo::reqNavigation(jint v) { set_field<SCAPIX_META_STRING("reqNavigation"), jint>(v); }
inline jint ConfigurationInfo::reqTouchScreen() { return get_field<SCAPIX_META_STRING("reqTouchScreen"), jint>(); }
inline void ConfigurationInfo::reqTouchScreen(jint v) { set_field<SCAPIX_META_STRING("reqTouchScreen"), jint>(v); }
inline ref<ConfigurationInfo> ConfigurationInfo::new_object() { return base_::new_object(); }
inline ref<ConfigurationInfo> ConfigurationInfo::new_object(ref<android::content::pm::ConfigurationInfo> orig) { return base_::new_object(orig); }
inline ref<java::lang::String> ConfigurationInfo::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }
inline jint ConfigurationInfo::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }
inline void ConfigurationInfo::writeToParcel(ref<android::os::Parcel> dest, jint parcelableFlags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(dest, parcelableFlags); }
inline ref<java::lang::String> ConfigurationInfo::getGlEsVersion() { return call_method<SCAPIX_META_STRING("getGlEsVersion"), ref<java::lang::String>>(); }

} // namespace android::content::pm
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_CONTENT_PM_CONFIGURATIONINFO_H
