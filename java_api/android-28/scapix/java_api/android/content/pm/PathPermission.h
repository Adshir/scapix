// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/os/PatternMatcher.h>

#ifndef SCAPIX_ANDROID_CONTENT_PM_PATHPERMISSION_H
#define SCAPIX_ANDROID_CONTENT_PM_PATHPERMISSION_H

namespace scapix::java_api {

namespace android::os { class Parcel; }
namespace android::os { class Parcelable_Creator; }
namespace java::lang { class String; }

namespace android::content::pm {

class PathPermission : public object_base<SCAPIX_META_STRING("android/content/pm/PathPermission"),
	android::os::PatternMatcher>
{
public:

	static ref<android::os::Parcelable_Creator> CREATOR_();

	static ref<PathPermission> new_object(ref<java::lang::String> pattern, jint type, ref<java::lang::String> readPermission, ref<java::lang::String> writePermission);
	static ref<PathPermission> new_object(ref<android::os::Parcel> src);
	ref<java::lang::String> getReadPermission();
	ref<java::lang::String> getWritePermission();
	void writeToParcel(ref<android::os::Parcel> dest, jint flags);

protected:

	PathPermission(handle_type h) : base_(h) {}

};

} // namespace android::content::pm
} // namespace scapix::java_api

#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::content::pm {

inline ref<android::os::Parcelable_Creator> PathPermission::CREATOR_() { return get_static_field<SCAPIX_META_STRING("CREATOR"), ref<android::os::Parcelable_Creator>>(); }
inline ref<PathPermission> PathPermission::new_object(ref<java::lang::String> pattern, jint type, ref<java::lang::String> readPermission, ref<java::lang::String> writePermission) { return base_::new_object(pattern, type, readPermission, writePermission); }
inline ref<PathPermission> PathPermission::new_object(ref<android::os::Parcel> src) { return base_::new_object(src); }
inline ref<java::lang::String> PathPermission::getReadPermission() { return call_method<SCAPIX_META_STRING("getReadPermission"), ref<java::lang::String>>(); }
inline ref<java::lang::String> PathPermission::getWritePermission() { return call_method<SCAPIX_META_STRING("getWritePermission"), ref<java::lang::String>>(); }
inline void PathPermission::writeToParcel(ref<android::os::Parcel> dest, jint flags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(dest, flags); }

} // namespace android::content::pm
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_CONTENT_PM_PATHPERMISSION_H
