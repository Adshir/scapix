// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_CONTENT_PM_LAUNCHERAPPS_H
#define SCAPIX_ANDROID_CONTENT_PM_LAUNCHERAPPS_H

namespace scapix::java_api {

namespace android::content { class ComponentName; }
namespace android::content { class Intent; }
namespace android::content { class IntentSender; }
namespace android::content::pm { class ApplicationInfo; }
namespace android::content::pm { class LauncherActivityInfo; }
namespace android::content::pm { class LauncherApps_Callback; }
namespace android::content::pm { class LauncherApps_PinItemRequest; }
namespace android::content::pm { class LauncherApps_ShortcutQuery; }
namespace android::content::pm { class ShortcutInfo; }
namespace android::graphics { class Rect; }
namespace android::graphics::drawable { class Drawable; }
namespace android::os { class Bundle; }
namespace android::os { class Handler; }
namespace android::os { class UserHandle; }
namespace java::lang { class String; }
namespace java::util { class List; }

namespace android::content::pm {

class LauncherApps : public object_base<SCAPIX_META_STRING("android/content/pm/LauncherApps"),
	java::lang::Object>
{
public:

	using ShortcutQuery = LauncherApps_ShortcutQuery;
	using PinItemRequest = LauncherApps_PinItemRequest;
	using Callback = LauncherApps_Callback;

	static ref<java::lang::String> ACTION_CONFIRM_PIN_APPWIDGET_();
	static ref<java::lang::String> ACTION_CONFIRM_PIN_SHORTCUT_();
	static ref<java::lang::String> EXTRA_PIN_ITEM_REQUEST_();

	ref<java::util::List> getProfiles();
	ref<java::util::List> getActivityList(ref<java::lang::String> packageName, ref<android::os::UserHandle> user);
	ref<android::content::pm::LauncherActivityInfo> resolveActivity(ref<android::content::Intent> intent, ref<android::os::UserHandle> user);
	void startMainActivity(ref<android::content::ComponentName> component, ref<android::os::UserHandle> user, ref<android::graphics::Rect> sourceBounds, ref<android::os::Bundle> opts);
	void startAppDetailsActivity(ref<android::content::ComponentName> component, ref<android::os::UserHandle> user, ref<android::graphics::Rect> sourceBounds, ref<android::os::Bundle> opts);
	ref<java::util::List> getShortcutConfigActivityList(ref<java::lang::String> packageName, ref<android::os::UserHandle> user);
	ref<android::content::IntentSender> getShortcutConfigActivityIntent(ref<android::content::pm::LauncherActivityInfo> info);
	jboolean isPackageEnabled(ref<java::lang::String> packageName, ref<android::os::UserHandle> user);
	ref<android::os::Bundle> getSuspendedPackageLauncherExtras(ref<java::lang::String> packageName, ref<android::os::UserHandle> user);
	ref<android::content::pm::ApplicationInfo> getApplicationInfo(ref<java::lang::String> packageName, jint flags, ref<android::os::UserHandle> user);
	jboolean isActivityEnabled(ref<android::content::ComponentName> component, ref<android::os::UserHandle> user);
	jboolean hasShortcutHostPermission();
	ref<java::util::List> getShortcuts(ref<android::content::pm::LauncherApps_ShortcutQuery> query, ref<android::os::UserHandle> user);
	void pinShortcuts(ref<java::lang::String> packageName, ref<java::util::List> shortcutIds, ref<android::os::UserHandle> user);
	ref<android::graphics::drawable::Drawable> getShortcutIconDrawable(ref<android::content::pm::ShortcutInfo> shortcut, jint density);
	ref<android::graphics::drawable::Drawable> getShortcutBadgedIconDrawable(ref<android::content::pm::ShortcutInfo> shortcut, jint density);
	void startShortcut(ref<java::lang::String> packageName, ref<java::lang::String> shortcutId, ref<android::graphics::Rect> sourceBounds, ref<android::os::Bundle> startActivityOptions, ref<android::os::UserHandle> user);
	void startShortcut(ref<android::content::pm::ShortcutInfo> shortcut, ref<android::graphics::Rect> sourceBounds, ref<android::os::Bundle> startActivityOptions);
	void registerCallback(ref<android::content::pm::LauncherApps_Callback> callback);
	void registerCallback(ref<android::content::pm::LauncherApps_Callback> callback, ref<android::os::Handler> handler);
	void unregisterCallback(ref<android::content::pm::LauncherApps_Callback> callback);
	ref<android::content::pm::LauncherApps_PinItemRequest> getPinItemRequest(ref<android::content::Intent> intent);

protected:

	LauncherApps(handle_type h) : base_(h) {}

};

} // namespace android::content::pm
} // namespace scapix::java_api

#include <scapix/java_api/android/content/ComponentName.h>
#include <scapix/java_api/android/content/Intent.h>
#include <scapix/java_api/android/content/IntentSender.h>
#include <scapix/java_api/android/content/pm/ApplicationInfo.h>
#include <scapix/java_api/android/content/pm/LauncherActivityInfo.h>
#include <scapix/java_api/android/content/pm/LauncherApps_Callback.h>
#include <scapix/java_api/android/content/pm/LauncherApps_PinItemRequest.h>
#include <scapix/java_api/android/content/pm/LauncherApps_ShortcutQuery.h>
#include <scapix/java_api/android/content/pm/ShortcutInfo.h>
#include <scapix/java_api/android/graphics/Rect.h>
#include <scapix/java_api/android/graphics/drawable/Drawable.h>
#include <scapix/java_api/android/os/Bundle.h>
#include <scapix/java_api/android/os/Handler.h>
#include <scapix/java_api/android/os/UserHandle.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/List.h>

namespace scapix::java_api {
namespace android::content::pm {

inline ref<java::lang::String> LauncherApps::ACTION_CONFIRM_PIN_APPWIDGET_() { return get_static_field<SCAPIX_META_STRING("ACTION_CONFIRM_PIN_APPWIDGET"), ref<java::lang::String>>(); }
inline ref<java::lang::String> LauncherApps::ACTION_CONFIRM_PIN_SHORTCUT_() { return get_static_field<SCAPIX_META_STRING("ACTION_CONFIRM_PIN_SHORTCUT"), ref<java::lang::String>>(); }
inline ref<java::lang::String> LauncherApps::EXTRA_PIN_ITEM_REQUEST_() { return get_static_field<SCAPIX_META_STRING("EXTRA_PIN_ITEM_REQUEST"), ref<java::lang::String>>(); }
inline ref<java::util::List> LauncherApps::getProfiles() { return call_method<SCAPIX_META_STRING("getProfiles"), ref<java::util::List>>(); }
inline ref<java::util::List> LauncherApps::getActivityList(ref<java::lang::String> packageName, ref<android::os::UserHandle> user) { return call_method<SCAPIX_META_STRING("getActivityList"), ref<java::util::List>>(packageName, user); }
inline ref<android::content::pm::LauncherActivityInfo> LauncherApps::resolveActivity(ref<android::content::Intent> intent, ref<android::os::UserHandle> user) { return call_method<SCAPIX_META_STRING("resolveActivity"), ref<android::content::pm::LauncherActivityInfo>>(intent, user); }
inline void LauncherApps::startMainActivity(ref<android::content::ComponentName> component, ref<android::os::UserHandle> user, ref<android::graphics::Rect> sourceBounds, ref<android::os::Bundle> opts) { return call_method<SCAPIX_META_STRING("startMainActivity"), void>(component, user, sourceBounds, opts); }
inline void LauncherApps::startAppDetailsActivity(ref<android::content::ComponentName> component, ref<android::os::UserHandle> user, ref<android::graphics::Rect> sourceBounds, ref<android::os::Bundle> opts) { return call_method<SCAPIX_META_STRING("startAppDetailsActivity"), void>(component, user, sourceBounds, opts); }
inline ref<java::util::List> LauncherApps::getShortcutConfigActivityList(ref<java::lang::String> packageName, ref<android::os::UserHandle> user) { return call_method<SCAPIX_META_STRING("getShortcutConfigActivityList"), ref<java::util::List>>(packageName, user); }
inline ref<android::content::IntentSender> LauncherApps::getShortcutConfigActivityIntent(ref<android::content::pm::LauncherActivityInfo> info) { return call_method<SCAPIX_META_STRING("getShortcutConfigActivityIntent"), ref<android::content::IntentSender>>(info); }
inline jboolean LauncherApps::isPackageEnabled(ref<java::lang::String> packageName, ref<android::os::UserHandle> user) { return call_method<SCAPIX_META_STRING("isPackageEnabled"), jboolean>(packageName, user); }
inline ref<android::os::Bundle> LauncherApps::getSuspendedPackageLauncherExtras(ref<java::lang::String> packageName, ref<android::os::UserHandle> user) { return call_method<SCAPIX_META_STRING("getSuspendedPackageLauncherExtras"), ref<android::os::Bundle>>(packageName, user); }
inline ref<android::content::pm::ApplicationInfo> LauncherApps::getApplicationInfo(ref<java::lang::String> packageName, jint flags, ref<android::os::UserHandle> user) { return call_method<SCAPIX_META_STRING("getApplicationInfo"), ref<android::content::pm::ApplicationInfo>>(packageName, flags, user); }
inline jboolean LauncherApps::isActivityEnabled(ref<android::content::ComponentName> component, ref<android::os::UserHandle> user) { return call_method<SCAPIX_META_STRING("isActivityEnabled"), jboolean>(component, user); }
inline jboolean LauncherApps::hasShortcutHostPermission() { return call_method<SCAPIX_META_STRING("hasShortcutHostPermission"), jboolean>(); }
inline ref<java::util::List> LauncherApps::getShortcuts(ref<android::content::pm::LauncherApps_ShortcutQuery> query, ref<android::os::UserHandle> user) { return call_method<SCAPIX_META_STRING("getShortcuts"), ref<java::util::List>>(query, user); }
inline void LauncherApps::pinShortcuts(ref<java::lang::String> packageName, ref<java::util::List> shortcutIds, ref<android::os::UserHandle> user) { return call_method<SCAPIX_META_STRING("pinShortcuts"), void>(packageName, shortcutIds, user); }
inline ref<android::graphics::drawable::Drawable> LauncherApps::getShortcutIconDrawable(ref<android::content::pm::ShortcutInfo> shortcut, jint density) { return call_method<SCAPIX_META_STRING("getShortcutIconDrawable"), ref<android::graphics::drawable::Drawable>>(shortcut, density); }
inline ref<android::graphics::drawable::Drawable> LauncherApps::getShortcutBadgedIconDrawable(ref<android::content::pm::ShortcutInfo> shortcut, jint density) { return call_method<SCAPIX_META_STRING("getShortcutBadgedIconDrawable"), ref<android::graphics::drawable::Drawable>>(shortcut, density); }
inline void LauncherApps::startShortcut(ref<java::lang::String> packageName, ref<java::lang::String> shortcutId, ref<android::graphics::Rect> sourceBounds, ref<android::os::Bundle> startActivityOptions, ref<android::os::UserHandle> user) { return call_method<SCAPIX_META_STRING("startShortcut"), void>(packageName, shortcutId, sourceBounds, startActivityOptions, user); }
inline void LauncherApps::startShortcut(ref<android::content::pm::ShortcutInfo> shortcut, ref<android::graphics::Rect> sourceBounds, ref<android::os::Bundle> startActivityOptions) { return call_method<SCAPIX_META_STRING("startShortcut"), void>(shortcut, sourceBounds, startActivityOptions); }
inline void LauncherApps::registerCallback(ref<android::content::pm::LauncherApps_Callback> callback) { return call_method<SCAPIX_META_STRING("registerCallback"), void>(callback); }
inline void LauncherApps::registerCallback(ref<android::content::pm::LauncherApps_Callback> callback, ref<android::os::Handler> handler) { return call_method<SCAPIX_META_STRING("registerCallback"), void>(callback, handler); }
inline void LauncherApps::unregisterCallback(ref<android::content::pm::LauncherApps_Callback> callback) { return call_method<SCAPIX_META_STRING("unregisterCallback"), void>(callback); }
inline ref<android::content::pm::LauncherApps_PinItemRequest> LauncherApps::getPinItemRequest(ref<android::content::Intent> intent) { return call_method<SCAPIX_META_STRING("getPinItemRequest"), ref<android::content::pm::LauncherApps_PinItemRequest>>(intent); }

} // namespace android::content::pm
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_CONTENT_PM_LAUNCHERAPPS_H
