// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/content/pm/PackageItemInfo.h>

#ifndef SCAPIX_ANDROID_CONTENT_PM_COMPONENTINFO_H
#define SCAPIX_ANDROID_CONTENT_PM_COMPONENTINFO_H

namespace scapix::java_api {

namespace android::content::pm { class ApplicationInfo; }
namespace android::os { class Parcel; }
namespace java::lang { class String; }

namespace android::content::pm {

class ComponentInfo : public object_base<SCAPIX_META_STRING("android/content/pm/ComponentInfo"),
	android::content::pm::PackageItemInfo>
{
public:

	ref<android::content::pm::ApplicationInfo> applicationInfo();
	void applicationInfo(ref<android::content::pm::ApplicationInfo>);
	jint descriptionRes();
	void descriptionRes(jint);
	jboolean directBootAware();
	void directBootAware(jboolean);
	jboolean enabled();
	void enabled(jboolean);
	jboolean exported();
	void exported(jboolean);
	ref<java::lang::String> processName();
	void processName(ref<java::lang::String>);
	ref<java::lang::String> splitName();
	void splitName(ref<java::lang::String>);

	static ref<ComponentInfo> new_object();
	static ref<ComponentInfo> new_object(ref<android::content::pm::ComponentInfo> orig);
	jboolean isEnabled();
	jint getIconResource();
	jint getLogoResource();
	jint getBannerResource();
	void writeToParcel(ref<android::os::Parcel> dest, jint parcelableFlags);

protected:

	ComponentInfo(handle_type h) : base_(h) {}

};

} // namespace android::content::pm
} // namespace scapix::java_api

#include <scapix/java_api/android/content/pm/ApplicationInfo.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::content::pm {

inline ref<android::content::pm::ApplicationInfo> ComponentInfo::applicationInfo() { return get_field<SCAPIX_META_STRING("applicationInfo"), ref<android::content::pm::ApplicationInfo>>(); }
inline void ComponentInfo::applicationInfo(ref<android::content::pm::ApplicationInfo> v) { set_field<SCAPIX_META_STRING("applicationInfo"), ref<android::content::pm::ApplicationInfo>>(v); }
inline jint ComponentInfo::descriptionRes() { return get_field<SCAPIX_META_STRING("descriptionRes"), jint>(); }
inline void ComponentInfo::descriptionRes(jint v) { set_field<SCAPIX_META_STRING("descriptionRes"), jint>(v); }
inline jboolean ComponentInfo::directBootAware() { return get_field<SCAPIX_META_STRING("directBootAware"), jboolean>(); }
inline void ComponentInfo::directBootAware(jboolean v) { set_field<SCAPIX_META_STRING("directBootAware"), jboolean>(v); }
inline jboolean ComponentInfo::enabled() { return get_field<SCAPIX_META_STRING("enabled"), jboolean>(); }
inline void ComponentInfo::enabled(jboolean v) { set_field<SCAPIX_META_STRING("enabled"), jboolean>(v); }
inline jboolean ComponentInfo::exported() { return get_field<SCAPIX_META_STRING("exported"), jboolean>(); }
inline void ComponentInfo::exported(jboolean v) { set_field<SCAPIX_META_STRING("exported"), jboolean>(v); }
inline ref<java::lang::String> ComponentInfo::processName() { return get_field<SCAPIX_META_STRING("processName"), ref<java::lang::String>>(); }
inline void ComponentInfo::processName(ref<java::lang::String> v) { set_field<SCAPIX_META_STRING("processName"), ref<java::lang::String>>(v); }
inline ref<java::lang::String> ComponentInfo::splitName() { return get_field<SCAPIX_META_STRING("splitName"), ref<java::lang::String>>(); }
inline void ComponentInfo::splitName(ref<java::lang::String> v) { set_field<SCAPIX_META_STRING("splitName"), ref<java::lang::String>>(v); }
inline ref<ComponentInfo> ComponentInfo::new_object() { return base_::new_object(); }
inline ref<ComponentInfo> ComponentInfo::new_object(ref<android::content::pm::ComponentInfo> orig) { return base_::new_object(orig); }
inline jboolean ComponentInfo::isEnabled() { return call_method<SCAPIX_META_STRING("isEnabled"), jboolean>(); }
inline jint ComponentInfo::getIconResource() { return call_method<SCAPIX_META_STRING("getIconResource"), jint>(); }
inline jint ComponentInfo::getLogoResource() { return call_method<SCAPIX_META_STRING("getLogoResource"), jint>(); }
inline jint ComponentInfo::getBannerResource() { return call_method<SCAPIX_META_STRING("getBannerResource"), jint>(); }
inline void ComponentInfo::writeToParcel(ref<android::os::Parcel> dest, jint parcelableFlags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(dest, parcelableFlags); }

} // namespace android::content::pm
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_CONTENT_PM_COMPONENTINFO_H
