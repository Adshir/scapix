// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/content/pm/ComponentInfo.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_ANDROID_CONTENT_PM_SERVICEINFO_H
#define SCAPIX_ANDROID_CONTENT_PM_SERVICEINFO_H

namespace scapix::java_api {

namespace android::os { class Parcel; }
namespace android::os { class Parcelable_Creator; }
namespace android::util { class Printer; }
namespace java::lang { class String; }

namespace android::content::pm {

class ServiceInfo : public object_base<SCAPIX_META_STRING("android/content/pm/ServiceInfo"),
	android::content::pm::ComponentInfo,
	android::os::Parcelable>
{
public:

	static ref<android::os::Parcelable_Creator> CREATOR_();
	static jint FLAG_EXTERNAL_SERVICE_();
	static jint FLAG_ISOLATED_PROCESS_();
	static jint FLAG_SINGLE_USER_();
	static jint FLAG_STOP_WITH_TASK_();
	jint flags();
	void flags(jint);
	ref<java::lang::String> permission();
	void permission(ref<java::lang::String>);

	static ref<ServiceInfo> new_object();
	static ref<ServiceInfo> new_object(ref<android::content::pm::ServiceInfo> orig);
	void dump(ref<android::util::Printer> pw, ref<java::lang::String> prefix);
	ref<java::lang::String> toString();
	jint describeContents();
	void writeToParcel(ref<android::os::Parcel> dest, jint parcelableFlags);

protected:

	ServiceInfo(handle_type h) : base_(h) {}

};

} // namespace android::content::pm
} // namespace scapix::java_api

#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/android/util/Printer.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::content::pm {

inline ref<android::os::Parcelable_Creator> ServiceInfo::CREATOR_() { return get_static_field<SCAPIX_META_STRING("CREATOR"), ref<android::os::Parcelable_Creator>>(); }
inline jint ServiceInfo::FLAG_EXTERNAL_SERVICE_() { return get_static_field<SCAPIX_META_STRING("FLAG_EXTERNAL_SERVICE"), jint>(); }
inline jint ServiceInfo::FLAG_ISOLATED_PROCESS_() { return get_static_field<SCAPIX_META_STRING("FLAG_ISOLATED_PROCESS"), jint>(); }
inline jint ServiceInfo::FLAG_SINGLE_USER_() { return get_static_field<SCAPIX_META_STRING("FLAG_SINGLE_USER"), jint>(); }
inline jint ServiceInfo::FLAG_STOP_WITH_TASK_() { return get_static_field<SCAPIX_META_STRING("FLAG_STOP_WITH_TASK"), jint>(); }
inline jint ServiceInfo::flags() { return get_field<SCAPIX_META_STRING("flags"), jint>(); }
inline void ServiceInfo::flags(jint v) { set_field<SCAPIX_META_STRING("flags"), jint>(v); }
inline ref<java::lang::String> ServiceInfo::permission() { return get_field<SCAPIX_META_STRING("permission"), ref<java::lang::String>>(); }
inline void ServiceInfo::permission(ref<java::lang::String> v) { set_field<SCAPIX_META_STRING("permission"), ref<java::lang::String>>(v); }
inline ref<ServiceInfo> ServiceInfo::new_object() { return base_::new_object(); }
inline ref<ServiceInfo> ServiceInfo::new_object(ref<android::content::pm::ServiceInfo> orig) { return base_::new_object(orig); }
inline void ServiceInfo::dump(ref<android::util::Printer> pw, ref<java::lang::String> prefix) { return call_method<SCAPIX_META_STRING("dump"), void>(pw, prefix); }
inline ref<java::lang::String> ServiceInfo::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }
inline jint ServiceInfo::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }
inline void ServiceInfo::writeToParcel(ref<android::os::Parcel> dest, jint parcelableFlags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(dest, parcelableFlags); }

} // namespace android::content::pm
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_CONTENT_PM_SERVICEINFO_H
