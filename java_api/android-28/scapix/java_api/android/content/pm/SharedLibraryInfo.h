// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_ANDROID_CONTENT_PM_SHAREDLIBRARYINFO_H
#define SCAPIX_ANDROID_CONTENT_PM_SHAREDLIBRARYINFO_H

namespace scapix::java_api {

namespace android::content::pm { class VersionedPackage; }
namespace android::os { class Parcel; }
namespace android::os { class Parcelable_Creator; }
namespace java::lang { class String; }
namespace java::util { class List; }

namespace android::content::pm {

class SharedLibraryInfo : public object_base<SCAPIX_META_STRING("android/content/pm/SharedLibraryInfo"),
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static ref<android::os::Parcelable_Creator> CREATOR_();
	static jint TYPE_BUILTIN_();
	static jint TYPE_DYNAMIC_();
	static jint TYPE_STATIC_();
	static jint VERSION_UNDEFINED_();

	jint getType();
	ref<java::lang::String> getName();
	jint getVersion();
	jlong getLongVersion();
	ref<android::content::pm::VersionedPackage> getDeclaringPackage();
	ref<java::util::List> getDependentPackages();
	jint describeContents();
	ref<java::lang::String> toString();
	void writeToParcel(ref<android::os::Parcel> parcel, jint flags);

protected:

	SharedLibraryInfo(handle_type h) : base_(h) {}

};

} // namespace android::content::pm
} // namespace scapix::java_api

#include <scapix/java_api/android/content/pm/VersionedPackage.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/List.h>

namespace scapix::java_api {
namespace android::content::pm {

inline ref<android::os::Parcelable_Creator> SharedLibraryInfo::CREATOR_() { return get_static_field<SCAPIX_META_STRING("CREATOR"), ref<android::os::Parcelable_Creator>>(); }
inline jint SharedLibraryInfo::TYPE_BUILTIN_() { return get_static_field<SCAPIX_META_STRING("TYPE_BUILTIN"), jint>(); }
inline jint SharedLibraryInfo::TYPE_DYNAMIC_() { return get_static_field<SCAPIX_META_STRING("TYPE_DYNAMIC"), jint>(); }
inline jint SharedLibraryInfo::TYPE_STATIC_() { return get_static_field<SCAPIX_META_STRING("TYPE_STATIC"), jint>(); }
inline jint SharedLibraryInfo::VERSION_UNDEFINED_() { return get_static_field<SCAPIX_META_STRING("VERSION_UNDEFINED"), jint>(); }
inline jint SharedLibraryInfo::getType() { return call_method<SCAPIX_META_STRING("getType"), jint>(); }
inline ref<java::lang::String> SharedLibraryInfo::getName() { return call_method<SCAPIX_META_STRING("getName"), ref<java::lang::String>>(); }
inline jint SharedLibraryInfo::getVersion() { return call_method<SCAPIX_META_STRING("getVersion"), jint>(); }
inline jlong SharedLibraryInfo::getLongVersion() { return call_method<SCAPIX_META_STRING("getLongVersion"), jlong>(); }
inline ref<android::content::pm::VersionedPackage> SharedLibraryInfo::getDeclaringPackage() { return call_method<SCAPIX_META_STRING("getDeclaringPackage"), ref<android::content::pm::VersionedPackage>>(); }
inline ref<java::util::List> SharedLibraryInfo::getDependentPackages() { return call_method<SCAPIX_META_STRING("getDependentPackages"), ref<java::util::List>>(); }
inline jint SharedLibraryInfo::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }
inline ref<java::lang::String> SharedLibraryInfo::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }
inline void SharedLibraryInfo::writeToParcel(ref<android::os::Parcel> parcel, jint flags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(parcel, flags); }

} // namespace android::content::pm
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_CONTENT_PM_SHAREDLIBRARYINFO_H
