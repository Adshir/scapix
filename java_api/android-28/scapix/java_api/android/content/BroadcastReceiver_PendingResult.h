// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_CONTENT_BROADCASTRECEIVER_PENDINGRESULT_H
#define SCAPIX_ANDROID_CONTENT_BROADCASTRECEIVER_PENDINGRESULT_H

namespace scapix::java_api {

namespace android::os { class Bundle; }
namespace java::lang { class String; }

namespace android::content {

class BroadcastReceiver_PendingResult : public object_base<SCAPIX_META_STRING("android/content/BroadcastReceiver$PendingResult"),
	java::lang::Object>
{
public:

	void setResultCode(jint code);
	jint getResultCode();
	void setResultData(ref<java::lang::String> data);
	ref<java::lang::String> getResultData();
	void setResultExtras(ref<android::os::Bundle> extras);
	ref<android::os::Bundle> getResultExtras(jboolean makeMap);
	void setResult(jint code, ref<java::lang::String> data, ref<android::os::Bundle> extras);
	jboolean getAbortBroadcast();
	void abortBroadcast();
	void clearAbortBroadcast();
	void finish();

protected:

	BroadcastReceiver_PendingResult(handle_type h) : base_(h) {}

};

} // namespace android::content
} // namespace scapix::java_api

#include <scapix/java_api/android/os/Bundle.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::content {

inline void BroadcastReceiver_PendingResult::setResultCode(jint code) { return call_method<SCAPIX_META_STRING("setResultCode"), void>(code); }
inline jint BroadcastReceiver_PendingResult::getResultCode() { return call_method<SCAPIX_META_STRING("getResultCode"), jint>(); }
inline void BroadcastReceiver_PendingResult::setResultData(ref<java::lang::String> data) { return call_method<SCAPIX_META_STRING("setResultData"), void>(data); }
inline ref<java::lang::String> BroadcastReceiver_PendingResult::getResultData() { return call_method<SCAPIX_META_STRING("getResultData"), ref<java::lang::String>>(); }
inline void BroadcastReceiver_PendingResult::setResultExtras(ref<android::os::Bundle> extras) { return call_method<SCAPIX_META_STRING("setResultExtras"), void>(extras); }
inline ref<android::os::Bundle> BroadcastReceiver_PendingResult::getResultExtras(jboolean makeMap) { return call_method<SCAPIX_META_STRING("getResultExtras"), ref<android::os::Bundle>>(makeMap); }
inline void BroadcastReceiver_PendingResult::setResult(jint code, ref<java::lang::String> data, ref<android::os::Bundle> extras) { return call_method<SCAPIX_META_STRING("setResult"), void>(code, data, extras); }
inline jboolean BroadcastReceiver_PendingResult::getAbortBroadcast() { return call_method<SCAPIX_META_STRING("getAbortBroadcast"), jboolean>(); }
inline void BroadcastReceiver_PendingResult::abortBroadcast() { return call_method<SCAPIX_META_STRING("abortBroadcast"), void>(); }
inline void BroadcastReceiver_PendingResult::clearAbortBroadcast() { return call_method<SCAPIX_META_STRING("clearAbortBroadcast"), void>(); }
inline void BroadcastReceiver_PendingResult::finish() { return call_method<SCAPIX_META_STRING("finish"), void>(); }

} // namespace android::content
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_CONTENT_BROADCASTRECEIVER_PENDINGRESULT_H
