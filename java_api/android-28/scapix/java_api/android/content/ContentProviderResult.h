// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_ANDROID_CONTENT_CONTENTPROVIDERRESULT_H
#define SCAPIX_ANDROID_CONTENT_CONTENTPROVIDERRESULT_H

namespace scapix::java_api {

namespace android::net { class Uri; }
namespace android::os { class Parcel; }
namespace android::os { class Parcelable_Creator; }
namespace java::lang { class Integer; }
namespace java::lang { class String; }

namespace android::content {

class ContentProviderResult : public object_base<SCAPIX_META_STRING("android/content/ContentProviderResult"),
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static ref<android::os::Parcelable_Creator> CREATOR_();
	ref<java::lang::Integer> count();
	ref<android::net::Uri> uri();

	static ref<ContentProviderResult> new_object(ref<android::net::Uri> uri);
	static ref<ContentProviderResult> new_object(jint count);
	static ref<ContentProviderResult> new_object(ref<android::os::Parcel> source);
	void writeToParcel(ref<android::os::Parcel> dest, jint flags);
	jint describeContents();
	ref<java::lang::String> toString();

protected:

	ContentProviderResult(handle_type h) : base_(h) {}

};

} // namespace android::content
} // namespace scapix::java_api

#include <scapix/java_api/android/net/Uri.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/Integer.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::content {

inline ref<android::os::Parcelable_Creator> ContentProviderResult::CREATOR_() { return get_static_field<SCAPIX_META_STRING("CREATOR"), ref<android::os::Parcelable_Creator>>(); }
inline ref<java::lang::Integer> ContentProviderResult::count() { return get_field<SCAPIX_META_STRING("count"), ref<java::lang::Integer>>(); }
inline ref<android::net::Uri> ContentProviderResult::uri() { return get_field<SCAPIX_META_STRING("uri"), ref<android::net::Uri>>(); }
inline ref<ContentProviderResult> ContentProviderResult::new_object(ref<android::net::Uri> uri) { return base_::new_object(uri); }
inline ref<ContentProviderResult> ContentProviderResult::new_object(jint count) { return base_::new_object(count); }
inline ref<ContentProviderResult> ContentProviderResult::new_object(ref<android::os::Parcel> source) { return base_::new_object(source); }
inline void ContentProviderResult::writeToParcel(ref<android::os::Parcel> dest, jint flags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(dest, flags); }
inline jint ContentProviderResult::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }
inline ref<java::lang::String> ContentProviderResult::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }

} // namespace android::content
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_CONTENT_CONTENTPROVIDERRESULT_H
