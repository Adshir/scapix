// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_CONTENT_RES_RESOURCES_THEME_H
#define SCAPIX_ANDROID_CONTENT_RES_RESOURCES_THEME_H

namespace scapix::java_api {

namespace android::content::res { class Resources; }
namespace android::content::res { class TypedArray; }
namespace android::graphics::drawable { class Drawable; }
namespace android::util { class AttributeSet; }
namespace android::util { class TypedValue; }
namespace java::lang { class String; }

namespace android::content::res {

class Resources_Theme : public object_base<SCAPIX_META_STRING("android/content/res/Resources$Theme"),
	java::lang::Object>
{
public:

	void applyStyle(jint resId, jboolean force);
	void setTo(ref<android::content::res::Resources_Theme> other);
	ref<android::content::res::TypedArray> obtainStyledAttributes(ref<link::java::array<jint>> attrs);
	ref<android::content::res::TypedArray> obtainStyledAttributes(jint resId, ref<link::java::array<jint>> attrs);
	ref<android::content::res::TypedArray> obtainStyledAttributes(ref<android::util::AttributeSet> set, ref<link::java::array<jint>> attrs, jint defStyleAttr, jint defStyleRes);
	jboolean resolveAttribute(jint resid, ref<android::util::TypedValue> outValue, jboolean resolveRefs);
	ref<android::content::res::Resources> getResources();
	ref<android::graphics::drawable::Drawable> getDrawable(jint id);
	jint getChangingConfigurations();
	void dump(jint priority, ref<java::lang::String> tag, ref<java::lang::String> prefix);

protected:

	Resources_Theme(handle_type h) : base_(h) {}

};

} // namespace android::content::res
} // namespace scapix::java_api

#include <scapix/java_api/android/content/res/Resources.h>
#include <scapix/java_api/android/content/res/TypedArray.h>
#include <scapix/java_api/android/graphics/drawable/Drawable.h>
#include <scapix/java_api/android/util/AttributeSet.h>
#include <scapix/java_api/android/util/TypedValue.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::content::res {

inline void Resources_Theme::applyStyle(jint resId, jboolean force) { return call_method<SCAPIX_META_STRING("applyStyle"), void>(resId, force); }
inline void Resources_Theme::setTo(ref<android::content::res::Resources_Theme> other) { return call_method<SCAPIX_META_STRING("setTo"), void>(other); }
inline ref<android::content::res::TypedArray> Resources_Theme::obtainStyledAttributes(ref<link::java::array<jint>> attrs) { return call_method<SCAPIX_META_STRING("obtainStyledAttributes"), ref<android::content::res::TypedArray>>(attrs); }
inline ref<android::content::res::TypedArray> Resources_Theme::obtainStyledAttributes(jint resId, ref<link::java::array<jint>> attrs) { return call_method<SCAPIX_META_STRING("obtainStyledAttributes"), ref<android::content::res::TypedArray>>(resId, attrs); }
inline ref<android::content::res::TypedArray> Resources_Theme::obtainStyledAttributes(ref<android::util::AttributeSet> set, ref<link::java::array<jint>> attrs, jint defStyleAttr, jint defStyleRes) { return call_method<SCAPIX_META_STRING("obtainStyledAttributes"), ref<android::content::res::TypedArray>>(set, attrs, defStyleAttr, defStyleRes); }
inline jboolean Resources_Theme::resolveAttribute(jint resid, ref<android::util::TypedValue> outValue, jboolean resolveRefs) { return call_method<SCAPIX_META_STRING("resolveAttribute"), jboolean>(resid, outValue, resolveRefs); }
inline ref<android::content::res::Resources> Resources_Theme::getResources() { return call_method<SCAPIX_META_STRING("getResources"), ref<android::content::res::Resources>>(); }
inline ref<android::graphics::drawable::Drawable> Resources_Theme::getDrawable(jint id) { return call_method<SCAPIX_META_STRING("getDrawable"), ref<android::graphics::drawable::Drawable>>(id); }
inline jint Resources_Theme::getChangingConfigurations() { return call_method<SCAPIX_META_STRING("getChangingConfigurations"), jint>(); }
inline void Resources_Theme::dump(jint priority, ref<java::lang::String> tag, ref<java::lang::String> prefix) { return call_method<SCAPIX_META_STRING("dump"), void>(priority, tag, prefix); }

} // namespace android::content::res
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_CONTENT_RES_RESOURCES_THEME_H
