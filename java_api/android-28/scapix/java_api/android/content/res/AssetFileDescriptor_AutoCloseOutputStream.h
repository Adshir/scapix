// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/os/ParcelFileDescriptor_AutoCloseOutputStream.h>

#ifndef SCAPIX_ANDROID_CONTENT_RES_ASSETFILEDESCRIPTOR_AUTOCLOSEOUTPUTSTREAM_H
#define SCAPIX_ANDROID_CONTENT_RES_ASSETFILEDESCRIPTOR_AUTOCLOSEOUTPUTSTREAM_H

namespace scapix::java_api {

namespace android::content::res { class AssetFileDescriptor; }

namespace android::content::res {

class AssetFileDescriptor_AutoCloseOutputStream : public object_base<SCAPIX_META_STRING("android/content/res/AssetFileDescriptor$AutoCloseOutputStream"),
	android::os::ParcelFileDescriptor_AutoCloseOutputStream>
{
public:

	static ref<AssetFileDescriptor_AutoCloseOutputStream> new_object(ref<android::content::res::AssetFileDescriptor> fd);
	void write(ref<link::java::array<jbyte>> buffer, jint offset, jint count);
	void write(ref<link::java::array<jbyte>> buffer);
	void write(jint oneByte);

protected:

	AssetFileDescriptor_AutoCloseOutputStream(handle_type h) : base_(h) {}

};

} // namespace android::content::res
} // namespace scapix::java_api

#include <scapix/java_api/android/content/res/AssetFileDescriptor.h>

namespace scapix::java_api {
namespace android::content::res {

inline ref<AssetFileDescriptor_AutoCloseOutputStream> AssetFileDescriptor_AutoCloseOutputStream::new_object(ref<android::content::res::AssetFileDescriptor> fd) { return base_::new_object(fd); }
inline void AssetFileDescriptor_AutoCloseOutputStream::write(ref<link::java::array<jbyte>> buffer, jint offset, jint count) { return call_method<SCAPIX_META_STRING("write"), void>(buffer, offset, count); }
inline void AssetFileDescriptor_AutoCloseOutputStream::write(ref<link::java::array<jbyte>> buffer) { return call_method<SCAPIX_META_STRING("write"), void>(buffer); }
inline void AssetFileDescriptor_AutoCloseOutputStream::write(jint oneByte) { return call_method<SCAPIX_META_STRING("write"), void>(oneByte); }

} // namespace android::content::res
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_CONTENT_RES_ASSETFILEDESCRIPTOR_AUTOCLOSEOUTPUTSTREAM_H
