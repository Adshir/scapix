// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/content/AsyncTaskLoader.h>

#ifndef SCAPIX_ANDROID_CONTENT_CURSORLOADER_H
#define SCAPIX_ANDROID_CONTENT_CURSORLOADER_H

namespace scapix::java_api {

namespace android::content { class Context; }
namespace android::database { class Cursor; }
namespace android::net { class Uri; }
namespace java::io { class FileDescriptor; }
namespace java::io { class PrintWriter; }
namespace java::lang { class String; }

namespace android::content {

class CursorLoader : public object_base<SCAPIX_META_STRING("android/content/CursorLoader"),
	android::content::AsyncTaskLoader>
{
public:

	static ref<CursorLoader> new_object(ref<android::content::Context> context);
	static ref<CursorLoader> new_object(ref<android::content::Context> context, ref<android::net::Uri> uri, ref<link::java::array<java::lang::String>> projection, ref<java::lang::String> selection, ref<link::java::array<java::lang::String>> selectionArgs, ref<java::lang::String> sortOrder);
	ref<android::database::Cursor> loadInBackground();
	void cancelLoadInBackground();
	void deliverResult(ref<android::database::Cursor> cursor);
	void onCanceled(ref<android::database::Cursor> cursor);
	ref<android::net::Uri> getUri();
	void setUri(ref<android::net::Uri> uri);
	ref<link::java::array<java::lang::String>> getProjection();
	void setProjection(ref<link::java::array<java::lang::String>> projection);
	ref<java::lang::String> getSelection();
	void setSelection(ref<java::lang::String> selection);
	ref<link::java::array<java::lang::String>> getSelectionArgs();
	void setSelectionArgs(ref<link::java::array<java::lang::String>> selectionArgs);
	ref<java::lang::String> getSortOrder();
	void setSortOrder(ref<java::lang::String> sortOrder);
	void dump(ref<java::lang::String> prefix, ref<java::io::FileDescriptor> fd, ref<java::io::PrintWriter> writer, ref<link::java::array<java::lang::String>> args);

protected:

	CursorLoader(handle_type h) : base_(h) {}

};

} // namespace android::content
} // namespace scapix::java_api

#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/database/Cursor.h>
#include <scapix/java_api/android/net/Uri.h>
#include <scapix/java_api/java/io/FileDescriptor.h>
#include <scapix/java_api/java/io/PrintWriter.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::content {

inline ref<CursorLoader> CursorLoader::new_object(ref<android::content::Context> context) { return base_::new_object(context); }
inline ref<CursorLoader> CursorLoader::new_object(ref<android::content::Context> context, ref<android::net::Uri> uri, ref<link::java::array<java::lang::String>> projection, ref<java::lang::String> selection, ref<link::java::array<java::lang::String>> selectionArgs, ref<java::lang::String> sortOrder) { return base_::new_object(context, uri, projection, selection, selectionArgs, sortOrder); }
inline ref<android::database::Cursor> CursorLoader::loadInBackground() { return call_method<SCAPIX_META_STRING("loadInBackground"), ref<android::database::Cursor>>(); }
inline void CursorLoader::cancelLoadInBackground() { return call_method<SCAPIX_META_STRING("cancelLoadInBackground"), void>(); }
inline void CursorLoader::deliverResult(ref<android::database::Cursor> cursor) { return call_method<SCAPIX_META_STRING("deliverResult"), void>(cursor); }
inline void CursorLoader::onCanceled(ref<android::database::Cursor> cursor) { return call_method<SCAPIX_META_STRING("onCanceled"), void>(cursor); }
inline ref<android::net::Uri> CursorLoader::getUri() { return call_method<SCAPIX_META_STRING("getUri"), ref<android::net::Uri>>(); }
inline void CursorLoader::setUri(ref<android::net::Uri> uri) { return call_method<SCAPIX_META_STRING("setUri"), void>(uri); }
inline ref<link::java::array<java::lang::String>> CursorLoader::getProjection() { return call_method<SCAPIX_META_STRING("getProjection"), ref<link::java::array<java::lang::String>>>(); }
inline void CursorLoader::setProjection(ref<link::java::array<java::lang::String>> projection) { return call_method<SCAPIX_META_STRING("setProjection"), void>(projection); }
inline ref<java::lang::String> CursorLoader::getSelection() { return call_method<SCAPIX_META_STRING("getSelection"), ref<java::lang::String>>(); }
inline void CursorLoader::setSelection(ref<java::lang::String> selection) { return call_method<SCAPIX_META_STRING("setSelection"), void>(selection); }
inline ref<link::java::array<java::lang::String>> CursorLoader::getSelectionArgs() { return call_method<SCAPIX_META_STRING("getSelectionArgs"), ref<link::java::array<java::lang::String>>>(); }
inline void CursorLoader::setSelectionArgs(ref<link::java::array<java::lang::String>> selectionArgs) { return call_method<SCAPIX_META_STRING("setSelectionArgs"), void>(selectionArgs); }
inline ref<java::lang::String> CursorLoader::getSortOrder() { return call_method<SCAPIX_META_STRING("getSortOrder"), ref<java::lang::String>>(); }
inline void CursorLoader::setSortOrder(ref<java::lang::String> sortOrder) { return call_method<SCAPIX_META_STRING("setSortOrder"), void>(sortOrder); }
inline void CursorLoader::dump(ref<java::lang::String> prefix, ref<java::io::FileDescriptor> fd, ref<java::io::PrintWriter> writer, ref<link::java::array<java::lang::String>> args) { return call_method<SCAPIX_META_STRING("dump"), void>(prefix, fd, writer, args); }

} // namespace android::content
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_CONTENT_CURSORLOADER_H
