// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_CONTENT_URIMATCHER_H
#define SCAPIX_ANDROID_CONTENT_URIMATCHER_H

namespace scapix::java_api {

namespace android::net { class Uri; }
namespace java::lang { class String; }

namespace android::content {

class UriMatcher : public object_base<SCAPIX_META_STRING("android/content/UriMatcher"),
	java::lang::Object>
{
public:

	static jint NO_MATCH_();

	static ref<UriMatcher> new_object(jint code);
	void addURI(ref<java::lang::String> authority, ref<java::lang::String> path, jint code);
	jint match(ref<android::net::Uri> uri);

protected:

	UriMatcher(handle_type h) : base_(h) {}

};

} // namespace android::content
} // namespace scapix::java_api

#include <scapix/java_api/android/net/Uri.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::content {

inline jint UriMatcher::NO_MATCH_() { return get_static_field<SCAPIX_META_STRING("NO_MATCH"), jint>(); }
inline ref<UriMatcher> UriMatcher::new_object(jint code) { return base_::new_object(code); }
inline void UriMatcher::addURI(ref<java::lang::String> authority, ref<java::lang::String> path, jint code) { return call_method<SCAPIX_META_STRING("addURI"), void>(authority, path, code); }
inline jint UriMatcher::match(ref<android::net::Uri> uri) { return call_method<SCAPIX_META_STRING("match"), jint>(uri); }

} // namespace android::content
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_CONTENT_URIMATCHER_H
