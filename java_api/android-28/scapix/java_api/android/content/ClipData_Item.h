// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_CONTENT_CLIPDATA_ITEM_H
#define SCAPIX_ANDROID_CONTENT_CLIPDATA_ITEM_H

namespace scapix::java_api {

namespace android::content { class Context; }
namespace android::content { class Intent; }
namespace android::net { class Uri; }
namespace java::lang { class CharSequence; }
namespace java::lang { class String; }

namespace android::content {

class ClipData_Item : public object_base<SCAPIX_META_STRING("android/content/ClipData$Item"),
	java::lang::Object>
{
public:

	static ref<ClipData_Item> new_object(ref<java::lang::CharSequence> text);
	static ref<ClipData_Item> new_object(ref<java::lang::CharSequence> text, ref<java::lang::String> htmlText);
	static ref<ClipData_Item> new_object(ref<android::content::Intent> intent);
	static ref<ClipData_Item> new_object(ref<android::net::Uri> uri);
	static ref<ClipData_Item> new_object(ref<java::lang::CharSequence> text, ref<android::content::Intent> intent, ref<android::net::Uri> uri);
	static ref<ClipData_Item> new_object(ref<java::lang::CharSequence> text, ref<java::lang::String> htmlText, ref<android::content::Intent> intent, ref<android::net::Uri> uri);
	ref<java::lang::CharSequence> getText();
	ref<java::lang::String> getHtmlText();
	ref<android::content::Intent> getIntent();
	ref<android::net::Uri> getUri();
	ref<java::lang::CharSequence> coerceToText(ref<android::content::Context> context);
	ref<java::lang::CharSequence> coerceToStyledText(ref<android::content::Context> context);
	ref<java::lang::String> coerceToHtmlText(ref<android::content::Context> context);
	ref<java::lang::String> toString();

protected:

	ClipData_Item(handle_type h) : base_(h) {}

};

} // namespace android::content
} // namespace scapix::java_api

#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/content/Intent.h>
#include <scapix/java_api/android/net/Uri.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::content {

inline ref<ClipData_Item> ClipData_Item::new_object(ref<java::lang::CharSequence> text) { return base_::new_object(text); }
inline ref<ClipData_Item> ClipData_Item::new_object(ref<java::lang::CharSequence> text, ref<java::lang::String> htmlText) { return base_::new_object(text, htmlText); }
inline ref<ClipData_Item> ClipData_Item::new_object(ref<android::content::Intent> intent) { return base_::new_object(intent); }
inline ref<ClipData_Item> ClipData_Item::new_object(ref<android::net::Uri> uri) { return base_::new_object(uri); }
inline ref<ClipData_Item> ClipData_Item::new_object(ref<java::lang::CharSequence> text, ref<android::content::Intent> intent, ref<android::net::Uri> uri) { return base_::new_object(text, intent, uri); }
inline ref<ClipData_Item> ClipData_Item::new_object(ref<java::lang::CharSequence> text, ref<java::lang::String> htmlText, ref<android::content::Intent> intent, ref<android::net::Uri> uri) { return base_::new_object(text, htmlText, intent, uri); }
inline ref<java::lang::CharSequence> ClipData_Item::getText() { return call_method<SCAPIX_META_STRING("getText"), ref<java::lang::CharSequence>>(); }
inline ref<java::lang::String> ClipData_Item::getHtmlText() { return call_method<SCAPIX_META_STRING("getHtmlText"), ref<java::lang::String>>(); }
inline ref<android::content::Intent> ClipData_Item::getIntent() { return call_method<SCAPIX_META_STRING("getIntent"), ref<android::content::Intent>>(); }
inline ref<android::net::Uri> ClipData_Item::getUri() { return call_method<SCAPIX_META_STRING("getUri"), ref<android::net::Uri>>(); }
inline ref<java::lang::CharSequence> ClipData_Item::coerceToText(ref<android::content::Context> context) { return call_method<SCAPIX_META_STRING("coerceToText"), ref<java::lang::CharSequence>>(context); }
inline ref<java::lang::CharSequence> ClipData_Item::coerceToStyledText(ref<android::content::Context> context) { return call_method<SCAPIX_META_STRING("coerceToStyledText"), ref<java::lang::CharSequence>>(context); }
inline ref<java::lang::String> ClipData_Item::coerceToHtmlText(ref<android::content::Context> context) { return call_method<SCAPIX_META_STRING("coerceToHtmlText"), ref<java::lang::String>>(context); }
inline ref<java::lang::String> ClipData_Item::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }

} // namespace android::content
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_CONTENT_CLIPDATA_ITEM_H
