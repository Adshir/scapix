// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/os/Handler.h>

#ifndef SCAPIX_ANDROID_CONTENT_ASYNCQUERYHANDLER_H
#define SCAPIX_ANDROID_CONTENT_ASYNCQUERYHANDLER_H

namespace scapix::java_api {

namespace android::content { class ContentResolver; }
namespace android::content { class ContentValues; }
namespace android::net { class Uri; }
namespace android::os { class Message; }
namespace java::lang { class Object; }
namespace java::lang { class String; }

namespace android::content {

class AsyncQueryHandler : public object_base<SCAPIX_META_STRING("android/content/AsyncQueryHandler"),
	android::os::Handler>
{
public:

	static ref<AsyncQueryHandler> new_object(ref<android::content::ContentResolver> cr);
	void startQuery(jint token, ref<java::lang::Object> cookie, ref<android::net::Uri> uri, ref<link::java::array<java::lang::String>> projection, ref<java::lang::String> selection, ref<link::java::array<java::lang::String>> selectionArgs, ref<java::lang::String> orderBy);
	void cancelOperation(jint token);
	void startInsert(jint token, ref<java::lang::Object> cookie, ref<android::net::Uri> uri, ref<android::content::ContentValues> initialValues);
	void startUpdate(jint token, ref<java::lang::Object> cookie, ref<android::net::Uri> uri, ref<android::content::ContentValues> values, ref<java::lang::String> selection, ref<link::java::array<java::lang::String>> selectionArgs);
	void startDelete(jint token, ref<java::lang::Object> cookie, ref<android::net::Uri> uri, ref<java::lang::String> selection, ref<link::java::array<java::lang::String>> selectionArgs);
	void handleMessage(ref<android::os::Message> msg);

protected:

	AsyncQueryHandler(handle_type h) : base_(h) {}

};

} // namespace android::content
} // namespace scapix::java_api

#include <scapix/java_api/android/content/ContentResolver.h>
#include <scapix/java_api/android/content/ContentValues.h>
#include <scapix/java_api/android/net/Uri.h>
#include <scapix/java_api/android/os/Message.h>
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::content {

inline ref<AsyncQueryHandler> AsyncQueryHandler::new_object(ref<android::content::ContentResolver> cr) { return base_::new_object(cr); }
inline void AsyncQueryHandler::startQuery(jint token, ref<java::lang::Object> cookie, ref<android::net::Uri> uri, ref<link::java::array<java::lang::String>> projection, ref<java::lang::String> selection, ref<link::java::array<java::lang::String>> selectionArgs, ref<java::lang::String> orderBy) { return call_method<SCAPIX_META_STRING("startQuery"), void>(token, cookie, uri, projection, selection, selectionArgs, orderBy); }
inline void AsyncQueryHandler::cancelOperation(jint token) { return call_method<SCAPIX_META_STRING("cancelOperation"), void>(token); }
inline void AsyncQueryHandler::startInsert(jint token, ref<java::lang::Object> cookie, ref<android::net::Uri> uri, ref<android::content::ContentValues> initialValues) { return call_method<SCAPIX_META_STRING("startInsert"), void>(token, cookie, uri, initialValues); }
inline void AsyncQueryHandler::startUpdate(jint token, ref<java::lang::Object> cookie, ref<android::net::Uri> uri, ref<android::content::ContentValues> values, ref<java::lang::String> selection, ref<link::java::array<java::lang::String>> selectionArgs) { return call_method<SCAPIX_META_STRING("startUpdate"), void>(token, cookie, uri, values, selection, selectionArgs); }
inline void AsyncQueryHandler::startDelete(jint token, ref<java::lang::Object> cookie, ref<android::net::Uri> uri, ref<java::lang::String> selection, ref<link::java::array<java::lang::String>> selectionArgs) { return call_method<SCAPIX_META_STRING("startDelete"), void>(token, cookie, uri, selection, selectionArgs); }
inline void AsyncQueryHandler::handleMessage(ref<android::os::Message> msg) { return call_method<SCAPIX_META_STRING("handleMessage"), void>(msg); }

} // namespace android::content
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_CONTENT_ASYNCQUERYHANDLER_H
