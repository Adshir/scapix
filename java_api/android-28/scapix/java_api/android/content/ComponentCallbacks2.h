// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/content/ComponentCallbacks.h>

#ifndef SCAPIX_ANDROID_CONTENT_COMPONENTCALLBACKS2_H
#define SCAPIX_ANDROID_CONTENT_COMPONENTCALLBACKS2_H

namespace scapix::java_api {
namespace android::content {

class ComponentCallbacks2 : public object_base<SCAPIX_META_STRING("android/content/ComponentCallbacks2"),
	java::lang::Object,
	android::content::ComponentCallbacks>
{
public:

	static jint TRIM_MEMORY_BACKGROUND_();
	static jint TRIM_MEMORY_COMPLETE_();
	static jint TRIM_MEMORY_MODERATE_();
	static jint TRIM_MEMORY_RUNNING_CRITICAL_();
	static jint TRIM_MEMORY_RUNNING_LOW_();
	static jint TRIM_MEMORY_RUNNING_MODERATE_();
	static jint TRIM_MEMORY_UI_HIDDEN_();

	void onTrimMemory(jint p1);

protected:

	ComponentCallbacks2(handle_type h) : base_(h) {}

};

} // namespace android::content
} // namespace scapix::java_api


namespace scapix::java_api {
namespace android::content {

inline jint ComponentCallbacks2::TRIM_MEMORY_BACKGROUND_() { return get_static_field<SCAPIX_META_STRING("TRIM_MEMORY_BACKGROUND"), jint>(); }
inline jint ComponentCallbacks2::TRIM_MEMORY_COMPLETE_() { return get_static_field<SCAPIX_META_STRING("TRIM_MEMORY_COMPLETE"), jint>(); }
inline jint ComponentCallbacks2::TRIM_MEMORY_MODERATE_() { return get_static_field<SCAPIX_META_STRING("TRIM_MEMORY_MODERATE"), jint>(); }
inline jint ComponentCallbacks2::TRIM_MEMORY_RUNNING_CRITICAL_() { return get_static_field<SCAPIX_META_STRING("TRIM_MEMORY_RUNNING_CRITICAL"), jint>(); }
inline jint ComponentCallbacks2::TRIM_MEMORY_RUNNING_LOW_() { return get_static_field<SCAPIX_META_STRING("TRIM_MEMORY_RUNNING_LOW"), jint>(); }
inline jint ComponentCallbacks2::TRIM_MEMORY_RUNNING_MODERATE_() { return get_static_field<SCAPIX_META_STRING("TRIM_MEMORY_RUNNING_MODERATE"), jint>(); }
inline jint ComponentCallbacks2::TRIM_MEMORY_UI_HIDDEN_() { return get_static_field<SCAPIX_META_STRING("TRIM_MEMORY_UI_HIDDEN"), jint>(); }
inline void ComponentCallbacks2::onTrimMemory(jint p1) { return call_method<SCAPIX_META_STRING("onTrimMemory"), void>(p1); }

} // namespace android::content
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_CONTENT_COMPONENTCALLBACKS2_H
