// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_COMPANION_BLUETOOTHDEVICEFILTER_BUILDER_H
#define SCAPIX_ANDROID_COMPANION_BLUETOOTHDEVICEFILTER_BUILDER_H

namespace scapix::java_api {

namespace android::companion { class BluetoothDeviceFilter; }
namespace android::os { class ParcelUuid; }
namespace java::lang { class String; }
namespace java::util::regex { class Pattern; }

namespace android::companion {

class BluetoothDeviceFilter_Builder : public object_base<SCAPIX_META_STRING("android/companion/BluetoothDeviceFilter$Builder"),
	java::lang::Object>
{
public:

	static ref<BluetoothDeviceFilter_Builder> new_object();
	ref<android::companion::BluetoothDeviceFilter_Builder> setNamePattern(ref<java::util::regex::Pattern> regex);
	ref<android::companion::BluetoothDeviceFilter_Builder> setAddress(ref<java::lang::String> address);
	ref<android::companion::BluetoothDeviceFilter_Builder> addServiceUuid(ref<android::os::ParcelUuid> serviceUuid, ref<android::os::ParcelUuid> serviceUuidMask);
	ref<android::companion::BluetoothDeviceFilter> build();

protected:

	BluetoothDeviceFilter_Builder(handle_type h) : base_(h) {}

};

} // namespace android::companion
} // namespace scapix::java_api

#include <scapix/java_api/android/companion/BluetoothDeviceFilter.h>
#include <scapix/java_api/android/os/ParcelUuid.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/regex/Pattern.h>

namespace scapix::java_api {
namespace android::companion {

inline ref<BluetoothDeviceFilter_Builder> BluetoothDeviceFilter_Builder::new_object() { return base_::new_object(); }
inline ref<android::companion::BluetoothDeviceFilter_Builder> BluetoothDeviceFilter_Builder::setNamePattern(ref<java::util::regex::Pattern> regex) { return call_method<SCAPIX_META_STRING("setNamePattern"), ref<android::companion::BluetoothDeviceFilter_Builder>>(regex); }
inline ref<android::companion::BluetoothDeviceFilter_Builder> BluetoothDeviceFilter_Builder::setAddress(ref<java::lang::String> address) { return call_method<SCAPIX_META_STRING("setAddress"), ref<android::companion::BluetoothDeviceFilter_Builder>>(address); }
inline ref<android::companion::BluetoothDeviceFilter_Builder> BluetoothDeviceFilter_Builder::addServiceUuid(ref<android::os::ParcelUuid> serviceUuid, ref<android::os::ParcelUuid> serviceUuidMask) { return call_method<SCAPIX_META_STRING("addServiceUuid"), ref<android::companion::BluetoothDeviceFilter_Builder>>(serviceUuid, serviceUuidMask); }
inline ref<android::companion::BluetoothDeviceFilter> BluetoothDeviceFilter_Builder::build() { return call_method<SCAPIX_META_STRING("build"), ref<android::companion::BluetoothDeviceFilter>>(); }

} // namespace android::companion
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_COMPANION_BLUETOOTHDEVICEFILTER_BUILDER_H
