// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/drm/DrmEvent.h>

#ifndef SCAPIX_ANDROID_DRM_DRMERROREVENT_H
#define SCAPIX_ANDROID_DRM_DRMERROREVENT_H

namespace scapix::java_api {

namespace java::lang { class String; }
namespace java::util { class HashMap; }

namespace android::drm {

class DrmErrorEvent : public object_base<SCAPIX_META_STRING("android/drm/DrmErrorEvent"),
	android::drm::DrmEvent>
{
public:

	static jint TYPE_ACQUIRE_DRM_INFO_FAILED_();
	static jint TYPE_NOT_SUPPORTED_();
	static jint TYPE_NO_INTERNET_CONNECTION_();
	static jint TYPE_OUT_OF_MEMORY_();
	static jint TYPE_PROCESS_DRM_INFO_FAILED_();
	static jint TYPE_REMOVE_ALL_RIGHTS_FAILED_();
	static jint TYPE_RIGHTS_NOT_INSTALLED_();
	static jint TYPE_RIGHTS_RENEWAL_NOT_ALLOWED_();

	static ref<DrmErrorEvent> new_object(jint uniqueId, jint type, ref<java::lang::String> message);
	static ref<DrmErrorEvent> new_object(jint uniqueId, jint type, ref<java::lang::String> message, ref<java::util::HashMap> attributes);

protected:

	DrmErrorEvent(handle_type h) : base_(h) {}

};

} // namespace android::drm
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/HashMap.h>

namespace scapix::java_api {
namespace android::drm {

inline jint DrmErrorEvent::TYPE_ACQUIRE_DRM_INFO_FAILED_() { return get_static_field<SCAPIX_META_STRING("TYPE_ACQUIRE_DRM_INFO_FAILED"), jint>(); }
inline jint DrmErrorEvent::TYPE_NOT_SUPPORTED_() { return get_static_field<SCAPIX_META_STRING("TYPE_NOT_SUPPORTED"), jint>(); }
inline jint DrmErrorEvent::TYPE_NO_INTERNET_CONNECTION_() { return get_static_field<SCAPIX_META_STRING("TYPE_NO_INTERNET_CONNECTION"), jint>(); }
inline jint DrmErrorEvent::TYPE_OUT_OF_MEMORY_() { return get_static_field<SCAPIX_META_STRING("TYPE_OUT_OF_MEMORY"), jint>(); }
inline jint DrmErrorEvent::TYPE_PROCESS_DRM_INFO_FAILED_() { return get_static_field<SCAPIX_META_STRING("TYPE_PROCESS_DRM_INFO_FAILED"), jint>(); }
inline jint DrmErrorEvent::TYPE_REMOVE_ALL_RIGHTS_FAILED_() { return get_static_field<SCAPIX_META_STRING("TYPE_REMOVE_ALL_RIGHTS_FAILED"), jint>(); }
inline jint DrmErrorEvent::TYPE_RIGHTS_NOT_INSTALLED_() { return get_static_field<SCAPIX_META_STRING("TYPE_RIGHTS_NOT_INSTALLED"), jint>(); }
inline jint DrmErrorEvent::TYPE_RIGHTS_RENEWAL_NOT_ALLOWED_() { return get_static_field<SCAPIX_META_STRING("TYPE_RIGHTS_RENEWAL_NOT_ALLOWED"), jint>(); }
inline ref<DrmErrorEvent> DrmErrorEvent::new_object(jint uniqueId, jint type, ref<java::lang::String> message) { return base_::new_object(uniqueId, type, message); }
inline ref<DrmErrorEvent> DrmErrorEvent::new_object(jint uniqueId, jint type, ref<java::lang::String> message, ref<java::util::HashMap> attributes) { return base_::new_object(uniqueId, type, message, attributes); }

} // namespace android::drm
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_DRM_DRMERROREVENT_H
