// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_DRM_DRMINFOREQUEST_H
#define SCAPIX_ANDROID_DRM_DRMINFOREQUEST_H

namespace scapix::java_api {

namespace java::lang { class String; }
namespace java::util { class Iterator; }

namespace android::drm {

class DrmInfoRequest : public object_base<SCAPIX_META_STRING("android/drm/DrmInfoRequest"),
	java::lang::Object>
{
public:

	static ref<java::lang::String> ACCOUNT_ID_();
	static ref<java::lang::String> SUBSCRIPTION_ID_();
	static jint TYPE_REGISTRATION_INFO_();
	static jint TYPE_RIGHTS_ACQUISITION_INFO_();
	static jint TYPE_RIGHTS_ACQUISITION_PROGRESS_INFO_();
	static jint TYPE_UNREGISTRATION_INFO_();

	static ref<DrmInfoRequest> new_object(jint infoType, ref<java::lang::String> mimeType);
	ref<java::lang::String> getMimeType();
	jint getInfoType();
	void put(ref<java::lang::String> key, ref<java::lang::Object> value);
	ref<java::lang::Object> get(ref<java::lang::String> key);
	ref<java::util::Iterator> keyIterator();
	ref<java::util::Iterator> iterator();

protected:

	DrmInfoRequest(handle_type h) : base_(h) {}

};

} // namespace android::drm
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Iterator.h>

namespace scapix::java_api {
namespace android::drm {

inline ref<java::lang::String> DrmInfoRequest::ACCOUNT_ID_() { return get_static_field<SCAPIX_META_STRING("ACCOUNT_ID"), ref<java::lang::String>>(); }
inline ref<java::lang::String> DrmInfoRequest::SUBSCRIPTION_ID_() { return get_static_field<SCAPIX_META_STRING("SUBSCRIPTION_ID"), ref<java::lang::String>>(); }
inline jint DrmInfoRequest::TYPE_REGISTRATION_INFO_() { return get_static_field<SCAPIX_META_STRING("TYPE_REGISTRATION_INFO"), jint>(); }
inline jint DrmInfoRequest::TYPE_RIGHTS_ACQUISITION_INFO_() { return get_static_field<SCAPIX_META_STRING("TYPE_RIGHTS_ACQUISITION_INFO"), jint>(); }
inline jint DrmInfoRequest::TYPE_RIGHTS_ACQUISITION_PROGRESS_INFO_() { return get_static_field<SCAPIX_META_STRING("TYPE_RIGHTS_ACQUISITION_PROGRESS_INFO"), jint>(); }
inline jint DrmInfoRequest::TYPE_UNREGISTRATION_INFO_() { return get_static_field<SCAPIX_META_STRING("TYPE_UNREGISTRATION_INFO"), jint>(); }
inline ref<DrmInfoRequest> DrmInfoRequest::new_object(jint infoType, ref<java::lang::String> mimeType) { return base_::new_object(infoType, mimeType); }
inline ref<java::lang::String> DrmInfoRequest::getMimeType() { return call_method<SCAPIX_META_STRING("getMimeType"), ref<java::lang::String>>(); }
inline jint DrmInfoRequest::getInfoType() { return call_method<SCAPIX_META_STRING("getInfoType"), jint>(); }
inline void DrmInfoRequest::put(ref<java::lang::String> key, ref<java::lang::Object> value) { return call_method<SCAPIX_META_STRING("put"), void>(key, value); }
inline ref<java::lang::Object> DrmInfoRequest::get(ref<java::lang::String> key) { return call_method<SCAPIX_META_STRING("get"), ref<java::lang::Object>>(key); }
inline ref<java::util::Iterator> DrmInfoRequest::keyIterator() { return call_method<SCAPIX_META_STRING("keyIterator"), ref<java::util::Iterator>>(); }
inline ref<java::util::Iterator> DrmInfoRequest::iterator() { return call_method<SCAPIX_META_STRING("iterator"), ref<java::util::Iterator>>(); }

} // namespace android::drm
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_DRM_DRMINFOREQUEST_H
