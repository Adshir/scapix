// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_ANDROID_APP_ACTIVITYMANAGER_PROCESSERRORSTATEINFO_H
#define SCAPIX_ANDROID_APP_ACTIVITYMANAGER_PROCESSERRORSTATEINFO_H

namespace scapix::java_api {

namespace android::os { class Parcel; }
namespace android::os { class Parcelable_Creator; }
namespace java::lang { class String; }

namespace android::app {

class ActivityManager_ProcessErrorStateInfo : public object_base<SCAPIX_META_STRING("android/app/ActivityManager$ProcessErrorStateInfo"),
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static jint CRASHED_();
	static ref<android::os::Parcelable_Creator> CREATOR_();
	static jint NOT_RESPONDING_();
	static jint NO_ERROR_();
	jint condition();
	void condition(jint);
	ref<link::java::array<jbyte>> crashData();
	void crashData(ref<link::java::array<jbyte>>);
	ref<java::lang::String> longMsg();
	void longMsg(ref<java::lang::String>);
	jint pid();
	void pid(jint);
	ref<java::lang::String> processName();
	void processName(ref<java::lang::String>);
	ref<java::lang::String> shortMsg();
	void shortMsg(ref<java::lang::String>);
	ref<java::lang::String> stackTrace();
	void stackTrace(ref<java::lang::String>);
	ref<java::lang::String> tag();
	void tag(ref<java::lang::String>);
	jint uid();
	void uid(jint);

	static ref<ActivityManager_ProcessErrorStateInfo> new_object();
	jint describeContents();
	void writeToParcel(ref<android::os::Parcel> dest, jint flags);
	void readFromParcel(ref<android::os::Parcel> source);

protected:

	ActivityManager_ProcessErrorStateInfo(handle_type h) : base_(h) {}

};

} // namespace android::app
} // namespace scapix::java_api

#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::app {

inline jint ActivityManager_ProcessErrorStateInfo::CRASHED_() { return get_static_field<SCAPIX_META_STRING("CRASHED"), jint>(); }
inline ref<android::os::Parcelable_Creator> ActivityManager_ProcessErrorStateInfo::CREATOR_() { return get_static_field<SCAPIX_META_STRING("CREATOR"), ref<android::os::Parcelable_Creator>>(); }
inline jint ActivityManager_ProcessErrorStateInfo::NOT_RESPONDING_() { return get_static_field<SCAPIX_META_STRING("NOT_RESPONDING"), jint>(); }
inline jint ActivityManager_ProcessErrorStateInfo::NO_ERROR_() { return get_static_field<SCAPIX_META_STRING("NO_ERROR"), jint>(); }
inline jint ActivityManager_ProcessErrorStateInfo::condition() { return get_field<SCAPIX_META_STRING("condition"), jint>(); }
inline void ActivityManager_ProcessErrorStateInfo::condition(jint v) { set_field<SCAPIX_META_STRING("condition"), jint>(v); }
inline ref<link::java::array<jbyte>> ActivityManager_ProcessErrorStateInfo::crashData() { return get_field<SCAPIX_META_STRING("crashData"), ref<link::java::array<jbyte>>>(); }
inline void ActivityManager_ProcessErrorStateInfo::crashData(ref<link::java::array<jbyte>> v) { set_field<SCAPIX_META_STRING("crashData"), ref<link::java::array<jbyte>>>(v); }
inline ref<java::lang::String> ActivityManager_ProcessErrorStateInfo::longMsg() { return get_field<SCAPIX_META_STRING("longMsg"), ref<java::lang::String>>(); }
inline void ActivityManager_ProcessErrorStateInfo::longMsg(ref<java::lang::String> v) { set_field<SCAPIX_META_STRING("longMsg"), ref<java::lang::String>>(v); }
inline jint ActivityManager_ProcessErrorStateInfo::pid() { return get_field<SCAPIX_META_STRING("pid"), jint>(); }
inline void ActivityManager_ProcessErrorStateInfo::pid(jint v) { set_field<SCAPIX_META_STRING("pid"), jint>(v); }
inline ref<java::lang::String> ActivityManager_ProcessErrorStateInfo::processName() { return get_field<SCAPIX_META_STRING("processName"), ref<java::lang::String>>(); }
inline void ActivityManager_ProcessErrorStateInfo::processName(ref<java::lang::String> v) { set_field<SCAPIX_META_STRING("processName"), ref<java::lang::String>>(v); }
inline ref<java::lang::String> ActivityManager_ProcessErrorStateInfo::shortMsg() { return get_field<SCAPIX_META_STRING("shortMsg"), ref<java::lang::String>>(); }
inline void ActivityManager_ProcessErrorStateInfo::shortMsg(ref<java::lang::String> v) { set_field<SCAPIX_META_STRING("shortMsg"), ref<java::lang::String>>(v); }
inline ref<java::lang::String> ActivityManager_ProcessErrorStateInfo::stackTrace() { return get_field<SCAPIX_META_STRING("stackTrace"), ref<java::lang::String>>(); }
inline void ActivityManager_ProcessErrorStateInfo::stackTrace(ref<java::lang::String> v) { set_field<SCAPIX_META_STRING("stackTrace"), ref<java::lang::String>>(v); }
inline ref<java::lang::String> ActivityManager_ProcessErrorStateInfo::tag() { return get_field<SCAPIX_META_STRING("tag"), ref<java::lang::String>>(); }
inline void ActivityManager_ProcessErrorStateInfo::tag(ref<java::lang::String> v) { set_field<SCAPIX_META_STRING("tag"), ref<java::lang::String>>(v); }
inline jint ActivityManager_ProcessErrorStateInfo::uid() { return get_field<SCAPIX_META_STRING("uid"), jint>(); }
inline void ActivityManager_ProcessErrorStateInfo::uid(jint v) { set_field<SCAPIX_META_STRING("uid"), jint>(v); }
inline ref<ActivityManager_ProcessErrorStateInfo> ActivityManager_ProcessErrorStateInfo::new_object() { return base_::new_object(); }
inline jint ActivityManager_ProcessErrorStateInfo::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }
inline void ActivityManager_ProcessErrorStateInfo::writeToParcel(ref<android::os::Parcel> dest, jint flags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(dest, flags); }
inline void ActivityManager_ProcessErrorStateInfo::readFromParcel(ref<android::os::Parcel> source) { return call_method<SCAPIX_META_STRING("readFromParcel"), void>(source); }

} // namespace android::app
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_APP_ACTIVITYMANAGER_PROCESSERRORSTATEINFO_H
