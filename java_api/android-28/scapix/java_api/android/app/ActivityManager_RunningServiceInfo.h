// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_ANDROID_APP_ACTIVITYMANAGER_RUNNINGSERVICEINFO_H
#define SCAPIX_ANDROID_APP_ACTIVITYMANAGER_RUNNINGSERVICEINFO_H

namespace scapix::java_api {

namespace android::content { class ComponentName; }
namespace android::os { class Parcel; }
namespace android::os { class Parcelable_Creator; }
namespace java::lang { class String; }

namespace android::app {

class ActivityManager_RunningServiceInfo : public object_base<SCAPIX_META_STRING("android/app/ActivityManager$RunningServiceInfo"),
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static ref<android::os::Parcelable_Creator> CREATOR_();
	static jint FLAG_FOREGROUND_();
	static jint FLAG_PERSISTENT_PROCESS_();
	static jint FLAG_STARTED_();
	static jint FLAG_SYSTEM_PROCESS_();
	jlong activeSince();
	void activeSince(jlong);
	jint clientCount();
	void clientCount(jint);
	jint clientLabel();
	void clientLabel(jint);
	ref<java::lang::String> clientPackage();
	void clientPackage(ref<java::lang::String>);
	jint crashCount();
	void crashCount(jint);
	jint flags();
	void flags(jint);
	jboolean foreground();
	void foreground(jboolean);
	jlong lastActivityTime();
	void lastActivityTime(jlong);
	jint pid();
	void pid(jint);
	ref<java::lang::String> process();
	void process(ref<java::lang::String>);
	jlong restarting();
	void restarting(jlong);
	ref<android::content::ComponentName> service();
	void service(ref<android::content::ComponentName>);
	jboolean started();
	void started(jboolean);
	jint uid();
	void uid(jint);

	static ref<ActivityManager_RunningServiceInfo> new_object();
	jint describeContents();
	void writeToParcel(ref<android::os::Parcel> dest, jint flags);
	void readFromParcel(ref<android::os::Parcel> source);

protected:

	ActivityManager_RunningServiceInfo(handle_type h) : base_(h) {}

};

} // namespace android::app
} // namespace scapix::java_api

#include <scapix/java_api/android/content/ComponentName.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::app {

inline ref<android::os::Parcelable_Creator> ActivityManager_RunningServiceInfo::CREATOR_() { return get_static_field<SCAPIX_META_STRING("CREATOR"), ref<android::os::Parcelable_Creator>>(); }
inline jint ActivityManager_RunningServiceInfo::FLAG_FOREGROUND_() { return get_static_field<SCAPIX_META_STRING("FLAG_FOREGROUND"), jint>(); }
inline jint ActivityManager_RunningServiceInfo::FLAG_PERSISTENT_PROCESS_() { return get_static_field<SCAPIX_META_STRING("FLAG_PERSISTENT_PROCESS"), jint>(); }
inline jint ActivityManager_RunningServiceInfo::FLAG_STARTED_() { return get_static_field<SCAPIX_META_STRING("FLAG_STARTED"), jint>(); }
inline jint ActivityManager_RunningServiceInfo::FLAG_SYSTEM_PROCESS_() { return get_static_field<SCAPIX_META_STRING("FLAG_SYSTEM_PROCESS"), jint>(); }
inline jlong ActivityManager_RunningServiceInfo::activeSince() { return get_field<SCAPIX_META_STRING("activeSince"), jlong>(); }
inline void ActivityManager_RunningServiceInfo::activeSince(jlong v) { set_field<SCAPIX_META_STRING("activeSince"), jlong>(v); }
inline jint ActivityManager_RunningServiceInfo::clientCount() { return get_field<SCAPIX_META_STRING("clientCount"), jint>(); }
inline void ActivityManager_RunningServiceInfo::clientCount(jint v) { set_field<SCAPIX_META_STRING("clientCount"), jint>(v); }
inline jint ActivityManager_RunningServiceInfo::clientLabel() { return get_field<SCAPIX_META_STRING("clientLabel"), jint>(); }
inline void ActivityManager_RunningServiceInfo::clientLabel(jint v) { set_field<SCAPIX_META_STRING("clientLabel"), jint>(v); }
inline ref<java::lang::String> ActivityManager_RunningServiceInfo::clientPackage() { return get_field<SCAPIX_META_STRING("clientPackage"), ref<java::lang::String>>(); }
inline void ActivityManager_RunningServiceInfo::clientPackage(ref<java::lang::String> v) { set_field<SCAPIX_META_STRING("clientPackage"), ref<java::lang::String>>(v); }
inline jint ActivityManager_RunningServiceInfo::crashCount() { return get_field<SCAPIX_META_STRING("crashCount"), jint>(); }
inline void ActivityManager_RunningServiceInfo::crashCount(jint v) { set_field<SCAPIX_META_STRING("crashCount"), jint>(v); }
inline jint ActivityManager_RunningServiceInfo::flags() { return get_field<SCAPIX_META_STRING("flags"), jint>(); }
inline void ActivityManager_RunningServiceInfo::flags(jint v) { set_field<SCAPIX_META_STRING("flags"), jint>(v); }
inline jboolean ActivityManager_RunningServiceInfo::foreground() { return get_field<SCAPIX_META_STRING("foreground"), jboolean>(); }
inline void ActivityManager_RunningServiceInfo::foreground(jboolean v) { set_field<SCAPIX_META_STRING("foreground"), jboolean>(v); }
inline jlong ActivityManager_RunningServiceInfo::lastActivityTime() { return get_field<SCAPIX_META_STRING("lastActivityTime"), jlong>(); }
inline void ActivityManager_RunningServiceInfo::lastActivityTime(jlong v) { set_field<SCAPIX_META_STRING("lastActivityTime"), jlong>(v); }
inline jint ActivityManager_RunningServiceInfo::pid() { return get_field<SCAPIX_META_STRING("pid"), jint>(); }
inline void ActivityManager_RunningServiceInfo::pid(jint v) { set_field<SCAPIX_META_STRING("pid"), jint>(v); }
inline ref<java::lang::String> ActivityManager_RunningServiceInfo::process() { return get_field<SCAPIX_META_STRING("process"), ref<java::lang::String>>(); }
inline void ActivityManager_RunningServiceInfo::process(ref<java::lang::String> v) { set_field<SCAPIX_META_STRING("process"), ref<java::lang::String>>(v); }
inline jlong ActivityManager_RunningServiceInfo::restarting() { return get_field<SCAPIX_META_STRING("restarting"), jlong>(); }
inline void ActivityManager_RunningServiceInfo::restarting(jlong v) { set_field<SCAPIX_META_STRING("restarting"), jlong>(v); }
inline ref<android::content::ComponentName> ActivityManager_RunningServiceInfo::service() { return get_field<SCAPIX_META_STRING("service"), ref<android::content::ComponentName>>(); }
inline void ActivityManager_RunningServiceInfo::service(ref<android::content::ComponentName> v) { set_field<SCAPIX_META_STRING("service"), ref<android::content::ComponentName>>(v); }
inline jboolean ActivityManager_RunningServiceInfo::started() { return get_field<SCAPIX_META_STRING("started"), jboolean>(); }
inline void ActivityManager_RunningServiceInfo::started(jboolean v) { set_field<SCAPIX_META_STRING("started"), jboolean>(v); }
inline jint ActivityManager_RunningServiceInfo::uid() { return get_field<SCAPIX_META_STRING("uid"), jint>(); }
inline void ActivityManager_RunningServiceInfo::uid(jint v) { set_field<SCAPIX_META_STRING("uid"), jint>(v); }
inline ref<ActivityManager_RunningServiceInfo> ActivityManager_RunningServiceInfo::new_object() { return base_::new_object(); }
inline jint ActivityManager_RunningServiceInfo::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }
inline void ActivityManager_RunningServiceInfo::writeToParcel(ref<android::os::Parcel> dest, jint flags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(dest, flags); }
inline void ActivityManager_RunningServiceInfo::readFromParcel(ref<android::os::Parcel> source) { return call_method<SCAPIX_META_STRING("readFromParcel"), void>(source); }

} // namespace android::app
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_APP_ACTIVITYMANAGER_RUNNINGSERVICEINFO_H
