// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_ANDROID_APP_REMOTEACTION_H
#define SCAPIX_ANDROID_APP_REMOTEACTION_H

namespace scapix::java_api {

namespace android::app { class PendingIntent; }
namespace android::graphics::drawable { class Icon; }
namespace android::os { class Parcel; }
namespace android::os { class Parcelable_Creator; }
namespace java::io { class PrintWriter; }
namespace java::lang { class CharSequence; }
namespace java::lang { class String; }

namespace android::app {

class RemoteAction : public object_base<SCAPIX_META_STRING("android/app/RemoteAction"),
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static ref<android::os::Parcelable_Creator> CREATOR_();

	static ref<RemoteAction> new_object(ref<android::graphics::drawable::Icon> icon, ref<java::lang::CharSequence> title, ref<java::lang::CharSequence> contentDescription, ref<android::app::PendingIntent> intent);
	void setEnabled(jboolean enabled);
	jboolean isEnabled();
	void setShouldShowIcon(jboolean shouldShowIcon);
	jboolean shouldShowIcon();
	ref<android::graphics::drawable::Icon> getIcon();
	ref<java::lang::CharSequence> getTitle();
	ref<java::lang::CharSequence> getContentDescription();
	ref<android::app::PendingIntent> getActionIntent();
	ref<android::app::RemoteAction> clone();
	jint describeContents();
	void writeToParcel(ref<android::os::Parcel> out, jint flags);
	void dump(ref<java::lang::String> prefix, ref<java::io::PrintWriter> pw);

protected:

	RemoteAction(handle_type h) : base_(h) {}

};

} // namespace android::app
} // namespace scapix::java_api

#include <scapix/java_api/android/app/PendingIntent.h>
#include <scapix/java_api/android/graphics/drawable/Icon.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/io/PrintWriter.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::app {

inline ref<android::os::Parcelable_Creator> RemoteAction::CREATOR_() { return get_static_field<SCAPIX_META_STRING("CREATOR"), ref<android::os::Parcelable_Creator>>(); }
inline ref<RemoteAction> RemoteAction::new_object(ref<android::graphics::drawable::Icon> icon, ref<java::lang::CharSequence> title, ref<java::lang::CharSequence> contentDescription, ref<android::app::PendingIntent> intent) { return base_::new_object(icon, title, contentDescription, intent); }
inline void RemoteAction::setEnabled(jboolean enabled) { return call_method<SCAPIX_META_STRING("setEnabled"), void>(enabled); }
inline jboolean RemoteAction::isEnabled() { return call_method<SCAPIX_META_STRING("isEnabled"), jboolean>(); }
inline void RemoteAction::setShouldShowIcon(jboolean shouldShowIcon) { return call_method<SCAPIX_META_STRING("setShouldShowIcon"), void>(shouldShowIcon); }
inline jboolean RemoteAction::shouldShowIcon() { return call_method<SCAPIX_META_STRING("shouldShowIcon"), jboolean>(); }
inline ref<android::graphics::drawable::Icon> RemoteAction::getIcon() { return call_method<SCAPIX_META_STRING("getIcon"), ref<android::graphics::drawable::Icon>>(); }
inline ref<java::lang::CharSequence> RemoteAction::getTitle() { return call_method<SCAPIX_META_STRING("getTitle"), ref<java::lang::CharSequence>>(); }
inline ref<java::lang::CharSequence> RemoteAction::getContentDescription() { return call_method<SCAPIX_META_STRING("getContentDescription"), ref<java::lang::CharSequence>>(); }
inline ref<android::app::PendingIntent> RemoteAction::getActionIntent() { return call_method<SCAPIX_META_STRING("getActionIntent"), ref<android::app::PendingIntent>>(); }
inline ref<android::app::RemoteAction> RemoteAction::clone() { return call_method<SCAPIX_META_STRING("clone"), ref<android::app::RemoteAction>>(); }
inline jint RemoteAction::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }
inline void RemoteAction::writeToParcel(ref<android::os::Parcel> out, jint flags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(out, flags); }
inline void RemoteAction::dump(ref<java::lang::String> prefix, ref<java::io::PrintWriter> pw) { return call_method<SCAPIX_META_STRING("dump"), void>(prefix, pw); }

} // namespace android::app
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_APP_REMOTEACTION_H
