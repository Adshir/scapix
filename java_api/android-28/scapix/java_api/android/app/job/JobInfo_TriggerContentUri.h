// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_ANDROID_APP_JOB_JOBINFO_TRIGGERCONTENTURI_H
#define SCAPIX_ANDROID_APP_JOB_JOBINFO_TRIGGERCONTENTURI_H

namespace scapix::java_api {

namespace android::net { class Uri; }
namespace android::os { class Parcel; }
namespace android::os { class Parcelable_Creator; }

namespace android::app::job {

class JobInfo_TriggerContentUri : public object_base<SCAPIX_META_STRING("android/app/job/JobInfo$TriggerContentUri"),
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static ref<android::os::Parcelable_Creator> CREATOR_();
	static jint FLAG_NOTIFY_FOR_DESCENDANTS_();

	static ref<JobInfo_TriggerContentUri> new_object(ref<android::net::Uri> uri, jint flags);
	ref<android::net::Uri> getUri();
	jint getFlags();
	jboolean equals(ref<java::lang::Object> o);
	jint hashCode();
	jint describeContents();
	void writeToParcel(ref<android::os::Parcel> out, jint flags);

protected:

	JobInfo_TriggerContentUri(handle_type h) : base_(h) {}

};

} // namespace android::app::job
} // namespace scapix::java_api

#include <scapix/java_api/android/net/Uri.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>

namespace scapix::java_api {
namespace android::app::job {

inline ref<android::os::Parcelable_Creator> JobInfo_TriggerContentUri::CREATOR_() { return get_static_field<SCAPIX_META_STRING("CREATOR"), ref<android::os::Parcelable_Creator>>(); }
inline jint JobInfo_TriggerContentUri::FLAG_NOTIFY_FOR_DESCENDANTS_() { return get_static_field<SCAPIX_META_STRING("FLAG_NOTIFY_FOR_DESCENDANTS"), jint>(); }
inline ref<JobInfo_TriggerContentUri> JobInfo_TriggerContentUri::new_object(ref<android::net::Uri> uri, jint flags) { return base_::new_object(uri, flags); }
inline ref<android::net::Uri> JobInfo_TriggerContentUri::getUri() { return call_method<SCAPIX_META_STRING("getUri"), ref<android::net::Uri>>(); }
inline jint JobInfo_TriggerContentUri::getFlags() { return call_method<SCAPIX_META_STRING("getFlags"), jint>(); }
inline jboolean JobInfo_TriggerContentUri::equals(ref<java::lang::Object> o) { return call_method<SCAPIX_META_STRING("equals"), jboolean>(o); }
inline jint JobInfo_TriggerContentUri::hashCode() { return call_method<SCAPIX_META_STRING("hashCode"), jint>(); }
inline jint JobInfo_TriggerContentUri::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }
inline void JobInfo_TriggerContentUri::writeToParcel(ref<android::os::Parcel> out, jint flags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(out, flags); }

} // namespace android::app::job
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_APP_JOB_JOBINFO_TRIGGERCONTENTURI_H
