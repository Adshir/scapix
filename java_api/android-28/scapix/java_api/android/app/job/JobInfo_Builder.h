// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_APP_JOB_JOBINFO_BUILDER_H
#define SCAPIX_ANDROID_APP_JOB_JOBINFO_BUILDER_H

namespace scapix::java_api {

namespace android::app::job { class JobInfo; }
namespace android::app::job { class JobInfo_TriggerContentUri; }
namespace android::content { class ClipData; }
namespace android::content { class ComponentName; }
namespace android::net { class NetworkRequest; }
namespace android::os { class Bundle; }
namespace android::os { class PersistableBundle; }

namespace android::app::job {

class JobInfo_Builder : public object_base<SCAPIX_META_STRING("android/app/job/JobInfo$Builder"),
	java::lang::Object>
{
public:

	static ref<JobInfo_Builder> new_object(jint jobId, ref<android::content::ComponentName> jobService);
	ref<android::app::job::JobInfo_Builder> setExtras(ref<android::os::PersistableBundle> extras);
	ref<android::app::job::JobInfo_Builder> setTransientExtras(ref<android::os::Bundle> extras);
	ref<android::app::job::JobInfo_Builder> setClipData(ref<android::content::ClipData> clip, jint grantFlags);
	ref<android::app::job::JobInfo_Builder> setRequiredNetworkType(jint networkType);
	ref<android::app::job::JobInfo_Builder> setRequiredNetwork(ref<android::net::NetworkRequest> networkRequest);
	ref<android::app::job::JobInfo_Builder> setEstimatedNetworkBytes(jlong downloadBytes, jlong p2);
	ref<android::app::job::JobInfo_Builder> setRequiresCharging(jboolean requiresCharging);
	ref<android::app::job::JobInfo_Builder> setRequiresBatteryNotLow(jboolean batteryNotLow);
	ref<android::app::job::JobInfo_Builder> setRequiresDeviceIdle(jboolean requiresDeviceIdle);
	ref<android::app::job::JobInfo_Builder> setRequiresStorageNotLow(jboolean storageNotLow);
	ref<android::app::job::JobInfo_Builder> addTriggerContentUri(ref<android::app::job::JobInfo_TriggerContentUri> uri);
	ref<android::app::job::JobInfo_Builder> setTriggerContentUpdateDelay(jlong durationMs);
	ref<android::app::job::JobInfo_Builder> setTriggerContentMaxDelay(jlong durationMs);
	ref<android::app::job::JobInfo_Builder> setPeriodic(jlong intervalMillis);
	ref<android::app::job::JobInfo_Builder> setPeriodic(jlong intervalMillis, jlong p2);
	ref<android::app::job::JobInfo_Builder> setMinimumLatency(jlong minLatencyMillis);
	ref<android::app::job::JobInfo_Builder> setOverrideDeadline(jlong maxExecutionDelayMillis);
	ref<android::app::job::JobInfo_Builder> setBackoffCriteria(jlong initialBackoffMillis, jint p2);
	ref<android::app::job::JobInfo_Builder> setImportantWhileForeground(jboolean importantWhileForeground);
	ref<android::app::job::JobInfo_Builder> setPrefetch(jboolean prefetch);
	ref<android::app::job::JobInfo_Builder> setPersisted(jboolean isPersisted);
	ref<android::app::job::JobInfo> build();

protected:

	JobInfo_Builder(handle_type h) : base_(h) {}

};

} // namespace android::app::job
} // namespace scapix::java_api

#include <scapix/java_api/android/app/job/JobInfo.h>
#include <scapix/java_api/android/app/job/JobInfo_TriggerContentUri.h>
#include <scapix/java_api/android/content/ClipData.h>
#include <scapix/java_api/android/content/ComponentName.h>
#include <scapix/java_api/android/net/NetworkRequest.h>
#include <scapix/java_api/android/os/Bundle.h>
#include <scapix/java_api/android/os/PersistableBundle.h>

namespace scapix::java_api {
namespace android::app::job {

inline ref<JobInfo_Builder> JobInfo_Builder::new_object(jint jobId, ref<android::content::ComponentName> jobService) { return base_::new_object(jobId, jobService); }
inline ref<android::app::job::JobInfo_Builder> JobInfo_Builder::setExtras(ref<android::os::PersistableBundle> extras) { return call_method<SCAPIX_META_STRING("setExtras"), ref<android::app::job::JobInfo_Builder>>(extras); }
inline ref<android::app::job::JobInfo_Builder> JobInfo_Builder::setTransientExtras(ref<android::os::Bundle> extras) { return call_method<SCAPIX_META_STRING("setTransientExtras"), ref<android::app::job::JobInfo_Builder>>(extras); }
inline ref<android::app::job::JobInfo_Builder> JobInfo_Builder::setClipData(ref<android::content::ClipData> clip, jint grantFlags) { return call_method<SCAPIX_META_STRING("setClipData"), ref<android::app::job::JobInfo_Builder>>(clip, grantFlags); }
inline ref<android::app::job::JobInfo_Builder> JobInfo_Builder::setRequiredNetworkType(jint networkType) { return call_method<SCAPIX_META_STRING("setRequiredNetworkType"), ref<android::app::job::JobInfo_Builder>>(networkType); }
inline ref<android::app::job::JobInfo_Builder> JobInfo_Builder::setRequiredNetwork(ref<android::net::NetworkRequest> networkRequest) { return call_method<SCAPIX_META_STRING("setRequiredNetwork"), ref<android::app::job::JobInfo_Builder>>(networkRequest); }
inline ref<android::app::job::JobInfo_Builder> JobInfo_Builder::setEstimatedNetworkBytes(jlong downloadBytes, jlong p2) { return call_method<SCAPIX_META_STRING("setEstimatedNetworkBytes"), ref<android::app::job::JobInfo_Builder>>(downloadBytes, p2); }
inline ref<android::app::job::JobInfo_Builder> JobInfo_Builder::setRequiresCharging(jboolean requiresCharging) { return call_method<SCAPIX_META_STRING("setRequiresCharging"), ref<android::app::job::JobInfo_Builder>>(requiresCharging); }
inline ref<android::app::job::JobInfo_Builder> JobInfo_Builder::setRequiresBatteryNotLow(jboolean batteryNotLow) { return call_method<SCAPIX_META_STRING("setRequiresBatteryNotLow"), ref<android::app::job::JobInfo_Builder>>(batteryNotLow); }
inline ref<android::app::job::JobInfo_Builder> JobInfo_Builder::setRequiresDeviceIdle(jboolean requiresDeviceIdle) { return call_method<SCAPIX_META_STRING("setRequiresDeviceIdle"), ref<android::app::job::JobInfo_Builder>>(requiresDeviceIdle); }
inline ref<android::app::job::JobInfo_Builder> JobInfo_Builder::setRequiresStorageNotLow(jboolean storageNotLow) { return call_method<SCAPIX_META_STRING("setRequiresStorageNotLow"), ref<android::app::job::JobInfo_Builder>>(storageNotLow); }
inline ref<android::app::job::JobInfo_Builder> JobInfo_Builder::addTriggerContentUri(ref<android::app::job::JobInfo_TriggerContentUri> uri) { return call_method<SCAPIX_META_STRING("addTriggerContentUri"), ref<android::app::job::JobInfo_Builder>>(uri); }
inline ref<android::app::job::JobInfo_Builder> JobInfo_Builder::setTriggerContentUpdateDelay(jlong durationMs) { return call_method<SCAPIX_META_STRING("setTriggerContentUpdateDelay"), ref<android::app::job::JobInfo_Builder>>(durationMs); }
inline ref<android::app::job::JobInfo_Builder> JobInfo_Builder::setTriggerContentMaxDelay(jlong durationMs) { return call_method<SCAPIX_META_STRING("setTriggerContentMaxDelay"), ref<android::app::job::JobInfo_Builder>>(durationMs); }
inline ref<android::app::job::JobInfo_Builder> JobInfo_Builder::setPeriodic(jlong intervalMillis) { return call_method<SCAPIX_META_STRING("setPeriodic"), ref<android::app::job::JobInfo_Builder>>(intervalMillis); }
inline ref<android::app::job::JobInfo_Builder> JobInfo_Builder::setPeriodic(jlong intervalMillis, jlong p2) { return call_method<SCAPIX_META_STRING("setPeriodic"), ref<android::app::job::JobInfo_Builder>>(intervalMillis, p2); }
inline ref<android::app::job::JobInfo_Builder> JobInfo_Builder::setMinimumLatency(jlong minLatencyMillis) { return call_method<SCAPIX_META_STRING("setMinimumLatency"), ref<android::app::job::JobInfo_Builder>>(minLatencyMillis); }
inline ref<android::app::job::JobInfo_Builder> JobInfo_Builder::setOverrideDeadline(jlong maxExecutionDelayMillis) { return call_method<SCAPIX_META_STRING("setOverrideDeadline"), ref<android::app::job::JobInfo_Builder>>(maxExecutionDelayMillis); }
inline ref<android::app::job::JobInfo_Builder> JobInfo_Builder::setBackoffCriteria(jlong initialBackoffMillis, jint p2) { return call_method<SCAPIX_META_STRING("setBackoffCriteria"), ref<android::app::job::JobInfo_Builder>>(initialBackoffMillis, p2); }
inline ref<android::app::job::JobInfo_Builder> JobInfo_Builder::setImportantWhileForeground(jboolean importantWhileForeground) { return call_method<SCAPIX_META_STRING("setImportantWhileForeground"), ref<android::app::job::JobInfo_Builder>>(importantWhileForeground); }
inline ref<android::app::job::JobInfo_Builder> JobInfo_Builder::setPrefetch(jboolean prefetch) { return call_method<SCAPIX_META_STRING("setPrefetch"), ref<android::app::job::JobInfo_Builder>>(prefetch); }
inline ref<android::app::job::JobInfo_Builder> JobInfo_Builder::setPersisted(jboolean isPersisted) { return call_method<SCAPIX_META_STRING("setPersisted"), ref<android::app::job::JobInfo_Builder>>(isPersisted); }
inline ref<android::app::job::JobInfo> JobInfo_Builder::build() { return call_method<SCAPIX_META_STRING("build"), ref<android::app::job::JobInfo>>(); }

} // namespace android::app::job
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_APP_JOB_JOBINFO_BUILDER_H
