// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_APP_DOWNLOADMANAGER_REQUEST_H
#define SCAPIX_ANDROID_APP_DOWNLOADMANAGER_REQUEST_H

namespace scapix::java_api {

namespace android::content { class Context; }
namespace android::net { class Uri; }
namespace java::lang { class CharSequence; }
namespace java::lang { class String; }

namespace android::app {

class DownloadManager_Request : public object_base<SCAPIX_META_STRING("android/app/DownloadManager$Request"),
	java::lang::Object>
{
public:

	static jint NETWORK_MOBILE_();
	static jint NETWORK_WIFI_();
	static jint VISIBILITY_HIDDEN_();
	static jint VISIBILITY_VISIBLE_();
	static jint VISIBILITY_VISIBLE_NOTIFY_COMPLETED_();
	static jint VISIBILITY_VISIBLE_NOTIFY_ONLY_COMPLETION_();

	static ref<DownloadManager_Request> new_object(ref<android::net::Uri> uri);
	ref<android::app::DownloadManager_Request> setDestinationUri(ref<android::net::Uri> uri);
	ref<android::app::DownloadManager_Request> setDestinationInExternalFilesDir(ref<android::content::Context> context, ref<java::lang::String> dirType, ref<java::lang::String> subPath);
	ref<android::app::DownloadManager_Request> setDestinationInExternalPublicDir(ref<java::lang::String> dirType, ref<java::lang::String> subPath);
	void allowScanningByMediaScanner();
	ref<android::app::DownloadManager_Request> addRequestHeader(ref<java::lang::String> header, ref<java::lang::String> value);
	ref<android::app::DownloadManager_Request> setTitle(ref<java::lang::CharSequence> title);
	ref<android::app::DownloadManager_Request> setDescription(ref<java::lang::CharSequence> description);
	ref<android::app::DownloadManager_Request> setMimeType(ref<java::lang::String> mimeType);
	ref<android::app::DownloadManager_Request> setShowRunningNotification(jboolean show);
	ref<android::app::DownloadManager_Request> setNotificationVisibility(jint visibility);
	ref<android::app::DownloadManager_Request> setAllowedNetworkTypes(jint flags);
	ref<android::app::DownloadManager_Request> setAllowedOverRoaming(jboolean allowed);
	ref<android::app::DownloadManager_Request> setAllowedOverMetered(jboolean allow);
	ref<android::app::DownloadManager_Request> setRequiresCharging(jboolean requiresCharging);
	ref<android::app::DownloadManager_Request> setRequiresDeviceIdle(jboolean requiresDeviceIdle);
	ref<android::app::DownloadManager_Request> setVisibleInDownloadsUi(jboolean isVisible);

protected:

	DownloadManager_Request(handle_type h) : base_(h) {}

};

} // namespace android::app
} // namespace scapix::java_api

#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/net/Uri.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::app {

inline jint DownloadManager_Request::NETWORK_MOBILE_() { return get_static_field<SCAPIX_META_STRING("NETWORK_MOBILE"), jint>(); }
inline jint DownloadManager_Request::NETWORK_WIFI_() { return get_static_field<SCAPIX_META_STRING("NETWORK_WIFI"), jint>(); }
inline jint DownloadManager_Request::VISIBILITY_HIDDEN_() { return get_static_field<SCAPIX_META_STRING("VISIBILITY_HIDDEN"), jint>(); }
inline jint DownloadManager_Request::VISIBILITY_VISIBLE_() { return get_static_field<SCAPIX_META_STRING("VISIBILITY_VISIBLE"), jint>(); }
inline jint DownloadManager_Request::VISIBILITY_VISIBLE_NOTIFY_COMPLETED_() { return get_static_field<SCAPIX_META_STRING("VISIBILITY_VISIBLE_NOTIFY_COMPLETED"), jint>(); }
inline jint DownloadManager_Request::VISIBILITY_VISIBLE_NOTIFY_ONLY_COMPLETION_() { return get_static_field<SCAPIX_META_STRING("VISIBILITY_VISIBLE_NOTIFY_ONLY_COMPLETION"), jint>(); }
inline ref<DownloadManager_Request> DownloadManager_Request::new_object(ref<android::net::Uri> uri) { return base_::new_object(uri); }
inline ref<android::app::DownloadManager_Request> DownloadManager_Request::setDestinationUri(ref<android::net::Uri> uri) { return call_method<SCAPIX_META_STRING("setDestinationUri"), ref<android::app::DownloadManager_Request>>(uri); }
inline ref<android::app::DownloadManager_Request> DownloadManager_Request::setDestinationInExternalFilesDir(ref<android::content::Context> context, ref<java::lang::String> dirType, ref<java::lang::String> subPath) { return call_method<SCAPIX_META_STRING("setDestinationInExternalFilesDir"), ref<android::app::DownloadManager_Request>>(context, dirType, subPath); }
inline ref<android::app::DownloadManager_Request> DownloadManager_Request::setDestinationInExternalPublicDir(ref<java::lang::String> dirType, ref<java::lang::String> subPath) { return call_method<SCAPIX_META_STRING("setDestinationInExternalPublicDir"), ref<android::app::DownloadManager_Request>>(dirType, subPath); }
inline void DownloadManager_Request::allowScanningByMediaScanner() { return call_method<SCAPIX_META_STRING("allowScanningByMediaScanner"), void>(); }
inline ref<android::app::DownloadManager_Request> DownloadManager_Request::addRequestHeader(ref<java::lang::String> header, ref<java::lang::String> value) { return call_method<SCAPIX_META_STRING("addRequestHeader"), ref<android::app::DownloadManager_Request>>(header, value); }
inline ref<android::app::DownloadManager_Request> DownloadManager_Request::setTitle(ref<java::lang::CharSequence> title) { return call_method<SCAPIX_META_STRING("setTitle"), ref<android::app::DownloadManager_Request>>(title); }
inline ref<android::app::DownloadManager_Request> DownloadManager_Request::setDescription(ref<java::lang::CharSequence> description) { return call_method<SCAPIX_META_STRING("setDescription"), ref<android::app::DownloadManager_Request>>(description); }
inline ref<android::app::DownloadManager_Request> DownloadManager_Request::setMimeType(ref<java::lang::String> mimeType) { return call_method<SCAPIX_META_STRING("setMimeType"), ref<android::app::DownloadManager_Request>>(mimeType); }
inline ref<android::app::DownloadManager_Request> DownloadManager_Request::setShowRunningNotification(jboolean show) { return call_method<SCAPIX_META_STRING("setShowRunningNotification"), ref<android::app::DownloadManager_Request>>(show); }
inline ref<android::app::DownloadManager_Request> DownloadManager_Request::setNotificationVisibility(jint visibility) { return call_method<SCAPIX_META_STRING("setNotificationVisibility"), ref<android::app::DownloadManager_Request>>(visibility); }
inline ref<android::app::DownloadManager_Request> DownloadManager_Request::setAllowedNetworkTypes(jint flags) { return call_method<SCAPIX_META_STRING("setAllowedNetworkTypes"), ref<android::app::DownloadManager_Request>>(flags); }
inline ref<android::app::DownloadManager_Request> DownloadManager_Request::setAllowedOverRoaming(jboolean allowed) { return call_method<SCAPIX_META_STRING("setAllowedOverRoaming"), ref<android::app::DownloadManager_Request>>(allowed); }
inline ref<android::app::DownloadManager_Request> DownloadManager_Request::setAllowedOverMetered(jboolean allow) { return call_method<SCAPIX_META_STRING("setAllowedOverMetered"), ref<android::app::DownloadManager_Request>>(allow); }
inline ref<android::app::DownloadManager_Request> DownloadManager_Request::setRequiresCharging(jboolean requiresCharging) { return call_method<SCAPIX_META_STRING("setRequiresCharging"), ref<android::app::DownloadManager_Request>>(requiresCharging); }
inline ref<android::app::DownloadManager_Request> DownloadManager_Request::setRequiresDeviceIdle(jboolean requiresDeviceIdle) { return call_method<SCAPIX_META_STRING("setRequiresDeviceIdle"), ref<android::app::DownloadManager_Request>>(requiresDeviceIdle); }
inline ref<android::app::DownloadManager_Request> DownloadManager_Request::setVisibleInDownloadsUi(jboolean isVisible) { return call_method<SCAPIX_META_STRING("setVisibleInDownloadsUi"), ref<android::app::DownloadManager_Request>>(isVisible); }

} // namespace android::app
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_APP_DOWNLOADMANAGER_REQUEST_H
