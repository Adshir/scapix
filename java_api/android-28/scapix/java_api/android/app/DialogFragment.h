// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/app/Fragment.h>
#include <scapix/java_api/android/content/DialogInterface_OnCancelListener.h>
#include <scapix/java_api/android/content/DialogInterface_OnDismissListener.h>

#ifndef SCAPIX_ANDROID_APP_DIALOGFRAGMENT_H
#define SCAPIX_ANDROID_APP_DIALOGFRAGMENT_H

namespace scapix::java_api {

namespace android::app { class Dialog; }
namespace android::app { class FragmentManager; }
namespace android::app { class FragmentTransaction; }
namespace android::content { class Context; }
namespace android::content { class DialogInterface; }
namespace android::os { class Bundle; }
namespace android::view { class LayoutInflater; }
namespace java::io { class FileDescriptor; }
namespace java::io { class PrintWriter; }
namespace java::lang { class String; }

namespace android::app {

class DialogFragment : public object_base<SCAPIX_META_STRING("android/app/DialogFragment"),
	android::app::Fragment,
	android::content::DialogInterface_OnCancelListener,
	android::content::DialogInterface_OnDismissListener>
{
public:

	static jint STYLE_NORMAL_();
	static jint STYLE_NO_FRAME_();
	static jint STYLE_NO_INPUT_();
	static jint STYLE_NO_TITLE_();

	static ref<DialogFragment> new_object();
	void setStyle(jint style, jint theme);
	void show(ref<android::app::FragmentManager> manager, ref<java::lang::String> tag);
	jint show(ref<android::app::FragmentTransaction> transaction, ref<java::lang::String> tag);
	void dismiss();
	void dismissAllowingStateLoss();
	ref<android::app::Dialog> getDialog();
	jint getTheme();
	void setCancelable(jboolean cancelable);
	jboolean isCancelable();
	void setShowsDialog(jboolean showsDialog);
	jboolean getShowsDialog();
	void onAttach(ref<android::content::Context> context);
	void onDetach();
	void onCreate(ref<android::os::Bundle> savedInstanceState);
	ref<android::view::LayoutInflater> onGetLayoutInflater(ref<android::os::Bundle> savedInstanceState);
	ref<android::app::Dialog> onCreateDialog(ref<android::os::Bundle> savedInstanceState);
	void onCancel(ref<android::content::DialogInterface> dialog);
	void onDismiss(ref<android::content::DialogInterface> dialog);
	void onActivityCreated(ref<android::os::Bundle> savedInstanceState);
	void onStart();
	void onSaveInstanceState(ref<android::os::Bundle> outState);
	void onStop();
	void onDestroyView();
	void dump(ref<java::lang::String> prefix, ref<java::io::FileDescriptor> fd, ref<java::io::PrintWriter> writer, ref<link::java::array<java::lang::String>> args);

protected:

	DialogFragment(handle_type h) : base_(h) {}

};

} // namespace android::app
} // namespace scapix::java_api

#include <scapix/java_api/android/app/Dialog.h>
#include <scapix/java_api/android/app/FragmentManager.h>
#include <scapix/java_api/android/app/FragmentTransaction.h>
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/content/DialogInterface.h>
#include <scapix/java_api/android/os/Bundle.h>
#include <scapix/java_api/android/view/LayoutInflater.h>
#include <scapix/java_api/java/io/FileDescriptor.h>
#include <scapix/java_api/java/io/PrintWriter.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::app {

inline jint DialogFragment::STYLE_NORMAL_() { return get_static_field<SCAPIX_META_STRING("STYLE_NORMAL"), jint>(); }
inline jint DialogFragment::STYLE_NO_FRAME_() { return get_static_field<SCAPIX_META_STRING("STYLE_NO_FRAME"), jint>(); }
inline jint DialogFragment::STYLE_NO_INPUT_() { return get_static_field<SCAPIX_META_STRING("STYLE_NO_INPUT"), jint>(); }
inline jint DialogFragment::STYLE_NO_TITLE_() { return get_static_field<SCAPIX_META_STRING("STYLE_NO_TITLE"), jint>(); }
inline ref<DialogFragment> DialogFragment::new_object() { return base_::new_object(); }
inline void DialogFragment::setStyle(jint style, jint theme) { return call_method<SCAPIX_META_STRING("setStyle"), void>(style, theme); }
inline void DialogFragment::show(ref<android::app::FragmentManager> manager, ref<java::lang::String> tag) { return call_method<SCAPIX_META_STRING("show"), void>(manager, tag); }
inline jint DialogFragment::show(ref<android::app::FragmentTransaction> transaction, ref<java::lang::String> tag) { return call_method<SCAPIX_META_STRING("show"), jint>(transaction, tag); }
inline void DialogFragment::dismiss() { return call_method<SCAPIX_META_STRING("dismiss"), void>(); }
inline void DialogFragment::dismissAllowingStateLoss() { return call_method<SCAPIX_META_STRING("dismissAllowingStateLoss"), void>(); }
inline ref<android::app::Dialog> DialogFragment::getDialog() { return call_method<SCAPIX_META_STRING("getDialog"), ref<android::app::Dialog>>(); }
inline jint DialogFragment::getTheme() { return call_method<SCAPIX_META_STRING("getTheme"), jint>(); }
inline void DialogFragment::setCancelable(jboolean cancelable) { return call_method<SCAPIX_META_STRING("setCancelable"), void>(cancelable); }
inline jboolean DialogFragment::isCancelable() { return call_method<SCAPIX_META_STRING("isCancelable"), jboolean>(); }
inline void DialogFragment::setShowsDialog(jboolean showsDialog) { return call_method<SCAPIX_META_STRING("setShowsDialog"), void>(showsDialog); }
inline jboolean DialogFragment::getShowsDialog() { return call_method<SCAPIX_META_STRING("getShowsDialog"), jboolean>(); }
inline void DialogFragment::onAttach(ref<android::content::Context> context) { return call_method<SCAPIX_META_STRING("onAttach"), void>(context); }
inline void DialogFragment::onDetach() { return call_method<SCAPIX_META_STRING("onDetach"), void>(); }
inline void DialogFragment::onCreate(ref<android::os::Bundle> savedInstanceState) { return call_method<SCAPIX_META_STRING("onCreate"), void>(savedInstanceState); }
inline ref<android::view::LayoutInflater> DialogFragment::onGetLayoutInflater(ref<android::os::Bundle> savedInstanceState) { return call_method<SCAPIX_META_STRING("onGetLayoutInflater"), ref<android::view::LayoutInflater>>(savedInstanceState); }
inline ref<android::app::Dialog> DialogFragment::onCreateDialog(ref<android::os::Bundle> savedInstanceState) { return call_method<SCAPIX_META_STRING("onCreateDialog"), ref<android::app::Dialog>>(savedInstanceState); }
inline void DialogFragment::onCancel(ref<android::content::DialogInterface> dialog) { return call_method<SCAPIX_META_STRING("onCancel"), void>(dialog); }
inline void DialogFragment::onDismiss(ref<android::content::DialogInterface> dialog) { return call_method<SCAPIX_META_STRING("onDismiss"), void>(dialog); }
inline void DialogFragment::onActivityCreated(ref<android::os::Bundle> savedInstanceState) { return call_method<SCAPIX_META_STRING("onActivityCreated"), void>(savedInstanceState); }
inline void DialogFragment::onStart() { return call_method<SCAPIX_META_STRING("onStart"), void>(); }
inline void DialogFragment::onSaveInstanceState(ref<android::os::Bundle> outState) { return call_method<SCAPIX_META_STRING("onSaveInstanceState"), void>(outState); }
inline void DialogFragment::onStop() { return call_method<SCAPIX_META_STRING("onStop"), void>(); }
inline void DialogFragment::onDestroyView() { return call_method<SCAPIX_META_STRING("onDestroyView"), void>(); }
inline void DialogFragment::dump(ref<java::lang::String> prefix, ref<java::io::FileDescriptor> fd, ref<java::io::PrintWriter> writer, ref<link::java::array<java::lang::String>> args) { return call_method<SCAPIX_META_STRING("dump"), void>(prefix, fd, writer, args); }

} // namespace android::app
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_APP_DIALOGFRAGMENT_H
