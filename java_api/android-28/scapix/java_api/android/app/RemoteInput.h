// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_ANDROID_APP_REMOTEINPUT_H
#define SCAPIX_ANDROID_APP_REMOTEINPUT_H

namespace scapix::java_api {

namespace android::content { class Intent; }
namespace android::os { class Bundle; }
namespace android::os { class Parcel; }
namespace android::os { class Parcelable_Creator; }
namespace java::lang { class CharSequence; }
namespace java::lang { class String; }
namespace java::util { class Map; }
namespace java::util { class Set; }
namespace android::app { class RemoteInput_Builder; }

namespace android::app {

class RemoteInput : public object_base<SCAPIX_META_STRING("android/app/RemoteInput"),
	java::lang::Object,
	android::os::Parcelable>
{
public:

	using Builder = RemoteInput_Builder;

	static ref<android::os::Parcelable_Creator> CREATOR_();
	static ref<java::lang::String> EXTRA_RESULTS_DATA_();
	static ref<java::lang::String> RESULTS_CLIP_LABEL_();
	static jint SOURCE_CHOICE_();
	static jint SOURCE_FREE_FORM_INPUT_();

	ref<java::lang::String> getResultKey();
	ref<java::lang::CharSequence> getLabel();
	ref<link::java::array<java::lang::CharSequence>> getChoices();
	ref<java::util::Set> getAllowedDataTypes();
	jboolean isDataOnly();
	jboolean getAllowFreeFormInput();
	ref<android::os::Bundle> getExtras();
	static ref<java::util::Map> getDataResultsFromIntent(ref<android::content::Intent> intent, ref<java::lang::String> remoteInputResultKey);
	static ref<android::os::Bundle> getResultsFromIntent(ref<android::content::Intent> intent);
	static void addResultsToIntent(ref<link::java::array<android::app::RemoteInput>> remoteInputs, ref<android::content::Intent> intent, ref<android::os::Bundle> results);
	static void addDataResultToIntent(ref<android::app::RemoteInput> remoteInput, ref<android::content::Intent> intent, ref<java::util::Map> results);
	static void setResultsSource(ref<android::content::Intent> intent, jint source);
	static jint getResultsSource(ref<android::content::Intent> intent);
	jint describeContents();
	void writeToParcel(ref<android::os::Parcel> out, jint flags);

protected:

	RemoteInput(handle_type h) : base_(h) {}

};

} // namespace android::app
} // namespace scapix::java_api

#include <scapix/java_api/android/content/Intent.h>
#include <scapix/java_api/android/os/Bundle.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Map.h>
#include <scapix/java_api/java/util/Set.h>

namespace scapix::java_api {
namespace android::app {

inline ref<android::os::Parcelable_Creator> RemoteInput::CREATOR_() { return get_static_field<SCAPIX_META_STRING("CREATOR"), ref<android::os::Parcelable_Creator>>(); }
inline ref<java::lang::String> RemoteInput::EXTRA_RESULTS_DATA_() { return get_static_field<SCAPIX_META_STRING("EXTRA_RESULTS_DATA"), ref<java::lang::String>>(); }
inline ref<java::lang::String> RemoteInput::RESULTS_CLIP_LABEL_() { return get_static_field<SCAPIX_META_STRING("RESULTS_CLIP_LABEL"), ref<java::lang::String>>(); }
inline jint RemoteInput::SOURCE_CHOICE_() { return get_static_field<SCAPIX_META_STRING("SOURCE_CHOICE"), jint>(); }
inline jint RemoteInput::SOURCE_FREE_FORM_INPUT_() { return get_static_field<SCAPIX_META_STRING("SOURCE_FREE_FORM_INPUT"), jint>(); }
inline ref<java::lang::String> RemoteInput::getResultKey() { return call_method<SCAPIX_META_STRING("getResultKey"), ref<java::lang::String>>(); }
inline ref<java::lang::CharSequence> RemoteInput::getLabel() { return call_method<SCAPIX_META_STRING("getLabel"), ref<java::lang::CharSequence>>(); }
inline ref<link::java::array<java::lang::CharSequence>> RemoteInput::getChoices() { return call_method<SCAPIX_META_STRING("getChoices"), ref<link::java::array<java::lang::CharSequence>>>(); }
inline ref<java::util::Set> RemoteInput::getAllowedDataTypes() { return call_method<SCAPIX_META_STRING("getAllowedDataTypes"), ref<java::util::Set>>(); }
inline jboolean RemoteInput::isDataOnly() { return call_method<SCAPIX_META_STRING("isDataOnly"), jboolean>(); }
inline jboolean RemoteInput::getAllowFreeFormInput() { return call_method<SCAPIX_META_STRING("getAllowFreeFormInput"), jboolean>(); }
inline ref<android::os::Bundle> RemoteInput::getExtras() { return call_method<SCAPIX_META_STRING("getExtras"), ref<android::os::Bundle>>(); }
inline ref<java::util::Map> RemoteInput::getDataResultsFromIntent(ref<android::content::Intent> intent, ref<java::lang::String> remoteInputResultKey) { return call_static_method<SCAPIX_META_STRING("getDataResultsFromIntent"), ref<java::util::Map>>(intent, remoteInputResultKey); }
inline ref<android::os::Bundle> RemoteInput::getResultsFromIntent(ref<android::content::Intent> intent) { return call_static_method<SCAPIX_META_STRING("getResultsFromIntent"), ref<android::os::Bundle>>(intent); }
inline void RemoteInput::addResultsToIntent(ref<link::java::array<android::app::RemoteInput>> remoteInputs, ref<android::content::Intent> intent, ref<android::os::Bundle> results) { return call_static_method<SCAPIX_META_STRING("addResultsToIntent"), void>(remoteInputs, intent, results); }
inline void RemoteInput::addDataResultToIntent(ref<android::app::RemoteInput> remoteInput, ref<android::content::Intent> intent, ref<java::util::Map> results) { return call_static_method<SCAPIX_META_STRING("addDataResultToIntent"), void>(remoteInput, intent, results); }
inline void RemoteInput::setResultsSource(ref<android::content::Intent> intent, jint source) { return call_static_method<SCAPIX_META_STRING("setResultsSource"), void>(intent, source); }
inline jint RemoteInput::getResultsSource(ref<android::content::Intent> intent) { return call_static_method<SCAPIX_META_STRING("getResultsSource"), jint>(intent); }
inline jint RemoteInput::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }
inline void RemoteInput::writeToParcel(ref<android::os::Parcel> out, jint flags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(out, flags); }

} // namespace android::app
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_APP_REMOTEINPUT_H
