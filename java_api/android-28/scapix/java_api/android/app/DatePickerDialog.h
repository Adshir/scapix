// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/app/AlertDialog.h>
#include <scapix/java_api/android/content/DialogInterface_OnClickListener.h>
#include <scapix/java_api/android/widget/DatePicker_OnDateChangedListener.h>

#ifndef SCAPIX_ANDROID_APP_DATEPICKERDIALOG_H
#define SCAPIX_ANDROID_APP_DATEPICKERDIALOG_H

namespace scapix::java_api {

namespace android::app { class DatePickerDialog_OnDateSetListener; }
namespace android::content { class Context; }
namespace android::content { class DialogInterface; }
namespace android::os { class Bundle; }
namespace android::widget { class DatePicker; }

namespace android::app {

class DatePickerDialog : public object_base<SCAPIX_META_STRING("android/app/DatePickerDialog"),
	android::app::AlertDialog,
	android::content::DialogInterface_OnClickListener,
	android::widget::DatePicker_OnDateChangedListener>
{
public:

	using OnDateSetListener = DatePickerDialog_OnDateSetListener;

	static ref<DatePickerDialog> new_object(ref<android::content::Context> context);
	static ref<DatePickerDialog> new_object(ref<android::content::Context> context, jint themeResId);
	static ref<DatePickerDialog> new_object(ref<android::content::Context> context, ref<android::app::DatePickerDialog_OnDateSetListener> listener, jint year, jint month, jint dayOfMonth);
	static ref<DatePickerDialog> new_object(ref<android::content::Context> context, jint themeResId, ref<android::app::DatePickerDialog_OnDateSetListener> listener, jint year, jint monthOfYear, jint dayOfMonth);
	void onDateChanged(ref<android::widget::DatePicker> view, jint year, jint month, jint dayOfMonth);
	void setOnDateSetListener(ref<android::app::DatePickerDialog_OnDateSetListener> listener);
	void onClick(ref<android::content::DialogInterface> dialog, jint which);
	ref<android::widget::DatePicker> getDatePicker();
	void updateDate(jint year, jint month, jint dayOfMonth);
	ref<android::os::Bundle> onSaveInstanceState();
	void onRestoreInstanceState(ref<android::os::Bundle> savedInstanceState);

protected:

	DatePickerDialog(handle_type h) : base_(h) {}

};

} // namespace android::app
} // namespace scapix::java_api

#include <scapix/java_api/android/app/DatePickerDialog_OnDateSetListener.h>
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/content/DialogInterface.h>
#include <scapix/java_api/android/os/Bundle.h>
#include <scapix/java_api/android/widget/DatePicker.h>

namespace scapix::java_api {
namespace android::app {

inline ref<DatePickerDialog> DatePickerDialog::new_object(ref<android::content::Context> context) { return base_::new_object(context); }
inline ref<DatePickerDialog> DatePickerDialog::new_object(ref<android::content::Context> context, jint themeResId) { return base_::new_object(context, themeResId); }
inline ref<DatePickerDialog> DatePickerDialog::new_object(ref<android::content::Context> context, ref<android::app::DatePickerDialog_OnDateSetListener> listener, jint year, jint month, jint dayOfMonth) { return base_::new_object(context, listener, year, month, dayOfMonth); }
inline ref<DatePickerDialog> DatePickerDialog::new_object(ref<android::content::Context> context, jint themeResId, ref<android::app::DatePickerDialog_OnDateSetListener> listener, jint year, jint monthOfYear, jint dayOfMonth) { return base_::new_object(context, themeResId, listener, year, monthOfYear, dayOfMonth); }
inline void DatePickerDialog::onDateChanged(ref<android::widget::DatePicker> view, jint year, jint month, jint dayOfMonth) { return call_method<SCAPIX_META_STRING("onDateChanged"), void>(view, year, month, dayOfMonth); }
inline void DatePickerDialog::setOnDateSetListener(ref<android::app::DatePickerDialog_OnDateSetListener> listener) { return call_method<SCAPIX_META_STRING("setOnDateSetListener"), void>(listener); }
inline void DatePickerDialog::onClick(ref<android::content::DialogInterface> dialog, jint which) { return call_method<SCAPIX_META_STRING("onClick"), void>(dialog, which); }
inline ref<android::widget::DatePicker> DatePickerDialog::getDatePicker() { return call_method<SCAPIX_META_STRING("getDatePicker"), ref<android::widget::DatePicker>>(); }
inline void DatePickerDialog::updateDate(jint year, jint month, jint dayOfMonth) { return call_method<SCAPIX_META_STRING("updateDate"), void>(year, month, dayOfMonth); }
inline ref<android::os::Bundle> DatePickerDialog::onSaveInstanceState() { return call_method<SCAPIX_META_STRING("onSaveInstanceState"), ref<android::os::Bundle>>(); }
inline void DatePickerDialog::onRestoreInstanceState(ref<android::os::Bundle> savedInstanceState) { return call_method<SCAPIX_META_STRING("onRestoreInstanceState"), void>(savedInstanceState); }

} // namespace android::app
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_APP_DATEPICKERDIALOG_H
