// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/content/ContextWrapper.h>
#include <scapix/java_api/android/content/ComponentCallbacks2.h>

#ifndef SCAPIX_ANDROID_APP_SERVICE_H
#define SCAPIX_ANDROID_APP_SERVICE_H

namespace scapix::java_api {

namespace android::app { class Application; }
namespace android::app { class Notification; }
namespace android::content { class Intent; }
namespace android::content::res { class Configuration; }
namespace android::os { class IBinder; }

namespace android::app {

class Service : public object_base<SCAPIX_META_STRING("android/app/Service"),
	android::content::ContextWrapper,
	android::content::ComponentCallbacks2>
{
public:

	static jint START_CONTINUATION_MASK_();
	static jint START_FLAG_REDELIVERY_();
	static jint START_FLAG_RETRY_();
	static jint START_NOT_STICKY_();
	static jint START_REDELIVER_INTENT_();
	static jint START_STICKY_();
	static jint START_STICKY_COMPATIBILITY_();
	static jint STOP_FOREGROUND_DETACH_();
	static jint STOP_FOREGROUND_REMOVE_();

	static ref<Service> new_object();
	ref<android::app::Application> getApplication();
	void onCreate();
	void onStart(ref<android::content::Intent> intent, jint startId);
	jint onStartCommand(ref<android::content::Intent> intent, jint flags, jint startId);
	void onDestroy();
	void onConfigurationChanged(ref<android::content::res::Configuration> newConfig);
	void onLowMemory();
	void onTrimMemory(jint level);
	ref<android::os::IBinder> onBind(ref<android::content::Intent> p1);
	jboolean onUnbind(ref<android::content::Intent> intent);
	void onRebind(ref<android::content::Intent> intent);
	void onTaskRemoved(ref<android::content::Intent> rootIntent);
	void stopSelf();
	void stopSelf(jint startId);
	jboolean stopSelfResult(jint startId);
	void startForeground(jint id, ref<android::app::Notification> notification);
	void stopForeground(jboolean removeNotification);
	void stopForeground(jint flags);

protected:

	Service(handle_type h) : base_(h) {}

};

} // namespace android::app
} // namespace scapix::java_api

#include <scapix/java_api/android/app/Application.h>
#include <scapix/java_api/android/app/Notification.h>
#include <scapix/java_api/android/content/Intent.h>
#include <scapix/java_api/android/content/res/Configuration.h>
#include <scapix/java_api/android/os/IBinder.h>

namespace scapix::java_api {
namespace android::app {

inline jint Service::START_CONTINUATION_MASK_() { return get_static_field<SCAPIX_META_STRING("START_CONTINUATION_MASK"), jint>(); }
inline jint Service::START_FLAG_REDELIVERY_() { return get_static_field<SCAPIX_META_STRING("START_FLAG_REDELIVERY"), jint>(); }
inline jint Service::START_FLAG_RETRY_() { return get_static_field<SCAPIX_META_STRING("START_FLAG_RETRY"), jint>(); }
inline jint Service::START_NOT_STICKY_() { return get_static_field<SCAPIX_META_STRING("START_NOT_STICKY"), jint>(); }
inline jint Service::START_REDELIVER_INTENT_() { return get_static_field<SCAPIX_META_STRING("START_REDELIVER_INTENT"), jint>(); }
inline jint Service::START_STICKY_() { return get_static_field<SCAPIX_META_STRING("START_STICKY"), jint>(); }
inline jint Service::START_STICKY_COMPATIBILITY_() { return get_static_field<SCAPIX_META_STRING("START_STICKY_COMPATIBILITY"), jint>(); }
inline jint Service::STOP_FOREGROUND_DETACH_() { return get_static_field<SCAPIX_META_STRING("STOP_FOREGROUND_DETACH"), jint>(); }
inline jint Service::STOP_FOREGROUND_REMOVE_() { return get_static_field<SCAPIX_META_STRING("STOP_FOREGROUND_REMOVE"), jint>(); }
inline ref<Service> Service::new_object() { return base_::new_object(); }
inline ref<android::app::Application> Service::getApplication() { return call_method<SCAPIX_META_STRING("getApplication"), ref<android::app::Application>>(); }
inline void Service::onCreate() { return call_method<SCAPIX_META_STRING("onCreate"), void>(); }
inline void Service::onStart(ref<android::content::Intent> intent, jint startId) { return call_method<SCAPIX_META_STRING("onStart"), void>(intent, startId); }
inline jint Service::onStartCommand(ref<android::content::Intent> intent, jint flags, jint startId) { return call_method<SCAPIX_META_STRING("onStartCommand"), jint>(intent, flags, startId); }
inline void Service::onDestroy() { return call_method<SCAPIX_META_STRING("onDestroy"), void>(); }
inline void Service::onConfigurationChanged(ref<android::content::res::Configuration> newConfig) { return call_method<SCAPIX_META_STRING("onConfigurationChanged"), void>(newConfig); }
inline void Service::onLowMemory() { return call_method<SCAPIX_META_STRING("onLowMemory"), void>(); }
inline void Service::onTrimMemory(jint level) { return call_method<SCAPIX_META_STRING("onTrimMemory"), void>(level); }
inline ref<android::os::IBinder> Service::onBind(ref<android::content::Intent> p1) { return call_method<SCAPIX_META_STRING("onBind"), ref<android::os::IBinder>>(p1); }
inline jboolean Service::onUnbind(ref<android::content::Intent> intent) { return call_method<SCAPIX_META_STRING("onUnbind"), jboolean>(intent); }
inline void Service::onRebind(ref<android::content::Intent> intent) { return call_method<SCAPIX_META_STRING("onRebind"), void>(intent); }
inline void Service::onTaskRemoved(ref<android::content::Intent> rootIntent) { return call_method<SCAPIX_META_STRING("onTaskRemoved"), void>(rootIntent); }
inline void Service::stopSelf() { return call_method<SCAPIX_META_STRING("stopSelf"), void>(); }
inline void Service::stopSelf(jint startId) { return call_method<SCAPIX_META_STRING("stopSelf"), void>(startId); }
inline jboolean Service::stopSelfResult(jint startId) { return call_method<SCAPIX_META_STRING("stopSelfResult"), jboolean>(startId); }
inline void Service::startForeground(jint id, ref<android::app::Notification> notification) { return call_method<SCAPIX_META_STRING("startForeground"), void>(id, notification); }
inline void Service::stopForeground(jboolean removeNotification) { return call_method<SCAPIX_META_STRING("stopForeground"), void>(removeNotification); }
inline void Service::stopForeground(jint flags) { return call_method<SCAPIX_META_STRING("stopForeground"), void>(flags); }

} // namespace android::app
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_APP_SERVICE_H
