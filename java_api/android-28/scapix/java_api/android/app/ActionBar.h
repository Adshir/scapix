// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_APP_ACTIONBAR_H
#define SCAPIX_ANDROID_APP_ACTIONBAR_H

namespace scapix::java_api {

namespace android::app { class ActionBar_LayoutParams; }
namespace android::app { class ActionBar_OnMenuVisibilityListener; }
namespace android::app { class ActionBar_OnNavigationListener; }
namespace android::app { class ActionBar_Tab; }
namespace android::content { class Context; }
namespace android::graphics::drawable { class Drawable; }
namespace android::view { class View; }
namespace android::widget { class SpinnerAdapter; }
namespace java::lang { class CharSequence; }
namespace android::app { class ActionBar_TabListener; }

namespace android::app {

class ActionBar : public object_base<SCAPIX_META_STRING("android/app/ActionBar"),
	java::lang::Object>
{
public:

	using TabListener = ActionBar_TabListener;
	using Tab = ActionBar_Tab;
	using OnNavigationListener = ActionBar_OnNavigationListener;
	using OnMenuVisibilityListener = ActionBar_OnMenuVisibilityListener;
	using LayoutParams = ActionBar_LayoutParams;

	static jint DISPLAY_HOME_AS_UP_();
	static jint DISPLAY_SHOW_CUSTOM_();
	static jint DISPLAY_SHOW_HOME_();
	static jint DISPLAY_SHOW_TITLE_();
	static jint DISPLAY_USE_LOGO_();
	static jint NAVIGATION_MODE_LIST_();
	static jint NAVIGATION_MODE_STANDARD_();
	static jint NAVIGATION_MODE_TABS_();

	static ref<ActionBar> new_object();
	void setCustomView(ref<android::view::View> p1);
	void setCustomView(ref<android::view::View> p1, ref<android::app::ActionBar_LayoutParams> p2);
	void setCustomView(jint p1);
	void setIcon(jint p1);
	void setIcon(ref<android::graphics::drawable::Drawable> p1);
	void setLogo(jint p1);
	void setLogo(ref<android::graphics::drawable::Drawable> p1);
	void setListNavigationCallbacks(ref<android::widget::SpinnerAdapter> p1, ref<android::app::ActionBar_OnNavigationListener> p2);
	void setSelectedNavigationItem(jint p1);
	jint getSelectedNavigationIndex();
	jint getNavigationItemCount();
	void setTitle(ref<java::lang::CharSequence> p1);
	void setTitle(jint p1);
	void setSubtitle(ref<java::lang::CharSequence> p1);
	void setSubtitle(jint p1);
	void setDisplayOptions(jint p1);
	void setDisplayOptions(jint p1, jint p2);
	void setDisplayUseLogoEnabled(jboolean p1);
	void setDisplayShowHomeEnabled(jboolean p1);
	void setDisplayHomeAsUpEnabled(jboolean p1);
	void setDisplayShowTitleEnabled(jboolean p1);
	void setDisplayShowCustomEnabled(jboolean p1);
	void setBackgroundDrawable(ref<android::graphics::drawable::Drawable> p1);
	void setStackedBackgroundDrawable(ref<android::graphics::drawable::Drawable> d);
	void setSplitBackgroundDrawable(ref<android::graphics::drawable::Drawable> d);
	ref<android::view::View> getCustomView();
	ref<java::lang::CharSequence> getTitle();
	ref<java::lang::CharSequence> getSubtitle();
	jint getNavigationMode();
	void setNavigationMode(jint p1);
	jint getDisplayOptions();
	ref<android::app::ActionBar_Tab> newTab();
	void addTab(ref<android::app::ActionBar_Tab> p1);
	void addTab(ref<android::app::ActionBar_Tab> p1, jboolean p2);
	void addTab(ref<android::app::ActionBar_Tab> p1, jint p2);
	void addTab(ref<android::app::ActionBar_Tab> p1, jint p2, jboolean p3);
	void removeTab(ref<android::app::ActionBar_Tab> p1);
	void removeTabAt(jint p1);
	void removeAllTabs();
	void selectTab(ref<android::app::ActionBar_Tab> p1);
	ref<android::app::ActionBar_Tab> getSelectedTab();
	ref<android::app::ActionBar_Tab> getTabAt(jint p1);
	jint getTabCount();
	jint getHeight();
	void show();
	void hide();
	jboolean isShowing();
	void addOnMenuVisibilityListener(ref<android::app::ActionBar_OnMenuVisibilityListener> p1);
	void removeOnMenuVisibilityListener(ref<android::app::ActionBar_OnMenuVisibilityListener> p1);
	void setHomeButtonEnabled(jboolean enabled);
	ref<android::content::Context> getThemedContext();
	void setHomeAsUpIndicator(ref<android::graphics::drawable::Drawable> indicator);
	void setHomeAsUpIndicator(jint resId);
	void setHomeActionContentDescription(ref<java::lang::CharSequence> description);
	void setHomeActionContentDescription(jint resId);
	void setHideOnContentScrollEnabled(jboolean hideOnContentScroll);
	jboolean isHideOnContentScrollEnabled();
	jint getHideOffset();
	void setHideOffset(jint offset);
	void setElevation(jfloat elevation);
	jfloat getElevation();

protected:

	ActionBar(handle_type h) : base_(h) {}

};

} // namespace android::app
} // namespace scapix::java_api

#include <scapix/java_api/android/app/ActionBar_LayoutParams.h>
#include <scapix/java_api/android/app/ActionBar_OnMenuVisibilityListener.h>
#include <scapix/java_api/android/app/ActionBar_OnNavigationListener.h>
#include <scapix/java_api/android/app/ActionBar_Tab.h>
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/graphics/drawable/Drawable.h>
#include <scapix/java_api/android/view/View.h>
#include <scapix/java_api/android/widget/SpinnerAdapter.h>
#include <scapix/java_api/java/lang/CharSequence.h>

namespace scapix::java_api {
namespace android::app {

inline jint ActionBar::DISPLAY_HOME_AS_UP_() { return get_static_field<SCAPIX_META_STRING("DISPLAY_HOME_AS_UP"), jint>(); }
inline jint ActionBar::DISPLAY_SHOW_CUSTOM_() { return get_static_field<SCAPIX_META_STRING("DISPLAY_SHOW_CUSTOM"), jint>(); }
inline jint ActionBar::DISPLAY_SHOW_HOME_() { return get_static_field<SCAPIX_META_STRING("DISPLAY_SHOW_HOME"), jint>(); }
inline jint ActionBar::DISPLAY_SHOW_TITLE_() { return get_static_field<SCAPIX_META_STRING("DISPLAY_SHOW_TITLE"), jint>(); }
inline jint ActionBar::DISPLAY_USE_LOGO_() { return get_static_field<SCAPIX_META_STRING("DISPLAY_USE_LOGO"), jint>(); }
inline jint ActionBar::NAVIGATION_MODE_LIST_() { return get_static_field<SCAPIX_META_STRING("NAVIGATION_MODE_LIST"), jint>(); }
inline jint ActionBar::NAVIGATION_MODE_STANDARD_() { return get_static_field<SCAPIX_META_STRING("NAVIGATION_MODE_STANDARD"), jint>(); }
inline jint ActionBar::NAVIGATION_MODE_TABS_() { return get_static_field<SCAPIX_META_STRING("NAVIGATION_MODE_TABS"), jint>(); }
inline ref<ActionBar> ActionBar::new_object() { return base_::new_object(); }
inline void ActionBar::setCustomView(ref<android::view::View> p1) { return call_method<SCAPIX_META_STRING("setCustomView"), void>(p1); }
inline void ActionBar::setCustomView(ref<android::view::View> p1, ref<android::app::ActionBar_LayoutParams> p2) { return call_method<SCAPIX_META_STRING("setCustomView"), void>(p1, p2); }
inline void ActionBar::setCustomView(jint p1) { return call_method<SCAPIX_META_STRING("setCustomView"), void>(p1); }
inline void ActionBar::setIcon(jint p1) { return call_method<SCAPIX_META_STRING("setIcon"), void>(p1); }
inline void ActionBar::setIcon(ref<android::graphics::drawable::Drawable> p1) { return call_method<SCAPIX_META_STRING("setIcon"), void>(p1); }
inline void ActionBar::setLogo(jint p1) { return call_method<SCAPIX_META_STRING("setLogo"), void>(p1); }
inline void ActionBar::setLogo(ref<android::graphics::drawable::Drawable> p1) { return call_method<SCAPIX_META_STRING("setLogo"), void>(p1); }
inline void ActionBar::setListNavigationCallbacks(ref<android::widget::SpinnerAdapter> p1, ref<android::app::ActionBar_OnNavigationListener> p2) { return call_method<SCAPIX_META_STRING("setListNavigationCallbacks"), void>(p1, p2); }
inline void ActionBar::setSelectedNavigationItem(jint p1) { return call_method<SCAPIX_META_STRING("setSelectedNavigationItem"), void>(p1); }
inline jint ActionBar::getSelectedNavigationIndex() { return call_method<SCAPIX_META_STRING("getSelectedNavigationIndex"), jint>(); }
inline jint ActionBar::getNavigationItemCount() { return call_method<SCAPIX_META_STRING("getNavigationItemCount"), jint>(); }
inline void ActionBar::setTitle(ref<java::lang::CharSequence> p1) { return call_method<SCAPIX_META_STRING("setTitle"), void>(p1); }
inline void ActionBar::setTitle(jint p1) { return call_method<SCAPIX_META_STRING("setTitle"), void>(p1); }
inline void ActionBar::setSubtitle(ref<java::lang::CharSequence> p1) { return call_method<SCAPIX_META_STRING("setSubtitle"), void>(p1); }
inline void ActionBar::setSubtitle(jint p1) { return call_method<SCAPIX_META_STRING("setSubtitle"), void>(p1); }
inline void ActionBar::setDisplayOptions(jint p1) { return call_method<SCAPIX_META_STRING("setDisplayOptions"), void>(p1); }
inline void ActionBar::setDisplayOptions(jint p1, jint p2) { return call_method<SCAPIX_META_STRING("setDisplayOptions"), void>(p1, p2); }
inline void ActionBar::setDisplayUseLogoEnabled(jboolean p1) { return call_method<SCAPIX_META_STRING("setDisplayUseLogoEnabled"), void>(p1); }
inline void ActionBar::setDisplayShowHomeEnabled(jboolean p1) { return call_method<SCAPIX_META_STRING("setDisplayShowHomeEnabled"), void>(p1); }
inline void ActionBar::setDisplayHomeAsUpEnabled(jboolean p1) { return call_method<SCAPIX_META_STRING("setDisplayHomeAsUpEnabled"), void>(p1); }
inline void ActionBar::setDisplayShowTitleEnabled(jboolean p1) { return call_method<SCAPIX_META_STRING("setDisplayShowTitleEnabled"), void>(p1); }
inline void ActionBar::setDisplayShowCustomEnabled(jboolean p1) { return call_method<SCAPIX_META_STRING("setDisplayShowCustomEnabled"), void>(p1); }
inline void ActionBar::setBackgroundDrawable(ref<android::graphics::drawable::Drawable> p1) { return call_method<SCAPIX_META_STRING("setBackgroundDrawable"), void>(p1); }
inline void ActionBar::setStackedBackgroundDrawable(ref<android::graphics::drawable::Drawable> d) { return call_method<SCAPIX_META_STRING("setStackedBackgroundDrawable"), void>(d); }
inline void ActionBar::setSplitBackgroundDrawable(ref<android::graphics::drawable::Drawable> d) { return call_method<SCAPIX_META_STRING("setSplitBackgroundDrawable"), void>(d); }
inline ref<android::view::View> ActionBar::getCustomView() { return call_method<SCAPIX_META_STRING("getCustomView"), ref<android::view::View>>(); }
inline ref<java::lang::CharSequence> ActionBar::getTitle() { return call_method<SCAPIX_META_STRING("getTitle"), ref<java::lang::CharSequence>>(); }
inline ref<java::lang::CharSequence> ActionBar::getSubtitle() { return call_method<SCAPIX_META_STRING("getSubtitle"), ref<java::lang::CharSequence>>(); }
inline jint ActionBar::getNavigationMode() { return call_method<SCAPIX_META_STRING("getNavigationMode"), jint>(); }
inline void ActionBar::setNavigationMode(jint p1) { return call_method<SCAPIX_META_STRING("setNavigationMode"), void>(p1); }
inline jint ActionBar::getDisplayOptions() { return call_method<SCAPIX_META_STRING("getDisplayOptions"), jint>(); }
inline ref<android::app::ActionBar_Tab> ActionBar::newTab() { return call_method<SCAPIX_META_STRING("newTab"), ref<android::app::ActionBar_Tab>>(); }
inline void ActionBar::addTab(ref<android::app::ActionBar_Tab> p1) { return call_method<SCAPIX_META_STRING("addTab"), void>(p1); }
inline void ActionBar::addTab(ref<android::app::ActionBar_Tab> p1, jboolean p2) { return call_method<SCAPIX_META_STRING("addTab"), void>(p1, p2); }
inline void ActionBar::addTab(ref<android::app::ActionBar_Tab> p1, jint p2) { return call_method<SCAPIX_META_STRING("addTab"), void>(p1, p2); }
inline void ActionBar::addTab(ref<android::app::ActionBar_Tab> p1, jint p2, jboolean p3) { return call_method<SCAPIX_META_STRING("addTab"), void>(p1, p2, p3); }
inline void ActionBar::removeTab(ref<android::app::ActionBar_Tab> p1) { return call_method<SCAPIX_META_STRING("removeTab"), void>(p1); }
inline void ActionBar::removeTabAt(jint p1) { return call_method<SCAPIX_META_STRING("removeTabAt"), void>(p1); }
inline void ActionBar::removeAllTabs() { return call_method<SCAPIX_META_STRING("removeAllTabs"), void>(); }
inline void ActionBar::selectTab(ref<android::app::ActionBar_Tab> p1) { return call_method<SCAPIX_META_STRING("selectTab"), void>(p1); }
inline ref<android::app::ActionBar_Tab> ActionBar::getSelectedTab() { return call_method<SCAPIX_META_STRING("getSelectedTab"), ref<android::app::ActionBar_Tab>>(); }
inline ref<android::app::ActionBar_Tab> ActionBar::getTabAt(jint p1) { return call_method<SCAPIX_META_STRING("getTabAt"), ref<android::app::ActionBar_Tab>>(p1); }
inline jint ActionBar::getTabCount() { return call_method<SCAPIX_META_STRING("getTabCount"), jint>(); }
inline jint ActionBar::getHeight() { return call_method<SCAPIX_META_STRING("getHeight"), jint>(); }
inline void ActionBar::show() { return call_method<SCAPIX_META_STRING("show"), void>(); }
inline void ActionBar::hide() { return call_method<SCAPIX_META_STRING("hide"), void>(); }
inline jboolean ActionBar::isShowing() { return call_method<SCAPIX_META_STRING("isShowing"), jboolean>(); }
inline void ActionBar::addOnMenuVisibilityListener(ref<android::app::ActionBar_OnMenuVisibilityListener> p1) { return call_method<SCAPIX_META_STRING("addOnMenuVisibilityListener"), void>(p1); }
inline void ActionBar::removeOnMenuVisibilityListener(ref<android::app::ActionBar_OnMenuVisibilityListener> p1) { return call_method<SCAPIX_META_STRING("removeOnMenuVisibilityListener"), void>(p1); }
inline void ActionBar::setHomeButtonEnabled(jboolean enabled) { return call_method<SCAPIX_META_STRING("setHomeButtonEnabled"), void>(enabled); }
inline ref<android::content::Context> ActionBar::getThemedContext() { return call_method<SCAPIX_META_STRING("getThemedContext"), ref<android::content::Context>>(); }
inline void ActionBar::setHomeAsUpIndicator(ref<android::graphics::drawable::Drawable> indicator) { return call_method<SCAPIX_META_STRING("setHomeAsUpIndicator"), void>(indicator); }
inline void ActionBar::setHomeAsUpIndicator(jint resId) { return call_method<SCAPIX_META_STRING("setHomeAsUpIndicator"), void>(resId); }
inline void ActionBar::setHomeActionContentDescription(ref<java::lang::CharSequence> description) { return call_method<SCAPIX_META_STRING("setHomeActionContentDescription"), void>(description); }
inline void ActionBar::setHomeActionContentDescription(jint resId) { return call_method<SCAPIX_META_STRING("setHomeActionContentDescription"), void>(resId); }
inline void ActionBar::setHideOnContentScrollEnabled(jboolean hideOnContentScroll) { return call_method<SCAPIX_META_STRING("setHideOnContentScrollEnabled"), void>(hideOnContentScroll); }
inline jboolean ActionBar::isHideOnContentScrollEnabled() { return call_method<SCAPIX_META_STRING("isHideOnContentScrollEnabled"), jboolean>(); }
inline jint ActionBar::getHideOffset() { return call_method<SCAPIX_META_STRING("getHideOffset"), jint>(); }
inline void ActionBar::setHideOffset(jint offset) { return call_method<SCAPIX_META_STRING("setHideOffset"), void>(offset); }
inline void ActionBar::setElevation(jfloat elevation) { return call_method<SCAPIX_META_STRING("setElevation"), void>(elevation); }
inline jfloat ActionBar::getElevation() { return call_method<SCAPIX_META_STRING("getElevation"), jfloat>(); }

} // namespace android::app
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_APP_ACTIONBAR_H
