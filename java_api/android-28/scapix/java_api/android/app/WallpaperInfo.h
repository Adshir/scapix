// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_ANDROID_APP_WALLPAPERINFO_H
#define SCAPIX_ANDROID_APP_WALLPAPERINFO_H

namespace scapix::java_api {

namespace android::content { class ComponentName; }
namespace android::content { class Context; }
namespace android::content::pm { class PackageManager; }
namespace android::content::pm { class ResolveInfo; }
namespace android::content::pm { class ServiceInfo; }
namespace android::graphics::drawable { class Drawable; }
namespace android::net { class Uri; }
namespace android::os { class Parcel; }
namespace android::os { class Parcelable_Creator; }
namespace android::util { class Printer; }
namespace java::lang { class CharSequence; }
namespace java::lang { class String; }

namespace android::app {

class WallpaperInfo : public object_base<SCAPIX_META_STRING("android/app/WallpaperInfo"),
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static ref<android::os::Parcelable_Creator> CREATOR_();

	static ref<WallpaperInfo> new_object(ref<android::content::Context> context, ref<android::content::pm::ResolveInfo> service);
	ref<java::lang::String> getPackageName();
	ref<java::lang::String> getServiceName();
	ref<android::content::pm::ServiceInfo> getServiceInfo();
	ref<android::content::ComponentName> getComponent();
	ref<java::lang::CharSequence> loadLabel(ref<android::content::pm::PackageManager> pm);
	ref<android::graphics::drawable::Drawable> loadIcon(ref<android::content::pm::PackageManager> pm);
	ref<android::graphics::drawable::Drawable> loadThumbnail(ref<android::content::pm::PackageManager> pm);
	ref<java::lang::CharSequence> loadAuthor(ref<android::content::pm::PackageManager> pm);
	ref<java::lang::CharSequence> loadDescription(ref<android::content::pm::PackageManager> pm);
	ref<android::net::Uri> loadContextUri(ref<android::content::pm::PackageManager> pm);
	ref<java::lang::CharSequence> loadContextDescription(ref<android::content::pm::PackageManager> pm);
	jboolean getShowMetadataInPreview();
	ref<java::lang::String> getSettingsActivity();
	void dump(ref<android::util::Printer> pw, ref<java::lang::String> prefix);
	ref<java::lang::String> toString();
	void writeToParcel(ref<android::os::Parcel> dest, jint flags);
	jint describeContents();

protected:

	WallpaperInfo(handle_type h) : base_(h) {}

};

} // namespace android::app
} // namespace scapix::java_api

#include <scapix/java_api/android/content/ComponentName.h>
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/content/pm/PackageManager.h>
#include <scapix/java_api/android/content/pm/ResolveInfo.h>
#include <scapix/java_api/android/content/pm/ServiceInfo.h>
#include <scapix/java_api/android/graphics/drawable/Drawable.h>
#include <scapix/java_api/android/net/Uri.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/android/util/Printer.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::app {

inline ref<android::os::Parcelable_Creator> WallpaperInfo::CREATOR_() { return get_static_field<SCAPIX_META_STRING("CREATOR"), ref<android::os::Parcelable_Creator>>(); }
inline ref<WallpaperInfo> WallpaperInfo::new_object(ref<android::content::Context> context, ref<android::content::pm::ResolveInfo> service) { return base_::new_object(context, service); }
inline ref<java::lang::String> WallpaperInfo::getPackageName() { return call_method<SCAPIX_META_STRING("getPackageName"), ref<java::lang::String>>(); }
inline ref<java::lang::String> WallpaperInfo::getServiceName() { return call_method<SCAPIX_META_STRING("getServiceName"), ref<java::lang::String>>(); }
inline ref<android::content::pm::ServiceInfo> WallpaperInfo::getServiceInfo() { return call_method<SCAPIX_META_STRING("getServiceInfo"), ref<android::content::pm::ServiceInfo>>(); }
inline ref<android::content::ComponentName> WallpaperInfo::getComponent() { return call_method<SCAPIX_META_STRING("getComponent"), ref<android::content::ComponentName>>(); }
inline ref<java::lang::CharSequence> WallpaperInfo::loadLabel(ref<android::content::pm::PackageManager> pm) { return call_method<SCAPIX_META_STRING("loadLabel"), ref<java::lang::CharSequence>>(pm); }
inline ref<android::graphics::drawable::Drawable> WallpaperInfo::loadIcon(ref<android::content::pm::PackageManager> pm) { return call_method<SCAPIX_META_STRING("loadIcon"), ref<android::graphics::drawable::Drawable>>(pm); }
inline ref<android::graphics::drawable::Drawable> WallpaperInfo::loadThumbnail(ref<android::content::pm::PackageManager> pm) { return call_method<SCAPIX_META_STRING("loadThumbnail"), ref<android::graphics::drawable::Drawable>>(pm); }
inline ref<java::lang::CharSequence> WallpaperInfo::loadAuthor(ref<android::content::pm::PackageManager> pm) { return call_method<SCAPIX_META_STRING("loadAuthor"), ref<java::lang::CharSequence>>(pm); }
inline ref<java::lang::CharSequence> WallpaperInfo::loadDescription(ref<android::content::pm::PackageManager> pm) { return call_method<SCAPIX_META_STRING("loadDescription"), ref<java::lang::CharSequence>>(pm); }
inline ref<android::net::Uri> WallpaperInfo::loadContextUri(ref<android::content::pm::PackageManager> pm) { return call_method<SCAPIX_META_STRING("loadContextUri"), ref<android::net::Uri>>(pm); }
inline ref<java::lang::CharSequence> WallpaperInfo::loadContextDescription(ref<android::content::pm::PackageManager> pm) { return call_method<SCAPIX_META_STRING("loadContextDescription"), ref<java::lang::CharSequence>>(pm); }
inline jboolean WallpaperInfo::getShowMetadataInPreview() { return call_method<SCAPIX_META_STRING("getShowMetadataInPreview"), jboolean>(); }
inline ref<java::lang::String> WallpaperInfo::getSettingsActivity() { return call_method<SCAPIX_META_STRING("getSettingsActivity"), ref<java::lang::String>>(); }
inline void WallpaperInfo::dump(ref<android::util::Printer> pw, ref<java::lang::String> prefix) { return call_method<SCAPIX_META_STRING("dump"), void>(pw, prefix); }
inline ref<java::lang::String> WallpaperInfo::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }
inline void WallpaperInfo::writeToParcel(ref<android::os::Parcel> dest, jint flags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(dest, flags); }
inline jint WallpaperInfo::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }

} // namespace android::app
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_APP_WALLPAPERINFO_H
