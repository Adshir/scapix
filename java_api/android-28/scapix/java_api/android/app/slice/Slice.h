// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_ANDROID_APP_SLICE_SLICE_H
#define SCAPIX_ANDROID_APP_SLICE_SLICE_H

namespace scapix::java_api {

namespace android::app::slice { class SliceSpec; }
namespace android::net { class Uri; }
namespace android::os { class Parcel; }
namespace android::os { class Parcelable_Creator; }
namespace java::lang { class String; }
namespace java::util { class List; }
namespace android::app::slice { class Slice_Builder; }

namespace android::app::slice {

class Slice : public object_base<SCAPIX_META_STRING("android/app/slice/Slice"),
	java::lang::Object,
	android::os::Parcelable>
{
public:

	using Builder = Slice_Builder;

	static ref<android::os::Parcelable_Creator> CREATOR_();
	static ref<java::lang::String> EXTRA_RANGE_VALUE_();
	static ref<java::lang::String> EXTRA_TOGGLE_STATE_();
	static ref<java::lang::String> HINT_ACTIONS_();
	static ref<java::lang::String> HINT_ERROR_();
	static ref<java::lang::String> HINT_HORIZONTAL_();
	static ref<java::lang::String> HINT_KEYWORDS_();
	static ref<java::lang::String> HINT_LARGE_();
	static ref<java::lang::String> HINT_LAST_UPDATED_();
	static ref<java::lang::String> HINT_LIST_();
	static ref<java::lang::String> HINT_LIST_ITEM_();
	static ref<java::lang::String> HINT_NO_TINT_();
	static ref<java::lang::String> HINT_PARTIAL_();
	static ref<java::lang::String> HINT_PERMISSION_REQUEST_();
	static ref<java::lang::String> HINT_SEE_MORE_();
	static ref<java::lang::String> HINT_SELECTED_();
	static ref<java::lang::String> HINT_SHORTCUT_();
	static ref<java::lang::String> HINT_SUMMARY_();
	static ref<java::lang::String> HINT_TITLE_();
	static ref<java::lang::String> HINT_TTL_();
	static ref<java::lang::String> SUBTYPE_COLOR_();
	static ref<java::lang::String> SUBTYPE_CONTENT_DESCRIPTION_();
	static ref<java::lang::String> SUBTYPE_LAYOUT_DIRECTION_();
	static ref<java::lang::String> SUBTYPE_MAX_();
	static ref<java::lang::String> SUBTYPE_MESSAGE_();
	static ref<java::lang::String> SUBTYPE_MILLIS_();
	static ref<java::lang::String> SUBTYPE_PRIORITY_();
	static ref<java::lang::String> SUBTYPE_RANGE_();
	static ref<java::lang::String> SUBTYPE_SOURCE_();
	static ref<java::lang::String> SUBTYPE_TOGGLE_();
	static ref<java::lang::String> SUBTYPE_VALUE_();

	ref<android::app::slice::SliceSpec> getSpec();
	ref<android::net::Uri> getUri();
	ref<java::util::List> getItems();
	ref<java::util::List> getHints();
	void writeToParcel(ref<android::os::Parcel> dest, jint flags);
	jint describeContents();
	jboolean isCallerNeeded();
	ref<java::lang::String> toString();

protected:

	Slice(handle_type h) : base_(h) {}

};

} // namespace android::app::slice
} // namespace scapix::java_api

#include <scapix/java_api/android/app/slice/SliceSpec.h>
#include <scapix/java_api/android/net/Uri.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/List.h>

namespace scapix::java_api {
namespace android::app::slice {

inline ref<android::os::Parcelable_Creator> Slice::CREATOR_() { return get_static_field<SCAPIX_META_STRING("CREATOR"), ref<android::os::Parcelable_Creator>>(); }
inline ref<java::lang::String> Slice::EXTRA_RANGE_VALUE_() { return get_static_field<SCAPIX_META_STRING("EXTRA_RANGE_VALUE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Slice::EXTRA_TOGGLE_STATE_() { return get_static_field<SCAPIX_META_STRING("EXTRA_TOGGLE_STATE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Slice::HINT_ACTIONS_() { return get_static_field<SCAPIX_META_STRING("HINT_ACTIONS"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Slice::HINT_ERROR_() { return get_static_field<SCAPIX_META_STRING("HINT_ERROR"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Slice::HINT_HORIZONTAL_() { return get_static_field<SCAPIX_META_STRING("HINT_HORIZONTAL"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Slice::HINT_KEYWORDS_() { return get_static_field<SCAPIX_META_STRING("HINT_KEYWORDS"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Slice::HINT_LARGE_() { return get_static_field<SCAPIX_META_STRING("HINT_LARGE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Slice::HINT_LAST_UPDATED_() { return get_static_field<SCAPIX_META_STRING("HINT_LAST_UPDATED"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Slice::HINT_LIST_() { return get_static_field<SCAPIX_META_STRING("HINT_LIST"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Slice::HINT_LIST_ITEM_() { return get_static_field<SCAPIX_META_STRING("HINT_LIST_ITEM"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Slice::HINT_NO_TINT_() { return get_static_field<SCAPIX_META_STRING("HINT_NO_TINT"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Slice::HINT_PARTIAL_() { return get_static_field<SCAPIX_META_STRING("HINT_PARTIAL"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Slice::HINT_PERMISSION_REQUEST_() { return get_static_field<SCAPIX_META_STRING("HINT_PERMISSION_REQUEST"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Slice::HINT_SEE_MORE_() { return get_static_field<SCAPIX_META_STRING("HINT_SEE_MORE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Slice::HINT_SELECTED_() { return get_static_field<SCAPIX_META_STRING("HINT_SELECTED"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Slice::HINT_SHORTCUT_() { return get_static_field<SCAPIX_META_STRING("HINT_SHORTCUT"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Slice::HINT_SUMMARY_() { return get_static_field<SCAPIX_META_STRING("HINT_SUMMARY"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Slice::HINT_TITLE_() { return get_static_field<SCAPIX_META_STRING("HINT_TITLE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Slice::HINT_TTL_() { return get_static_field<SCAPIX_META_STRING("HINT_TTL"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Slice::SUBTYPE_COLOR_() { return get_static_field<SCAPIX_META_STRING("SUBTYPE_COLOR"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Slice::SUBTYPE_CONTENT_DESCRIPTION_() { return get_static_field<SCAPIX_META_STRING("SUBTYPE_CONTENT_DESCRIPTION"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Slice::SUBTYPE_LAYOUT_DIRECTION_() { return get_static_field<SCAPIX_META_STRING("SUBTYPE_LAYOUT_DIRECTION"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Slice::SUBTYPE_MAX_() { return get_static_field<SCAPIX_META_STRING("SUBTYPE_MAX"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Slice::SUBTYPE_MESSAGE_() { return get_static_field<SCAPIX_META_STRING("SUBTYPE_MESSAGE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Slice::SUBTYPE_MILLIS_() { return get_static_field<SCAPIX_META_STRING("SUBTYPE_MILLIS"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Slice::SUBTYPE_PRIORITY_() { return get_static_field<SCAPIX_META_STRING("SUBTYPE_PRIORITY"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Slice::SUBTYPE_RANGE_() { return get_static_field<SCAPIX_META_STRING("SUBTYPE_RANGE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Slice::SUBTYPE_SOURCE_() { return get_static_field<SCAPIX_META_STRING("SUBTYPE_SOURCE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Slice::SUBTYPE_TOGGLE_() { return get_static_field<SCAPIX_META_STRING("SUBTYPE_TOGGLE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Slice::SUBTYPE_VALUE_() { return get_static_field<SCAPIX_META_STRING("SUBTYPE_VALUE"), ref<java::lang::String>>(); }
inline ref<android::app::slice::SliceSpec> Slice::getSpec() { return call_method<SCAPIX_META_STRING("getSpec"), ref<android::app::slice::SliceSpec>>(); }
inline ref<android::net::Uri> Slice::getUri() { return call_method<SCAPIX_META_STRING("getUri"), ref<android::net::Uri>>(); }
inline ref<java::util::List> Slice::getItems() { return call_method<SCAPIX_META_STRING("getItems"), ref<java::util::List>>(); }
inline ref<java::util::List> Slice::getHints() { return call_method<SCAPIX_META_STRING("getHints"), ref<java::util::List>>(); }
inline void Slice::writeToParcel(ref<android::os::Parcel> dest, jint flags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(dest, flags); }
inline jint Slice::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }
inline jboolean Slice::isCallerNeeded() { return call_method<SCAPIX_META_STRING("isCallerNeeded"), jboolean>(); }
inline ref<java::lang::String> Slice::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }

} // namespace android::app::slice
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_APP_SLICE_SLICE_H
