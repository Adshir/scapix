// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_APP_SLICE_SLICEMANAGER_H
#define SCAPIX_ANDROID_APP_SLICE_SLICEMANAGER_H

namespace scapix::java_api {

namespace android::app::slice { class Slice; }
namespace android::content { class Intent; }
namespace android::net { class Uri; }
namespace java::lang { class String; }
namespace java::util { class Collection; }
namespace java::util { class List; }
namespace java::util { class Set; }

namespace android::app::slice {

class SliceManager : public object_base<SCAPIX_META_STRING("android/app/slice/SliceManager"),
	java::lang::Object>
{
public:

	static ref<java::lang::String> CATEGORY_SLICE_();
	static ref<java::lang::String> SLICE_METADATA_KEY_();

	void pinSlice(ref<android::net::Uri> uri, ref<java::util::Set> specs);
	void unpinSlice(ref<android::net::Uri> uri);
	ref<java::util::Set> getPinnedSpecs(ref<android::net::Uri> uri);
	ref<java::util::List> getPinnedSlices();
	ref<java::util::Collection> getSliceDescendants(ref<android::net::Uri> uri);
	ref<android::app::slice::Slice> bindSlice(ref<android::net::Uri> uri, ref<java::util::Set> supportedSpecs);
	ref<android::net::Uri> mapIntentToUri(ref<android::content::Intent> intent);
	ref<android::app::slice::Slice> bindSlice(ref<android::content::Intent> intent, ref<java::util::Set> supportedSpecs);
	jint checkSlicePermission(ref<android::net::Uri> uri, jint pid, jint uid);
	void grantSlicePermission(ref<java::lang::String> toPackage, ref<android::net::Uri> uri);
	void revokeSlicePermission(ref<java::lang::String> toPackage, ref<android::net::Uri> uri);

protected:

	SliceManager(handle_type h) : base_(h) {}

};

} // namespace android::app::slice
} // namespace scapix::java_api

#include <scapix/java_api/android/app/slice/Slice.h>
#include <scapix/java_api/android/content/Intent.h>
#include <scapix/java_api/android/net/Uri.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Collection.h>
#include <scapix/java_api/java/util/List.h>
#include <scapix/java_api/java/util/Set.h>

namespace scapix::java_api {
namespace android::app::slice {

inline ref<java::lang::String> SliceManager::CATEGORY_SLICE_() { return get_static_field<SCAPIX_META_STRING("CATEGORY_SLICE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> SliceManager::SLICE_METADATA_KEY_() { return get_static_field<SCAPIX_META_STRING("SLICE_METADATA_KEY"), ref<java::lang::String>>(); }
inline void SliceManager::pinSlice(ref<android::net::Uri> uri, ref<java::util::Set> specs) { return call_method<SCAPIX_META_STRING("pinSlice"), void>(uri, specs); }
inline void SliceManager::unpinSlice(ref<android::net::Uri> uri) { return call_method<SCAPIX_META_STRING("unpinSlice"), void>(uri); }
inline ref<java::util::Set> SliceManager::getPinnedSpecs(ref<android::net::Uri> uri) { return call_method<SCAPIX_META_STRING("getPinnedSpecs"), ref<java::util::Set>>(uri); }
inline ref<java::util::List> SliceManager::getPinnedSlices() { return call_method<SCAPIX_META_STRING("getPinnedSlices"), ref<java::util::List>>(); }
inline ref<java::util::Collection> SliceManager::getSliceDescendants(ref<android::net::Uri> uri) { return call_method<SCAPIX_META_STRING("getSliceDescendants"), ref<java::util::Collection>>(uri); }
inline ref<android::app::slice::Slice> SliceManager::bindSlice(ref<android::net::Uri> uri, ref<java::util::Set> supportedSpecs) { return call_method<SCAPIX_META_STRING("bindSlice"), ref<android::app::slice::Slice>>(uri, supportedSpecs); }
inline ref<android::net::Uri> SliceManager::mapIntentToUri(ref<android::content::Intent> intent) { return call_method<SCAPIX_META_STRING("mapIntentToUri"), ref<android::net::Uri>>(intent); }
inline ref<android::app::slice::Slice> SliceManager::bindSlice(ref<android::content::Intent> intent, ref<java::util::Set> supportedSpecs) { return call_method<SCAPIX_META_STRING("bindSlice"), ref<android::app::slice::Slice>>(intent, supportedSpecs); }
inline jint SliceManager::checkSlicePermission(ref<android::net::Uri> uri, jint pid, jint uid) { return call_method<SCAPIX_META_STRING("checkSlicePermission"), jint>(uri, pid, uid); }
inline void SliceManager::grantSlicePermission(ref<java::lang::String> toPackage, ref<android::net::Uri> uri) { return call_method<SCAPIX_META_STRING("grantSlicePermission"), void>(toPackage, uri); }
inline void SliceManager::revokeSlicePermission(ref<java::lang::String> toPackage, ref<android::net::Uri> uri) { return call_method<SCAPIX_META_STRING("revokeSlicePermission"), void>(toPackage, uri); }

} // namespace android::app::slice
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_APP_SLICE_SLICEMANAGER_H
