// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_APP_SLICE_SLICEMETRICS_H
#define SCAPIX_ANDROID_APP_SLICE_SLICEMETRICS_H

namespace scapix::java_api {

namespace android::content { class Context; }
namespace android::net { class Uri; }

namespace android::app::slice {

class SliceMetrics : public object_base<SCAPIX_META_STRING("android/app/slice/SliceMetrics"),
	java::lang::Object>
{
public:

	static ref<SliceMetrics> new_object(ref<android::content::Context> context, ref<android::net::Uri> uri);
	void logVisible();
	void logHidden();
	void logTouch(jint actionType, ref<android::net::Uri> subSlice);

protected:

	SliceMetrics(handle_type h) : base_(h) {}

};

} // namespace android::app::slice
} // namespace scapix::java_api

#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/net/Uri.h>

namespace scapix::java_api {
namespace android::app::slice {

inline ref<SliceMetrics> SliceMetrics::new_object(ref<android::content::Context> context, ref<android::net::Uri> uri) { return base_::new_object(context, uri); }
inline void SliceMetrics::logVisible() { return call_method<SCAPIX_META_STRING("logVisible"), void>(); }
inline void SliceMetrics::logHidden() { return call_method<SCAPIX_META_STRING("logHidden"), void>(); }
inline void SliceMetrics::logTouch(jint actionType, ref<android::net::Uri> subSlice) { return call_method<SCAPIX_META_STRING("logTouch"), void>(actionType, subSlice); }

} // namespace android::app::slice
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_APP_SLICE_SLICEMETRICS_H
