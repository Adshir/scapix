// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_APP_LOCALACTIVITYMANAGER_H
#define SCAPIX_ANDROID_APP_LOCALACTIVITYMANAGER_H

namespace scapix::java_api {

namespace android::app { class Activity; }
namespace android::content { class Intent; }
namespace android::os { class Bundle; }
namespace android::view { class Window; }
namespace java::lang { class String; }

namespace android::app {

class LocalActivityManager : public object_base<SCAPIX_META_STRING("android/app/LocalActivityManager"),
	java::lang::Object>
{
public:

	static ref<LocalActivityManager> new_object(ref<android::app::Activity> parent, jboolean singleMode);
	ref<android::view::Window> startActivity(ref<java::lang::String> id, ref<android::content::Intent> intent);
	ref<android::view::Window> destroyActivity(ref<java::lang::String> id, jboolean finish);
	ref<android::app::Activity> getCurrentActivity();
	ref<java::lang::String> getCurrentId();
	ref<android::app::Activity> getActivity(ref<java::lang::String> id);
	void dispatchCreate(ref<android::os::Bundle> state);
	ref<android::os::Bundle> saveInstanceState();
	void dispatchResume();
	void dispatchPause(jboolean finishing);
	void dispatchStop();
	void removeAllActivities();
	void dispatchDestroy(jboolean finishing);

protected:

	LocalActivityManager(handle_type h) : base_(h) {}

};

} // namespace android::app
} // namespace scapix::java_api

#include <scapix/java_api/android/app/Activity.h>
#include <scapix/java_api/android/content/Intent.h>
#include <scapix/java_api/android/os/Bundle.h>
#include <scapix/java_api/android/view/Window.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::app {

inline ref<LocalActivityManager> LocalActivityManager::new_object(ref<android::app::Activity> parent, jboolean singleMode) { return base_::new_object(parent, singleMode); }
inline ref<android::view::Window> LocalActivityManager::startActivity(ref<java::lang::String> id, ref<android::content::Intent> intent) { return call_method<SCAPIX_META_STRING("startActivity"), ref<android::view::Window>>(id, intent); }
inline ref<android::view::Window> LocalActivityManager::destroyActivity(ref<java::lang::String> id, jboolean finish) { return call_method<SCAPIX_META_STRING("destroyActivity"), ref<android::view::Window>>(id, finish); }
inline ref<android::app::Activity> LocalActivityManager::getCurrentActivity() { return call_method<SCAPIX_META_STRING("getCurrentActivity"), ref<android::app::Activity>>(); }
inline ref<java::lang::String> LocalActivityManager::getCurrentId() { return call_method<SCAPIX_META_STRING("getCurrentId"), ref<java::lang::String>>(); }
inline ref<android::app::Activity> LocalActivityManager::getActivity(ref<java::lang::String> id) { return call_method<SCAPIX_META_STRING("getActivity"), ref<android::app::Activity>>(id); }
inline void LocalActivityManager::dispatchCreate(ref<android::os::Bundle> state) { return call_method<SCAPIX_META_STRING("dispatchCreate"), void>(state); }
inline ref<android::os::Bundle> LocalActivityManager::saveInstanceState() { return call_method<SCAPIX_META_STRING("saveInstanceState"), ref<android::os::Bundle>>(); }
inline void LocalActivityManager::dispatchResume() { return call_method<SCAPIX_META_STRING("dispatchResume"), void>(); }
inline void LocalActivityManager::dispatchPause(jboolean finishing) { return call_method<SCAPIX_META_STRING("dispatchPause"), void>(finishing); }
inline void LocalActivityManager::dispatchStop() { return call_method<SCAPIX_META_STRING("dispatchStop"), void>(); }
inline void LocalActivityManager::removeAllActivities() { return call_method<SCAPIX_META_STRING("removeAllActivities"), void>(); }
inline void LocalActivityManager::dispatchDestroy(jboolean finishing) { return call_method<SCAPIX_META_STRING("dispatchDestroy"), void>(finishing); }

} // namespace android::app
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_APP_LOCALACTIVITYMANAGER_H
