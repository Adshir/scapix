// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_APP_NOTIFICATION_CAREXTENDER_BUILDER_H
#define SCAPIX_ANDROID_APP_NOTIFICATION_CAREXTENDER_BUILDER_H

namespace scapix::java_api {

namespace android::app { class Notification_CarExtender_UnreadConversation; }
namespace android::app { class PendingIntent; }
namespace android::app { class RemoteInput; }
namespace java::lang { class String; }

namespace android::app {

class Notification_CarExtender_Builder : public object_base<SCAPIX_META_STRING("android/app/Notification$CarExtender$Builder"),
	java::lang::Object>
{
public:

	static ref<Notification_CarExtender_Builder> new_object(ref<java::lang::String> name);
	ref<android::app::Notification_CarExtender_Builder> addMessage(ref<java::lang::String> message);
	ref<android::app::Notification_CarExtender_Builder> setReplyAction(ref<android::app::PendingIntent> pendingIntent, ref<android::app::RemoteInput> remoteInput);
	ref<android::app::Notification_CarExtender_Builder> setReadPendingIntent(ref<android::app::PendingIntent> pendingIntent);
	ref<android::app::Notification_CarExtender_Builder> setLatestTimestamp(jlong timestamp);
	ref<android::app::Notification_CarExtender_UnreadConversation> build();

protected:

	Notification_CarExtender_Builder(handle_type h) : base_(h) {}

};

} // namespace android::app
} // namespace scapix::java_api

#include <scapix/java_api/android/app/Notification_CarExtender_UnreadConversation.h>
#include <scapix/java_api/android/app/PendingIntent.h>
#include <scapix/java_api/android/app/RemoteInput.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::app {

inline ref<Notification_CarExtender_Builder> Notification_CarExtender_Builder::new_object(ref<java::lang::String> name) { return base_::new_object(name); }
inline ref<android::app::Notification_CarExtender_Builder> Notification_CarExtender_Builder::addMessage(ref<java::lang::String> message) { return call_method<SCAPIX_META_STRING("addMessage"), ref<android::app::Notification_CarExtender_Builder>>(message); }
inline ref<android::app::Notification_CarExtender_Builder> Notification_CarExtender_Builder::setReplyAction(ref<android::app::PendingIntent> pendingIntent, ref<android::app::RemoteInput> remoteInput) { return call_method<SCAPIX_META_STRING("setReplyAction"), ref<android::app::Notification_CarExtender_Builder>>(pendingIntent, remoteInput); }
inline ref<android::app::Notification_CarExtender_Builder> Notification_CarExtender_Builder::setReadPendingIntent(ref<android::app::PendingIntent> pendingIntent) { return call_method<SCAPIX_META_STRING("setReadPendingIntent"), ref<android::app::Notification_CarExtender_Builder>>(pendingIntent); }
inline ref<android::app::Notification_CarExtender_Builder> Notification_CarExtender_Builder::setLatestTimestamp(jlong timestamp) { return call_method<SCAPIX_META_STRING("setLatestTimestamp"), ref<android::app::Notification_CarExtender_Builder>>(timestamp); }
inline ref<android::app::Notification_CarExtender_UnreadConversation> Notification_CarExtender_Builder::build() { return call_method<SCAPIX_META_STRING("build"), ref<android::app::Notification_CarExtender_UnreadConversation>>(); }

} // namespace android::app
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_APP_NOTIFICATION_CAREXTENDER_BUILDER_H
