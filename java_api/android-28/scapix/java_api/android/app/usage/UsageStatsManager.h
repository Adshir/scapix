// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_APP_USAGE_USAGESTATSMANAGER_H
#define SCAPIX_ANDROID_APP_USAGE_USAGESTATSMANAGER_H

namespace scapix::java_api {

namespace android::app::usage { class UsageEvents; }
namespace java::lang { class String; }
namespace java::util { class List; }
namespace java::util { class Map; }

namespace android::app::usage {

class UsageStatsManager : public object_base<SCAPIX_META_STRING("android/app/usage/UsageStatsManager"),
	java::lang::Object>
{
public:

	static jint INTERVAL_BEST_();
	static jint INTERVAL_DAILY_();
	static jint INTERVAL_MONTHLY_();
	static jint INTERVAL_WEEKLY_();
	static jint INTERVAL_YEARLY_();
	static jint STANDBY_BUCKET_ACTIVE_();
	static jint STANDBY_BUCKET_FREQUENT_();
	static jint STANDBY_BUCKET_RARE_();
	static jint STANDBY_BUCKET_WORKING_SET_();

	ref<java::util::List> queryUsageStats(jint intervalType, jlong beginTime, jlong p3);
	ref<java::util::List> queryConfigurations(jint intervalType, jlong beginTime, jlong p3);
	ref<java::util::List> queryEventStats(jint intervalType, jlong beginTime, jlong p3);
	ref<android::app::usage::UsageEvents> queryEvents(jlong beginTime, jlong p2);
	ref<android::app::usage::UsageEvents> queryEventsForSelf(jlong beginTime, jlong p2);
	ref<java::util::Map> queryAndAggregateUsageStats(jlong beginTime, jlong p2);
	jboolean isAppInactive(ref<java::lang::String> packageName);
	jint getAppStandbyBucket();

protected:

	UsageStatsManager(handle_type h) : base_(h) {}

};

} // namespace android::app::usage
} // namespace scapix::java_api

#include <scapix/java_api/android/app/usage/UsageEvents.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/List.h>
#include <scapix/java_api/java/util/Map.h>

namespace scapix::java_api {
namespace android::app::usage {

inline jint UsageStatsManager::INTERVAL_BEST_() { return get_static_field<SCAPIX_META_STRING("INTERVAL_BEST"), jint>(); }
inline jint UsageStatsManager::INTERVAL_DAILY_() { return get_static_field<SCAPIX_META_STRING("INTERVAL_DAILY"), jint>(); }
inline jint UsageStatsManager::INTERVAL_MONTHLY_() { return get_static_field<SCAPIX_META_STRING("INTERVAL_MONTHLY"), jint>(); }
inline jint UsageStatsManager::INTERVAL_WEEKLY_() { return get_static_field<SCAPIX_META_STRING("INTERVAL_WEEKLY"), jint>(); }
inline jint UsageStatsManager::INTERVAL_YEARLY_() { return get_static_field<SCAPIX_META_STRING("INTERVAL_YEARLY"), jint>(); }
inline jint UsageStatsManager::STANDBY_BUCKET_ACTIVE_() { return get_static_field<SCAPIX_META_STRING("STANDBY_BUCKET_ACTIVE"), jint>(); }
inline jint UsageStatsManager::STANDBY_BUCKET_FREQUENT_() { return get_static_field<SCAPIX_META_STRING("STANDBY_BUCKET_FREQUENT"), jint>(); }
inline jint UsageStatsManager::STANDBY_BUCKET_RARE_() { return get_static_field<SCAPIX_META_STRING("STANDBY_BUCKET_RARE"), jint>(); }
inline jint UsageStatsManager::STANDBY_BUCKET_WORKING_SET_() { return get_static_field<SCAPIX_META_STRING("STANDBY_BUCKET_WORKING_SET"), jint>(); }
inline ref<java::util::List> UsageStatsManager::queryUsageStats(jint intervalType, jlong beginTime, jlong p3) { return call_method<SCAPIX_META_STRING("queryUsageStats"), ref<java::util::List>>(intervalType, beginTime, p3); }
inline ref<java::util::List> UsageStatsManager::queryConfigurations(jint intervalType, jlong beginTime, jlong p3) { return call_method<SCAPIX_META_STRING("queryConfigurations"), ref<java::util::List>>(intervalType, beginTime, p3); }
inline ref<java::util::List> UsageStatsManager::queryEventStats(jint intervalType, jlong beginTime, jlong p3) { return call_method<SCAPIX_META_STRING("queryEventStats"), ref<java::util::List>>(intervalType, beginTime, p3); }
inline ref<android::app::usage::UsageEvents> UsageStatsManager::queryEvents(jlong beginTime, jlong p2) { return call_method<SCAPIX_META_STRING("queryEvents"), ref<android::app::usage::UsageEvents>>(beginTime, p2); }
inline ref<android::app::usage::UsageEvents> UsageStatsManager::queryEventsForSelf(jlong beginTime, jlong p2) { return call_method<SCAPIX_META_STRING("queryEventsForSelf"), ref<android::app::usage::UsageEvents>>(beginTime, p2); }
inline ref<java::util::Map> UsageStatsManager::queryAndAggregateUsageStats(jlong beginTime, jlong p2) { return call_method<SCAPIX_META_STRING("queryAndAggregateUsageStats"), ref<java::util::Map>>(beginTime, p2); }
inline jboolean UsageStatsManager::isAppInactive(ref<java::lang::String> packageName) { return call_method<SCAPIX_META_STRING("isAppInactive"), jboolean>(packageName); }
inline jint UsageStatsManager::getAppStandbyBucket() { return call_method<SCAPIX_META_STRING("getAppStandbyBucket"), jint>(); }

} // namespace android::app::usage
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_APP_USAGE_USAGESTATSMANAGER_H
