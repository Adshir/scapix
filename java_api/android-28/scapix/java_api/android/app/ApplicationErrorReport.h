// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_ANDROID_APP_APPLICATIONERRORREPORT_H
#define SCAPIX_ANDROID_APP_APPLICATIONERRORREPORT_H

namespace scapix::java_api {

namespace android::app { class ApplicationErrorReport_AnrInfo; }
namespace android::app { class ApplicationErrorReport_BatteryInfo; }
namespace android::app { class ApplicationErrorReport_CrashInfo; }
namespace android::app { class ApplicationErrorReport_RunningServiceInfo; }
namespace android::content { class ComponentName; }
namespace android::content { class Context; }
namespace android::os { class Parcel; }
namespace android::os { class Parcelable_Creator; }
namespace android::util { class Printer; }
namespace java::lang { class String; }

namespace android::app {

class ApplicationErrorReport : public object_base<SCAPIX_META_STRING("android/app/ApplicationErrorReport"),
	java::lang::Object,
	android::os::Parcelable>
{
public:

	using RunningServiceInfo = ApplicationErrorReport_RunningServiceInfo;
	using CrashInfo = ApplicationErrorReport_CrashInfo;
	using BatteryInfo = ApplicationErrorReport_BatteryInfo;
	using AnrInfo = ApplicationErrorReport_AnrInfo;

	static ref<android::os::Parcelable_Creator> CREATOR_();
	static jint TYPE_ANR_();
	static jint TYPE_BATTERY_();
	static jint TYPE_CRASH_();
	static jint TYPE_NONE_();
	static jint TYPE_RUNNING_SERVICE_();
	ref<android::app::ApplicationErrorReport_AnrInfo> anrInfo();
	void anrInfo(ref<android::app::ApplicationErrorReport_AnrInfo>);
	ref<android::app::ApplicationErrorReport_BatteryInfo> batteryInfo();
	void batteryInfo(ref<android::app::ApplicationErrorReport_BatteryInfo>);
	ref<android::app::ApplicationErrorReport_CrashInfo> crashInfo();
	void crashInfo(ref<android::app::ApplicationErrorReport_CrashInfo>);
	ref<java::lang::String> installerPackageName();
	void installerPackageName(ref<java::lang::String>);
	ref<java::lang::String> packageName();
	void packageName(ref<java::lang::String>);
	ref<java::lang::String> processName();
	void processName(ref<java::lang::String>);
	ref<android::app::ApplicationErrorReport_RunningServiceInfo> runningServiceInfo();
	void runningServiceInfo(ref<android::app::ApplicationErrorReport_RunningServiceInfo>);
	jboolean systemApp();
	void systemApp(jboolean);
	jlong time();
	void time(jlong);
	jint type();
	void type(jint);

	static ref<ApplicationErrorReport> new_object();
	static ref<android::content::ComponentName> getErrorReportReceiver(ref<android::content::Context> context, ref<java::lang::String> packageName, jint appFlags);
	void writeToParcel(ref<android::os::Parcel> dest, jint flags);
	void readFromParcel(ref<android::os::Parcel> in);
	jint describeContents();
	void dump(ref<android::util::Printer> pw, ref<java::lang::String> prefix);

protected:

	ApplicationErrorReport(handle_type h) : base_(h) {}

};

} // namespace android::app
} // namespace scapix::java_api

#include <scapix/java_api/android/app/ApplicationErrorReport_AnrInfo.h>
#include <scapix/java_api/android/app/ApplicationErrorReport_BatteryInfo.h>
#include <scapix/java_api/android/app/ApplicationErrorReport_CrashInfo.h>
#include <scapix/java_api/android/app/ApplicationErrorReport_RunningServiceInfo.h>
#include <scapix/java_api/android/content/ComponentName.h>
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/android/util/Printer.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::app {

inline ref<android::os::Parcelable_Creator> ApplicationErrorReport::CREATOR_() { return get_static_field<SCAPIX_META_STRING("CREATOR"), ref<android::os::Parcelable_Creator>>(); }
inline jint ApplicationErrorReport::TYPE_ANR_() { return get_static_field<SCAPIX_META_STRING("TYPE_ANR"), jint>(); }
inline jint ApplicationErrorReport::TYPE_BATTERY_() { return get_static_field<SCAPIX_META_STRING("TYPE_BATTERY"), jint>(); }
inline jint ApplicationErrorReport::TYPE_CRASH_() { return get_static_field<SCAPIX_META_STRING("TYPE_CRASH"), jint>(); }
inline jint ApplicationErrorReport::TYPE_NONE_() { return get_static_field<SCAPIX_META_STRING("TYPE_NONE"), jint>(); }
inline jint ApplicationErrorReport::TYPE_RUNNING_SERVICE_() { return get_static_field<SCAPIX_META_STRING("TYPE_RUNNING_SERVICE"), jint>(); }
inline ref<android::app::ApplicationErrorReport_AnrInfo> ApplicationErrorReport::anrInfo() { return get_field<SCAPIX_META_STRING("anrInfo"), ref<android::app::ApplicationErrorReport_AnrInfo>>(); }
inline void ApplicationErrorReport::anrInfo(ref<android::app::ApplicationErrorReport_AnrInfo> v) { set_field<SCAPIX_META_STRING("anrInfo"), ref<android::app::ApplicationErrorReport_AnrInfo>>(v); }
inline ref<android::app::ApplicationErrorReport_BatteryInfo> ApplicationErrorReport::batteryInfo() { return get_field<SCAPIX_META_STRING("batteryInfo"), ref<android::app::ApplicationErrorReport_BatteryInfo>>(); }
inline void ApplicationErrorReport::batteryInfo(ref<android::app::ApplicationErrorReport_BatteryInfo> v) { set_field<SCAPIX_META_STRING("batteryInfo"), ref<android::app::ApplicationErrorReport_BatteryInfo>>(v); }
inline ref<android::app::ApplicationErrorReport_CrashInfo> ApplicationErrorReport::crashInfo() { return get_field<SCAPIX_META_STRING("crashInfo"), ref<android::app::ApplicationErrorReport_CrashInfo>>(); }
inline void ApplicationErrorReport::crashInfo(ref<android::app::ApplicationErrorReport_CrashInfo> v) { set_field<SCAPIX_META_STRING("crashInfo"), ref<android::app::ApplicationErrorReport_CrashInfo>>(v); }
inline ref<java::lang::String> ApplicationErrorReport::installerPackageName() { return get_field<SCAPIX_META_STRING("installerPackageName"), ref<java::lang::String>>(); }
inline void ApplicationErrorReport::installerPackageName(ref<java::lang::String> v) { set_field<SCAPIX_META_STRING("installerPackageName"), ref<java::lang::String>>(v); }
inline ref<java::lang::String> ApplicationErrorReport::packageName() { return get_field<SCAPIX_META_STRING("packageName"), ref<java::lang::String>>(); }
inline void ApplicationErrorReport::packageName(ref<java::lang::String> v) { set_field<SCAPIX_META_STRING("packageName"), ref<java::lang::String>>(v); }
inline ref<java::lang::String> ApplicationErrorReport::processName() { return get_field<SCAPIX_META_STRING("processName"), ref<java::lang::String>>(); }
inline void ApplicationErrorReport::processName(ref<java::lang::String> v) { set_field<SCAPIX_META_STRING("processName"), ref<java::lang::String>>(v); }
inline ref<android::app::ApplicationErrorReport_RunningServiceInfo> ApplicationErrorReport::runningServiceInfo() { return get_field<SCAPIX_META_STRING("runningServiceInfo"), ref<android::app::ApplicationErrorReport_RunningServiceInfo>>(); }
inline void ApplicationErrorReport::runningServiceInfo(ref<android::app::ApplicationErrorReport_RunningServiceInfo> v) { set_field<SCAPIX_META_STRING("runningServiceInfo"), ref<android::app::ApplicationErrorReport_RunningServiceInfo>>(v); }
inline jboolean ApplicationErrorReport::systemApp() { return get_field<SCAPIX_META_STRING("systemApp"), jboolean>(); }
inline void ApplicationErrorReport::systemApp(jboolean v) { set_field<SCAPIX_META_STRING("systemApp"), jboolean>(v); }
inline jlong ApplicationErrorReport::time() { return get_field<SCAPIX_META_STRING("time"), jlong>(); }
inline void ApplicationErrorReport::time(jlong v) { set_field<SCAPIX_META_STRING("time"), jlong>(v); }
inline jint ApplicationErrorReport::type() { return get_field<SCAPIX_META_STRING("type"), jint>(); }
inline void ApplicationErrorReport::type(jint v) { set_field<SCAPIX_META_STRING("type"), jint>(v); }
inline ref<ApplicationErrorReport> ApplicationErrorReport::new_object() { return base_::new_object(); }
inline ref<android::content::ComponentName> ApplicationErrorReport::getErrorReportReceiver(ref<android::content::Context> context, ref<java::lang::String> packageName, jint appFlags) { return call_static_method<SCAPIX_META_STRING("getErrorReportReceiver"), ref<android::content::ComponentName>>(context, packageName, appFlags); }
inline void ApplicationErrorReport::writeToParcel(ref<android::os::Parcel> dest, jint flags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(dest, flags); }
inline void ApplicationErrorReport::readFromParcel(ref<android::os::Parcel> in) { return call_method<SCAPIX_META_STRING("readFromParcel"), void>(in); }
inline jint ApplicationErrorReport::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }
inline void ApplicationErrorReport::dump(ref<android::util::Printer> pw, ref<java::lang::String> prefix) { return call_method<SCAPIX_META_STRING("dump"), void>(pw, prefix); }

} // namespace android::app
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_APP_APPLICATIONERRORREPORT_H
