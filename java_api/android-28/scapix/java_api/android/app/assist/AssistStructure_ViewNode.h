// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_APP_ASSIST_ASSISTSTRUCTURE_VIEWNODE_H
#define SCAPIX_ANDROID_APP_ASSIST_ASSISTSTRUCTURE_VIEWNODE_H

namespace scapix::java_api {

namespace android::graphics { class Matrix; }
namespace android::os { class Bundle; }
namespace android::os { class LocaleList; }
namespace android::view { class ViewStructure_HtmlInfo; }
namespace android::view::autofill { class AutofillId; }
namespace android::view::autofill { class AutofillValue; }
namespace java::lang { class CharSequence; }
namespace java::lang { class String; }

namespace android::app::assist {

class AssistStructure_ViewNode : public object_base<SCAPIX_META_STRING("android/app/assist/AssistStructure$ViewNode"),
	java::lang::Object>
{
public:

	static jint TEXT_COLOR_UNDEFINED_();
	static jint TEXT_STYLE_BOLD_();
	static jint TEXT_STYLE_ITALIC_();
	static jint TEXT_STYLE_STRIKE_THRU_();
	static jint TEXT_STYLE_UNDERLINE_();

	jint getId();
	ref<java::lang::String> getIdPackage();
	ref<java::lang::String> getIdType();
	ref<java::lang::String> getIdEntry();
	ref<android::view::autofill::AutofillId> getAutofillId();
	jint getAutofillType();
	ref<link::java::array<java::lang::String>> getAutofillHints();
	ref<android::view::autofill::AutofillValue> getAutofillValue();
	ref<link::java::array<java::lang::CharSequence>> getAutofillOptions();
	jint getInputType();
	jint getLeft();
	jint getTop();
	jint getScrollX();
	jint getScrollY();
	jint getWidth();
	jint getHeight();
	ref<android::graphics::Matrix> getTransformation();
	jfloat getElevation();
	jfloat getAlpha();
	jint getVisibility();
	jboolean isAssistBlocked();
	jboolean isEnabled();
	jboolean isClickable();
	jboolean isFocusable();
	jboolean isFocused();
	jboolean isAccessibilityFocused();
	jboolean isCheckable();
	jboolean isChecked();
	jboolean isSelected();
	jboolean isActivated();
	jboolean isOpaque();
	jboolean isLongClickable();
	jboolean isContextClickable();
	ref<java::lang::String> getClassName();
	ref<java::lang::CharSequence> getContentDescription();
	ref<java::lang::String> getWebDomain();
	ref<java::lang::String> getWebScheme();
	ref<android::view::ViewStructure_HtmlInfo> getHtmlInfo();
	ref<android::os::LocaleList> getLocaleList();
	ref<java::lang::CharSequence> getText();
	jint getTextSelectionStart();
	jint getTextSelectionEnd();
	jint getTextColor();
	jint getTextBackgroundColor();
	jfloat getTextSize();
	jint getTextStyle();
	ref<link::java::array<jint>> getTextLineCharOffsets();
	ref<link::java::array<jint>> getTextLineBaselines();
	ref<java::lang::String> getTextIdEntry();
	ref<java::lang::String> getHint();
	ref<android::os::Bundle> getExtras();
	jint getChildCount();
	ref<android::app::assist::AssistStructure_ViewNode> getChildAt(jint index);
	jint getMinTextEms();
	jint getMaxTextEms();
	jint getMaxTextLength();
	jint getImportantForAutofill();

protected:

	AssistStructure_ViewNode(handle_type h) : base_(h) {}

};

} // namespace android::app::assist
} // namespace scapix::java_api

#include <scapix/java_api/android/graphics/Matrix.h>
#include <scapix/java_api/android/os/Bundle.h>
#include <scapix/java_api/android/os/LocaleList.h>
#include <scapix/java_api/android/view/ViewStructure_HtmlInfo.h>
#include <scapix/java_api/android/view/autofill/AutofillId.h>
#include <scapix/java_api/android/view/autofill/AutofillValue.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::app::assist {

inline jint AssistStructure_ViewNode::TEXT_COLOR_UNDEFINED_() { return get_static_field<SCAPIX_META_STRING("TEXT_COLOR_UNDEFINED"), jint>(); }
inline jint AssistStructure_ViewNode::TEXT_STYLE_BOLD_() { return get_static_field<SCAPIX_META_STRING("TEXT_STYLE_BOLD"), jint>(); }
inline jint AssistStructure_ViewNode::TEXT_STYLE_ITALIC_() { return get_static_field<SCAPIX_META_STRING("TEXT_STYLE_ITALIC"), jint>(); }
inline jint AssistStructure_ViewNode::TEXT_STYLE_STRIKE_THRU_() { return get_static_field<SCAPIX_META_STRING("TEXT_STYLE_STRIKE_THRU"), jint>(); }
inline jint AssistStructure_ViewNode::TEXT_STYLE_UNDERLINE_() { return get_static_field<SCAPIX_META_STRING("TEXT_STYLE_UNDERLINE"), jint>(); }
inline jint AssistStructure_ViewNode::getId() { return call_method<SCAPIX_META_STRING("getId"), jint>(); }
inline ref<java::lang::String> AssistStructure_ViewNode::getIdPackage() { return call_method<SCAPIX_META_STRING("getIdPackage"), ref<java::lang::String>>(); }
inline ref<java::lang::String> AssistStructure_ViewNode::getIdType() { return call_method<SCAPIX_META_STRING("getIdType"), ref<java::lang::String>>(); }
inline ref<java::lang::String> AssistStructure_ViewNode::getIdEntry() { return call_method<SCAPIX_META_STRING("getIdEntry"), ref<java::lang::String>>(); }
inline ref<android::view::autofill::AutofillId> AssistStructure_ViewNode::getAutofillId() { return call_method<SCAPIX_META_STRING("getAutofillId"), ref<android::view::autofill::AutofillId>>(); }
inline jint AssistStructure_ViewNode::getAutofillType() { return call_method<SCAPIX_META_STRING("getAutofillType"), jint>(); }
inline ref<link::java::array<java::lang::String>> AssistStructure_ViewNode::getAutofillHints() { return call_method<SCAPIX_META_STRING("getAutofillHints"), ref<link::java::array<java::lang::String>>>(); }
inline ref<android::view::autofill::AutofillValue> AssistStructure_ViewNode::getAutofillValue() { return call_method<SCAPIX_META_STRING("getAutofillValue"), ref<android::view::autofill::AutofillValue>>(); }
inline ref<link::java::array<java::lang::CharSequence>> AssistStructure_ViewNode::getAutofillOptions() { return call_method<SCAPIX_META_STRING("getAutofillOptions"), ref<link::java::array<java::lang::CharSequence>>>(); }
inline jint AssistStructure_ViewNode::getInputType() { return call_method<SCAPIX_META_STRING("getInputType"), jint>(); }
inline jint AssistStructure_ViewNode::getLeft() { return call_method<SCAPIX_META_STRING("getLeft"), jint>(); }
inline jint AssistStructure_ViewNode::getTop() { return call_method<SCAPIX_META_STRING("getTop"), jint>(); }
inline jint AssistStructure_ViewNode::getScrollX() { return call_method<SCAPIX_META_STRING("getScrollX"), jint>(); }
inline jint AssistStructure_ViewNode::getScrollY() { return call_method<SCAPIX_META_STRING("getScrollY"), jint>(); }
inline jint AssistStructure_ViewNode::getWidth() { return call_method<SCAPIX_META_STRING("getWidth"), jint>(); }
inline jint AssistStructure_ViewNode::getHeight() { return call_method<SCAPIX_META_STRING("getHeight"), jint>(); }
inline ref<android::graphics::Matrix> AssistStructure_ViewNode::getTransformation() { return call_method<SCAPIX_META_STRING("getTransformation"), ref<android::graphics::Matrix>>(); }
inline jfloat AssistStructure_ViewNode::getElevation() { return call_method<SCAPIX_META_STRING("getElevation"), jfloat>(); }
inline jfloat AssistStructure_ViewNode::getAlpha() { return call_method<SCAPIX_META_STRING("getAlpha"), jfloat>(); }
inline jint AssistStructure_ViewNode::getVisibility() { return call_method<SCAPIX_META_STRING("getVisibility"), jint>(); }
inline jboolean AssistStructure_ViewNode::isAssistBlocked() { return call_method<SCAPIX_META_STRING("isAssistBlocked"), jboolean>(); }
inline jboolean AssistStructure_ViewNode::isEnabled() { return call_method<SCAPIX_META_STRING("isEnabled"), jboolean>(); }
inline jboolean AssistStructure_ViewNode::isClickable() { return call_method<SCAPIX_META_STRING("isClickable"), jboolean>(); }
inline jboolean AssistStructure_ViewNode::isFocusable() { return call_method<SCAPIX_META_STRING("isFocusable"), jboolean>(); }
inline jboolean AssistStructure_ViewNode::isFocused() { return call_method<SCAPIX_META_STRING("isFocused"), jboolean>(); }
inline jboolean AssistStructure_ViewNode::isAccessibilityFocused() { return call_method<SCAPIX_META_STRING("isAccessibilityFocused"), jboolean>(); }
inline jboolean AssistStructure_ViewNode::isCheckable() { return call_method<SCAPIX_META_STRING("isCheckable"), jboolean>(); }
inline jboolean AssistStructure_ViewNode::isChecked() { return call_method<SCAPIX_META_STRING("isChecked"), jboolean>(); }
inline jboolean AssistStructure_ViewNode::isSelected() { return call_method<SCAPIX_META_STRING("isSelected"), jboolean>(); }
inline jboolean AssistStructure_ViewNode::isActivated() { return call_method<SCAPIX_META_STRING("isActivated"), jboolean>(); }
inline jboolean AssistStructure_ViewNode::isOpaque() { return call_method<SCAPIX_META_STRING("isOpaque"), jboolean>(); }
inline jboolean AssistStructure_ViewNode::isLongClickable() { return call_method<SCAPIX_META_STRING("isLongClickable"), jboolean>(); }
inline jboolean AssistStructure_ViewNode::isContextClickable() { return call_method<SCAPIX_META_STRING("isContextClickable"), jboolean>(); }
inline ref<java::lang::String> AssistStructure_ViewNode::getClassName() { return call_method<SCAPIX_META_STRING("getClassName"), ref<java::lang::String>>(); }
inline ref<java::lang::CharSequence> AssistStructure_ViewNode::getContentDescription() { return call_method<SCAPIX_META_STRING("getContentDescription"), ref<java::lang::CharSequence>>(); }
inline ref<java::lang::String> AssistStructure_ViewNode::getWebDomain() { return call_method<SCAPIX_META_STRING("getWebDomain"), ref<java::lang::String>>(); }
inline ref<java::lang::String> AssistStructure_ViewNode::getWebScheme() { return call_method<SCAPIX_META_STRING("getWebScheme"), ref<java::lang::String>>(); }
inline ref<android::view::ViewStructure_HtmlInfo> AssistStructure_ViewNode::getHtmlInfo() { return call_method<SCAPIX_META_STRING("getHtmlInfo"), ref<android::view::ViewStructure_HtmlInfo>>(); }
inline ref<android::os::LocaleList> AssistStructure_ViewNode::getLocaleList() { return call_method<SCAPIX_META_STRING("getLocaleList"), ref<android::os::LocaleList>>(); }
inline ref<java::lang::CharSequence> AssistStructure_ViewNode::getText() { return call_method<SCAPIX_META_STRING("getText"), ref<java::lang::CharSequence>>(); }
inline jint AssistStructure_ViewNode::getTextSelectionStart() { return call_method<SCAPIX_META_STRING("getTextSelectionStart"), jint>(); }
inline jint AssistStructure_ViewNode::getTextSelectionEnd() { return call_method<SCAPIX_META_STRING("getTextSelectionEnd"), jint>(); }
inline jint AssistStructure_ViewNode::getTextColor() { return call_method<SCAPIX_META_STRING("getTextColor"), jint>(); }
inline jint AssistStructure_ViewNode::getTextBackgroundColor() { return call_method<SCAPIX_META_STRING("getTextBackgroundColor"), jint>(); }
inline jfloat AssistStructure_ViewNode::getTextSize() { return call_method<SCAPIX_META_STRING("getTextSize"), jfloat>(); }
inline jint AssistStructure_ViewNode::getTextStyle() { return call_method<SCAPIX_META_STRING("getTextStyle"), jint>(); }
inline ref<link::java::array<jint>> AssistStructure_ViewNode::getTextLineCharOffsets() { return call_method<SCAPIX_META_STRING("getTextLineCharOffsets"), ref<link::java::array<jint>>>(); }
inline ref<link::java::array<jint>> AssistStructure_ViewNode::getTextLineBaselines() { return call_method<SCAPIX_META_STRING("getTextLineBaselines"), ref<link::java::array<jint>>>(); }
inline ref<java::lang::String> AssistStructure_ViewNode::getTextIdEntry() { return call_method<SCAPIX_META_STRING("getTextIdEntry"), ref<java::lang::String>>(); }
inline ref<java::lang::String> AssistStructure_ViewNode::getHint() { return call_method<SCAPIX_META_STRING("getHint"), ref<java::lang::String>>(); }
inline ref<android::os::Bundle> AssistStructure_ViewNode::getExtras() { return call_method<SCAPIX_META_STRING("getExtras"), ref<android::os::Bundle>>(); }
inline jint AssistStructure_ViewNode::getChildCount() { return call_method<SCAPIX_META_STRING("getChildCount"), jint>(); }
inline ref<android::app::assist::AssistStructure_ViewNode> AssistStructure_ViewNode::getChildAt(jint index) { return call_method<SCAPIX_META_STRING("getChildAt"), ref<android::app::assist::AssistStructure_ViewNode>>(index); }
inline jint AssistStructure_ViewNode::getMinTextEms() { return call_method<SCAPIX_META_STRING("getMinTextEms"), jint>(); }
inline jint AssistStructure_ViewNode::getMaxTextEms() { return call_method<SCAPIX_META_STRING("getMaxTextEms"), jint>(); }
inline jint AssistStructure_ViewNode::getMaxTextLength() { return call_method<SCAPIX_META_STRING("getMaxTextLength"), jint>(); }
inline jint AssistStructure_ViewNode::getImportantForAutofill() { return call_method<SCAPIX_META_STRING("getImportantForAutofill"), jint>(); }

} // namespace android::app::assist
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_APP_ASSIST_ASSISTSTRUCTURE_VIEWNODE_H
