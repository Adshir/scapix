// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/app/AlertDialog.h>

#ifndef SCAPIX_ANDROID_APP_PROGRESSDIALOG_H
#define SCAPIX_ANDROID_APP_PROGRESSDIALOG_H

namespace scapix::java_api {

namespace android::content { class Context; }
namespace android::content { class DialogInterface_OnCancelListener; }
namespace android::graphics::drawable { class Drawable; }
namespace java::lang { class CharSequence; }
namespace java::lang { class String; }
namespace java::text { class NumberFormat; }

namespace android::app {

class ProgressDialog : public object_base<SCAPIX_META_STRING("android/app/ProgressDialog"),
	android::app::AlertDialog>
{
public:

	static jint STYLE_HORIZONTAL_();
	static jint STYLE_SPINNER_();

	static ref<ProgressDialog> new_object(ref<android::content::Context> context);
	static ref<ProgressDialog> new_object(ref<android::content::Context> context, jint theme);
	static ref<android::app::ProgressDialog> show(ref<android::content::Context> context, ref<java::lang::CharSequence> title, ref<java::lang::CharSequence> message);
	static ref<android::app::ProgressDialog> show(ref<android::content::Context> context, ref<java::lang::CharSequence> title, ref<java::lang::CharSequence> message, jboolean indeterminate);
	static ref<android::app::ProgressDialog> show(ref<android::content::Context> context, ref<java::lang::CharSequence> title, ref<java::lang::CharSequence> message, jboolean indeterminate, jboolean cancelable);
	static ref<android::app::ProgressDialog> show(ref<android::content::Context> context, ref<java::lang::CharSequence> title, ref<java::lang::CharSequence> message, jboolean indeterminate, jboolean cancelable, ref<android::content::DialogInterface_OnCancelListener> cancelListener);
	void onStart();
	void setProgress(jint value);
	void setSecondaryProgress(jint secondaryProgress);
	jint getProgress();
	jint getSecondaryProgress();
	jint getMax();
	void setMax(jint max);
	void incrementProgressBy(jint diff);
	void incrementSecondaryProgressBy(jint diff);
	void setProgressDrawable(ref<android::graphics::drawable::Drawable> d);
	void setIndeterminateDrawable(ref<android::graphics::drawable::Drawable> d);
	void setIndeterminate(jboolean indeterminate);
	jboolean isIndeterminate();
	void setMessage(ref<java::lang::CharSequence> message);
	void setProgressStyle(jint style);
	void setProgressNumberFormat(ref<java::lang::String> format);
	void setProgressPercentFormat(ref<java::text::NumberFormat> format);

protected:

	ProgressDialog(handle_type h) : base_(h) {}

};

} // namespace android::app
} // namespace scapix::java_api

#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/content/DialogInterface_OnCancelListener.h>
#include <scapix/java_api/android/graphics/drawable/Drawable.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/text/NumberFormat.h>

namespace scapix::java_api {
namespace android::app {

inline jint ProgressDialog::STYLE_HORIZONTAL_() { return get_static_field<SCAPIX_META_STRING("STYLE_HORIZONTAL"), jint>(); }
inline jint ProgressDialog::STYLE_SPINNER_() { return get_static_field<SCAPIX_META_STRING("STYLE_SPINNER"), jint>(); }
inline ref<ProgressDialog> ProgressDialog::new_object(ref<android::content::Context> context) { return base_::new_object(context); }
inline ref<ProgressDialog> ProgressDialog::new_object(ref<android::content::Context> context, jint theme) { return base_::new_object(context, theme); }
inline ref<android::app::ProgressDialog> ProgressDialog::show(ref<android::content::Context> context, ref<java::lang::CharSequence> title, ref<java::lang::CharSequence> message) { return call_static_method<SCAPIX_META_STRING("show"), ref<android::app::ProgressDialog>>(context, title, message); }
inline ref<android::app::ProgressDialog> ProgressDialog::show(ref<android::content::Context> context, ref<java::lang::CharSequence> title, ref<java::lang::CharSequence> message, jboolean indeterminate) { return call_static_method<SCAPIX_META_STRING("show"), ref<android::app::ProgressDialog>>(context, title, message, indeterminate); }
inline ref<android::app::ProgressDialog> ProgressDialog::show(ref<android::content::Context> context, ref<java::lang::CharSequence> title, ref<java::lang::CharSequence> message, jboolean indeterminate, jboolean cancelable) { return call_static_method<SCAPIX_META_STRING("show"), ref<android::app::ProgressDialog>>(context, title, message, indeterminate, cancelable); }
inline ref<android::app::ProgressDialog> ProgressDialog::show(ref<android::content::Context> context, ref<java::lang::CharSequence> title, ref<java::lang::CharSequence> message, jboolean indeterminate, jboolean cancelable, ref<android::content::DialogInterface_OnCancelListener> cancelListener) { return call_static_method<SCAPIX_META_STRING("show"), ref<android::app::ProgressDialog>>(context, title, message, indeterminate, cancelable, cancelListener); }
inline void ProgressDialog::onStart() { return call_method<SCAPIX_META_STRING("onStart"), void>(); }
inline void ProgressDialog::setProgress(jint value) { return call_method<SCAPIX_META_STRING("setProgress"), void>(value); }
inline void ProgressDialog::setSecondaryProgress(jint secondaryProgress) { return call_method<SCAPIX_META_STRING("setSecondaryProgress"), void>(secondaryProgress); }
inline jint ProgressDialog::getProgress() { return call_method<SCAPIX_META_STRING("getProgress"), jint>(); }
inline jint ProgressDialog::getSecondaryProgress() { return call_method<SCAPIX_META_STRING("getSecondaryProgress"), jint>(); }
inline jint ProgressDialog::getMax() { return call_method<SCAPIX_META_STRING("getMax"), jint>(); }
inline void ProgressDialog::setMax(jint max) { return call_method<SCAPIX_META_STRING("setMax"), void>(max); }
inline void ProgressDialog::incrementProgressBy(jint diff) { return call_method<SCAPIX_META_STRING("incrementProgressBy"), void>(diff); }
inline void ProgressDialog::incrementSecondaryProgressBy(jint diff) { return call_method<SCAPIX_META_STRING("incrementSecondaryProgressBy"), void>(diff); }
inline void ProgressDialog::setProgressDrawable(ref<android::graphics::drawable::Drawable> d) { return call_method<SCAPIX_META_STRING("setProgressDrawable"), void>(d); }
inline void ProgressDialog::setIndeterminateDrawable(ref<android::graphics::drawable::Drawable> d) { return call_method<SCAPIX_META_STRING("setIndeterminateDrawable"), void>(d); }
inline void ProgressDialog::setIndeterminate(jboolean indeterminate) { return call_method<SCAPIX_META_STRING("setIndeterminate"), void>(indeterminate); }
inline jboolean ProgressDialog::isIndeterminate() { return call_method<SCAPIX_META_STRING("isIndeterminate"), jboolean>(); }
inline void ProgressDialog::setMessage(ref<java::lang::CharSequence> message) { return call_method<SCAPIX_META_STRING("setMessage"), void>(message); }
inline void ProgressDialog::setProgressStyle(jint style) { return call_method<SCAPIX_META_STRING("setProgressStyle"), void>(style); }
inline void ProgressDialog::setProgressNumberFormat(ref<java::lang::String> format) { return call_method<SCAPIX_META_STRING("setProgressNumberFormat"), void>(format); }
inline void ProgressDialog::setProgressPercentFormat(ref<java::text::NumberFormat> format) { return call_method<SCAPIX_META_STRING("setProgressPercentFormat"), void>(format); }

} // namespace android::app
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_APP_PROGRESSDIALOG_H
