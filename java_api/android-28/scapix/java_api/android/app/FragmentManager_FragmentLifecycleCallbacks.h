// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_APP_FRAGMENTMANAGER_FRAGMENTLIFECYCLECALLBACKS_H
#define SCAPIX_ANDROID_APP_FRAGMENTMANAGER_FRAGMENTLIFECYCLECALLBACKS_H

namespace scapix::java_api {

namespace android::app { class Fragment; }
namespace android::app { class FragmentManager; }
namespace android::content { class Context; }
namespace android::os { class Bundle; }
namespace android::view { class View; }

namespace android::app {

class FragmentManager_FragmentLifecycleCallbacks : public object_base<SCAPIX_META_STRING("android/app/FragmentManager$FragmentLifecycleCallbacks"),
	java::lang::Object>
{
public:

	static ref<FragmentManager_FragmentLifecycleCallbacks> new_object();
	void onFragmentPreAttached(ref<android::app::FragmentManager> fm, ref<android::app::Fragment> f, ref<android::content::Context> context);
	void onFragmentAttached(ref<android::app::FragmentManager> fm, ref<android::app::Fragment> f, ref<android::content::Context> context);
	void onFragmentPreCreated(ref<android::app::FragmentManager> fm, ref<android::app::Fragment> f, ref<android::os::Bundle> savedInstanceState);
	void onFragmentCreated(ref<android::app::FragmentManager> fm, ref<android::app::Fragment> f, ref<android::os::Bundle> savedInstanceState);
	void onFragmentActivityCreated(ref<android::app::FragmentManager> fm, ref<android::app::Fragment> f, ref<android::os::Bundle> savedInstanceState);
	void onFragmentViewCreated(ref<android::app::FragmentManager> fm, ref<android::app::Fragment> f, ref<android::view::View> v, ref<android::os::Bundle> savedInstanceState);
	void onFragmentStarted(ref<android::app::FragmentManager> fm, ref<android::app::Fragment> f);
	void onFragmentResumed(ref<android::app::FragmentManager> fm, ref<android::app::Fragment> f);
	void onFragmentPaused(ref<android::app::FragmentManager> fm, ref<android::app::Fragment> f);
	void onFragmentStopped(ref<android::app::FragmentManager> fm, ref<android::app::Fragment> f);
	void onFragmentSaveInstanceState(ref<android::app::FragmentManager> fm, ref<android::app::Fragment> f, ref<android::os::Bundle> outState);
	void onFragmentViewDestroyed(ref<android::app::FragmentManager> fm, ref<android::app::Fragment> f);
	void onFragmentDestroyed(ref<android::app::FragmentManager> fm, ref<android::app::Fragment> f);
	void onFragmentDetached(ref<android::app::FragmentManager> fm, ref<android::app::Fragment> f);

protected:

	FragmentManager_FragmentLifecycleCallbacks(handle_type h) : base_(h) {}

};

} // namespace android::app
} // namespace scapix::java_api

#include <scapix/java_api/android/app/Fragment.h>
#include <scapix/java_api/android/app/FragmentManager.h>
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/os/Bundle.h>
#include <scapix/java_api/android/view/View.h>

namespace scapix::java_api {
namespace android::app {

inline ref<FragmentManager_FragmentLifecycleCallbacks> FragmentManager_FragmentLifecycleCallbacks::new_object() { return base_::new_object(); }
inline void FragmentManager_FragmentLifecycleCallbacks::onFragmentPreAttached(ref<android::app::FragmentManager> fm, ref<android::app::Fragment> f, ref<android::content::Context> context) { return call_method<SCAPIX_META_STRING("onFragmentPreAttached"), void>(fm, f, context); }
inline void FragmentManager_FragmentLifecycleCallbacks::onFragmentAttached(ref<android::app::FragmentManager> fm, ref<android::app::Fragment> f, ref<android::content::Context> context) { return call_method<SCAPIX_META_STRING("onFragmentAttached"), void>(fm, f, context); }
inline void FragmentManager_FragmentLifecycleCallbacks::onFragmentPreCreated(ref<android::app::FragmentManager> fm, ref<android::app::Fragment> f, ref<android::os::Bundle> savedInstanceState) { return call_method<SCAPIX_META_STRING("onFragmentPreCreated"), void>(fm, f, savedInstanceState); }
inline void FragmentManager_FragmentLifecycleCallbacks::onFragmentCreated(ref<android::app::FragmentManager> fm, ref<android::app::Fragment> f, ref<android::os::Bundle> savedInstanceState) { return call_method<SCAPIX_META_STRING("onFragmentCreated"), void>(fm, f, savedInstanceState); }
inline void FragmentManager_FragmentLifecycleCallbacks::onFragmentActivityCreated(ref<android::app::FragmentManager> fm, ref<android::app::Fragment> f, ref<android::os::Bundle> savedInstanceState) { return call_method<SCAPIX_META_STRING("onFragmentActivityCreated"), void>(fm, f, savedInstanceState); }
inline void FragmentManager_FragmentLifecycleCallbacks::onFragmentViewCreated(ref<android::app::FragmentManager> fm, ref<android::app::Fragment> f, ref<android::view::View> v, ref<android::os::Bundle> savedInstanceState) { return call_method<SCAPIX_META_STRING("onFragmentViewCreated"), void>(fm, f, v, savedInstanceState); }
inline void FragmentManager_FragmentLifecycleCallbacks::onFragmentStarted(ref<android::app::FragmentManager> fm, ref<android::app::Fragment> f) { return call_method<SCAPIX_META_STRING("onFragmentStarted"), void>(fm, f); }
inline void FragmentManager_FragmentLifecycleCallbacks::onFragmentResumed(ref<android::app::FragmentManager> fm, ref<android::app::Fragment> f) { return call_method<SCAPIX_META_STRING("onFragmentResumed"), void>(fm, f); }
inline void FragmentManager_FragmentLifecycleCallbacks::onFragmentPaused(ref<android::app::FragmentManager> fm, ref<android::app::Fragment> f) { return call_method<SCAPIX_META_STRING("onFragmentPaused"), void>(fm, f); }
inline void FragmentManager_FragmentLifecycleCallbacks::onFragmentStopped(ref<android::app::FragmentManager> fm, ref<android::app::Fragment> f) { return call_method<SCAPIX_META_STRING("onFragmentStopped"), void>(fm, f); }
inline void FragmentManager_FragmentLifecycleCallbacks::onFragmentSaveInstanceState(ref<android::app::FragmentManager> fm, ref<android::app::Fragment> f, ref<android::os::Bundle> outState) { return call_method<SCAPIX_META_STRING("onFragmentSaveInstanceState"), void>(fm, f, outState); }
inline void FragmentManager_FragmentLifecycleCallbacks::onFragmentViewDestroyed(ref<android::app::FragmentManager> fm, ref<android::app::Fragment> f) { return call_method<SCAPIX_META_STRING("onFragmentViewDestroyed"), void>(fm, f); }
inline void FragmentManager_FragmentLifecycleCallbacks::onFragmentDestroyed(ref<android::app::FragmentManager> fm, ref<android::app::Fragment> f) { return call_method<SCAPIX_META_STRING("onFragmentDestroyed"), void>(fm, f); }
inline void FragmentManager_FragmentLifecycleCallbacks::onFragmentDetached(ref<android::app::FragmentManager> fm, ref<android::app::Fragment> f) { return call_method<SCAPIX_META_STRING("onFragmentDetached"), void>(fm, f); }

} // namespace android::app
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_APP_FRAGMENTMANAGER_FRAGMENTLIFECYCLECALLBACKS_H
