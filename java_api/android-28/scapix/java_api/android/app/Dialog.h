// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/content/DialogInterface.h>
#include <scapix/java_api/android/view/Window_Callback.h>
#include <scapix/java_api/android/view/KeyEvent_Callback.h>
#include <scapix/java_api/android/view/View_OnCreateContextMenuListener.h>

#ifndef SCAPIX_ANDROID_APP_DIALOG_H
#define SCAPIX_ANDROID_APP_DIALOG_H

namespace scapix::java_api {

namespace android::app { class ActionBar; }
namespace android::app { class Activity; }
namespace android::content { class Context; }
namespace android::content { class DialogInterface_OnCancelListener; }
namespace android::content { class DialogInterface_OnDismissListener; }
namespace android::content { class DialogInterface_OnKeyListener; }
namespace android::content { class DialogInterface_OnShowListener; }
namespace android::graphics::drawable { class Drawable; }
namespace android::net { class Uri; }
namespace android::os { class Bundle; }
namespace android::os { class Message; }
namespace android::view { class ActionMode; }
namespace android::view { class ActionMode_Callback; }
namespace android::view { class ContextMenu; }
namespace android::view { class ContextMenu_ContextMenuInfo; }
namespace android::view { class KeyEvent; }
namespace android::view { class LayoutInflater; }
namespace android::view { class Menu; }
namespace android::view { class MenuItem; }
namespace android::view { class MotionEvent; }
namespace android::view { class SearchEvent; }
namespace android::view { class View; }
namespace android::view { class ViewGroup_LayoutParams; }
namespace android::view { class Window; }
namespace android::view { class WindowManager_LayoutParams; }
namespace android::view::accessibility { class AccessibilityEvent; }
namespace java::lang { class CharSequence; }

namespace android::app {

class Dialog : public object_base<SCAPIX_META_STRING("android/app/Dialog"),
	java::lang::Object,
	android::content::DialogInterface,
	android::view::Window_Callback,
	android::view::KeyEvent_Callback,
	android::view::View_OnCreateContextMenuListener>
{
public:

	static ref<Dialog> new_object(ref<android::content::Context> context);
	static ref<Dialog> new_object(ref<android::content::Context> context, jint themeResId);
	ref<android::content::Context> getContext();
	ref<android::app::ActionBar> getActionBar();
	void setOwnerActivity(ref<android::app::Activity> activity);
	ref<android::app::Activity> getOwnerActivity();
	jboolean isShowing();
	void create();
	void show();
	void hide();
	void dismiss();
	ref<android::os::Bundle> onSaveInstanceState();
	void onRestoreInstanceState(ref<android::os::Bundle> savedInstanceState);
	ref<android::view::Window> getWindow();
	ref<android::view::View> getCurrentFocus();
	ref<android::view::View> findViewById(jint id);
	ref<android::view::View> requireViewById(jint id);
	void setContentView(jint layoutResID);
	void setContentView(ref<android::view::View> view);
	void setContentView(ref<android::view::View> view, ref<android::view::ViewGroup_LayoutParams> params);
	void addContentView(ref<android::view::View> view, ref<android::view::ViewGroup_LayoutParams> params);
	void setTitle(ref<java::lang::CharSequence> title);
	void setTitle(jint titleId);
	jboolean onKeyDown(jint keyCode, ref<android::view::KeyEvent> event);
	jboolean onKeyLongPress(jint keyCode, ref<android::view::KeyEvent> event);
	jboolean onKeyUp(jint keyCode, ref<android::view::KeyEvent> event);
	jboolean onKeyMultiple(jint keyCode, jint repeatCount, ref<android::view::KeyEvent> event);
	void onBackPressed();
	jboolean onKeyShortcut(jint keyCode, ref<android::view::KeyEvent> event);
	jboolean onTouchEvent(ref<android::view::MotionEvent> event);
	jboolean onTrackballEvent(ref<android::view::MotionEvent> event);
	jboolean onGenericMotionEvent(ref<android::view::MotionEvent> event);
	void onWindowAttributesChanged(ref<android::view::WindowManager_LayoutParams> params);
	void onContentChanged();
	void onWindowFocusChanged(jboolean hasFocus);
	void onAttachedToWindow();
	void onDetachedFromWindow();
	jboolean dispatchKeyEvent(ref<android::view::KeyEvent> event);
	jboolean dispatchKeyShortcutEvent(ref<android::view::KeyEvent> event);
	jboolean dispatchTouchEvent(ref<android::view::MotionEvent> ev);
	jboolean dispatchTrackballEvent(ref<android::view::MotionEvent> ev);
	jboolean dispatchGenericMotionEvent(ref<android::view::MotionEvent> ev);
	jboolean dispatchPopulateAccessibilityEvent(ref<android::view::accessibility::AccessibilityEvent> event);
	ref<android::view::View> onCreatePanelView(jint featureId);
	jboolean onCreatePanelMenu(jint featureId, ref<android::view::Menu> menu);
	jboolean onPreparePanel(jint featureId, ref<android::view::View> view, ref<android::view::Menu> menu);
	jboolean onMenuOpened(jint featureId, ref<android::view::Menu> menu);
	jboolean onMenuItemSelected(jint featureId, ref<android::view::MenuItem> item);
	void onPanelClosed(jint featureId, ref<android::view::Menu> menu);
	jboolean onCreateOptionsMenu(ref<android::view::Menu> menu);
	jboolean onPrepareOptionsMenu(ref<android::view::Menu> menu);
	jboolean onOptionsItemSelected(ref<android::view::MenuItem> item);
	void onOptionsMenuClosed(ref<android::view::Menu> menu);
	void openOptionsMenu();
	void closeOptionsMenu();
	void invalidateOptionsMenu();
	void onCreateContextMenu(ref<android::view::ContextMenu> menu, ref<android::view::View> v, ref<android::view::ContextMenu_ContextMenuInfo> menuInfo);
	void registerForContextMenu(ref<android::view::View> view);
	void unregisterForContextMenu(ref<android::view::View> view);
	void openContextMenu(ref<android::view::View> view);
	jboolean onContextItemSelected(ref<android::view::MenuItem> item);
	void onContextMenuClosed(ref<android::view::Menu> menu);
	jboolean onSearchRequested(ref<android::view::SearchEvent> searchEvent);
	jboolean onSearchRequested();
	ref<android::view::SearchEvent> getSearchEvent();
	ref<android::view::ActionMode> onWindowStartingActionMode(ref<android::view::ActionMode_Callback> callback);
	ref<android::view::ActionMode> onWindowStartingActionMode(ref<android::view::ActionMode_Callback> callback, jint type);
	void onActionModeStarted(ref<android::view::ActionMode> mode);
	void onActionModeFinished(ref<android::view::ActionMode> mode);
	void takeKeyEvents(jboolean get);
	jboolean requestWindowFeature(jint featureId);
	void setFeatureDrawableResource(jint featureId, jint resId);
	void setFeatureDrawableUri(jint featureId, ref<android::net::Uri> uri);
	void setFeatureDrawable(jint featureId, ref<android::graphics::drawable::Drawable> drawable);
	void setFeatureDrawableAlpha(jint featureId, jint alpha);
	ref<android::view::LayoutInflater> getLayoutInflater();
	void setCancelable(jboolean flag);
	void setCanceledOnTouchOutside(jboolean cancel);
	void cancel();
	void setOnCancelListener(ref<android::content::DialogInterface_OnCancelListener> listener);
	void setCancelMessage(ref<android::os::Message> msg);
	void setOnDismissListener(ref<android::content::DialogInterface_OnDismissListener> listener);
	void setOnShowListener(ref<android::content::DialogInterface_OnShowListener> listener);
	void setDismissMessage(ref<android::os::Message> msg);
	void setVolumeControlStream(jint streamType);
	jint getVolumeControlStream();
	void setOnKeyListener(ref<android::content::DialogInterface_OnKeyListener> onKeyListener);

protected:

	Dialog(handle_type h) : base_(h) {}

};

} // namespace android::app
} // namespace scapix::java_api

#include <scapix/java_api/android/app/ActionBar.h>
#include <scapix/java_api/android/app/Activity.h>
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/content/DialogInterface_OnCancelListener.h>
#include <scapix/java_api/android/content/DialogInterface_OnDismissListener.h>
#include <scapix/java_api/android/content/DialogInterface_OnKeyListener.h>
#include <scapix/java_api/android/content/DialogInterface_OnShowListener.h>
#include <scapix/java_api/android/graphics/drawable/Drawable.h>
#include <scapix/java_api/android/net/Uri.h>
#include <scapix/java_api/android/os/Bundle.h>
#include <scapix/java_api/android/os/Message.h>
#include <scapix/java_api/android/view/ActionMode.h>
#include <scapix/java_api/android/view/ActionMode_Callback.h>
#include <scapix/java_api/android/view/ContextMenu.h>
#include <scapix/java_api/android/view/ContextMenu_ContextMenuInfo.h>
#include <scapix/java_api/android/view/KeyEvent.h>
#include <scapix/java_api/android/view/LayoutInflater.h>
#include <scapix/java_api/android/view/Menu.h>
#include <scapix/java_api/android/view/MenuItem.h>
#include <scapix/java_api/android/view/MotionEvent.h>
#include <scapix/java_api/android/view/SearchEvent.h>
#include <scapix/java_api/android/view/View.h>
#include <scapix/java_api/android/view/ViewGroup_LayoutParams.h>
#include <scapix/java_api/android/view/Window.h>
#include <scapix/java_api/android/view/WindowManager_LayoutParams.h>
#include <scapix/java_api/android/view/accessibility/AccessibilityEvent.h>
#include <scapix/java_api/java/lang/CharSequence.h>

namespace scapix::java_api {
namespace android::app {

inline ref<Dialog> Dialog::new_object(ref<android::content::Context> context) { return base_::new_object(context); }
inline ref<Dialog> Dialog::new_object(ref<android::content::Context> context, jint themeResId) { return base_::new_object(context, themeResId); }
inline ref<android::content::Context> Dialog::getContext() { return call_method<SCAPIX_META_STRING("getContext"), ref<android::content::Context>>(); }
inline ref<android::app::ActionBar> Dialog::getActionBar() { return call_method<SCAPIX_META_STRING("getActionBar"), ref<android::app::ActionBar>>(); }
inline void Dialog::setOwnerActivity(ref<android::app::Activity> activity) { return call_method<SCAPIX_META_STRING("setOwnerActivity"), void>(activity); }
inline ref<android::app::Activity> Dialog::getOwnerActivity() { return call_method<SCAPIX_META_STRING("getOwnerActivity"), ref<android::app::Activity>>(); }
inline jboolean Dialog::isShowing() { return call_method<SCAPIX_META_STRING("isShowing"), jboolean>(); }
inline void Dialog::create() { return call_method<SCAPIX_META_STRING("create"), void>(); }
inline void Dialog::show() { return call_method<SCAPIX_META_STRING("show"), void>(); }
inline void Dialog::hide() { return call_method<SCAPIX_META_STRING("hide"), void>(); }
inline void Dialog::dismiss() { return call_method<SCAPIX_META_STRING("dismiss"), void>(); }
inline ref<android::os::Bundle> Dialog::onSaveInstanceState() { return call_method<SCAPIX_META_STRING("onSaveInstanceState"), ref<android::os::Bundle>>(); }
inline void Dialog::onRestoreInstanceState(ref<android::os::Bundle> savedInstanceState) { return call_method<SCAPIX_META_STRING("onRestoreInstanceState"), void>(savedInstanceState); }
inline ref<android::view::Window> Dialog::getWindow() { return call_method<SCAPIX_META_STRING("getWindow"), ref<android::view::Window>>(); }
inline ref<android::view::View> Dialog::getCurrentFocus() { return call_method<SCAPIX_META_STRING("getCurrentFocus"), ref<android::view::View>>(); }
inline ref<android::view::View> Dialog::findViewById(jint id) { return call_method<SCAPIX_META_STRING("findViewById"), ref<android::view::View>>(id); }
inline ref<android::view::View> Dialog::requireViewById(jint id) { return call_method<SCAPIX_META_STRING("requireViewById"), ref<android::view::View>>(id); }
inline void Dialog::setContentView(jint layoutResID) { return call_method<SCAPIX_META_STRING("setContentView"), void>(layoutResID); }
inline void Dialog::setContentView(ref<android::view::View> view) { return call_method<SCAPIX_META_STRING("setContentView"), void>(view); }
inline void Dialog::setContentView(ref<android::view::View> view, ref<android::view::ViewGroup_LayoutParams> params) { return call_method<SCAPIX_META_STRING("setContentView"), void>(view, params); }
inline void Dialog::addContentView(ref<android::view::View> view, ref<android::view::ViewGroup_LayoutParams> params) { return call_method<SCAPIX_META_STRING("addContentView"), void>(view, params); }
inline void Dialog::setTitle(ref<java::lang::CharSequence> title) { return call_method<SCAPIX_META_STRING("setTitle"), void>(title); }
inline void Dialog::setTitle(jint titleId) { return call_method<SCAPIX_META_STRING("setTitle"), void>(titleId); }
inline jboolean Dialog::onKeyDown(jint keyCode, ref<android::view::KeyEvent> event) { return call_method<SCAPIX_META_STRING("onKeyDown"), jboolean>(keyCode, event); }
inline jboolean Dialog::onKeyLongPress(jint keyCode, ref<android::view::KeyEvent> event) { return call_method<SCAPIX_META_STRING("onKeyLongPress"), jboolean>(keyCode, event); }
inline jboolean Dialog::onKeyUp(jint keyCode, ref<android::view::KeyEvent> event) { return call_method<SCAPIX_META_STRING("onKeyUp"), jboolean>(keyCode, event); }
inline jboolean Dialog::onKeyMultiple(jint keyCode, jint repeatCount, ref<android::view::KeyEvent> event) { return call_method<SCAPIX_META_STRING("onKeyMultiple"), jboolean>(keyCode, repeatCount, event); }
inline void Dialog::onBackPressed() { return call_method<SCAPIX_META_STRING("onBackPressed"), void>(); }
inline jboolean Dialog::onKeyShortcut(jint keyCode, ref<android::view::KeyEvent> event) { return call_method<SCAPIX_META_STRING("onKeyShortcut"), jboolean>(keyCode, event); }
inline jboolean Dialog::onTouchEvent(ref<android::view::MotionEvent> event) { return call_method<SCAPIX_META_STRING("onTouchEvent"), jboolean>(event); }
inline jboolean Dialog::onTrackballEvent(ref<android::view::MotionEvent> event) { return call_method<SCAPIX_META_STRING("onTrackballEvent"), jboolean>(event); }
inline jboolean Dialog::onGenericMotionEvent(ref<android::view::MotionEvent> event) { return call_method<SCAPIX_META_STRING("onGenericMotionEvent"), jboolean>(event); }
inline void Dialog::onWindowAttributesChanged(ref<android::view::WindowManager_LayoutParams> params) { return call_method<SCAPIX_META_STRING("onWindowAttributesChanged"), void>(params); }
inline void Dialog::onContentChanged() { return call_method<SCAPIX_META_STRING("onContentChanged"), void>(); }
inline void Dialog::onWindowFocusChanged(jboolean hasFocus) { return call_method<SCAPIX_META_STRING("onWindowFocusChanged"), void>(hasFocus); }
inline void Dialog::onAttachedToWindow() { return call_method<SCAPIX_META_STRING("onAttachedToWindow"), void>(); }
inline void Dialog::onDetachedFromWindow() { return call_method<SCAPIX_META_STRING("onDetachedFromWindow"), void>(); }
inline jboolean Dialog::dispatchKeyEvent(ref<android::view::KeyEvent> event) { return call_method<SCAPIX_META_STRING("dispatchKeyEvent"), jboolean>(event); }
inline jboolean Dialog::dispatchKeyShortcutEvent(ref<android::view::KeyEvent> event) { return call_method<SCAPIX_META_STRING("dispatchKeyShortcutEvent"), jboolean>(event); }
inline jboolean Dialog::dispatchTouchEvent(ref<android::view::MotionEvent> ev) { return call_method<SCAPIX_META_STRING("dispatchTouchEvent"), jboolean>(ev); }
inline jboolean Dialog::dispatchTrackballEvent(ref<android::view::MotionEvent> ev) { return call_method<SCAPIX_META_STRING("dispatchTrackballEvent"), jboolean>(ev); }
inline jboolean Dialog::dispatchGenericMotionEvent(ref<android::view::MotionEvent> ev) { return call_method<SCAPIX_META_STRING("dispatchGenericMotionEvent"), jboolean>(ev); }
inline jboolean Dialog::dispatchPopulateAccessibilityEvent(ref<android::view::accessibility::AccessibilityEvent> event) { return call_method<SCAPIX_META_STRING("dispatchPopulateAccessibilityEvent"), jboolean>(event); }
inline ref<android::view::View> Dialog::onCreatePanelView(jint featureId) { return call_method<SCAPIX_META_STRING("onCreatePanelView"), ref<android::view::View>>(featureId); }
inline jboolean Dialog::onCreatePanelMenu(jint featureId, ref<android::view::Menu> menu) { return call_method<SCAPIX_META_STRING("onCreatePanelMenu"), jboolean>(featureId, menu); }
inline jboolean Dialog::onPreparePanel(jint featureId, ref<android::view::View> view, ref<android::view::Menu> menu) { return call_method<SCAPIX_META_STRING("onPreparePanel"), jboolean>(featureId, view, menu); }
inline jboolean Dialog::onMenuOpened(jint featureId, ref<android::view::Menu> menu) { return call_method<SCAPIX_META_STRING("onMenuOpened"), jboolean>(featureId, menu); }
inline jboolean Dialog::onMenuItemSelected(jint featureId, ref<android::view::MenuItem> item) { return call_method<SCAPIX_META_STRING("onMenuItemSelected"), jboolean>(featureId, item); }
inline void Dialog::onPanelClosed(jint featureId, ref<android::view::Menu> menu) { return call_method<SCAPIX_META_STRING("onPanelClosed"), void>(featureId, menu); }
inline jboolean Dialog::onCreateOptionsMenu(ref<android::view::Menu> menu) { return call_method<SCAPIX_META_STRING("onCreateOptionsMenu"), jboolean>(menu); }
inline jboolean Dialog::onPrepareOptionsMenu(ref<android::view::Menu> menu) { return call_method<SCAPIX_META_STRING("onPrepareOptionsMenu"), jboolean>(menu); }
inline jboolean Dialog::onOptionsItemSelected(ref<android::view::MenuItem> item) { return call_method<SCAPIX_META_STRING("onOptionsItemSelected"), jboolean>(item); }
inline void Dialog::onOptionsMenuClosed(ref<android::view::Menu> menu) { return call_method<SCAPIX_META_STRING("onOptionsMenuClosed"), void>(menu); }
inline void Dialog::openOptionsMenu() { return call_method<SCAPIX_META_STRING("openOptionsMenu"), void>(); }
inline void Dialog::closeOptionsMenu() { return call_method<SCAPIX_META_STRING("closeOptionsMenu"), void>(); }
inline void Dialog::invalidateOptionsMenu() { return call_method<SCAPIX_META_STRING("invalidateOptionsMenu"), void>(); }
inline void Dialog::onCreateContextMenu(ref<android::view::ContextMenu> menu, ref<android::view::View> v, ref<android::view::ContextMenu_ContextMenuInfo> menuInfo) { return call_method<SCAPIX_META_STRING("onCreateContextMenu"), void>(menu, v, menuInfo); }
inline void Dialog::registerForContextMenu(ref<android::view::View> view) { return call_method<SCAPIX_META_STRING("registerForContextMenu"), void>(view); }
inline void Dialog::unregisterForContextMenu(ref<android::view::View> view) { return call_method<SCAPIX_META_STRING("unregisterForContextMenu"), void>(view); }
inline void Dialog::openContextMenu(ref<android::view::View> view) { return call_method<SCAPIX_META_STRING("openContextMenu"), void>(view); }
inline jboolean Dialog::onContextItemSelected(ref<android::view::MenuItem> item) { return call_method<SCAPIX_META_STRING("onContextItemSelected"), jboolean>(item); }
inline void Dialog::onContextMenuClosed(ref<android::view::Menu> menu) { return call_method<SCAPIX_META_STRING("onContextMenuClosed"), void>(menu); }
inline jboolean Dialog::onSearchRequested(ref<android::view::SearchEvent> searchEvent) { return call_method<SCAPIX_META_STRING("onSearchRequested"), jboolean>(searchEvent); }
inline jboolean Dialog::onSearchRequested() { return call_method<SCAPIX_META_STRING("onSearchRequested"), jboolean>(); }
inline ref<android::view::SearchEvent> Dialog::getSearchEvent() { return call_method<SCAPIX_META_STRING("getSearchEvent"), ref<android::view::SearchEvent>>(); }
inline ref<android::view::ActionMode> Dialog::onWindowStartingActionMode(ref<android::view::ActionMode_Callback> callback) { return call_method<SCAPIX_META_STRING("onWindowStartingActionMode"), ref<android::view::ActionMode>>(callback); }
inline ref<android::view::ActionMode> Dialog::onWindowStartingActionMode(ref<android::view::ActionMode_Callback> callback, jint type) { return call_method<SCAPIX_META_STRING("onWindowStartingActionMode"), ref<android::view::ActionMode>>(callback, type); }
inline void Dialog::onActionModeStarted(ref<android::view::ActionMode> mode) { return call_method<SCAPIX_META_STRING("onActionModeStarted"), void>(mode); }
inline void Dialog::onActionModeFinished(ref<android::view::ActionMode> mode) { return call_method<SCAPIX_META_STRING("onActionModeFinished"), void>(mode); }
inline void Dialog::takeKeyEvents(jboolean get) { return call_method<SCAPIX_META_STRING("takeKeyEvents"), void>(get); }
inline jboolean Dialog::requestWindowFeature(jint featureId) { return call_method<SCAPIX_META_STRING("requestWindowFeature"), jboolean>(featureId); }
inline void Dialog::setFeatureDrawableResource(jint featureId, jint resId) { return call_method<SCAPIX_META_STRING("setFeatureDrawableResource"), void>(featureId, resId); }
inline void Dialog::setFeatureDrawableUri(jint featureId, ref<android::net::Uri> uri) { return call_method<SCAPIX_META_STRING("setFeatureDrawableUri"), void>(featureId, uri); }
inline void Dialog::setFeatureDrawable(jint featureId, ref<android::graphics::drawable::Drawable> drawable) { return call_method<SCAPIX_META_STRING("setFeatureDrawable"), void>(featureId, drawable); }
inline void Dialog::setFeatureDrawableAlpha(jint featureId, jint alpha) { return call_method<SCAPIX_META_STRING("setFeatureDrawableAlpha"), void>(featureId, alpha); }
inline ref<android::view::LayoutInflater> Dialog::getLayoutInflater() { return call_method<SCAPIX_META_STRING("getLayoutInflater"), ref<android::view::LayoutInflater>>(); }
inline void Dialog::setCancelable(jboolean flag) { return call_method<SCAPIX_META_STRING("setCancelable"), void>(flag); }
inline void Dialog::setCanceledOnTouchOutside(jboolean cancel) { return call_method<SCAPIX_META_STRING("setCanceledOnTouchOutside"), void>(cancel); }
inline void Dialog::cancel() { return call_method<SCAPIX_META_STRING("cancel"), void>(); }
inline void Dialog::setOnCancelListener(ref<android::content::DialogInterface_OnCancelListener> listener) { return call_method<SCAPIX_META_STRING("setOnCancelListener"), void>(listener); }
inline void Dialog::setCancelMessage(ref<android::os::Message> msg) { return call_method<SCAPIX_META_STRING("setCancelMessage"), void>(msg); }
inline void Dialog::setOnDismissListener(ref<android::content::DialogInterface_OnDismissListener> listener) { return call_method<SCAPIX_META_STRING("setOnDismissListener"), void>(listener); }
inline void Dialog::setOnShowListener(ref<android::content::DialogInterface_OnShowListener> listener) { return call_method<SCAPIX_META_STRING("setOnShowListener"), void>(listener); }
inline void Dialog::setDismissMessage(ref<android::os::Message> msg) { return call_method<SCAPIX_META_STRING("setDismissMessage"), void>(msg); }
inline void Dialog::setVolumeControlStream(jint streamType) { return call_method<SCAPIX_META_STRING("setVolumeControlStream"), void>(streamType); }
inline jint Dialog::getVolumeControlStream() { return call_method<SCAPIX_META_STRING("getVolumeControlStream"), jint>(); }
inline void Dialog::setOnKeyListener(ref<android::content::DialogInterface_OnKeyListener> onKeyListener) { return call_method<SCAPIX_META_STRING("setOnKeyListener"), void>(onKeyListener); }

} // namespace android::app
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_APP_DIALOG_H
