// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_APP_APPOPSMANAGER_H
#define SCAPIX_ANDROID_APP_APPOPSMANAGER_H

namespace scapix::java_api {

namespace android::app { class AppOpsManager_OnOpChangedListener; }
namespace java::lang { class String; }

namespace android::app {

class AppOpsManager : public object_base<SCAPIX_META_STRING("android/app/AppOpsManager"),
	java::lang::Object>
{
public:

	using OnOpChangedListener = AppOpsManager_OnOpChangedListener;

	static jint MODE_ALLOWED_();
	static jint MODE_DEFAULT_();
	static jint MODE_ERRORED_();
	static jint MODE_IGNORED_();
	static ref<java::lang::String> OPSTR_ADD_VOICEMAIL_();
	static ref<java::lang::String> OPSTR_ANSWER_PHONE_CALLS_();
	static ref<java::lang::String> OPSTR_BODY_SENSORS_();
	static ref<java::lang::String> OPSTR_CALL_PHONE_();
	static ref<java::lang::String> OPSTR_CAMERA_();
	static ref<java::lang::String> OPSTR_COARSE_LOCATION_();
	static ref<java::lang::String> OPSTR_FINE_LOCATION_();
	static ref<java::lang::String> OPSTR_GET_USAGE_STATS_();
	static ref<java::lang::String> OPSTR_MOCK_LOCATION_();
	static ref<java::lang::String> OPSTR_MONITOR_HIGH_POWER_LOCATION_();
	static ref<java::lang::String> OPSTR_MONITOR_LOCATION_();
	static ref<java::lang::String> OPSTR_PICTURE_IN_PICTURE_();
	static ref<java::lang::String> OPSTR_PROCESS_OUTGOING_CALLS_();
	static ref<java::lang::String> OPSTR_READ_CALENDAR_();
	static ref<java::lang::String> OPSTR_READ_CALL_LOG_();
	static ref<java::lang::String> OPSTR_READ_CELL_BROADCASTS_();
	static ref<java::lang::String> OPSTR_READ_CONTACTS_();
	static ref<java::lang::String> OPSTR_READ_EXTERNAL_STORAGE_();
	static ref<java::lang::String> OPSTR_READ_PHONE_NUMBERS_();
	static ref<java::lang::String> OPSTR_READ_PHONE_STATE_();
	static ref<java::lang::String> OPSTR_READ_SMS_();
	static ref<java::lang::String> OPSTR_RECEIVE_MMS_();
	static ref<java::lang::String> OPSTR_RECEIVE_SMS_();
	static ref<java::lang::String> OPSTR_RECEIVE_WAP_PUSH_();
	static ref<java::lang::String> OPSTR_RECORD_AUDIO_();
	static ref<java::lang::String> OPSTR_SEND_SMS_();
	static ref<java::lang::String> OPSTR_SYSTEM_ALERT_WINDOW_();
	static ref<java::lang::String> OPSTR_USE_FINGERPRINT_();
	static ref<java::lang::String> OPSTR_USE_SIP_();
	static ref<java::lang::String> OPSTR_WRITE_CALENDAR_();
	static ref<java::lang::String> OPSTR_WRITE_CALL_LOG_();
	static ref<java::lang::String> OPSTR_WRITE_CONTACTS_();
	static ref<java::lang::String> OPSTR_WRITE_EXTERNAL_STORAGE_();
	static ref<java::lang::String> OPSTR_WRITE_SETTINGS_();

	static ref<java::lang::String> permissionToOp(ref<java::lang::String> permission);
	void startWatchingMode(ref<java::lang::String> op, ref<java::lang::String> packageName, ref<android::app::AppOpsManager_OnOpChangedListener> callback);
	void stopWatchingMode(ref<android::app::AppOpsManager_OnOpChangedListener> callback);
	jint checkOp(ref<java::lang::String> op, jint uid, ref<java::lang::String> packageName);
	jint checkOpNoThrow(ref<java::lang::String> op, jint uid, ref<java::lang::String> packageName);
	jint noteOp(ref<java::lang::String> op, jint uid, ref<java::lang::String> packageName);
	jint noteOpNoThrow(ref<java::lang::String> op, jint uid, ref<java::lang::String> packageName);
	jint noteProxyOp(ref<java::lang::String> op, ref<java::lang::String> proxiedPackageName);
	jint noteProxyOpNoThrow(ref<java::lang::String> op, ref<java::lang::String> proxiedPackageName);
	jint startOp(ref<java::lang::String> op, jint uid, ref<java::lang::String> packageName);
	jint startOpNoThrow(ref<java::lang::String> op, jint uid, ref<java::lang::String> packageName);
	void finishOp(ref<java::lang::String> op, jint uid, ref<java::lang::String> packageName);
	void checkPackage(jint uid, ref<java::lang::String> packageName);

protected:

	AppOpsManager(handle_type h) : base_(h) {}

};

} // namespace android::app
} // namespace scapix::java_api

#include <scapix/java_api/android/app/AppOpsManager_OnOpChangedListener.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::app {

inline jint AppOpsManager::MODE_ALLOWED_() { return get_static_field<SCAPIX_META_STRING("MODE_ALLOWED"), jint>(); }
inline jint AppOpsManager::MODE_DEFAULT_() { return get_static_field<SCAPIX_META_STRING("MODE_DEFAULT"), jint>(); }
inline jint AppOpsManager::MODE_ERRORED_() { return get_static_field<SCAPIX_META_STRING("MODE_ERRORED"), jint>(); }
inline jint AppOpsManager::MODE_IGNORED_() { return get_static_field<SCAPIX_META_STRING("MODE_IGNORED"), jint>(); }
inline ref<java::lang::String> AppOpsManager::OPSTR_ADD_VOICEMAIL_() { return get_static_field<SCAPIX_META_STRING("OPSTR_ADD_VOICEMAIL"), ref<java::lang::String>>(); }
inline ref<java::lang::String> AppOpsManager::OPSTR_ANSWER_PHONE_CALLS_() { return get_static_field<SCAPIX_META_STRING("OPSTR_ANSWER_PHONE_CALLS"), ref<java::lang::String>>(); }
inline ref<java::lang::String> AppOpsManager::OPSTR_BODY_SENSORS_() { return get_static_field<SCAPIX_META_STRING("OPSTR_BODY_SENSORS"), ref<java::lang::String>>(); }
inline ref<java::lang::String> AppOpsManager::OPSTR_CALL_PHONE_() { return get_static_field<SCAPIX_META_STRING("OPSTR_CALL_PHONE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> AppOpsManager::OPSTR_CAMERA_() { return get_static_field<SCAPIX_META_STRING("OPSTR_CAMERA"), ref<java::lang::String>>(); }
inline ref<java::lang::String> AppOpsManager::OPSTR_COARSE_LOCATION_() { return get_static_field<SCAPIX_META_STRING("OPSTR_COARSE_LOCATION"), ref<java::lang::String>>(); }
inline ref<java::lang::String> AppOpsManager::OPSTR_FINE_LOCATION_() { return get_static_field<SCAPIX_META_STRING("OPSTR_FINE_LOCATION"), ref<java::lang::String>>(); }
inline ref<java::lang::String> AppOpsManager::OPSTR_GET_USAGE_STATS_() { return get_static_field<SCAPIX_META_STRING("OPSTR_GET_USAGE_STATS"), ref<java::lang::String>>(); }
inline ref<java::lang::String> AppOpsManager::OPSTR_MOCK_LOCATION_() { return get_static_field<SCAPIX_META_STRING("OPSTR_MOCK_LOCATION"), ref<java::lang::String>>(); }
inline ref<java::lang::String> AppOpsManager::OPSTR_MONITOR_HIGH_POWER_LOCATION_() { return get_static_field<SCAPIX_META_STRING("OPSTR_MONITOR_HIGH_POWER_LOCATION"), ref<java::lang::String>>(); }
inline ref<java::lang::String> AppOpsManager::OPSTR_MONITOR_LOCATION_() { return get_static_field<SCAPIX_META_STRING("OPSTR_MONITOR_LOCATION"), ref<java::lang::String>>(); }
inline ref<java::lang::String> AppOpsManager::OPSTR_PICTURE_IN_PICTURE_() { return get_static_field<SCAPIX_META_STRING("OPSTR_PICTURE_IN_PICTURE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> AppOpsManager::OPSTR_PROCESS_OUTGOING_CALLS_() { return get_static_field<SCAPIX_META_STRING("OPSTR_PROCESS_OUTGOING_CALLS"), ref<java::lang::String>>(); }
inline ref<java::lang::String> AppOpsManager::OPSTR_READ_CALENDAR_() { return get_static_field<SCAPIX_META_STRING("OPSTR_READ_CALENDAR"), ref<java::lang::String>>(); }
inline ref<java::lang::String> AppOpsManager::OPSTR_READ_CALL_LOG_() { return get_static_field<SCAPIX_META_STRING("OPSTR_READ_CALL_LOG"), ref<java::lang::String>>(); }
inline ref<java::lang::String> AppOpsManager::OPSTR_READ_CELL_BROADCASTS_() { return get_static_field<SCAPIX_META_STRING("OPSTR_READ_CELL_BROADCASTS"), ref<java::lang::String>>(); }
inline ref<java::lang::String> AppOpsManager::OPSTR_READ_CONTACTS_() { return get_static_field<SCAPIX_META_STRING("OPSTR_READ_CONTACTS"), ref<java::lang::String>>(); }
inline ref<java::lang::String> AppOpsManager::OPSTR_READ_EXTERNAL_STORAGE_() { return get_static_field<SCAPIX_META_STRING("OPSTR_READ_EXTERNAL_STORAGE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> AppOpsManager::OPSTR_READ_PHONE_NUMBERS_() { return get_static_field<SCAPIX_META_STRING("OPSTR_READ_PHONE_NUMBERS"), ref<java::lang::String>>(); }
inline ref<java::lang::String> AppOpsManager::OPSTR_READ_PHONE_STATE_() { return get_static_field<SCAPIX_META_STRING("OPSTR_READ_PHONE_STATE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> AppOpsManager::OPSTR_READ_SMS_() { return get_static_field<SCAPIX_META_STRING("OPSTR_READ_SMS"), ref<java::lang::String>>(); }
inline ref<java::lang::String> AppOpsManager::OPSTR_RECEIVE_MMS_() { return get_static_field<SCAPIX_META_STRING("OPSTR_RECEIVE_MMS"), ref<java::lang::String>>(); }
inline ref<java::lang::String> AppOpsManager::OPSTR_RECEIVE_SMS_() { return get_static_field<SCAPIX_META_STRING("OPSTR_RECEIVE_SMS"), ref<java::lang::String>>(); }
inline ref<java::lang::String> AppOpsManager::OPSTR_RECEIVE_WAP_PUSH_() { return get_static_field<SCAPIX_META_STRING("OPSTR_RECEIVE_WAP_PUSH"), ref<java::lang::String>>(); }
inline ref<java::lang::String> AppOpsManager::OPSTR_RECORD_AUDIO_() { return get_static_field<SCAPIX_META_STRING("OPSTR_RECORD_AUDIO"), ref<java::lang::String>>(); }
inline ref<java::lang::String> AppOpsManager::OPSTR_SEND_SMS_() { return get_static_field<SCAPIX_META_STRING("OPSTR_SEND_SMS"), ref<java::lang::String>>(); }
inline ref<java::lang::String> AppOpsManager::OPSTR_SYSTEM_ALERT_WINDOW_() { return get_static_field<SCAPIX_META_STRING("OPSTR_SYSTEM_ALERT_WINDOW"), ref<java::lang::String>>(); }
inline ref<java::lang::String> AppOpsManager::OPSTR_USE_FINGERPRINT_() { return get_static_field<SCAPIX_META_STRING("OPSTR_USE_FINGERPRINT"), ref<java::lang::String>>(); }
inline ref<java::lang::String> AppOpsManager::OPSTR_USE_SIP_() { return get_static_field<SCAPIX_META_STRING("OPSTR_USE_SIP"), ref<java::lang::String>>(); }
inline ref<java::lang::String> AppOpsManager::OPSTR_WRITE_CALENDAR_() { return get_static_field<SCAPIX_META_STRING("OPSTR_WRITE_CALENDAR"), ref<java::lang::String>>(); }
inline ref<java::lang::String> AppOpsManager::OPSTR_WRITE_CALL_LOG_() { return get_static_field<SCAPIX_META_STRING("OPSTR_WRITE_CALL_LOG"), ref<java::lang::String>>(); }
inline ref<java::lang::String> AppOpsManager::OPSTR_WRITE_CONTACTS_() { return get_static_field<SCAPIX_META_STRING("OPSTR_WRITE_CONTACTS"), ref<java::lang::String>>(); }
inline ref<java::lang::String> AppOpsManager::OPSTR_WRITE_EXTERNAL_STORAGE_() { return get_static_field<SCAPIX_META_STRING("OPSTR_WRITE_EXTERNAL_STORAGE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> AppOpsManager::OPSTR_WRITE_SETTINGS_() { return get_static_field<SCAPIX_META_STRING("OPSTR_WRITE_SETTINGS"), ref<java::lang::String>>(); }
inline ref<java::lang::String> AppOpsManager::permissionToOp(ref<java::lang::String> permission) { return call_static_method<SCAPIX_META_STRING("permissionToOp"), ref<java::lang::String>>(permission); }
inline void AppOpsManager::startWatchingMode(ref<java::lang::String> op, ref<java::lang::String> packageName, ref<android::app::AppOpsManager_OnOpChangedListener> callback) { return call_method<SCAPIX_META_STRING("startWatchingMode"), void>(op, packageName, callback); }
inline void AppOpsManager::stopWatchingMode(ref<android::app::AppOpsManager_OnOpChangedListener> callback) { return call_method<SCAPIX_META_STRING("stopWatchingMode"), void>(callback); }
inline jint AppOpsManager::checkOp(ref<java::lang::String> op, jint uid, ref<java::lang::String> packageName) { return call_method<SCAPIX_META_STRING("checkOp"), jint>(op, uid, packageName); }
inline jint AppOpsManager::checkOpNoThrow(ref<java::lang::String> op, jint uid, ref<java::lang::String> packageName) { return call_method<SCAPIX_META_STRING("checkOpNoThrow"), jint>(op, uid, packageName); }
inline jint AppOpsManager::noteOp(ref<java::lang::String> op, jint uid, ref<java::lang::String> packageName) { return call_method<SCAPIX_META_STRING("noteOp"), jint>(op, uid, packageName); }
inline jint AppOpsManager::noteOpNoThrow(ref<java::lang::String> op, jint uid, ref<java::lang::String> packageName) { return call_method<SCAPIX_META_STRING("noteOpNoThrow"), jint>(op, uid, packageName); }
inline jint AppOpsManager::noteProxyOp(ref<java::lang::String> op, ref<java::lang::String> proxiedPackageName) { return call_method<SCAPIX_META_STRING("noteProxyOp"), jint>(op, proxiedPackageName); }
inline jint AppOpsManager::noteProxyOpNoThrow(ref<java::lang::String> op, ref<java::lang::String> proxiedPackageName) { return call_method<SCAPIX_META_STRING("noteProxyOpNoThrow"), jint>(op, proxiedPackageName); }
inline jint AppOpsManager::startOp(ref<java::lang::String> op, jint uid, ref<java::lang::String> packageName) { return call_method<SCAPIX_META_STRING("startOp"), jint>(op, uid, packageName); }
inline jint AppOpsManager::startOpNoThrow(ref<java::lang::String> op, jint uid, ref<java::lang::String> packageName) { return call_method<SCAPIX_META_STRING("startOpNoThrow"), jint>(op, uid, packageName); }
inline void AppOpsManager::finishOp(ref<java::lang::String> op, jint uid, ref<java::lang::String> packageName) { return call_method<SCAPIX_META_STRING("finishOp"), void>(op, uid, packageName); }
inline void AppOpsManager::checkPackage(jint uid, ref<java::lang::String> packageName) { return call_method<SCAPIX_META_STRING("checkPackage"), void>(uid, packageName); }

} // namespace android::app
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_APP_APPOPSMANAGER_H
