// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_APP_ALARMMANAGER_H
#define SCAPIX_ANDROID_APP_ALARMMANAGER_H

namespace scapix::java_api {

namespace android::app { class AlarmManager_AlarmClockInfo; }
namespace android::app { class AlarmManager_OnAlarmListener; }
namespace android::app { class PendingIntent; }
namespace android::os { class Handler; }
namespace java::lang { class String; }

namespace android::app {

class AlarmManager : public object_base<SCAPIX_META_STRING("android/app/AlarmManager"),
	java::lang::Object>
{
public:

	using OnAlarmListener = AlarmManager_OnAlarmListener;
	using AlarmClockInfo = AlarmManager_AlarmClockInfo;

	static ref<java::lang::String> ACTION_NEXT_ALARM_CLOCK_CHANGED_();
	static jint ELAPSED_REALTIME_();
	static jint ELAPSED_REALTIME_WAKEUP_();
	static jlong INTERVAL_DAY_();
	static jlong INTERVAL_FIFTEEN_MINUTES_();
	static jlong INTERVAL_HALF_DAY_();
	static jlong INTERVAL_HALF_HOUR_();
	static jlong INTERVAL_HOUR_();
	static jint RTC_();
	static jint RTC_WAKEUP_();

	void set(jint type, jlong triggerAtMillis, ref<android::app::PendingIntent> p3);
	void set(jint type, jlong triggerAtMillis, ref<java::lang::String> p3, ref<android::app::AlarmManager_OnAlarmListener> tag, ref<android::os::Handler> listener);
	void setRepeating(jint type, jlong triggerAtMillis, jlong p3, ref<android::app::PendingIntent> intervalMillis);
	void setWindow(jint type, jlong windowStartMillis, jlong p3, ref<android::app::PendingIntent> windowLengthMillis);
	void setWindow(jint type, jlong windowStartMillis, jlong p3, ref<java::lang::String> windowLengthMillis, ref<android::app::AlarmManager_OnAlarmListener> p5, ref<android::os::Handler> tag);
	void setExact(jint type, jlong triggerAtMillis, ref<android::app::PendingIntent> p3);
	void setExact(jint type, jlong triggerAtMillis, ref<java::lang::String> p3, ref<android::app::AlarmManager_OnAlarmListener> tag, ref<android::os::Handler> listener);
	void setAlarmClock(ref<android::app::AlarmManager_AlarmClockInfo> info, ref<android::app::PendingIntent> operation);
	void setInexactRepeating(jint type, jlong triggerAtMillis, jlong p3, ref<android::app::PendingIntent> intervalMillis);
	void setAndAllowWhileIdle(jint type, jlong triggerAtMillis, ref<android::app::PendingIntent> p3);
	void setExactAndAllowWhileIdle(jint type, jlong triggerAtMillis, ref<android::app::PendingIntent> p3);
	void cancel(ref<android::app::PendingIntent> operation);
	void cancel(ref<android::app::AlarmManager_OnAlarmListener> listener);
	void setTime(jlong millis);
	void setTimeZone(ref<java::lang::String> timeZone);
	ref<android::app::AlarmManager_AlarmClockInfo> getNextAlarmClock();

protected:

	AlarmManager(handle_type h) : base_(h) {}

};

} // namespace android::app
} // namespace scapix::java_api

#include <scapix/java_api/android/app/AlarmManager_AlarmClockInfo.h>
#include <scapix/java_api/android/app/AlarmManager_OnAlarmListener.h>
#include <scapix/java_api/android/app/PendingIntent.h>
#include <scapix/java_api/android/os/Handler.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::app {

inline ref<java::lang::String> AlarmManager::ACTION_NEXT_ALARM_CLOCK_CHANGED_() { return get_static_field<SCAPIX_META_STRING("ACTION_NEXT_ALARM_CLOCK_CHANGED"), ref<java::lang::String>>(); }
inline jint AlarmManager::ELAPSED_REALTIME_() { return get_static_field<SCAPIX_META_STRING("ELAPSED_REALTIME"), jint>(); }
inline jint AlarmManager::ELAPSED_REALTIME_WAKEUP_() { return get_static_field<SCAPIX_META_STRING("ELAPSED_REALTIME_WAKEUP"), jint>(); }
inline jlong AlarmManager::INTERVAL_DAY_() { return get_static_field<SCAPIX_META_STRING("INTERVAL_DAY"), jlong>(); }
inline jlong AlarmManager::INTERVAL_FIFTEEN_MINUTES_() { return get_static_field<SCAPIX_META_STRING("INTERVAL_FIFTEEN_MINUTES"), jlong>(); }
inline jlong AlarmManager::INTERVAL_HALF_DAY_() { return get_static_field<SCAPIX_META_STRING("INTERVAL_HALF_DAY"), jlong>(); }
inline jlong AlarmManager::INTERVAL_HALF_HOUR_() { return get_static_field<SCAPIX_META_STRING("INTERVAL_HALF_HOUR"), jlong>(); }
inline jlong AlarmManager::INTERVAL_HOUR_() { return get_static_field<SCAPIX_META_STRING("INTERVAL_HOUR"), jlong>(); }
inline jint AlarmManager::RTC_() { return get_static_field<SCAPIX_META_STRING("RTC"), jint>(); }
inline jint AlarmManager::RTC_WAKEUP_() { return get_static_field<SCAPIX_META_STRING("RTC_WAKEUP"), jint>(); }
inline void AlarmManager::set(jint type, jlong triggerAtMillis, ref<android::app::PendingIntent> p3) { return call_method<SCAPIX_META_STRING("set"), void>(type, triggerAtMillis, p3); }
inline void AlarmManager::set(jint type, jlong triggerAtMillis, ref<java::lang::String> p3, ref<android::app::AlarmManager_OnAlarmListener> tag, ref<android::os::Handler> listener) { return call_method<SCAPIX_META_STRING("set"), void>(type, triggerAtMillis, p3, tag, listener); }
inline void AlarmManager::setRepeating(jint type, jlong triggerAtMillis, jlong p3, ref<android::app::PendingIntent> intervalMillis) { return call_method<SCAPIX_META_STRING("setRepeating"), void>(type, triggerAtMillis, p3, intervalMillis); }
inline void AlarmManager::setWindow(jint type, jlong windowStartMillis, jlong p3, ref<android::app::PendingIntent> windowLengthMillis) { return call_method<SCAPIX_META_STRING("setWindow"), void>(type, windowStartMillis, p3, windowLengthMillis); }
inline void AlarmManager::setWindow(jint type, jlong windowStartMillis, jlong p3, ref<java::lang::String> windowLengthMillis, ref<android::app::AlarmManager_OnAlarmListener> p5, ref<android::os::Handler> tag) { return call_method<SCAPIX_META_STRING("setWindow"), void>(type, windowStartMillis, p3, windowLengthMillis, p5, tag); }
inline void AlarmManager::setExact(jint type, jlong triggerAtMillis, ref<android::app::PendingIntent> p3) { return call_method<SCAPIX_META_STRING("setExact"), void>(type, triggerAtMillis, p3); }
inline void AlarmManager::setExact(jint type, jlong triggerAtMillis, ref<java::lang::String> p3, ref<android::app::AlarmManager_OnAlarmListener> tag, ref<android::os::Handler> listener) { return call_method<SCAPIX_META_STRING("setExact"), void>(type, triggerAtMillis, p3, tag, listener); }
inline void AlarmManager::setAlarmClock(ref<android::app::AlarmManager_AlarmClockInfo> info, ref<android::app::PendingIntent> operation) { return call_method<SCAPIX_META_STRING("setAlarmClock"), void>(info, operation); }
inline void AlarmManager::setInexactRepeating(jint type, jlong triggerAtMillis, jlong p3, ref<android::app::PendingIntent> intervalMillis) { return call_method<SCAPIX_META_STRING("setInexactRepeating"), void>(type, triggerAtMillis, p3, intervalMillis); }
inline void AlarmManager::setAndAllowWhileIdle(jint type, jlong triggerAtMillis, ref<android::app::PendingIntent> p3) { return call_method<SCAPIX_META_STRING("setAndAllowWhileIdle"), void>(type, triggerAtMillis, p3); }
inline void AlarmManager::setExactAndAllowWhileIdle(jint type, jlong triggerAtMillis, ref<android::app::PendingIntent> p3) { return call_method<SCAPIX_META_STRING("setExactAndAllowWhileIdle"), void>(type, triggerAtMillis, p3); }
inline void AlarmManager::cancel(ref<android::app::PendingIntent> operation) { return call_method<SCAPIX_META_STRING("cancel"), void>(operation); }
inline void AlarmManager::cancel(ref<android::app::AlarmManager_OnAlarmListener> listener) { return call_method<SCAPIX_META_STRING("cancel"), void>(listener); }
inline void AlarmManager::setTime(jlong millis) { return call_method<SCAPIX_META_STRING("setTime"), void>(millis); }
inline void AlarmManager::setTimeZone(ref<java::lang::String> timeZone) { return call_method<SCAPIX_META_STRING("setTimeZone"), void>(timeZone); }
inline ref<android::app::AlarmManager_AlarmClockInfo> AlarmManager::getNextAlarmClock() { return call_method<SCAPIX_META_STRING("getNextAlarmClock"), ref<android::app::AlarmManager_AlarmClockInfo>>(); }

} // namespace android::app
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_APP_ALARMMANAGER_H
