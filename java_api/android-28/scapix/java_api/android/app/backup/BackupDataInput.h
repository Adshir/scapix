// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_APP_BACKUP_BACKUPDATAINPUT_H
#define SCAPIX_ANDROID_APP_BACKUP_BACKUPDATAINPUT_H

namespace scapix::java_api {

namespace java::lang { class String; }

namespace android::app::backup {

class BackupDataInput : public object_base<SCAPIX_META_STRING("android/app/backup/BackupDataInput"),
	java::lang::Object>
{
public:

	jboolean readNextHeader();
	ref<java::lang::String> getKey();
	jint getDataSize();
	jint readEntityData(ref<link::java::array<jbyte>> data, jint offset, jint size);
	void skipEntityData();

protected:

	BackupDataInput(handle_type h) : base_(h) {}

};

} // namespace android::app::backup
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::app::backup {

inline jboolean BackupDataInput::readNextHeader() { return call_method<SCAPIX_META_STRING("readNextHeader"), jboolean>(); }
inline ref<java::lang::String> BackupDataInput::getKey() { return call_method<SCAPIX_META_STRING("getKey"), ref<java::lang::String>>(); }
inline jint BackupDataInput::getDataSize() { return call_method<SCAPIX_META_STRING("getDataSize"), jint>(); }
inline jint BackupDataInput::readEntityData(ref<link::java::array<jbyte>> data, jint offset, jint size) { return call_method<SCAPIX_META_STRING("readEntityData"), jint>(data, offset, size); }
inline void BackupDataInput::skipEntityData() { return call_method<SCAPIX_META_STRING("skipEntityData"), void>(); }

} // namespace android::app::backup
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_APP_BACKUP_BACKUPDATAINPUT_H
