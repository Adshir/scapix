// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/io/InputStream.h>

#ifndef SCAPIX_ANDROID_APP_BACKUP_BACKUPDATAINPUTSTREAM_H
#define SCAPIX_ANDROID_APP_BACKUP_BACKUPDATAINPUTSTREAM_H

namespace scapix::java_api {

namespace java::lang { class String; }

namespace android::app::backup {

class BackupDataInputStream : public object_base<SCAPIX_META_STRING("android/app/backup/BackupDataInputStream"),
	java::io::InputStream>
{
public:

	jint read();
	jint read(ref<link::java::array<jbyte>> b, jint offset, jint size);
	jint read(ref<link::java::array<jbyte>> b);
	ref<java::lang::String> getKey();
	jint size();

protected:

	BackupDataInputStream(handle_type h) : base_(h) {}

};

} // namespace android::app::backup
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::app::backup {

inline jint BackupDataInputStream::read() { return call_method<SCAPIX_META_STRING("read"), jint>(); }
inline jint BackupDataInputStream::read(ref<link::java::array<jbyte>> b, jint offset, jint size) { return call_method<SCAPIX_META_STRING("read"), jint>(b, offset, size); }
inline jint BackupDataInputStream::read(ref<link::java::array<jbyte>> b) { return call_method<SCAPIX_META_STRING("read"), jint>(b); }
inline ref<java::lang::String> BackupDataInputStream::getKey() { return call_method<SCAPIX_META_STRING("getKey"), ref<java::lang::String>>(); }
inline jint BackupDataInputStream::size() { return call_method<SCAPIX_META_STRING("size"), jint>(); }

} // namespace android::app::backup
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_APP_BACKUP_BACKUPDATAINPUTSTREAM_H
