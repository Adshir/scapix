// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_SPEECH_TTS_SYNTHESISREQUEST_H
#define SCAPIX_ANDROID_SPEECH_TTS_SYNTHESISREQUEST_H

namespace scapix::java_api {

namespace android::os { class Bundle; }
namespace java::lang { class CharSequence; }
namespace java::lang { class String; }

namespace android::speech::tts {

class SynthesisRequest : public object_base<SCAPIX_META_STRING("android/speech/tts/SynthesisRequest"),
	java::lang::Object>
{
public:

	static ref<SynthesisRequest> new_object(ref<java::lang::String> text, ref<android::os::Bundle> params);
	static ref<SynthesisRequest> new_object(ref<java::lang::CharSequence> text, ref<android::os::Bundle> params);
	ref<java::lang::String> getText();
	ref<java::lang::CharSequence> getCharSequenceText();
	ref<java::lang::String> getVoiceName();
	ref<java::lang::String> getLanguage();
	ref<java::lang::String> getCountry();
	ref<java::lang::String> getVariant();
	jint getSpeechRate();
	jint getPitch();
	ref<android::os::Bundle> getParams();
	jint getCallerUid();

protected:

	SynthesisRequest(handle_type h) : base_(h) {}

};

} // namespace android::speech::tts
} // namespace scapix::java_api

#include <scapix/java_api/android/os/Bundle.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::speech::tts {

inline ref<SynthesisRequest> SynthesisRequest::new_object(ref<java::lang::String> text, ref<android::os::Bundle> params) { return base_::new_object(text, params); }
inline ref<SynthesisRequest> SynthesisRequest::new_object(ref<java::lang::CharSequence> text, ref<android::os::Bundle> params) { return base_::new_object(text, params); }
inline ref<java::lang::String> SynthesisRequest::getText() { return call_method<SCAPIX_META_STRING("getText"), ref<java::lang::String>>(); }
inline ref<java::lang::CharSequence> SynthesisRequest::getCharSequenceText() { return call_method<SCAPIX_META_STRING("getCharSequenceText"), ref<java::lang::CharSequence>>(); }
inline ref<java::lang::String> SynthesisRequest::getVoiceName() { return call_method<SCAPIX_META_STRING("getVoiceName"), ref<java::lang::String>>(); }
inline ref<java::lang::String> SynthesisRequest::getLanguage() { return call_method<SCAPIX_META_STRING("getLanguage"), ref<java::lang::String>>(); }
inline ref<java::lang::String> SynthesisRequest::getCountry() { return call_method<SCAPIX_META_STRING("getCountry"), ref<java::lang::String>>(); }
inline ref<java::lang::String> SynthesisRequest::getVariant() { return call_method<SCAPIX_META_STRING("getVariant"), ref<java::lang::String>>(); }
inline jint SynthesisRequest::getSpeechRate() { return call_method<SCAPIX_META_STRING("getSpeechRate"), jint>(); }
inline jint SynthesisRequest::getPitch() { return call_method<SCAPIX_META_STRING("getPitch"), jint>(); }
inline ref<android::os::Bundle> SynthesisRequest::getParams() { return call_method<SCAPIX_META_STRING("getParams"), ref<android::os::Bundle>>(); }
inline jint SynthesisRequest::getCallerUid() { return call_method<SCAPIX_META_STRING("getCallerUid"), jint>(); }

} // namespace android::speech::tts
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_SPEECH_TTS_SYNTHESISREQUEST_H
