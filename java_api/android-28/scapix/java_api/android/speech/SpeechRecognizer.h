// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_SPEECH_SPEECHRECOGNIZER_H
#define SCAPIX_ANDROID_SPEECH_SPEECHRECOGNIZER_H

namespace scapix::java_api {

namespace android::content { class ComponentName; }
namespace android::content { class Context; }
namespace android::content { class Intent; }
namespace android::speech { class RecognitionListener; }
namespace java::lang { class String; }

namespace android::speech {

class SpeechRecognizer : public object_base<SCAPIX_META_STRING("android/speech/SpeechRecognizer"),
	java::lang::Object>
{
public:

	static ref<java::lang::String> CONFIDENCE_SCORES_();
	static jint ERROR_AUDIO_();
	static jint ERROR_CLIENT_();
	static jint ERROR_INSUFFICIENT_PERMISSIONS_();
	static jint ERROR_NETWORK_();
	static jint ERROR_NETWORK_TIMEOUT_();
	static jint ERROR_NO_MATCH_();
	static jint ERROR_RECOGNIZER_BUSY_();
	static jint ERROR_SERVER_();
	static jint ERROR_SPEECH_TIMEOUT_();
	static ref<java::lang::String> RESULTS_RECOGNITION_();

	static jboolean isRecognitionAvailable(ref<android::content::Context> context);
	static ref<android::speech::SpeechRecognizer> createSpeechRecognizer(ref<android::content::Context> context);
	static ref<android::speech::SpeechRecognizer> createSpeechRecognizer(ref<android::content::Context> context, ref<android::content::ComponentName> serviceComponent);
	void setRecognitionListener(ref<android::speech::RecognitionListener> listener);
	void startListening(ref<android::content::Intent> recognizerIntent);
	void stopListening();
	void cancel();
	void destroy();

protected:

	SpeechRecognizer(handle_type h) : base_(h) {}

};

} // namespace android::speech
} // namespace scapix::java_api

#include <scapix/java_api/android/content/ComponentName.h>
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/content/Intent.h>
#include <scapix/java_api/android/speech/RecognitionListener.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::speech {

inline ref<java::lang::String> SpeechRecognizer::CONFIDENCE_SCORES_() { return get_static_field<SCAPIX_META_STRING("CONFIDENCE_SCORES"), ref<java::lang::String>>(); }
inline jint SpeechRecognizer::ERROR_AUDIO_() { return get_static_field<SCAPIX_META_STRING("ERROR_AUDIO"), jint>(); }
inline jint SpeechRecognizer::ERROR_CLIENT_() { return get_static_field<SCAPIX_META_STRING("ERROR_CLIENT"), jint>(); }
inline jint SpeechRecognizer::ERROR_INSUFFICIENT_PERMISSIONS_() { return get_static_field<SCAPIX_META_STRING("ERROR_INSUFFICIENT_PERMISSIONS"), jint>(); }
inline jint SpeechRecognizer::ERROR_NETWORK_() { return get_static_field<SCAPIX_META_STRING("ERROR_NETWORK"), jint>(); }
inline jint SpeechRecognizer::ERROR_NETWORK_TIMEOUT_() { return get_static_field<SCAPIX_META_STRING("ERROR_NETWORK_TIMEOUT"), jint>(); }
inline jint SpeechRecognizer::ERROR_NO_MATCH_() { return get_static_field<SCAPIX_META_STRING("ERROR_NO_MATCH"), jint>(); }
inline jint SpeechRecognizer::ERROR_RECOGNIZER_BUSY_() { return get_static_field<SCAPIX_META_STRING("ERROR_RECOGNIZER_BUSY"), jint>(); }
inline jint SpeechRecognizer::ERROR_SERVER_() { return get_static_field<SCAPIX_META_STRING("ERROR_SERVER"), jint>(); }
inline jint SpeechRecognizer::ERROR_SPEECH_TIMEOUT_() { return get_static_field<SCAPIX_META_STRING("ERROR_SPEECH_TIMEOUT"), jint>(); }
inline ref<java::lang::String> SpeechRecognizer::RESULTS_RECOGNITION_() { return get_static_field<SCAPIX_META_STRING("RESULTS_RECOGNITION"), ref<java::lang::String>>(); }
inline jboolean SpeechRecognizer::isRecognitionAvailable(ref<android::content::Context> context) { return call_static_method<SCAPIX_META_STRING("isRecognitionAvailable"), jboolean>(context); }
inline ref<android::speech::SpeechRecognizer> SpeechRecognizer::createSpeechRecognizer(ref<android::content::Context> context) { return call_static_method<SCAPIX_META_STRING("createSpeechRecognizer"), ref<android::speech::SpeechRecognizer>>(context); }
inline ref<android::speech::SpeechRecognizer> SpeechRecognizer::createSpeechRecognizer(ref<android::content::Context> context, ref<android::content::ComponentName> serviceComponent) { return call_static_method<SCAPIX_META_STRING("createSpeechRecognizer"), ref<android::speech::SpeechRecognizer>>(context, serviceComponent); }
inline void SpeechRecognizer::setRecognitionListener(ref<android::speech::RecognitionListener> listener) { return call_method<SCAPIX_META_STRING("setRecognitionListener"), void>(listener); }
inline void SpeechRecognizer::startListening(ref<android::content::Intent> recognizerIntent) { return call_method<SCAPIX_META_STRING("startListening"), void>(recognizerIntent); }
inline void SpeechRecognizer::stopListening() { return call_method<SCAPIX_META_STRING("stopListening"), void>(); }
inline void SpeechRecognizer::cancel() { return call_method<SCAPIX_META_STRING("cancel"), void>(); }
inline void SpeechRecognizer::destroy() { return call_method<SCAPIX_META_STRING("destroy"), void>(); }

} // namespace android::speech
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_SPEECH_SPEECHRECOGNIZER_H
