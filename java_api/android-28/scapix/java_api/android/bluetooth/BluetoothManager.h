// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_BLUETOOTH_BLUETOOTHMANAGER_H
#define SCAPIX_ANDROID_BLUETOOTH_BLUETOOTHMANAGER_H

namespace scapix::java_api {

namespace android::bluetooth { class BluetoothAdapter; }
namespace android::bluetooth { class BluetoothDevice; }
namespace android::bluetooth { class BluetoothGattServer; }
namespace android::bluetooth { class BluetoothGattServerCallback; }
namespace android::content { class Context; }
namespace java::util { class List; }

namespace android::bluetooth {

class BluetoothManager : public object_base<SCAPIX_META_STRING("android/bluetooth/BluetoothManager"),
	java::lang::Object>
{
public:

	ref<android::bluetooth::BluetoothAdapter> getAdapter();
	jint getConnectionState(ref<android::bluetooth::BluetoothDevice> device, jint profile);
	ref<java::util::List> getConnectedDevices(jint profile);
	ref<java::util::List> getDevicesMatchingConnectionStates(jint profile, ref<link::java::array<jint>> states);
	ref<android::bluetooth::BluetoothGattServer> openGattServer(ref<android::content::Context> context, ref<android::bluetooth::BluetoothGattServerCallback> callback);

protected:

	BluetoothManager(handle_type h) : base_(h) {}

};

} // namespace android::bluetooth
} // namespace scapix::java_api

#include <scapix/java_api/android/bluetooth/BluetoothAdapter.h>
#include <scapix/java_api/android/bluetooth/BluetoothDevice.h>
#include <scapix/java_api/android/bluetooth/BluetoothGattServer.h>
#include <scapix/java_api/android/bluetooth/BluetoothGattServerCallback.h>
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/java/util/List.h>

namespace scapix::java_api {
namespace android::bluetooth {

inline ref<android::bluetooth::BluetoothAdapter> BluetoothManager::getAdapter() { return call_method<SCAPIX_META_STRING("getAdapter"), ref<android::bluetooth::BluetoothAdapter>>(); }
inline jint BluetoothManager::getConnectionState(ref<android::bluetooth::BluetoothDevice> device, jint profile) { return call_method<SCAPIX_META_STRING("getConnectionState"), jint>(device, profile); }
inline ref<java::util::List> BluetoothManager::getConnectedDevices(jint profile) { return call_method<SCAPIX_META_STRING("getConnectedDevices"), ref<java::util::List>>(profile); }
inline ref<java::util::List> BluetoothManager::getDevicesMatchingConnectionStates(jint profile, ref<link::java::array<jint>> states) { return call_method<SCAPIX_META_STRING("getDevicesMatchingConnectionStates"), ref<java::util::List>>(profile, states); }
inline ref<android::bluetooth::BluetoothGattServer> BluetoothManager::openGattServer(ref<android::content::Context> context, ref<android::bluetooth::BluetoothGattServerCallback> callback) { return call_method<SCAPIX_META_STRING("openGattServer"), ref<android::bluetooth::BluetoothGattServer>>(context, callback); }

} // namespace android::bluetooth
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_BLUETOOTH_BLUETOOTHMANAGER_H
