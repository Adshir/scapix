// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_ANDROID_BLUETOOTH_LE_ADVERTISEDATA_H
#define SCAPIX_ANDROID_BLUETOOTH_LE_ADVERTISEDATA_H

namespace scapix::java_api {

namespace android::os { class Parcel; }
namespace android::os { class Parcelable_Creator; }
namespace android::util { class SparseArray; }
namespace java::lang { class String; }
namespace java::util { class List; }
namespace java::util { class Map; }
namespace android::bluetooth::le { class AdvertiseData_Builder; }

namespace android::bluetooth::le {

class AdvertiseData : public object_base<SCAPIX_META_STRING("android/bluetooth/le/AdvertiseData"),
	java::lang::Object,
	android::os::Parcelable>
{
public:

	using Builder = AdvertiseData_Builder;

	static ref<android::os::Parcelable_Creator> CREATOR_();

	ref<java::util::List> getServiceUuids();
	ref<android::util::SparseArray> getManufacturerSpecificData();
	ref<java::util::Map> getServiceData();
	jboolean getIncludeTxPowerLevel();
	jboolean getIncludeDeviceName();
	jint hashCode();
	jboolean equals(ref<java::lang::Object> obj);
	ref<java::lang::String> toString();
	jint describeContents();
	void writeToParcel(ref<android::os::Parcel> dest, jint flags);

protected:

	AdvertiseData(handle_type h) : base_(h) {}

};

} // namespace android::bluetooth::le
} // namespace scapix::java_api

#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/android/util/SparseArray.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/List.h>
#include <scapix/java_api/java/util/Map.h>

namespace scapix::java_api {
namespace android::bluetooth::le {

inline ref<android::os::Parcelable_Creator> AdvertiseData::CREATOR_() { return get_static_field<SCAPIX_META_STRING("CREATOR"), ref<android::os::Parcelable_Creator>>(); }
inline ref<java::util::List> AdvertiseData::getServiceUuids() { return call_method<SCAPIX_META_STRING("getServiceUuids"), ref<java::util::List>>(); }
inline ref<android::util::SparseArray> AdvertiseData::getManufacturerSpecificData() { return call_method<SCAPIX_META_STRING("getManufacturerSpecificData"), ref<android::util::SparseArray>>(); }
inline ref<java::util::Map> AdvertiseData::getServiceData() { return call_method<SCAPIX_META_STRING("getServiceData"), ref<java::util::Map>>(); }
inline jboolean AdvertiseData::getIncludeTxPowerLevel() { return call_method<SCAPIX_META_STRING("getIncludeTxPowerLevel"), jboolean>(); }
inline jboolean AdvertiseData::getIncludeDeviceName() { return call_method<SCAPIX_META_STRING("getIncludeDeviceName"), jboolean>(); }
inline jint AdvertiseData::hashCode() { return call_method<SCAPIX_META_STRING("hashCode"), jint>(); }
inline jboolean AdvertiseData::equals(ref<java::lang::Object> obj) { return call_method<SCAPIX_META_STRING("equals"), jboolean>(obj); }
inline ref<java::lang::String> AdvertiseData::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }
inline jint AdvertiseData::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }
inline void AdvertiseData::writeToParcel(ref<android::os::Parcel> dest, jint flags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(dest, flags); }

} // namespace android::bluetooth::le
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_BLUETOOTH_LE_ADVERTISEDATA_H
