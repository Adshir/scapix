// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_BLUETOOTH_LE_SCANRECORD_H
#define SCAPIX_ANDROID_BLUETOOTH_LE_SCANRECORD_H

namespace scapix::java_api {

namespace android::os { class ParcelUuid; }
namespace android::util { class SparseArray; }
namespace java::lang { class String; }
namespace java::util { class List; }
namespace java::util { class Map; }

namespace android::bluetooth::le {

class ScanRecord : public object_base<SCAPIX_META_STRING("android/bluetooth/le/ScanRecord"),
	java::lang::Object>
{
public:

	jint getAdvertiseFlags();
	ref<java::util::List> getServiceUuids();
	ref<android::util::SparseArray> getManufacturerSpecificData();
	ref<link::java::array<jbyte>> getManufacturerSpecificData(jint manufacturerId);
	ref<java::util::Map> getServiceData();
	ref<link::java::array<jbyte>> getServiceData(ref<android::os::ParcelUuid> serviceDataUuid);
	jint getTxPowerLevel();
	ref<java::lang::String> getDeviceName();
	ref<link::java::array<jbyte>> getBytes();
	ref<java::lang::String> toString();

protected:

	ScanRecord(handle_type h) : base_(h) {}

};

} // namespace android::bluetooth::le
} // namespace scapix::java_api

#include <scapix/java_api/android/os/ParcelUuid.h>
#include <scapix/java_api/android/util/SparseArray.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/List.h>
#include <scapix/java_api/java/util/Map.h>

namespace scapix::java_api {
namespace android::bluetooth::le {

inline jint ScanRecord::getAdvertiseFlags() { return call_method<SCAPIX_META_STRING("getAdvertiseFlags"), jint>(); }
inline ref<java::util::List> ScanRecord::getServiceUuids() { return call_method<SCAPIX_META_STRING("getServiceUuids"), ref<java::util::List>>(); }
inline ref<android::util::SparseArray> ScanRecord::getManufacturerSpecificData() { return call_method<SCAPIX_META_STRING("getManufacturerSpecificData"), ref<android::util::SparseArray>>(); }
inline ref<link::java::array<jbyte>> ScanRecord::getManufacturerSpecificData(jint manufacturerId) { return call_method<SCAPIX_META_STRING("getManufacturerSpecificData"), ref<link::java::array<jbyte>>>(manufacturerId); }
inline ref<java::util::Map> ScanRecord::getServiceData() { return call_method<SCAPIX_META_STRING("getServiceData"), ref<java::util::Map>>(); }
inline ref<link::java::array<jbyte>> ScanRecord::getServiceData(ref<android::os::ParcelUuid> serviceDataUuid) { return call_method<SCAPIX_META_STRING("getServiceData"), ref<link::java::array<jbyte>>>(serviceDataUuid); }
inline jint ScanRecord::getTxPowerLevel() { return call_method<SCAPIX_META_STRING("getTxPowerLevel"), jint>(); }
inline ref<java::lang::String> ScanRecord::getDeviceName() { return call_method<SCAPIX_META_STRING("getDeviceName"), ref<java::lang::String>>(); }
inline ref<link::java::array<jbyte>> ScanRecord::getBytes() { return call_method<SCAPIX_META_STRING("getBytes"), ref<link::java::array<jbyte>>>(); }
inline ref<java::lang::String> ScanRecord::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }

} // namespace android::bluetooth::le
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_BLUETOOTH_LE_SCANRECORD_H
