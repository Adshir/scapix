// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_BLUETOOTH_LE_ADVERTISEDATA_BUILDER_H
#define SCAPIX_ANDROID_BLUETOOTH_LE_ADVERTISEDATA_BUILDER_H

namespace scapix::java_api {

namespace android::bluetooth::le { class AdvertiseData; }
namespace android::os { class ParcelUuid; }

namespace android::bluetooth::le {

class AdvertiseData_Builder : public object_base<SCAPIX_META_STRING("android/bluetooth/le/AdvertiseData$Builder"),
	java::lang::Object>
{
public:

	static ref<AdvertiseData_Builder> new_object();
	ref<android::bluetooth::le::AdvertiseData_Builder> addServiceUuid(ref<android::os::ParcelUuid> serviceUuid);
	ref<android::bluetooth::le::AdvertiseData_Builder> addServiceData(ref<android::os::ParcelUuid> serviceDataUuid, ref<link::java::array<jbyte>> serviceData);
	ref<android::bluetooth::le::AdvertiseData_Builder> addManufacturerData(jint manufacturerId, ref<link::java::array<jbyte>> manufacturerSpecificData);
	ref<android::bluetooth::le::AdvertiseData_Builder> setIncludeTxPowerLevel(jboolean includeTxPowerLevel);
	ref<android::bluetooth::le::AdvertiseData_Builder> setIncludeDeviceName(jboolean includeDeviceName);
	ref<android::bluetooth::le::AdvertiseData> build();

protected:

	AdvertiseData_Builder(handle_type h) : base_(h) {}

};

} // namespace android::bluetooth::le
} // namespace scapix::java_api

#include <scapix/java_api/android/bluetooth/le/AdvertiseData.h>
#include <scapix/java_api/android/os/ParcelUuid.h>

namespace scapix::java_api {
namespace android::bluetooth::le {

inline ref<AdvertiseData_Builder> AdvertiseData_Builder::new_object() { return base_::new_object(); }
inline ref<android::bluetooth::le::AdvertiseData_Builder> AdvertiseData_Builder::addServiceUuid(ref<android::os::ParcelUuid> serviceUuid) { return call_method<SCAPIX_META_STRING("addServiceUuid"), ref<android::bluetooth::le::AdvertiseData_Builder>>(serviceUuid); }
inline ref<android::bluetooth::le::AdvertiseData_Builder> AdvertiseData_Builder::addServiceData(ref<android::os::ParcelUuid> serviceDataUuid, ref<link::java::array<jbyte>> serviceData) { return call_method<SCAPIX_META_STRING("addServiceData"), ref<android::bluetooth::le::AdvertiseData_Builder>>(serviceDataUuid, serviceData); }
inline ref<android::bluetooth::le::AdvertiseData_Builder> AdvertiseData_Builder::addManufacturerData(jint manufacturerId, ref<link::java::array<jbyte>> manufacturerSpecificData) { return call_method<SCAPIX_META_STRING("addManufacturerData"), ref<android::bluetooth::le::AdvertiseData_Builder>>(manufacturerId, manufacturerSpecificData); }
inline ref<android::bluetooth::le::AdvertiseData_Builder> AdvertiseData_Builder::setIncludeTxPowerLevel(jboolean includeTxPowerLevel) { return call_method<SCAPIX_META_STRING("setIncludeTxPowerLevel"), ref<android::bluetooth::le::AdvertiseData_Builder>>(includeTxPowerLevel); }
inline ref<android::bluetooth::le::AdvertiseData_Builder> AdvertiseData_Builder::setIncludeDeviceName(jboolean includeDeviceName) { return call_method<SCAPIX_META_STRING("setIncludeDeviceName"), ref<android::bluetooth::le::AdvertiseData_Builder>>(includeDeviceName); }
inline ref<android::bluetooth::le::AdvertiseData> AdvertiseData_Builder::build() { return call_method<SCAPIX_META_STRING("build"), ref<android::bluetooth::le::AdvertiseData>>(); }

} // namespace android::bluetooth::le
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_BLUETOOTH_LE_ADVERTISEDATA_BUILDER_H
