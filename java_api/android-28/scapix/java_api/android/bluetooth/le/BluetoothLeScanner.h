// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_BLUETOOTH_LE_BLUETOOTHLESCANNER_H
#define SCAPIX_ANDROID_BLUETOOTH_LE_BLUETOOTHLESCANNER_H

namespace scapix::java_api {

namespace android::app { class PendingIntent; }
namespace android::bluetooth::le { class ScanCallback; }
namespace android::bluetooth::le { class ScanSettings; }
namespace java::lang { class String; }
namespace java::util { class List; }

namespace android::bluetooth::le {

class BluetoothLeScanner : public object_base<SCAPIX_META_STRING("android/bluetooth/le/BluetoothLeScanner"),
	java::lang::Object>
{
public:

	static ref<java::lang::String> EXTRA_CALLBACK_TYPE_();
	static ref<java::lang::String> EXTRA_ERROR_CODE_();
	static ref<java::lang::String> EXTRA_LIST_SCAN_RESULT_();

	void startScan(ref<android::bluetooth::le::ScanCallback> callback);
	void startScan(ref<java::util::List> filters, ref<android::bluetooth::le::ScanSettings> settings, ref<android::bluetooth::le::ScanCallback> callback);
	jint startScan(ref<java::util::List> filters, ref<android::bluetooth::le::ScanSettings> settings, ref<android::app::PendingIntent> callbackIntent);
	void stopScan(ref<android::bluetooth::le::ScanCallback> callback);
	void stopScan(ref<android::app::PendingIntent> callbackIntent);
	void flushPendingScanResults(ref<android::bluetooth::le::ScanCallback> callback);

protected:

	BluetoothLeScanner(handle_type h) : base_(h) {}

};

} // namespace android::bluetooth::le
} // namespace scapix::java_api

#include <scapix/java_api/android/app/PendingIntent.h>
#include <scapix/java_api/android/bluetooth/le/ScanCallback.h>
#include <scapix/java_api/android/bluetooth/le/ScanSettings.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/List.h>

namespace scapix::java_api {
namespace android::bluetooth::le {

inline ref<java::lang::String> BluetoothLeScanner::EXTRA_CALLBACK_TYPE_() { return get_static_field<SCAPIX_META_STRING("EXTRA_CALLBACK_TYPE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> BluetoothLeScanner::EXTRA_ERROR_CODE_() { return get_static_field<SCAPIX_META_STRING("EXTRA_ERROR_CODE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> BluetoothLeScanner::EXTRA_LIST_SCAN_RESULT_() { return get_static_field<SCAPIX_META_STRING("EXTRA_LIST_SCAN_RESULT"), ref<java::lang::String>>(); }
inline void BluetoothLeScanner::startScan(ref<android::bluetooth::le::ScanCallback> callback) { return call_method<SCAPIX_META_STRING("startScan"), void>(callback); }
inline void BluetoothLeScanner::startScan(ref<java::util::List> filters, ref<android::bluetooth::le::ScanSettings> settings, ref<android::bluetooth::le::ScanCallback> callback) { return call_method<SCAPIX_META_STRING("startScan"), void>(filters, settings, callback); }
inline jint BluetoothLeScanner::startScan(ref<java::util::List> filters, ref<android::bluetooth::le::ScanSettings> settings, ref<android::app::PendingIntent> callbackIntent) { return call_method<SCAPIX_META_STRING("startScan"), jint>(filters, settings, callbackIntent); }
inline void BluetoothLeScanner::stopScan(ref<android::bluetooth::le::ScanCallback> callback) { return call_method<SCAPIX_META_STRING("stopScan"), void>(callback); }
inline void BluetoothLeScanner::stopScan(ref<android::app::PendingIntent> callbackIntent) { return call_method<SCAPIX_META_STRING("stopScan"), void>(callbackIntent); }
inline void BluetoothLeScanner::flushPendingScanResults(ref<android::bluetooth::le::ScanCallback> callback) { return call_method<SCAPIX_META_STRING("flushPendingScanResults"), void>(callback); }

} // namespace android::bluetooth::le
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_BLUETOOTH_LE_BLUETOOTHLESCANNER_H
