// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_BLUETOOTH_LE_SCANCALLBACK_H
#define SCAPIX_ANDROID_BLUETOOTH_LE_SCANCALLBACK_H

namespace scapix::java_api {

namespace android::bluetooth::le { class ScanResult; }
namespace java::util { class List; }

namespace android::bluetooth::le {

class ScanCallback : public object_base<SCAPIX_META_STRING("android/bluetooth/le/ScanCallback"),
	java::lang::Object>
{
public:

	static jint SCAN_FAILED_ALREADY_STARTED_();
	static jint SCAN_FAILED_APPLICATION_REGISTRATION_FAILED_();
	static jint SCAN_FAILED_FEATURE_UNSUPPORTED_();
	static jint SCAN_FAILED_INTERNAL_ERROR_();

	static ref<ScanCallback> new_object();
	void onScanResult(jint callbackType, ref<android::bluetooth::le::ScanResult> result);
	void onBatchScanResults(ref<java::util::List> results);
	void onScanFailed(jint errorCode);

protected:

	ScanCallback(handle_type h) : base_(h) {}

};

} // namespace android::bluetooth::le
} // namespace scapix::java_api

#include <scapix/java_api/android/bluetooth/le/ScanResult.h>
#include <scapix/java_api/java/util/List.h>

namespace scapix::java_api {
namespace android::bluetooth::le {

inline jint ScanCallback::SCAN_FAILED_ALREADY_STARTED_() { return get_static_field<SCAPIX_META_STRING("SCAN_FAILED_ALREADY_STARTED"), jint>(); }
inline jint ScanCallback::SCAN_FAILED_APPLICATION_REGISTRATION_FAILED_() { return get_static_field<SCAPIX_META_STRING("SCAN_FAILED_APPLICATION_REGISTRATION_FAILED"), jint>(); }
inline jint ScanCallback::SCAN_FAILED_FEATURE_UNSUPPORTED_() { return get_static_field<SCAPIX_META_STRING("SCAN_FAILED_FEATURE_UNSUPPORTED"), jint>(); }
inline jint ScanCallback::SCAN_FAILED_INTERNAL_ERROR_() { return get_static_field<SCAPIX_META_STRING("SCAN_FAILED_INTERNAL_ERROR"), jint>(); }
inline ref<ScanCallback> ScanCallback::new_object() { return base_::new_object(); }
inline void ScanCallback::onScanResult(jint callbackType, ref<android::bluetooth::le::ScanResult> result) { return call_method<SCAPIX_META_STRING("onScanResult"), void>(callbackType, result); }
inline void ScanCallback::onBatchScanResults(ref<java::util::List> results) { return call_method<SCAPIX_META_STRING("onBatchScanResults"), void>(results); }
inline void ScanCallback::onScanFailed(jint errorCode) { return call_method<SCAPIX_META_STRING("onScanFailed"), void>(errorCode); }

} // namespace android::bluetooth::le
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_BLUETOOTH_LE_SCANCALLBACK_H
