// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_ANDROID_BLUETOOTH_BLUETOOTHCLASS_H
#define SCAPIX_ANDROID_BLUETOOTH_BLUETOOTHCLASS_H

namespace scapix::java_api {

namespace android::os { class Parcel; }
namespace android::os { class Parcelable_Creator; }
namespace java::lang { class String; }
namespace android::bluetooth { class BluetoothClass_Service; }
namespace android::bluetooth { class BluetoothClass_Device; }

namespace android::bluetooth {

class BluetoothClass : public object_base<SCAPIX_META_STRING("android/bluetooth/BluetoothClass"),
	java::lang::Object,
	android::os::Parcelable>
{
public:

	using Service = BluetoothClass_Service;
	using Device = BluetoothClass_Device;

	static ref<android::os::Parcelable_Creator> CREATOR_();

	jboolean equals(ref<java::lang::Object> o);
	jint hashCode();
	ref<java::lang::String> toString();
	jint describeContents();
	void writeToParcel(ref<android::os::Parcel> out, jint flags);
	jboolean hasService(jint service);
	jint getMajorDeviceClass();
	jint getDeviceClass();

protected:

	BluetoothClass(handle_type h) : base_(h) {}

};

} // namespace android::bluetooth
} // namespace scapix::java_api

#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::bluetooth {

inline ref<android::os::Parcelable_Creator> BluetoothClass::CREATOR_() { return get_static_field<SCAPIX_META_STRING("CREATOR"), ref<android::os::Parcelable_Creator>>(); }
inline jboolean BluetoothClass::equals(ref<java::lang::Object> o) { return call_method<SCAPIX_META_STRING("equals"), jboolean>(o); }
inline jint BluetoothClass::hashCode() { return call_method<SCAPIX_META_STRING("hashCode"), jint>(); }
inline ref<java::lang::String> BluetoothClass::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }
inline jint BluetoothClass::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }
inline void BluetoothClass::writeToParcel(ref<android::os::Parcel> out, jint flags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(out, flags); }
inline jboolean BluetoothClass::hasService(jint service) { return call_method<SCAPIX_META_STRING("hasService"), jboolean>(service); }
inline jint BluetoothClass::getMajorDeviceClass() { return call_method<SCAPIX_META_STRING("getMajorDeviceClass"), jint>(); }
inline jint BluetoothClass::getDeviceClass() { return call_method<SCAPIX_META_STRING("getDeviceClass"), jint>(); }

} // namespace android::bluetooth
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_BLUETOOTH_BLUETOOTHCLASS_H
