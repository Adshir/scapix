// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_MEDIA_MEDIATIMESTAMP_H
#define SCAPIX_ANDROID_MEDIA_MEDIATIMESTAMP_H

namespace scapix::java_api {

namespace java::lang { class String; }

namespace android::media {

class MediaTimestamp : public object_base<SCAPIX_META_STRING("android/media/MediaTimestamp"),
	java::lang::Object>
{
public:

	static ref<android::media::MediaTimestamp> TIMESTAMP_UNKNOWN_();

	jlong getAnchorMediaTimeUs();
	jlong getAnchorSytemNanoTime();
	jfloat getMediaClockRate();
	jboolean equals(ref<java::lang::Object> obj);
	ref<java::lang::String> toString();

protected:

	MediaTimestamp(handle_type h) : base_(h) {}

};

} // namespace android::media
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::media {

inline ref<android::media::MediaTimestamp> MediaTimestamp::TIMESTAMP_UNKNOWN_() { return get_static_field<SCAPIX_META_STRING("TIMESTAMP_UNKNOWN"), ref<android::media::MediaTimestamp>>(); }
inline jlong MediaTimestamp::getAnchorMediaTimeUs() { return call_method<SCAPIX_META_STRING("getAnchorMediaTimeUs"), jlong>(); }
inline jlong MediaTimestamp::getAnchorSytemNanoTime() { return call_method<SCAPIX_META_STRING("getAnchorSytemNanoTime"), jlong>(); }
inline jfloat MediaTimestamp::getMediaClockRate() { return call_method<SCAPIX_META_STRING("getMediaClockRate"), jfloat>(); }
inline jboolean MediaTimestamp::equals(ref<java::lang::Object> obj) { return call_method<SCAPIX_META_STRING("equals"), jboolean>(obj); }
inline ref<java::lang::String> MediaTimestamp::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }

} // namespace android::media
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_MEDIA_MEDIATIMESTAMP_H
