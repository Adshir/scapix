// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_ANDROID_MEDIA_BROWSE_MEDIABROWSER_MEDIAITEM_H
#define SCAPIX_ANDROID_MEDIA_BROWSE_MEDIABROWSER_MEDIAITEM_H

namespace scapix::java_api {

namespace android::media { class MediaDescription; }
namespace android::os { class Parcel; }
namespace android::os { class Parcelable_Creator; }
namespace java::lang { class String; }

namespace android::media::browse {

class MediaBrowser_MediaItem : public object_base<SCAPIX_META_STRING("android/media/browse/MediaBrowser$MediaItem"),
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static ref<android::os::Parcelable_Creator> CREATOR_();
	static jint FLAG_BROWSABLE_();
	static jint FLAG_PLAYABLE_();

	static ref<MediaBrowser_MediaItem> new_object(ref<android::media::MediaDescription> description, jint flags);
	jint describeContents();
	void writeToParcel(ref<android::os::Parcel> out, jint flags);
	ref<java::lang::String> toString();
	jint getFlags();
	jboolean isBrowsable();
	jboolean isPlayable();
	ref<android::media::MediaDescription> getDescription();
	ref<java::lang::String> getMediaId();

protected:

	MediaBrowser_MediaItem(handle_type h) : base_(h) {}

};

} // namespace android::media::browse
} // namespace scapix::java_api

#include <scapix/java_api/android/media/MediaDescription.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::media::browse {

inline ref<android::os::Parcelable_Creator> MediaBrowser_MediaItem::CREATOR_() { return get_static_field<SCAPIX_META_STRING("CREATOR"), ref<android::os::Parcelable_Creator>>(); }
inline jint MediaBrowser_MediaItem::FLAG_BROWSABLE_() { return get_static_field<SCAPIX_META_STRING("FLAG_BROWSABLE"), jint>(); }
inline jint MediaBrowser_MediaItem::FLAG_PLAYABLE_() { return get_static_field<SCAPIX_META_STRING("FLAG_PLAYABLE"), jint>(); }
inline ref<MediaBrowser_MediaItem> MediaBrowser_MediaItem::new_object(ref<android::media::MediaDescription> description, jint flags) { return base_::new_object(description, flags); }
inline jint MediaBrowser_MediaItem::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }
inline void MediaBrowser_MediaItem::writeToParcel(ref<android::os::Parcel> out, jint flags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(out, flags); }
inline ref<java::lang::String> MediaBrowser_MediaItem::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }
inline jint MediaBrowser_MediaItem::getFlags() { return call_method<SCAPIX_META_STRING("getFlags"), jint>(); }
inline jboolean MediaBrowser_MediaItem::isBrowsable() { return call_method<SCAPIX_META_STRING("isBrowsable"), jboolean>(); }
inline jboolean MediaBrowser_MediaItem::isPlayable() { return call_method<SCAPIX_META_STRING("isPlayable"), jboolean>(); }
inline ref<android::media::MediaDescription> MediaBrowser_MediaItem::getDescription() { return call_method<SCAPIX_META_STRING("getDescription"), ref<android::media::MediaDescription>>(); }
inline ref<java::lang::String> MediaBrowser_MediaItem::getMediaId() { return call_method<SCAPIX_META_STRING("getMediaId"), ref<java::lang::String>>(); }

} // namespace android::media::browse
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_MEDIA_BROWSE_MEDIABROWSER_MEDIAITEM_H
