// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_MEDIA_AUDIOTRACK_METRICSCONSTANTS_H
#define SCAPIX_ANDROID_MEDIA_AUDIOTRACK_METRICSCONSTANTS_H

namespace scapix::java_api {

namespace java::lang { class String; }

namespace android::media {

class AudioTrack_MetricsConstants : public object_base<SCAPIX_META_STRING("android/media/AudioTrack$MetricsConstants"),
	java::lang::Object>
{
public:

	static ref<java::lang::String> CHANNELMASK_();
	static ref<java::lang::String> CONTENTTYPE_();
	static ref<java::lang::String> SAMPLERATE_();
	static ref<java::lang::String> STREAMTYPE_();
	static ref<java::lang::String> USAGE_();


protected:

	AudioTrack_MetricsConstants(handle_type h) : base_(h) {}

};

} // namespace android::media
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::media {

inline ref<java::lang::String> AudioTrack_MetricsConstants::CHANNELMASK_() { return get_static_field<SCAPIX_META_STRING("CHANNELMASK"), ref<java::lang::String>>(); }
inline ref<java::lang::String> AudioTrack_MetricsConstants::CONTENTTYPE_() { return get_static_field<SCAPIX_META_STRING("CONTENTTYPE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> AudioTrack_MetricsConstants::SAMPLERATE_() { return get_static_field<SCAPIX_META_STRING("SAMPLERATE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> AudioTrack_MetricsConstants::STREAMTYPE_() { return get_static_field<SCAPIX_META_STRING("STREAMTYPE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> AudioTrack_MetricsConstants::USAGE_() { return get_static_field<SCAPIX_META_STRING("USAGE"), ref<java::lang::String>>(); }

} // namespace android::media
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_MEDIA_AUDIOTRACK_METRICSCONSTANTS_H
