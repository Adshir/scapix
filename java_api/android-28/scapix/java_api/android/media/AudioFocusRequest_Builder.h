// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_MEDIA_AUDIOFOCUSREQUEST_BUILDER_H
#define SCAPIX_ANDROID_MEDIA_AUDIOFOCUSREQUEST_BUILDER_H

namespace scapix::java_api {

namespace android::media { class AudioAttributes; }
namespace android::media { class AudioFocusRequest; }
namespace android::media { class AudioManager_OnAudioFocusChangeListener; }
namespace android::os { class Handler; }

namespace android::media {

class AudioFocusRequest_Builder : public object_base<SCAPIX_META_STRING("android/media/AudioFocusRequest$Builder"),
	java::lang::Object>
{
public:

	static ref<AudioFocusRequest_Builder> new_object(jint focusGain);
	static ref<AudioFocusRequest_Builder> new_object(ref<android::media::AudioFocusRequest> requestToCopy);
	ref<android::media::AudioFocusRequest_Builder> setFocusGain(jint focusGain);
	ref<android::media::AudioFocusRequest_Builder> setOnAudioFocusChangeListener(ref<android::media::AudioManager_OnAudioFocusChangeListener> listener);
	ref<android::media::AudioFocusRequest_Builder> setOnAudioFocusChangeListener(ref<android::media::AudioManager_OnAudioFocusChangeListener> listener, ref<android::os::Handler> handler);
	ref<android::media::AudioFocusRequest_Builder> setAudioAttributes(ref<android::media::AudioAttributes> attributes);
	ref<android::media::AudioFocusRequest_Builder> setWillPauseWhenDucked(jboolean pauseOnDuck);
	ref<android::media::AudioFocusRequest_Builder> setAcceptsDelayedFocusGain(jboolean acceptsDelayedFocusGain);
	ref<android::media::AudioFocusRequest_Builder> setForceDucking(jboolean forceDucking);
	ref<android::media::AudioFocusRequest> build();

protected:

	AudioFocusRequest_Builder(handle_type h) : base_(h) {}

};

} // namespace android::media
} // namespace scapix::java_api

#include <scapix/java_api/android/media/AudioAttributes.h>
#include <scapix/java_api/android/media/AudioFocusRequest.h>
#include <scapix/java_api/android/media/AudioManager_OnAudioFocusChangeListener.h>
#include <scapix/java_api/android/os/Handler.h>

namespace scapix::java_api {
namespace android::media {

inline ref<AudioFocusRequest_Builder> AudioFocusRequest_Builder::new_object(jint focusGain) { return base_::new_object(focusGain); }
inline ref<AudioFocusRequest_Builder> AudioFocusRequest_Builder::new_object(ref<android::media::AudioFocusRequest> requestToCopy) { return base_::new_object(requestToCopy); }
inline ref<android::media::AudioFocusRequest_Builder> AudioFocusRequest_Builder::setFocusGain(jint focusGain) { return call_method<SCAPIX_META_STRING("setFocusGain"), ref<android::media::AudioFocusRequest_Builder>>(focusGain); }
inline ref<android::media::AudioFocusRequest_Builder> AudioFocusRequest_Builder::setOnAudioFocusChangeListener(ref<android::media::AudioManager_OnAudioFocusChangeListener> listener) { return call_method<SCAPIX_META_STRING("setOnAudioFocusChangeListener"), ref<android::media::AudioFocusRequest_Builder>>(listener); }
inline ref<android::media::AudioFocusRequest_Builder> AudioFocusRequest_Builder::setOnAudioFocusChangeListener(ref<android::media::AudioManager_OnAudioFocusChangeListener> listener, ref<android::os::Handler> handler) { return call_method<SCAPIX_META_STRING("setOnAudioFocusChangeListener"), ref<android::media::AudioFocusRequest_Builder>>(listener, handler); }
inline ref<android::media::AudioFocusRequest_Builder> AudioFocusRequest_Builder::setAudioAttributes(ref<android::media::AudioAttributes> attributes) { return call_method<SCAPIX_META_STRING("setAudioAttributes"), ref<android::media::AudioFocusRequest_Builder>>(attributes); }
inline ref<android::media::AudioFocusRequest_Builder> AudioFocusRequest_Builder::setWillPauseWhenDucked(jboolean pauseOnDuck) { return call_method<SCAPIX_META_STRING("setWillPauseWhenDucked"), ref<android::media::AudioFocusRequest_Builder>>(pauseOnDuck); }
inline ref<android::media::AudioFocusRequest_Builder> AudioFocusRequest_Builder::setAcceptsDelayedFocusGain(jboolean acceptsDelayedFocusGain) { return call_method<SCAPIX_META_STRING("setAcceptsDelayedFocusGain"), ref<android::media::AudioFocusRequest_Builder>>(acceptsDelayedFocusGain); }
inline ref<android::media::AudioFocusRequest_Builder> AudioFocusRequest_Builder::setForceDucking(jboolean forceDucking) { return call_method<SCAPIX_META_STRING("setForceDucking"), ref<android::media::AudioFocusRequest_Builder>>(forceDucking); }
inline ref<android::media::AudioFocusRequest> AudioFocusRequest_Builder::build() { return call_method<SCAPIX_META_STRING("build"), ref<android::media::AudioFocusRequest>>(); }

} // namespace android::media
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_MEDIA_AUDIOFOCUSREQUEST_BUILDER_H
