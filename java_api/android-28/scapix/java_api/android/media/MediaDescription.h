// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_ANDROID_MEDIA_MEDIADESCRIPTION_H
#define SCAPIX_ANDROID_MEDIA_MEDIADESCRIPTION_H

namespace scapix::java_api {

namespace android::graphics { class Bitmap; }
namespace android::net { class Uri; }
namespace android::os { class Bundle; }
namespace android::os { class Parcel; }
namespace android::os { class Parcelable_Creator; }
namespace java::lang { class CharSequence; }
namespace java::lang { class String; }
namespace android::media { class MediaDescription_Builder; }

namespace android::media {

class MediaDescription : public object_base<SCAPIX_META_STRING("android/media/MediaDescription"),
	java::lang::Object,
	android::os::Parcelable>
{
public:

	using Builder = MediaDescription_Builder;

	static jlong BT_FOLDER_TYPE_ALBUMS_();
	static jlong BT_FOLDER_TYPE_ARTISTS_();
	static jlong BT_FOLDER_TYPE_GENRES_();
	static jlong BT_FOLDER_TYPE_MIXED_();
	static jlong BT_FOLDER_TYPE_PLAYLISTS_();
	static jlong BT_FOLDER_TYPE_TITLES_();
	static jlong BT_FOLDER_TYPE_YEARS_();
	static ref<android::os::Parcelable_Creator> CREATOR_();
	static ref<java::lang::String> EXTRA_BT_FOLDER_TYPE_();

	ref<java::lang::String> getMediaId();
	ref<java::lang::CharSequence> getTitle();
	ref<java::lang::CharSequence> getSubtitle();
	ref<java::lang::CharSequence> getDescription();
	ref<android::graphics::Bitmap> getIconBitmap();
	ref<android::net::Uri> getIconUri();
	ref<android::os::Bundle> getExtras();
	ref<android::net::Uri> getMediaUri();
	jint describeContents();
	void writeToParcel(ref<android::os::Parcel> dest, jint flags);
	jboolean equals(ref<java::lang::Object> o);
	ref<java::lang::String> toString();

protected:

	MediaDescription(handle_type h) : base_(h) {}

};

} // namespace android::media
} // namespace scapix::java_api

#include <scapix/java_api/android/graphics/Bitmap.h>
#include <scapix/java_api/android/net/Uri.h>
#include <scapix/java_api/android/os/Bundle.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::media {

inline jlong MediaDescription::BT_FOLDER_TYPE_ALBUMS_() { return get_static_field<SCAPIX_META_STRING("BT_FOLDER_TYPE_ALBUMS"), jlong>(); }
inline jlong MediaDescription::BT_FOLDER_TYPE_ARTISTS_() { return get_static_field<SCAPIX_META_STRING("BT_FOLDER_TYPE_ARTISTS"), jlong>(); }
inline jlong MediaDescription::BT_FOLDER_TYPE_GENRES_() { return get_static_field<SCAPIX_META_STRING("BT_FOLDER_TYPE_GENRES"), jlong>(); }
inline jlong MediaDescription::BT_FOLDER_TYPE_MIXED_() { return get_static_field<SCAPIX_META_STRING("BT_FOLDER_TYPE_MIXED"), jlong>(); }
inline jlong MediaDescription::BT_FOLDER_TYPE_PLAYLISTS_() { return get_static_field<SCAPIX_META_STRING("BT_FOLDER_TYPE_PLAYLISTS"), jlong>(); }
inline jlong MediaDescription::BT_FOLDER_TYPE_TITLES_() { return get_static_field<SCAPIX_META_STRING("BT_FOLDER_TYPE_TITLES"), jlong>(); }
inline jlong MediaDescription::BT_FOLDER_TYPE_YEARS_() { return get_static_field<SCAPIX_META_STRING("BT_FOLDER_TYPE_YEARS"), jlong>(); }
inline ref<android::os::Parcelable_Creator> MediaDescription::CREATOR_() { return get_static_field<SCAPIX_META_STRING("CREATOR"), ref<android::os::Parcelable_Creator>>(); }
inline ref<java::lang::String> MediaDescription::EXTRA_BT_FOLDER_TYPE_() { return get_static_field<SCAPIX_META_STRING("EXTRA_BT_FOLDER_TYPE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaDescription::getMediaId() { return call_method<SCAPIX_META_STRING("getMediaId"), ref<java::lang::String>>(); }
inline ref<java::lang::CharSequence> MediaDescription::getTitle() { return call_method<SCAPIX_META_STRING("getTitle"), ref<java::lang::CharSequence>>(); }
inline ref<java::lang::CharSequence> MediaDescription::getSubtitle() { return call_method<SCAPIX_META_STRING("getSubtitle"), ref<java::lang::CharSequence>>(); }
inline ref<java::lang::CharSequence> MediaDescription::getDescription() { return call_method<SCAPIX_META_STRING("getDescription"), ref<java::lang::CharSequence>>(); }
inline ref<android::graphics::Bitmap> MediaDescription::getIconBitmap() { return call_method<SCAPIX_META_STRING("getIconBitmap"), ref<android::graphics::Bitmap>>(); }
inline ref<android::net::Uri> MediaDescription::getIconUri() { return call_method<SCAPIX_META_STRING("getIconUri"), ref<android::net::Uri>>(); }
inline ref<android::os::Bundle> MediaDescription::getExtras() { return call_method<SCAPIX_META_STRING("getExtras"), ref<android::os::Bundle>>(); }
inline ref<android::net::Uri> MediaDescription::getMediaUri() { return call_method<SCAPIX_META_STRING("getMediaUri"), ref<android::net::Uri>>(); }
inline jint MediaDescription::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }
inline void MediaDescription::writeToParcel(ref<android::os::Parcel> dest, jint flags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(dest, flags); }
inline jboolean MediaDescription::equals(ref<java::lang::Object> o) { return call_method<SCAPIX_META_STRING("equals"), jboolean>(o); }
inline ref<java::lang::String> MediaDescription::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }

} // namespace android::media
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_MEDIA_MEDIADESCRIPTION_H
