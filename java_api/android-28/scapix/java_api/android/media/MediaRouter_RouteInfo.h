// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_MEDIA_MEDIAROUTER_ROUTEINFO_H
#define SCAPIX_ANDROID_MEDIA_MEDIAROUTER_ROUTEINFO_H

namespace scapix::java_api {

namespace android::content { class Context; }
namespace android::graphics::drawable { class Drawable; }
namespace android::media { class MediaRouter_RouteCategory; }
namespace android::media { class MediaRouter_RouteGroup; }
namespace android::view { class Display; }
namespace java::lang { class CharSequence; }
namespace java::lang { class String; }

namespace android::media {

class MediaRouter_RouteInfo : public object_base<SCAPIX_META_STRING("android/media/MediaRouter$RouteInfo"),
	java::lang::Object>
{
public:

	static jint DEVICE_TYPE_BLUETOOTH_();
	static jint DEVICE_TYPE_SPEAKER_();
	static jint DEVICE_TYPE_TV_();
	static jint DEVICE_TYPE_UNKNOWN_();
	static jint PLAYBACK_TYPE_LOCAL_();
	static jint PLAYBACK_TYPE_REMOTE_();
	static jint PLAYBACK_VOLUME_FIXED_();
	static jint PLAYBACK_VOLUME_VARIABLE_();

	ref<java::lang::CharSequence> getName();
	ref<java::lang::CharSequence> getName(ref<android::content::Context> context);
	ref<java::lang::CharSequence> getDescription();
	ref<java::lang::CharSequence> getStatus();
	jint getSupportedTypes();
	jint getDeviceType();
	ref<android::media::MediaRouter_RouteGroup> getGroup();
	ref<android::media::MediaRouter_RouteCategory> getCategory();
	ref<android::graphics::drawable::Drawable> getIconDrawable();
	void setTag(ref<java::lang::Object> tag);
	ref<java::lang::Object> getTag();
	jint getPlaybackType();
	jint getPlaybackStream();
	jint getVolume();
	void requestSetVolume(jint volume);
	void requestUpdateVolume(jint direction);
	jint getVolumeMax();
	jint getVolumeHandling();
	ref<android::view::Display> getPresentationDisplay();
	jboolean isEnabled();
	jboolean isConnecting();
	ref<java::lang::String> toString();

protected:

	MediaRouter_RouteInfo(handle_type h) : base_(h) {}

};

} // namespace android::media
} // namespace scapix::java_api

#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/graphics/drawable/Drawable.h>
#include <scapix/java_api/android/media/MediaRouter_RouteCategory.h>
#include <scapix/java_api/android/media/MediaRouter_RouteGroup.h>
#include <scapix/java_api/android/view/Display.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::media {

inline jint MediaRouter_RouteInfo::DEVICE_TYPE_BLUETOOTH_() { return get_static_field<SCAPIX_META_STRING("DEVICE_TYPE_BLUETOOTH"), jint>(); }
inline jint MediaRouter_RouteInfo::DEVICE_TYPE_SPEAKER_() { return get_static_field<SCAPIX_META_STRING("DEVICE_TYPE_SPEAKER"), jint>(); }
inline jint MediaRouter_RouteInfo::DEVICE_TYPE_TV_() { return get_static_field<SCAPIX_META_STRING("DEVICE_TYPE_TV"), jint>(); }
inline jint MediaRouter_RouteInfo::DEVICE_TYPE_UNKNOWN_() { return get_static_field<SCAPIX_META_STRING("DEVICE_TYPE_UNKNOWN"), jint>(); }
inline jint MediaRouter_RouteInfo::PLAYBACK_TYPE_LOCAL_() { return get_static_field<SCAPIX_META_STRING("PLAYBACK_TYPE_LOCAL"), jint>(); }
inline jint MediaRouter_RouteInfo::PLAYBACK_TYPE_REMOTE_() { return get_static_field<SCAPIX_META_STRING("PLAYBACK_TYPE_REMOTE"), jint>(); }
inline jint MediaRouter_RouteInfo::PLAYBACK_VOLUME_FIXED_() { return get_static_field<SCAPIX_META_STRING("PLAYBACK_VOLUME_FIXED"), jint>(); }
inline jint MediaRouter_RouteInfo::PLAYBACK_VOLUME_VARIABLE_() { return get_static_field<SCAPIX_META_STRING("PLAYBACK_VOLUME_VARIABLE"), jint>(); }
inline ref<java::lang::CharSequence> MediaRouter_RouteInfo::getName() { return call_method<SCAPIX_META_STRING("getName"), ref<java::lang::CharSequence>>(); }
inline ref<java::lang::CharSequence> MediaRouter_RouteInfo::getName(ref<android::content::Context> context) { return call_method<SCAPIX_META_STRING("getName"), ref<java::lang::CharSequence>>(context); }
inline ref<java::lang::CharSequence> MediaRouter_RouteInfo::getDescription() { return call_method<SCAPIX_META_STRING("getDescription"), ref<java::lang::CharSequence>>(); }
inline ref<java::lang::CharSequence> MediaRouter_RouteInfo::getStatus() { return call_method<SCAPIX_META_STRING("getStatus"), ref<java::lang::CharSequence>>(); }
inline jint MediaRouter_RouteInfo::getSupportedTypes() { return call_method<SCAPIX_META_STRING("getSupportedTypes"), jint>(); }
inline jint MediaRouter_RouteInfo::getDeviceType() { return call_method<SCAPIX_META_STRING("getDeviceType"), jint>(); }
inline ref<android::media::MediaRouter_RouteGroup> MediaRouter_RouteInfo::getGroup() { return call_method<SCAPIX_META_STRING("getGroup"), ref<android::media::MediaRouter_RouteGroup>>(); }
inline ref<android::media::MediaRouter_RouteCategory> MediaRouter_RouteInfo::getCategory() { return call_method<SCAPIX_META_STRING("getCategory"), ref<android::media::MediaRouter_RouteCategory>>(); }
inline ref<android::graphics::drawable::Drawable> MediaRouter_RouteInfo::getIconDrawable() { return call_method<SCAPIX_META_STRING("getIconDrawable"), ref<android::graphics::drawable::Drawable>>(); }
inline void MediaRouter_RouteInfo::setTag(ref<java::lang::Object> tag) { return call_method<SCAPIX_META_STRING("setTag"), void>(tag); }
inline ref<java::lang::Object> MediaRouter_RouteInfo::getTag() { return call_method<SCAPIX_META_STRING("getTag"), ref<java::lang::Object>>(); }
inline jint MediaRouter_RouteInfo::getPlaybackType() { return call_method<SCAPIX_META_STRING("getPlaybackType"), jint>(); }
inline jint MediaRouter_RouteInfo::getPlaybackStream() { return call_method<SCAPIX_META_STRING("getPlaybackStream"), jint>(); }
inline jint MediaRouter_RouteInfo::getVolume() { return call_method<SCAPIX_META_STRING("getVolume"), jint>(); }
inline void MediaRouter_RouteInfo::requestSetVolume(jint volume) { return call_method<SCAPIX_META_STRING("requestSetVolume"), void>(volume); }
inline void MediaRouter_RouteInfo::requestUpdateVolume(jint direction) { return call_method<SCAPIX_META_STRING("requestUpdateVolume"), void>(direction); }
inline jint MediaRouter_RouteInfo::getVolumeMax() { return call_method<SCAPIX_META_STRING("getVolumeMax"), jint>(); }
inline jint MediaRouter_RouteInfo::getVolumeHandling() { return call_method<SCAPIX_META_STRING("getVolumeHandling"), jint>(); }
inline ref<android::view::Display> MediaRouter_RouteInfo::getPresentationDisplay() { return call_method<SCAPIX_META_STRING("getPresentationDisplay"), ref<android::view::Display>>(); }
inline jboolean MediaRouter_RouteInfo::isEnabled() { return call_method<SCAPIX_META_STRING("isEnabled"), jboolean>(); }
inline jboolean MediaRouter_RouteInfo::isConnecting() { return call_method<SCAPIX_META_STRING("isConnecting"), jboolean>(); }
inline ref<java::lang::String> MediaRouter_RouteInfo::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }

} // namespace android::media
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_MEDIA_MEDIAROUTER_ROUTEINFO_H
