// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_MEDIA_REMOTECONTROLCLIENT_H
#define SCAPIX_ANDROID_MEDIA_REMOTECONTROLCLIENT_H

namespace scapix::java_api {

namespace android::app { class PendingIntent; }
namespace android::media { class RemoteControlClient_MetadataEditor; }
namespace android::media { class RemoteControlClient_OnGetPlaybackPositionListener; }
namespace android::media { class RemoteControlClient_OnMetadataUpdateListener; }
namespace android::media { class RemoteControlClient_OnPlaybackPositionUpdateListener; }
namespace android::media::session { class MediaSession; }
namespace android::os { class Looper; }

namespace android::media {

class RemoteControlClient : public object_base<SCAPIX_META_STRING("android/media/RemoteControlClient"),
	java::lang::Object>
{
public:

	using OnPlaybackPositionUpdateListener = RemoteControlClient_OnPlaybackPositionUpdateListener;
	using OnMetadataUpdateListener = RemoteControlClient_OnMetadataUpdateListener;
	using OnGetPlaybackPositionListener = RemoteControlClient_OnGetPlaybackPositionListener;
	using MetadataEditor = RemoteControlClient_MetadataEditor;

	static jint FLAG_KEY_MEDIA_FAST_FORWARD_();
	static jint FLAG_KEY_MEDIA_NEXT_();
	static jint FLAG_KEY_MEDIA_PAUSE_();
	static jint FLAG_KEY_MEDIA_PLAY_();
	static jint FLAG_KEY_MEDIA_PLAY_PAUSE_();
	static jint FLAG_KEY_MEDIA_POSITION_UPDATE_();
	static jint FLAG_KEY_MEDIA_PREVIOUS_();
	static jint FLAG_KEY_MEDIA_RATING_();
	static jint FLAG_KEY_MEDIA_REWIND_();
	static jint FLAG_KEY_MEDIA_STOP_();
	static jint PLAYSTATE_BUFFERING_();
	static jint PLAYSTATE_ERROR_();
	static jint PLAYSTATE_FAST_FORWARDING_();
	static jint PLAYSTATE_PAUSED_();
	static jint PLAYSTATE_PLAYING_();
	static jint PLAYSTATE_REWINDING_();
	static jint PLAYSTATE_SKIPPING_BACKWARDS_();
	static jint PLAYSTATE_SKIPPING_FORWARDS_();
	static jint PLAYSTATE_STOPPED_();

	static ref<RemoteControlClient> new_object(ref<android::app::PendingIntent> mediaButtonIntent);
	static ref<RemoteControlClient> new_object(ref<android::app::PendingIntent> mediaButtonIntent, ref<android::os::Looper> looper);
	ref<android::media::session::MediaSession> getMediaSession();
	ref<android::media::RemoteControlClient_MetadataEditor> editMetadata(jboolean startEmpty);
	void setPlaybackState(jint state);
	void setPlaybackState(jint state, jlong timeInMs, jfloat p3);
	void setTransportControlFlags(jint transportControlFlags);
	void setMetadataUpdateListener(ref<android::media::RemoteControlClient_OnMetadataUpdateListener> l);
	void setPlaybackPositionUpdateListener(ref<android::media::RemoteControlClient_OnPlaybackPositionUpdateListener> l);
	void setOnGetPlaybackPositionListener(ref<android::media::RemoteControlClient_OnGetPlaybackPositionListener> l);

protected:

	RemoteControlClient(handle_type h) : base_(h) {}

};

} // namespace android::media
} // namespace scapix::java_api

#include <scapix/java_api/android/app/PendingIntent.h>
#include <scapix/java_api/android/media/RemoteControlClient_MetadataEditor.h>
#include <scapix/java_api/android/media/RemoteControlClient_OnGetPlaybackPositionListener.h>
#include <scapix/java_api/android/media/RemoteControlClient_OnMetadataUpdateListener.h>
#include <scapix/java_api/android/media/RemoteControlClient_OnPlaybackPositionUpdateListener.h>
#include <scapix/java_api/android/media/session/MediaSession.h>
#include <scapix/java_api/android/os/Looper.h>

namespace scapix::java_api {
namespace android::media {

inline jint RemoteControlClient::FLAG_KEY_MEDIA_FAST_FORWARD_() { return get_static_field<SCAPIX_META_STRING("FLAG_KEY_MEDIA_FAST_FORWARD"), jint>(); }
inline jint RemoteControlClient::FLAG_KEY_MEDIA_NEXT_() { return get_static_field<SCAPIX_META_STRING("FLAG_KEY_MEDIA_NEXT"), jint>(); }
inline jint RemoteControlClient::FLAG_KEY_MEDIA_PAUSE_() { return get_static_field<SCAPIX_META_STRING("FLAG_KEY_MEDIA_PAUSE"), jint>(); }
inline jint RemoteControlClient::FLAG_KEY_MEDIA_PLAY_() { return get_static_field<SCAPIX_META_STRING("FLAG_KEY_MEDIA_PLAY"), jint>(); }
inline jint RemoteControlClient::FLAG_KEY_MEDIA_PLAY_PAUSE_() { return get_static_field<SCAPIX_META_STRING("FLAG_KEY_MEDIA_PLAY_PAUSE"), jint>(); }
inline jint RemoteControlClient::FLAG_KEY_MEDIA_POSITION_UPDATE_() { return get_static_field<SCAPIX_META_STRING("FLAG_KEY_MEDIA_POSITION_UPDATE"), jint>(); }
inline jint RemoteControlClient::FLAG_KEY_MEDIA_PREVIOUS_() { return get_static_field<SCAPIX_META_STRING("FLAG_KEY_MEDIA_PREVIOUS"), jint>(); }
inline jint RemoteControlClient::FLAG_KEY_MEDIA_RATING_() { return get_static_field<SCAPIX_META_STRING("FLAG_KEY_MEDIA_RATING"), jint>(); }
inline jint RemoteControlClient::FLAG_KEY_MEDIA_REWIND_() { return get_static_field<SCAPIX_META_STRING("FLAG_KEY_MEDIA_REWIND"), jint>(); }
inline jint RemoteControlClient::FLAG_KEY_MEDIA_STOP_() { return get_static_field<SCAPIX_META_STRING("FLAG_KEY_MEDIA_STOP"), jint>(); }
inline jint RemoteControlClient::PLAYSTATE_BUFFERING_() { return get_static_field<SCAPIX_META_STRING("PLAYSTATE_BUFFERING"), jint>(); }
inline jint RemoteControlClient::PLAYSTATE_ERROR_() { return get_static_field<SCAPIX_META_STRING("PLAYSTATE_ERROR"), jint>(); }
inline jint RemoteControlClient::PLAYSTATE_FAST_FORWARDING_() { return get_static_field<SCAPIX_META_STRING("PLAYSTATE_FAST_FORWARDING"), jint>(); }
inline jint RemoteControlClient::PLAYSTATE_PAUSED_() { return get_static_field<SCAPIX_META_STRING("PLAYSTATE_PAUSED"), jint>(); }
inline jint RemoteControlClient::PLAYSTATE_PLAYING_() { return get_static_field<SCAPIX_META_STRING("PLAYSTATE_PLAYING"), jint>(); }
inline jint RemoteControlClient::PLAYSTATE_REWINDING_() { return get_static_field<SCAPIX_META_STRING("PLAYSTATE_REWINDING"), jint>(); }
inline jint RemoteControlClient::PLAYSTATE_SKIPPING_BACKWARDS_() { return get_static_field<SCAPIX_META_STRING("PLAYSTATE_SKIPPING_BACKWARDS"), jint>(); }
inline jint RemoteControlClient::PLAYSTATE_SKIPPING_FORWARDS_() { return get_static_field<SCAPIX_META_STRING("PLAYSTATE_SKIPPING_FORWARDS"), jint>(); }
inline jint RemoteControlClient::PLAYSTATE_STOPPED_() { return get_static_field<SCAPIX_META_STRING("PLAYSTATE_STOPPED"), jint>(); }
inline ref<RemoteControlClient> RemoteControlClient::new_object(ref<android::app::PendingIntent> mediaButtonIntent) { return base_::new_object(mediaButtonIntent); }
inline ref<RemoteControlClient> RemoteControlClient::new_object(ref<android::app::PendingIntent> mediaButtonIntent, ref<android::os::Looper> looper) { return base_::new_object(mediaButtonIntent, looper); }
inline ref<android::media::session::MediaSession> RemoteControlClient::getMediaSession() { return call_method<SCAPIX_META_STRING("getMediaSession"), ref<android::media::session::MediaSession>>(); }
inline ref<android::media::RemoteControlClient_MetadataEditor> RemoteControlClient::editMetadata(jboolean startEmpty) { return call_method<SCAPIX_META_STRING("editMetadata"), ref<android::media::RemoteControlClient_MetadataEditor>>(startEmpty); }
inline void RemoteControlClient::setPlaybackState(jint state) { return call_method<SCAPIX_META_STRING("setPlaybackState"), void>(state); }
inline void RemoteControlClient::setPlaybackState(jint state, jlong timeInMs, jfloat p3) { return call_method<SCAPIX_META_STRING("setPlaybackState"), void>(state, timeInMs, p3); }
inline void RemoteControlClient::setTransportControlFlags(jint transportControlFlags) { return call_method<SCAPIX_META_STRING("setTransportControlFlags"), void>(transportControlFlags); }
inline void RemoteControlClient::setMetadataUpdateListener(ref<android::media::RemoteControlClient_OnMetadataUpdateListener> l) { return call_method<SCAPIX_META_STRING("setMetadataUpdateListener"), void>(l); }
inline void RemoteControlClient::setPlaybackPositionUpdateListener(ref<android::media::RemoteControlClient_OnPlaybackPositionUpdateListener> l) { return call_method<SCAPIX_META_STRING("setPlaybackPositionUpdateListener"), void>(l); }
inline void RemoteControlClient::setOnGetPlaybackPositionListener(ref<android::media::RemoteControlClient_OnGetPlaybackPositionListener> l) { return call_method<SCAPIX_META_STRING("setOnGetPlaybackPositionListener"), void>(l); }

} // namespace android::media
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_MEDIA_REMOTECONTROLCLIENT_H
