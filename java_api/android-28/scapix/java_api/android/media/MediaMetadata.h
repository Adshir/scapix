// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_ANDROID_MEDIA_MEDIAMETADATA_H
#define SCAPIX_ANDROID_MEDIA_MEDIAMETADATA_H

namespace scapix::java_api {

namespace android::graphics { class Bitmap; }
namespace android::media { class MediaDescription; }
namespace android::media { class Rating; }
namespace android::os { class Parcel; }
namespace android::os { class Parcelable_Creator; }
namespace java::lang { class CharSequence; }
namespace java::lang { class String; }
namespace java::util { class Set; }
namespace android::media { class MediaMetadata_Builder; }

namespace android::media {

class MediaMetadata : public object_base<SCAPIX_META_STRING("android/media/MediaMetadata"),
	java::lang::Object,
	android::os::Parcelable>
{
public:

	using Builder = MediaMetadata_Builder;

	static ref<android::os::Parcelable_Creator> CREATOR_();
	static ref<java::lang::String> METADATA_KEY_ALBUM_();
	static ref<java::lang::String> METADATA_KEY_ALBUM_ART_();
	static ref<java::lang::String> METADATA_KEY_ALBUM_ARTIST_();
	static ref<java::lang::String> METADATA_KEY_ALBUM_ART_URI_();
	static ref<java::lang::String> METADATA_KEY_ART_();
	static ref<java::lang::String> METADATA_KEY_ARTIST_();
	static ref<java::lang::String> METADATA_KEY_ART_URI_();
	static ref<java::lang::String> METADATA_KEY_AUTHOR_();
	static ref<java::lang::String> METADATA_KEY_BT_FOLDER_TYPE_();
	static ref<java::lang::String> METADATA_KEY_COMPILATION_();
	static ref<java::lang::String> METADATA_KEY_COMPOSER_();
	static ref<java::lang::String> METADATA_KEY_DATE_();
	static ref<java::lang::String> METADATA_KEY_DISC_NUMBER_();
	static ref<java::lang::String> METADATA_KEY_DISPLAY_DESCRIPTION_();
	static ref<java::lang::String> METADATA_KEY_DISPLAY_ICON_();
	static ref<java::lang::String> METADATA_KEY_DISPLAY_ICON_URI_();
	static ref<java::lang::String> METADATA_KEY_DISPLAY_SUBTITLE_();
	static ref<java::lang::String> METADATA_KEY_DISPLAY_TITLE_();
	static ref<java::lang::String> METADATA_KEY_DURATION_();
	static ref<java::lang::String> METADATA_KEY_GENRE_();
	static ref<java::lang::String> METADATA_KEY_MEDIA_ID_();
	static ref<java::lang::String> METADATA_KEY_MEDIA_URI_();
	static ref<java::lang::String> METADATA_KEY_NUM_TRACKS_();
	static ref<java::lang::String> METADATA_KEY_RATING_();
	static ref<java::lang::String> METADATA_KEY_TITLE_();
	static ref<java::lang::String> METADATA_KEY_TRACK_NUMBER_();
	static ref<java::lang::String> METADATA_KEY_USER_RATING_();
	static ref<java::lang::String> METADATA_KEY_WRITER_();
	static ref<java::lang::String> METADATA_KEY_YEAR_();

	jboolean containsKey(ref<java::lang::String> key);
	ref<java::lang::CharSequence> getText(ref<java::lang::String> key);
	ref<java::lang::String> getString(ref<java::lang::String> key);
	jlong getLong(ref<java::lang::String> key);
	ref<android::media::Rating> getRating(ref<java::lang::String> key);
	ref<android::graphics::Bitmap> getBitmap(ref<java::lang::String> key);
	jint describeContents();
	void writeToParcel(ref<android::os::Parcel> dest, jint flags);
	jint size();
	ref<java::util::Set> keySet();
	ref<android::media::MediaDescription> getDescription();
	jboolean equals(ref<java::lang::Object> o);
	jint hashCode();

protected:

	MediaMetadata(handle_type h) : base_(h) {}

};

} // namespace android::media
} // namespace scapix::java_api

#include <scapix/java_api/android/graphics/Bitmap.h>
#include <scapix/java_api/android/media/MediaDescription.h>
#include <scapix/java_api/android/media/Rating.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Set.h>

namespace scapix::java_api {
namespace android::media {

inline ref<android::os::Parcelable_Creator> MediaMetadata::CREATOR_() { return get_static_field<SCAPIX_META_STRING("CREATOR"), ref<android::os::Parcelable_Creator>>(); }
inline ref<java::lang::String> MediaMetadata::METADATA_KEY_ALBUM_() { return get_static_field<SCAPIX_META_STRING("METADATA_KEY_ALBUM"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaMetadata::METADATA_KEY_ALBUM_ART_() { return get_static_field<SCAPIX_META_STRING("METADATA_KEY_ALBUM_ART"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaMetadata::METADATA_KEY_ALBUM_ARTIST_() { return get_static_field<SCAPIX_META_STRING("METADATA_KEY_ALBUM_ARTIST"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaMetadata::METADATA_KEY_ALBUM_ART_URI_() { return get_static_field<SCAPIX_META_STRING("METADATA_KEY_ALBUM_ART_URI"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaMetadata::METADATA_KEY_ART_() { return get_static_field<SCAPIX_META_STRING("METADATA_KEY_ART"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaMetadata::METADATA_KEY_ARTIST_() { return get_static_field<SCAPIX_META_STRING("METADATA_KEY_ARTIST"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaMetadata::METADATA_KEY_ART_URI_() { return get_static_field<SCAPIX_META_STRING("METADATA_KEY_ART_URI"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaMetadata::METADATA_KEY_AUTHOR_() { return get_static_field<SCAPIX_META_STRING("METADATA_KEY_AUTHOR"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaMetadata::METADATA_KEY_BT_FOLDER_TYPE_() { return get_static_field<SCAPIX_META_STRING("METADATA_KEY_BT_FOLDER_TYPE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaMetadata::METADATA_KEY_COMPILATION_() { return get_static_field<SCAPIX_META_STRING("METADATA_KEY_COMPILATION"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaMetadata::METADATA_KEY_COMPOSER_() { return get_static_field<SCAPIX_META_STRING("METADATA_KEY_COMPOSER"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaMetadata::METADATA_KEY_DATE_() { return get_static_field<SCAPIX_META_STRING("METADATA_KEY_DATE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaMetadata::METADATA_KEY_DISC_NUMBER_() { return get_static_field<SCAPIX_META_STRING("METADATA_KEY_DISC_NUMBER"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaMetadata::METADATA_KEY_DISPLAY_DESCRIPTION_() { return get_static_field<SCAPIX_META_STRING("METADATA_KEY_DISPLAY_DESCRIPTION"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaMetadata::METADATA_KEY_DISPLAY_ICON_() { return get_static_field<SCAPIX_META_STRING("METADATA_KEY_DISPLAY_ICON"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaMetadata::METADATA_KEY_DISPLAY_ICON_URI_() { return get_static_field<SCAPIX_META_STRING("METADATA_KEY_DISPLAY_ICON_URI"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaMetadata::METADATA_KEY_DISPLAY_SUBTITLE_() { return get_static_field<SCAPIX_META_STRING("METADATA_KEY_DISPLAY_SUBTITLE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaMetadata::METADATA_KEY_DISPLAY_TITLE_() { return get_static_field<SCAPIX_META_STRING("METADATA_KEY_DISPLAY_TITLE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaMetadata::METADATA_KEY_DURATION_() { return get_static_field<SCAPIX_META_STRING("METADATA_KEY_DURATION"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaMetadata::METADATA_KEY_GENRE_() { return get_static_field<SCAPIX_META_STRING("METADATA_KEY_GENRE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaMetadata::METADATA_KEY_MEDIA_ID_() { return get_static_field<SCAPIX_META_STRING("METADATA_KEY_MEDIA_ID"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaMetadata::METADATA_KEY_MEDIA_URI_() { return get_static_field<SCAPIX_META_STRING("METADATA_KEY_MEDIA_URI"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaMetadata::METADATA_KEY_NUM_TRACKS_() { return get_static_field<SCAPIX_META_STRING("METADATA_KEY_NUM_TRACKS"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaMetadata::METADATA_KEY_RATING_() { return get_static_field<SCAPIX_META_STRING("METADATA_KEY_RATING"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaMetadata::METADATA_KEY_TITLE_() { return get_static_field<SCAPIX_META_STRING("METADATA_KEY_TITLE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaMetadata::METADATA_KEY_TRACK_NUMBER_() { return get_static_field<SCAPIX_META_STRING("METADATA_KEY_TRACK_NUMBER"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaMetadata::METADATA_KEY_USER_RATING_() { return get_static_field<SCAPIX_META_STRING("METADATA_KEY_USER_RATING"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaMetadata::METADATA_KEY_WRITER_() { return get_static_field<SCAPIX_META_STRING("METADATA_KEY_WRITER"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaMetadata::METADATA_KEY_YEAR_() { return get_static_field<SCAPIX_META_STRING("METADATA_KEY_YEAR"), ref<java::lang::String>>(); }
inline jboolean MediaMetadata::containsKey(ref<java::lang::String> key) { return call_method<SCAPIX_META_STRING("containsKey"), jboolean>(key); }
inline ref<java::lang::CharSequence> MediaMetadata::getText(ref<java::lang::String> key) { return call_method<SCAPIX_META_STRING("getText"), ref<java::lang::CharSequence>>(key); }
inline ref<java::lang::String> MediaMetadata::getString(ref<java::lang::String> key) { return call_method<SCAPIX_META_STRING("getString"), ref<java::lang::String>>(key); }
inline jlong MediaMetadata::getLong(ref<java::lang::String> key) { return call_method<SCAPIX_META_STRING("getLong"), jlong>(key); }
inline ref<android::media::Rating> MediaMetadata::getRating(ref<java::lang::String> key) { return call_method<SCAPIX_META_STRING("getRating"), ref<android::media::Rating>>(key); }
inline ref<android::graphics::Bitmap> MediaMetadata::getBitmap(ref<java::lang::String> key) { return call_method<SCAPIX_META_STRING("getBitmap"), ref<android::graphics::Bitmap>>(key); }
inline jint MediaMetadata::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }
inline void MediaMetadata::writeToParcel(ref<android::os::Parcel> dest, jint flags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(dest, flags); }
inline jint MediaMetadata::size() { return call_method<SCAPIX_META_STRING("size"), jint>(); }
inline ref<java::util::Set> MediaMetadata::keySet() { return call_method<SCAPIX_META_STRING("keySet"), ref<java::util::Set>>(); }
inline ref<android::media::MediaDescription> MediaMetadata::getDescription() { return call_method<SCAPIX_META_STRING("getDescription"), ref<android::media::MediaDescription>>(); }
inline jboolean MediaMetadata::equals(ref<java::lang::Object> o) { return call_method<SCAPIX_META_STRING("equals"), jboolean>(o); }
inline jint MediaMetadata::hashCode() { return call_method<SCAPIX_META_STRING("hashCode"), jint>(); }

} // namespace android::media
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_MEDIA_MEDIAMETADATA_H
