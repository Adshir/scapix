// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_MEDIA_RINGTONEMANAGER_H
#define SCAPIX_ANDROID_MEDIA_RINGTONEMANAGER_H

namespace scapix::java_api {

namespace android::app { class Activity; }
namespace android::content { class Context; }
namespace android::database { class Cursor; }
namespace android::media { class Ringtone; }
namespace android::net { class Uri; }
namespace java::lang { class String; }

namespace android::media {

class RingtoneManager : public object_base<SCAPIX_META_STRING("android/media/RingtoneManager"),
	java::lang::Object>
{
public:

	static ref<java::lang::String> ACTION_RINGTONE_PICKER_();
	static ref<java::lang::String> EXTRA_RINGTONE_DEFAULT_URI_();
	static ref<java::lang::String> EXTRA_RINGTONE_EXISTING_URI_();
	static ref<java::lang::String> EXTRA_RINGTONE_INCLUDE_DRM_();
	static ref<java::lang::String> EXTRA_RINGTONE_PICKED_URI_();
	static ref<java::lang::String> EXTRA_RINGTONE_SHOW_DEFAULT_();
	static ref<java::lang::String> EXTRA_RINGTONE_SHOW_SILENT_();
	static ref<java::lang::String> EXTRA_RINGTONE_TITLE_();
	static ref<java::lang::String> EXTRA_RINGTONE_TYPE_();
	static jint ID_COLUMN_INDEX_();
	static jint TITLE_COLUMN_INDEX_();
	static jint TYPE_ALARM_();
	static jint TYPE_ALL_();
	static jint TYPE_NOTIFICATION_();
	static jint TYPE_RINGTONE_();
	static jint URI_COLUMN_INDEX_();

	static ref<RingtoneManager> new_object(ref<android::app::Activity> activity);
	static ref<RingtoneManager> new_object(ref<android::content::Context> context);
	void setType(jint type);
	jint inferStreamType();
	void setStopPreviousRingtone(jboolean stopPreviousRingtone);
	jboolean getStopPreviousRingtone();
	void stopPreviousRingtone();
	jboolean getIncludeDrm();
	void setIncludeDrm(jboolean includeDrm);
	ref<android::database::Cursor> getCursor();
	ref<android::media::Ringtone> getRingtone(jint position);
	ref<android::net::Uri> getRingtoneUri(jint position);
	jint getRingtonePosition(ref<android::net::Uri> ringtoneUri);
	static ref<android::net::Uri> getValidRingtoneUri(ref<android::content::Context> context);
	static ref<android::media::Ringtone> getRingtone(ref<android::content::Context> context, ref<android::net::Uri> ringtoneUri);
	static ref<android::net::Uri> getActualDefaultRingtoneUri(ref<android::content::Context> context, jint type);
	static void setActualDefaultRingtoneUri(ref<android::content::Context> context, jint type, ref<android::net::Uri> ringtoneUri);
	static jboolean isDefault(ref<android::net::Uri> ringtoneUri);
	static jint getDefaultType(ref<android::net::Uri> defaultRingtoneUri);
	static ref<android::net::Uri> getDefaultUri(jint type);

protected:

	RingtoneManager(handle_type h) : base_(h) {}

};

} // namespace android::media
} // namespace scapix::java_api

#include <scapix/java_api/android/app/Activity.h>
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/database/Cursor.h>
#include <scapix/java_api/android/media/Ringtone.h>
#include <scapix/java_api/android/net/Uri.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::media {

inline ref<java::lang::String> RingtoneManager::ACTION_RINGTONE_PICKER_() { return get_static_field<SCAPIX_META_STRING("ACTION_RINGTONE_PICKER"), ref<java::lang::String>>(); }
inline ref<java::lang::String> RingtoneManager::EXTRA_RINGTONE_DEFAULT_URI_() { return get_static_field<SCAPIX_META_STRING("EXTRA_RINGTONE_DEFAULT_URI"), ref<java::lang::String>>(); }
inline ref<java::lang::String> RingtoneManager::EXTRA_RINGTONE_EXISTING_URI_() { return get_static_field<SCAPIX_META_STRING("EXTRA_RINGTONE_EXISTING_URI"), ref<java::lang::String>>(); }
inline ref<java::lang::String> RingtoneManager::EXTRA_RINGTONE_INCLUDE_DRM_() { return get_static_field<SCAPIX_META_STRING("EXTRA_RINGTONE_INCLUDE_DRM"), ref<java::lang::String>>(); }
inline ref<java::lang::String> RingtoneManager::EXTRA_RINGTONE_PICKED_URI_() { return get_static_field<SCAPIX_META_STRING("EXTRA_RINGTONE_PICKED_URI"), ref<java::lang::String>>(); }
inline ref<java::lang::String> RingtoneManager::EXTRA_RINGTONE_SHOW_DEFAULT_() { return get_static_field<SCAPIX_META_STRING("EXTRA_RINGTONE_SHOW_DEFAULT"), ref<java::lang::String>>(); }
inline ref<java::lang::String> RingtoneManager::EXTRA_RINGTONE_SHOW_SILENT_() { return get_static_field<SCAPIX_META_STRING("EXTRA_RINGTONE_SHOW_SILENT"), ref<java::lang::String>>(); }
inline ref<java::lang::String> RingtoneManager::EXTRA_RINGTONE_TITLE_() { return get_static_field<SCAPIX_META_STRING("EXTRA_RINGTONE_TITLE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> RingtoneManager::EXTRA_RINGTONE_TYPE_() { return get_static_field<SCAPIX_META_STRING("EXTRA_RINGTONE_TYPE"), ref<java::lang::String>>(); }
inline jint RingtoneManager::ID_COLUMN_INDEX_() { return get_static_field<SCAPIX_META_STRING("ID_COLUMN_INDEX"), jint>(); }
inline jint RingtoneManager::TITLE_COLUMN_INDEX_() { return get_static_field<SCAPIX_META_STRING("TITLE_COLUMN_INDEX"), jint>(); }
inline jint RingtoneManager::TYPE_ALARM_() { return get_static_field<SCAPIX_META_STRING("TYPE_ALARM"), jint>(); }
inline jint RingtoneManager::TYPE_ALL_() { return get_static_field<SCAPIX_META_STRING("TYPE_ALL"), jint>(); }
inline jint RingtoneManager::TYPE_NOTIFICATION_() { return get_static_field<SCAPIX_META_STRING("TYPE_NOTIFICATION"), jint>(); }
inline jint RingtoneManager::TYPE_RINGTONE_() { return get_static_field<SCAPIX_META_STRING("TYPE_RINGTONE"), jint>(); }
inline jint RingtoneManager::URI_COLUMN_INDEX_() { return get_static_field<SCAPIX_META_STRING("URI_COLUMN_INDEX"), jint>(); }
inline ref<RingtoneManager> RingtoneManager::new_object(ref<android::app::Activity> activity) { return base_::new_object(activity); }
inline ref<RingtoneManager> RingtoneManager::new_object(ref<android::content::Context> context) { return base_::new_object(context); }
inline void RingtoneManager::setType(jint type) { return call_method<SCAPIX_META_STRING("setType"), void>(type); }
inline jint RingtoneManager::inferStreamType() { return call_method<SCAPIX_META_STRING("inferStreamType"), jint>(); }
inline void RingtoneManager::setStopPreviousRingtone(jboolean stopPreviousRingtone) { return call_method<SCAPIX_META_STRING("setStopPreviousRingtone"), void>(stopPreviousRingtone); }
inline jboolean RingtoneManager::getStopPreviousRingtone() { return call_method<SCAPIX_META_STRING("getStopPreviousRingtone"), jboolean>(); }
inline void RingtoneManager::stopPreviousRingtone() { return call_method<SCAPIX_META_STRING("stopPreviousRingtone"), void>(); }
inline jboolean RingtoneManager::getIncludeDrm() { return call_method<SCAPIX_META_STRING("getIncludeDrm"), jboolean>(); }
inline void RingtoneManager::setIncludeDrm(jboolean includeDrm) { return call_method<SCAPIX_META_STRING("setIncludeDrm"), void>(includeDrm); }
inline ref<android::database::Cursor> RingtoneManager::getCursor() { return call_method<SCAPIX_META_STRING("getCursor"), ref<android::database::Cursor>>(); }
inline ref<android::media::Ringtone> RingtoneManager::getRingtone(jint position) { return call_method<SCAPIX_META_STRING("getRingtone"), ref<android::media::Ringtone>>(position); }
inline ref<android::net::Uri> RingtoneManager::getRingtoneUri(jint position) { return call_method<SCAPIX_META_STRING("getRingtoneUri"), ref<android::net::Uri>>(position); }
inline jint RingtoneManager::getRingtonePosition(ref<android::net::Uri> ringtoneUri) { return call_method<SCAPIX_META_STRING("getRingtonePosition"), jint>(ringtoneUri); }
inline ref<android::net::Uri> RingtoneManager::getValidRingtoneUri(ref<android::content::Context> context) { return call_static_method<SCAPIX_META_STRING("getValidRingtoneUri"), ref<android::net::Uri>>(context); }
inline ref<android::media::Ringtone> RingtoneManager::getRingtone(ref<android::content::Context> context, ref<android::net::Uri> ringtoneUri) { return call_static_method<SCAPIX_META_STRING("getRingtone"), ref<android::media::Ringtone>>(context, ringtoneUri); }
inline ref<android::net::Uri> RingtoneManager::getActualDefaultRingtoneUri(ref<android::content::Context> context, jint type) { return call_static_method<SCAPIX_META_STRING("getActualDefaultRingtoneUri"), ref<android::net::Uri>>(context, type); }
inline void RingtoneManager::setActualDefaultRingtoneUri(ref<android::content::Context> context, jint type, ref<android::net::Uri> ringtoneUri) { return call_static_method<SCAPIX_META_STRING("setActualDefaultRingtoneUri"), void>(context, type, ringtoneUri); }
inline jboolean RingtoneManager::isDefault(ref<android::net::Uri> ringtoneUri) { return call_static_method<SCAPIX_META_STRING("isDefault"), jboolean>(ringtoneUri); }
inline jint RingtoneManager::getDefaultType(ref<android::net::Uri> defaultRingtoneUri) { return call_static_method<SCAPIX_META_STRING("getDefaultType"), jint>(defaultRingtoneUri); }
inline ref<android::net::Uri> RingtoneManager::getDefaultUri(jint type) { return call_static_method<SCAPIX_META_STRING("getDefaultUri"), ref<android::net::Uri>>(type); }

} // namespace android::media
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_MEDIA_RINGTONEMANAGER_H
