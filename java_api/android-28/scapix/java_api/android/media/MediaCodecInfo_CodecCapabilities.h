// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_MEDIA_MEDIACODECINFO_CODECCAPABILITIES_H
#define SCAPIX_ANDROID_MEDIA_MEDIACODECINFO_CODECCAPABILITIES_H

namespace scapix::java_api {

namespace android::media { class MediaCodecInfo_AudioCapabilities; }
namespace android::media { class MediaCodecInfo_CodecProfileLevel; }
namespace android::media { class MediaCodecInfo_EncoderCapabilities; }
namespace android::media { class MediaCodecInfo_VideoCapabilities; }
namespace android::media { class MediaFormat; }
namespace java::lang { class String; }

namespace android::media {

class MediaCodecInfo_CodecCapabilities : public object_base<SCAPIX_META_STRING("android/media/MediaCodecInfo$CodecCapabilities"),
	java::lang::Object>
{
public:

	static jint COLOR_Format12bitRGB444();
	static jint COLOR_Format16bitARGB1555();
	static jint COLOR_Format16bitARGB4444();
	static jint COLOR_Format16bitBGR565();
	static jint COLOR_Format16bitRGB565();
	static jint COLOR_Format18BitBGR666();
	static jint COLOR_Format18bitARGB1665();
	static jint COLOR_Format18bitRGB666();
	static jint COLOR_Format19bitARGB1666();
	static jint COLOR_Format24BitABGR6666();
	static jint COLOR_Format24BitARGB6666();
	static jint COLOR_Format24bitARGB1887();
	static jint COLOR_Format24bitBGR888();
	static jint COLOR_Format24bitRGB888();
	static jint COLOR_Format25bitARGB1888();
	static jint COLOR_Format32bitABGR8888();
	static jint COLOR_Format32bitARGB8888();
	static jint COLOR_Format32bitBGRA8888();
	static jint COLOR_Format8bitRGB332();
	static jint COLOR_FormatCbYCrY();
	static jint COLOR_FormatCrYCbY();
	static jint COLOR_FormatL16();
	static jint COLOR_FormatL2();
	static jint COLOR_FormatL24();
	static jint COLOR_FormatL32();
	static jint COLOR_FormatL4();
	static jint COLOR_FormatL8();
	static jint COLOR_FormatMonochrome();
	static jint COLOR_FormatRGBAFlexible();
	static jint COLOR_FormatRGBFlexible();
	static jint COLOR_FormatRawBayer10bit();
	static jint COLOR_FormatRawBayer8bit();
	static jint COLOR_FormatRawBayer8bitcompressed();
	static jint COLOR_FormatSurface();
	static jint COLOR_FormatYCbYCr();
	static jint COLOR_FormatYCrYCb();
	static jint COLOR_FormatYUV411PackedPlanar();
	static jint COLOR_FormatYUV411Planar();
	static jint COLOR_FormatYUV420Flexible();
	static jint COLOR_FormatYUV420PackedPlanar();
	static jint COLOR_FormatYUV420PackedSemiPlanar();
	static jint COLOR_FormatYUV420Planar();
	static jint COLOR_FormatYUV420SemiPlanar();
	static jint COLOR_FormatYUV422Flexible();
	static jint COLOR_FormatYUV422PackedPlanar();
	static jint COLOR_FormatYUV422PackedSemiPlanar();
	static jint COLOR_FormatYUV422Planar();
	static jint COLOR_FormatYUV422SemiPlanar();
	static jint COLOR_FormatYUV444Flexible();
	static jint COLOR_FormatYUV444Interleaved();
	static jint COLOR_QCOM_FormatYUV420SemiPlanar();
	static jint COLOR_TI_FormatYUV420PackedSemiPlanar();
	static ref<java::lang::String> FEATURE_AdaptivePlayback();
	static ref<java::lang::String> FEATURE_IntraRefresh();
	static ref<java::lang::String> FEATURE_PartialFrame();
	static ref<java::lang::String> FEATURE_SecurePlayback();
	static ref<java::lang::String> FEATURE_TunneledPlayback();
	ref<link::java::array<jint>> colorFormats();
	void colorFormats(ref<link::java::array<jint>>);
	ref<link::java::array<android::media::MediaCodecInfo_CodecProfileLevel>> profileLevels();
	void profileLevels(ref<link::java::array<android::media::MediaCodecInfo_CodecProfileLevel>>);

	static ref<MediaCodecInfo_CodecCapabilities> new_object();
	jboolean isFeatureSupported(ref<java::lang::String> name);
	jboolean isFeatureRequired(ref<java::lang::String> name);
	jboolean isFormatSupported(ref<android::media::MediaFormat> format);
	ref<android::media::MediaFormat> getDefaultFormat();
	ref<java::lang::String> getMimeType();
	jint getMaxSupportedInstances();
	ref<android::media::MediaCodecInfo_AudioCapabilities> getAudioCapabilities();
	ref<android::media::MediaCodecInfo_EncoderCapabilities> getEncoderCapabilities();
	ref<android::media::MediaCodecInfo_VideoCapabilities> getVideoCapabilities();
	static ref<android::media::MediaCodecInfo_CodecCapabilities> createFromProfileLevel(ref<java::lang::String> mime, jint profile, jint level);

protected:

	MediaCodecInfo_CodecCapabilities(handle_type h) : base_(h) {}

};

} // namespace android::media
} // namespace scapix::java_api

#include <scapix/java_api/android/media/MediaCodecInfo_AudioCapabilities.h>
#include <scapix/java_api/android/media/MediaCodecInfo_CodecProfileLevel.h>
#include <scapix/java_api/android/media/MediaCodecInfo_EncoderCapabilities.h>
#include <scapix/java_api/android/media/MediaCodecInfo_VideoCapabilities.h>
#include <scapix/java_api/android/media/MediaFormat.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::media {

inline jint MediaCodecInfo_CodecCapabilities::COLOR_Format12bitRGB444() { return get_static_field<SCAPIX_META_STRING("COLOR_Format12bitRGB444"), jint>(); }
inline jint MediaCodecInfo_CodecCapabilities::COLOR_Format16bitARGB1555() { return get_static_field<SCAPIX_META_STRING("COLOR_Format16bitARGB1555"), jint>(); }
inline jint MediaCodecInfo_CodecCapabilities::COLOR_Format16bitARGB4444() { return get_static_field<SCAPIX_META_STRING("COLOR_Format16bitARGB4444"), jint>(); }
inline jint MediaCodecInfo_CodecCapabilities::COLOR_Format16bitBGR565() { return get_static_field<SCAPIX_META_STRING("COLOR_Format16bitBGR565"), jint>(); }
inline jint MediaCodecInfo_CodecCapabilities::COLOR_Format16bitRGB565() { return get_static_field<SCAPIX_META_STRING("COLOR_Format16bitRGB565"), jint>(); }
inline jint MediaCodecInfo_CodecCapabilities::COLOR_Format18BitBGR666() { return get_static_field<SCAPIX_META_STRING("COLOR_Format18BitBGR666"), jint>(); }
inline jint MediaCodecInfo_CodecCapabilities::COLOR_Format18bitARGB1665() { return get_static_field<SCAPIX_META_STRING("COLOR_Format18bitARGB1665"), jint>(); }
inline jint MediaCodecInfo_CodecCapabilities::COLOR_Format18bitRGB666() { return get_static_field<SCAPIX_META_STRING("COLOR_Format18bitRGB666"), jint>(); }
inline jint MediaCodecInfo_CodecCapabilities::COLOR_Format19bitARGB1666() { return get_static_field<SCAPIX_META_STRING("COLOR_Format19bitARGB1666"), jint>(); }
inline jint MediaCodecInfo_CodecCapabilities::COLOR_Format24BitABGR6666() { return get_static_field<SCAPIX_META_STRING("COLOR_Format24BitABGR6666"), jint>(); }
inline jint MediaCodecInfo_CodecCapabilities::COLOR_Format24BitARGB6666() { return get_static_field<SCAPIX_META_STRING("COLOR_Format24BitARGB6666"), jint>(); }
inline jint MediaCodecInfo_CodecCapabilities::COLOR_Format24bitARGB1887() { return get_static_field<SCAPIX_META_STRING("COLOR_Format24bitARGB1887"), jint>(); }
inline jint MediaCodecInfo_CodecCapabilities::COLOR_Format24bitBGR888() { return get_static_field<SCAPIX_META_STRING("COLOR_Format24bitBGR888"), jint>(); }
inline jint MediaCodecInfo_CodecCapabilities::COLOR_Format24bitRGB888() { return get_static_field<SCAPIX_META_STRING("COLOR_Format24bitRGB888"), jint>(); }
inline jint MediaCodecInfo_CodecCapabilities::COLOR_Format25bitARGB1888() { return get_static_field<SCAPIX_META_STRING("COLOR_Format25bitARGB1888"), jint>(); }
inline jint MediaCodecInfo_CodecCapabilities::COLOR_Format32bitABGR8888() { return get_static_field<SCAPIX_META_STRING("COLOR_Format32bitABGR8888"), jint>(); }
inline jint MediaCodecInfo_CodecCapabilities::COLOR_Format32bitARGB8888() { return get_static_field<SCAPIX_META_STRING("COLOR_Format32bitARGB8888"), jint>(); }
inline jint MediaCodecInfo_CodecCapabilities::COLOR_Format32bitBGRA8888() { return get_static_field<SCAPIX_META_STRING("COLOR_Format32bitBGRA8888"), jint>(); }
inline jint MediaCodecInfo_CodecCapabilities::COLOR_Format8bitRGB332() { return get_static_field<SCAPIX_META_STRING("COLOR_Format8bitRGB332"), jint>(); }
inline jint MediaCodecInfo_CodecCapabilities::COLOR_FormatCbYCrY() { return get_static_field<SCAPIX_META_STRING("COLOR_FormatCbYCrY"), jint>(); }
inline jint MediaCodecInfo_CodecCapabilities::COLOR_FormatCrYCbY() { return get_static_field<SCAPIX_META_STRING("COLOR_FormatCrYCbY"), jint>(); }
inline jint MediaCodecInfo_CodecCapabilities::COLOR_FormatL16() { return get_static_field<SCAPIX_META_STRING("COLOR_FormatL16"), jint>(); }
inline jint MediaCodecInfo_CodecCapabilities::COLOR_FormatL2() { return get_static_field<SCAPIX_META_STRING("COLOR_FormatL2"), jint>(); }
inline jint MediaCodecInfo_CodecCapabilities::COLOR_FormatL24() { return get_static_field<SCAPIX_META_STRING("COLOR_FormatL24"), jint>(); }
inline jint MediaCodecInfo_CodecCapabilities::COLOR_FormatL32() { return get_static_field<SCAPIX_META_STRING("COLOR_FormatL32"), jint>(); }
inline jint MediaCodecInfo_CodecCapabilities::COLOR_FormatL4() { return get_static_field<SCAPIX_META_STRING("COLOR_FormatL4"), jint>(); }
inline jint MediaCodecInfo_CodecCapabilities::COLOR_FormatL8() { return get_static_field<SCAPIX_META_STRING("COLOR_FormatL8"), jint>(); }
inline jint MediaCodecInfo_CodecCapabilities::COLOR_FormatMonochrome() { return get_static_field<SCAPIX_META_STRING("COLOR_FormatMonochrome"), jint>(); }
inline jint MediaCodecInfo_CodecCapabilities::COLOR_FormatRGBAFlexible() { return get_static_field<SCAPIX_META_STRING("COLOR_FormatRGBAFlexible"), jint>(); }
inline jint MediaCodecInfo_CodecCapabilities::COLOR_FormatRGBFlexible() { return get_static_field<SCAPIX_META_STRING("COLOR_FormatRGBFlexible"), jint>(); }
inline jint MediaCodecInfo_CodecCapabilities::COLOR_FormatRawBayer10bit() { return get_static_field<SCAPIX_META_STRING("COLOR_FormatRawBayer10bit"), jint>(); }
inline jint MediaCodecInfo_CodecCapabilities::COLOR_FormatRawBayer8bit() { return get_static_field<SCAPIX_META_STRING("COLOR_FormatRawBayer8bit"), jint>(); }
inline jint MediaCodecInfo_CodecCapabilities::COLOR_FormatRawBayer8bitcompressed() { return get_static_field<SCAPIX_META_STRING("COLOR_FormatRawBayer8bitcompressed"), jint>(); }
inline jint MediaCodecInfo_CodecCapabilities::COLOR_FormatSurface() { return get_static_field<SCAPIX_META_STRING("COLOR_FormatSurface"), jint>(); }
inline jint MediaCodecInfo_CodecCapabilities::COLOR_FormatYCbYCr() { return get_static_field<SCAPIX_META_STRING("COLOR_FormatYCbYCr"), jint>(); }
inline jint MediaCodecInfo_CodecCapabilities::COLOR_FormatYCrYCb() { return get_static_field<SCAPIX_META_STRING("COLOR_FormatYCrYCb"), jint>(); }
inline jint MediaCodecInfo_CodecCapabilities::COLOR_FormatYUV411PackedPlanar() { return get_static_field<SCAPIX_META_STRING("COLOR_FormatYUV411PackedPlanar"), jint>(); }
inline jint MediaCodecInfo_CodecCapabilities::COLOR_FormatYUV411Planar() { return get_static_field<SCAPIX_META_STRING("COLOR_FormatYUV411Planar"), jint>(); }
inline jint MediaCodecInfo_CodecCapabilities::COLOR_FormatYUV420Flexible() { return get_static_field<SCAPIX_META_STRING("COLOR_FormatYUV420Flexible"), jint>(); }
inline jint MediaCodecInfo_CodecCapabilities::COLOR_FormatYUV420PackedPlanar() { return get_static_field<SCAPIX_META_STRING("COLOR_FormatYUV420PackedPlanar"), jint>(); }
inline jint MediaCodecInfo_CodecCapabilities::COLOR_FormatYUV420PackedSemiPlanar() { return get_static_field<SCAPIX_META_STRING("COLOR_FormatYUV420PackedSemiPlanar"), jint>(); }
inline jint MediaCodecInfo_CodecCapabilities::COLOR_FormatYUV420Planar() { return get_static_field<SCAPIX_META_STRING("COLOR_FormatYUV420Planar"), jint>(); }
inline jint MediaCodecInfo_CodecCapabilities::COLOR_FormatYUV420SemiPlanar() { return get_static_field<SCAPIX_META_STRING("COLOR_FormatYUV420SemiPlanar"), jint>(); }
inline jint MediaCodecInfo_CodecCapabilities::COLOR_FormatYUV422Flexible() { return get_static_field<SCAPIX_META_STRING("COLOR_FormatYUV422Flexible"), jint>(); }
inline jint MediaCodecInfo_CodecCapabilities::COLOR_FormatYUV422PackedPlanar() { return get_static_field<SCAPIX_META_STRING("COLOR_FormatYUV422PackedPlanar"), jint>(); }
inline jint MediaCodecInfo_CodecCapabilities::COLOR_FormatYUV422PackedSemiPlanar() { return get_static_field<SCAPIX_META_STRING("COLOR_FormatYUV422PackedSemiPlanar"), jint>(); }
inline jint MediaCodecInfo_CodecCapabilities::COLOR_FormatYUV422Planar() { return get_static_field<SCAPIX_META_STRING("COLOR_FormatYUV422Planar"), jint>(); }
inline jint MediaCodecInfo_CodecCapabilities::COLOR_FormatYUV422SemiPlanar() { return get_static_field<SCAPIX_META_STRING("COLOR_FormatYUV422SemiPlanar"), jint>(); }
inline jint MediaCodecInfo_CodecCapabilities::COLOR_FormatYUV444Flexible() { return get_static_field<SCAPIX_META_STRING("COLOR_FormatYUV444Flexible"), jint>(); }
inline jint MediaCodecInfo_CodecCapabilities::COLOR_FormatYUV444Interleaved() { return get_static_field<SCAPIX_META_STRING("COLOR_FormatYUV444Interleaved"), jint>(); }
inline jint MediaCodecInfo_CodecCapabilities::COLOR_QCOM_FormatYUV420SemiPlanar() { return get_static_field<SCAPIX_META_STRING("COLOR_QCOM_FormatYUV420SemiPlanar"), jint>(); }
inline jint MediaCodecInfo_CodecCapabilities::COLOR_TI_FormatYUV420PackedSemiPlanar() { return get_static_field<SCAPIX_META_STRING("COLOR_TI_FormatYUV420PackedSemiPlanar"), jint>(); }
inline ref<java::lang::String> MediaCodecInfo_CodecCapabilities::FEATURE_AdaptivePlayback() { return get_static_field<SCAPIX_META_STRING("FEATURE_AdaptivePlayback"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaCodecInfo_CodecCapabilities::FEATURE_IntraRefresh() { return get_static_field<SCAPIX_META_STRING("FEATURE_IntraRefresh"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaCodecInfo_CodecCapabilities::FEATURE_PartialFrame() { return get_static_field<SCAPIX_META_STRING("FEATURE_PartialFrame"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaCodecInfo_CodecCapabilities::FEATURE_SecurePlayback() { return get_static_field<SCAPIX_META_STRING("FEATURE_SecurePlayback"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MediaCodecInfo_CodecCapabilities::FEATURE_TunneledPlayback() { return get_static_field<SCAPIX_META_STRING("FEATURE_TunneledPlayback"), ref<java::lang::String>>(); }
inline ref<link::java::array<jint>> MediaCodecInfo_CodecCapabilities::colorFormats() { return get_field<SCAPIX_META_STRING("colorFormats"), ref<link::java::array<jint>>>(); }
inline void MediaCodecInfo_CodecCapabilities::colorFormats(ref<link::java::array<jint>> v) { set_field<SCAPIX_META_STRING("colorFormats"), ref<link::java::array<jint>>>(v); }
inline ref<link::java::array<android::media::MediaCodecInfo_CodecProfileLevel>> MediaCodecInfo_CodecCapabilities::profileLevels() { return get_field<SCAPIX_META_STRING("profileLevels"), ref<link::java::array<android::media::MediaCodecInfo_CodecProfileLevel>>>(); }
inline void MediaCodecInfo_CodecCapabilities::profileLevels(ref<link::java::array<android::media::MediaCodecInfo_CodecProfileLevel>> v) { set_field<SCAPIX_META_STRING("profileLevels"), ref<link::java::array<android::media::MediaCodecInfo_CodecProfileLevel>>>(v); }
inline ref<MediaCodecInfo_CodecCapabilities> MediaCodecInfo_CodecCapabilities::new_object() { return base_::new_object(); }
inline jboolean MediaCodecInfo_CodecCapabilities::isFeatureSupported(ref<java::lang::String> name) { return call_method<SCAPIX_META_STRING("isFeatureSupported"), jboolean>(name); }
inline jboolean MediaCodecInfo_CodecCapabilities::isFeatureRequired(ref<java::lang::String> name) { return call_method<SCAPIX_META_STRING("isFeatureRequired"), jboolean>(name); }
inline jboolean MediaCodecInfo_CodecCapabilities::isFormatSupported(ref<android::media::MediaFormat> format) { return call_method<SCAPIX_META_STRING("isFormatSupported"), jboolean>(format); }
inline ref<android::media::MediaFormat> MediaCodecInfo_CodecCapabilities::getDefaultFormat() { return call_method<SCAPIX_META_STRING("getDefaultFormat"), ref<android::media::MediaFormat>>(); }
inline ref<java::lang::String> MediaCodecInfo_CodecCapabilities::getMimeType() { return call_method<SCAPIX_META_STRING("getMimeType"), ref<java::lang::String>>(); }
inline jint MediaCodecInfo_CodecCapabilities::getMaxSupportedInstances() { return call_method<SCAPIX_META_STRING("getMaxSupportedInstances"), jint>(); }
inline ref<android::media::MediaCodecInfo_AudioCapabilities> MediaCodecInfo_CodecCapabilities::getAudioCapabilities() { return call_method<SCAPIX_META_STRING("getAudioCapabilities"), ref<android::media::MediaCodecInfo_AudioCapabilities>>(); }
inline ref<android::media::MediaCodecInfo_EncoderCapabilities> MediaCodecInfo_CodecCapabilities::getEncoderCapabilities() { return call_method<SCAPIX_META_STRING("getEncoderCapabilities"), ref<android::media::MediaCodecInfo_EncoderCapabilities>>(); }
inline ref<android::media::MediaCodecInfo_VideoCapabilities> MediaCodecInfo_CodecCapabilities::getVideoCapabilities() { return call_method<SCAPIX_META_STRING("getVideoCapabilities"), ref<android::media::MediaCodecInfo_VideoCapabilities>>(); }
inline ref<android::media::MediaCodecInfo_CodecCapabilities> MediaCodecInfo_CodecCapabilities::createFromProfileLevel(ref<java::lang::String> mime, jint profile, jint level) { return call_static_method<SCAPIX_META_STRING("createFromProfileLevel"), ref<android::media::MediaCodecInfo_CodecCapabilities>>(mime, profile, level); }

} // namespace android::media
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_MEDIA_MEDIACODECINFO_CODECCAPABILITIES_H
