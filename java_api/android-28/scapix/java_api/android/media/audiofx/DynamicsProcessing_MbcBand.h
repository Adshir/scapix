// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/media/audiofx/DynamicsProcessing_BandBase.h>

#ifndef SCAPIX_ANDROID_MEDIA_AUDIOFX_DYNAMICSPROCESSING_MBCBAND_H
#define SCAPIX_ANDROID_MEDIA_AUDIOFX_DYNAMICSPROCESSING_MBCBAND_H

namespace scapix::java_api {

namespace java::lang { class String; }

namespace android::media::audiofx {

class DynamicsProcessing_MbcBand : public object_base<SCAPIX_META_STRING("android/media/audiofx/DynamicsProcessing$MbcBand"),
	android::media::audiofx::DynamicsProcessing_BandBase>
{
public:

	static ref<DynamicsProcessing_MbcBand> new_object(jboolean enabled, jfloat cutoffFrequency, jfloat attackTime, jfloat releaseTime, jfloat ratio, jfloat threshold, jfloat kneeWidth, jfloat noiseGateThreshold, jfloat expanderRatio, jfloat preGain, jfloat postGain);
	static ref<DynamicsProcessing_MbcBand> new_object(ref<android::media::audiofx::DynamicsProcessing_MbcBand> cfg);
	ref<java::lang::String> toString();
	jfloat getAttackTime();
	void setAttackTime(jfloat attackTime);
	jfloat getReleaseTime();
	void setReleaseTime(jfloat releaseTime);
	jfloat getRatio();
	void setRatio(jfloat ratio);
	jfloat getThreshold();
	void setThreshold(jfloat threshold);
	jfloat getKneeWidth();
	void setKneeWidth(jfloat kneeWidth);
	jfloat getNoiseGateThreshold();
	void setNoiseGateThreshold(jfloat noiseGateThreshold);
	jfloat getExpanderRatio();
	void setExpanderRatio(jfloat expanderRatio);
	jfloat getPreGain();
	void setPreGain(jfloat preGain);
	jfloat getPostGain();
	void setPostGain(jfloat postGain);

protected:

	DynamicsProcessing_MbcBand(handle_type h) : base_(h) {}

};

} // namespace android::media::audiofx
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::media::audiofx {

inline ref<DynamicsProcessing_MbcBand> DynamicsProcessing_MbcBand::new_object(jboolean enabled, jfloat cutoffFrequency, jfloat attackTime, jfloat releaseTime, jfloat ratio, jfloat threshold, jfloat kneeWidth, jfloat noiseGateThreshold, jfloat expanderRatio, jfloat preGain, jfloat postGain) { return base_::new_object(enabled, cutoffFrequency, attackTime, releaseTime, ratio, threshold, kneeWidth, noiseGateThreshold, expanderRatio, preGain, postGain); }
inline ref<DynamicsProcessing_MbcBand> DynamicsProcessing_MbcBand::new_object(ref<android::media::audiofx::DynamicsProcessing_MbcBand> cfg) { return base_::new_object(cfg); }
inline ref<java::lang::String> DynamicsProcessing_MbcBand::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }
inline jfloat DynamicsProcessing_MbcBand::getAttackTime() { return call_method<SCAPIX_META_STRING("getAttackTime"), jfloat>(); }
inline void DynamicsProcessing_MbcBand::setAttackTime(jfloat attackTime) { return call_method<SCAPIX_META_STRING("setAttackTime"), void>(attackTime); }
inline jfloat DynamicsProcessing_MbcBand::getReleaseTime() { return call_method<SCAPIX_META_STRING("getReleaseTime"), jfloat>(); }
inline void DynamicsProcessing_MbcBand::setReleaseTime(jfloat releaseTime) { return call_method<SCAPIX_META_STRING("setReleaseTime"), void>(releaseTime); }
inline jfloat DynamicsProcessing_MbcBand::getRatio() { return call_method<SCAPIX_META_STRING("getRatio"), jfloat>(); }
inline void DynamicsProcessing_MbcBand::setRatio(jfloat ratio) { return call_method<SCAPIX_META_STRING("setRatio"), void>(ratio); }
inline jfloat DynamicsProcessing_MbcBand::getThreshold() { return call_method<SCAPIX_META_STRING("getThreshold"), jfloat>(); }
inline void DynamicsProcessing_MbcBand::setThreshold(jfloat threshold) { return call_method<SCAPIX_META_STRING("setThreshold"), void>(threshold); }
inline jfloat DynamicsProcessing_MbcBand::getKneeWidth() { return call_method<SCAPIX_META_STRING("getKneeWidth"), jfloat>(); }
inline void DynamicsProcessing_MbcBand::setKneeWidth(jfloat kneeWidth) { return call_method<SCAPIX_META_STRING("setKneeWidth"), void>(kneeWidth); }
inline jfloat DynamicsProcessing_MbcBand::getNoiseGateThreshold() { return call_method<SCAPIX_META_STRING("getNoiseGateThreshold"), jfloat>(); }
inline void DynamicsProcessing_MbcBand::setNoiseGateThreshold(jfloat noiseGateThreshold) { return call_method<SCAPIX_META_STRING("setNoiseGateThreshold"), void>(noiseGateThreshold); }
inline jfloat DynamicsProcessing_MbcBand::getExpanderRatio() { return call_method<SCAPIX_META_STRING("getExpanderRatio"), jfloat>(); }
inline void DynamicsProcessing_MbcBand::setExpanderRatio(jfloat expanderRatio) { return call_method<SCAPIX_META_STRING("setExpanderRatio"), void>(expanderRatio); }
inline jfloat DynamicsProcessing_MbcBand::getPreGain() { return call_method<SCAPIX_META_STRING("getPreGain"), jfloat>(); }
inline void DynamicsProcessing_MbcBand::setPreGain(jfloat preGain) { return call_method<SCAPIX_META_STRING("setPreGain"), void>(preGain); }
inline jfloat DynamicsProcessing_MbcBand::getPostGain() { return call_method<SCAPIX_META_STRING("getPostGain"), jfloat>(); }
inline void DynamicsProcessing_MbcBand::setPostGain(jfloat postGain) { return call_method<SCAPIX_META_STRING("setPostGain"), void>(postGain); }

} // namespace android::media::audiofx
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_MEDIA_AUDIOFX_DYNAMICSPROCESSING_MBCBAND_H
