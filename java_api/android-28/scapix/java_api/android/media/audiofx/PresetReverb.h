// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/media/audiofx/AudioEffect.h>

#ifndef SCAPIX_ANDROID_MEDIA_AUDIOFX_PRESETREVERB_H
#define SCAPIX_ANDROID_MEDIA_AUDIOFX_PRESETREVERB_H

namespace scapix::java_api {

namespace android::media::audiofx { class PresetReverb_OnParameterChangeListener; }
namespace android::media::audiofx { class PresetReverb_Settings; }

namespace android::media::audiofx {

class PresetReverb : public object_base<SCAPIX_META_STRING("android/media/audiofx/PresetReverb"),
	android::media::audiofx::AudioEffect>
{
public:

	using Settings = PresetReverb_Settings;
	using OnParameterChangeListener = PresetReverb_OnParameterChangeListener;

	static jint PARAM_PRESET_();
	static jshort PRESET_LARGEHALL_();
	static jshort PRESET_LARGEROOM_();
	static jshort PRESET_MEDIUMHALL_();
	static jshort PRESET_MEDIUMROOM_();
	static jshort PRESET_NONE_();
	static jshort PRESET_PLATE_();
	static jshort PRESET_SMALLROOM_();

	static ref<PresetReverb> new_object(jint priority, jint audioSession);
	void setPreset(jshort preset);
	jshort getPreset();
	void setParameterListener(ref<android::media::audiofx::PresetReverb_OnParameterChangeListener> listener);
	ref<android::media::audiofx::PresetReverb_Settings> getProperties();
	void setProperties(ref<android::media::audiofx::PresetReverb_Settings> settings);

protected:

	PresetReverb(handle_type h) : base_(h) {}

};

} // namespace android::media::audiofx
} // namespace scapix::java_api

#include <scapix/java_api/android/media/audiofx/PresetReverb_OnParameterChangeListener.h>
#include <scapix/java_api/android/media/audiofx/PresetReverb_Settings.h>

namespace scapix::java_api {
namespace android::media::audiofx {

inline jint PresetReverb::PARAM_PRESET_() { return get_static_field<SCAPIX_META_STRING("PARAM_PRESET"), jint>(); }
inline jshort PresetReverb::PRESET_LARGEHALL_() { return get_static_field<SCAPIX_META_STRING("PRESET_LARGEHALL"), jshort>(); }
inline jshort PresetReverb::PRESET_LARGEROOM_() { return get_static_field<SCAPIX_META_STRING("PRESET_LARGEROOM"), jshort>(); }
inline jshort PresetReverb::PRESET_MEDIUMHALL_() { return get_static_field<SCAPIX_META_STRING("PRESET_MEDIUMHALL"), jshort>(); }
inline jshort PresetReverb::PRESET_MEDIUMROOM_() { return get_static_field<SCAPIX_META_STRING("PRESET_MEDIUMROOM"), jshort>(); }
inline jshort PresetReverb::PRESET_NONE_() { return get_static_field<SCAPIX_META_STRING("PRESET_NONE"), jshort>(); }
inline jshort PresetReverb::PRESET_PLATE_() { return get_static_field<SCAPIX_META_STRING("PRESET_PLATE"), jshort>(); }
inline jshort PresetReverb::PRESET_SMALLROOM_() { return get_static_field<SCAPIX_META_STRING("PRESET_SMALLROOM"), jshort>(); }
inline ref<PresetReverb> PresetReverb::new_object(jint priority, jint audioSession) { return base_::new_object(priority, audioSession); }
inline void PresetReverb::setPreset(jshort preset) { return call_method<SCAPIX_META_STRING("setPreset"), void>(preset); }
inline jshort PresetReverb::getPreset() { return call_method<SCAPIX_META_STRING("getPreset"), jshort>(); }
inline void PresetReverb::setParameterListener(ref<android::media::audiofx::PresetReverb_OnParameterChangeListener> listener) { return call_method<SCAPIX_META_STRING("setParameterListener"), void>(listener); }
inline ref<android::media::audiofx::PresetReverb_Settings> PresetReverb::getProperties() { return call_method<SCAPIX_META_STRING("getProperties"), ref<android::media::audiofx::PresetReverb_Settings>>(); }
inline void PresetReverb::setProperties(ref<android::media::audiofx::PresetReverb_Settings> settings) { return call_method<SCAPIX_META_STRING("setProperties"), void>(settings); }

} // namespace android::media::audiofx
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_MEDIA_AUDIOFX_PRESETREVERB_H
