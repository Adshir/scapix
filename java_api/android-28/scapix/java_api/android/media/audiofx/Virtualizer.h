// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/media/audiofx/AudioEffect.h>

#ifndef SCAPIX_ANDROID_MEDIA_AUDIOFX_VIRTUALIZER_H
#define SCAPIX_ANDROID_MEDIA_AUDIOFX_VIRTUALIZER_H

namespace scapix::java_api {

namespace android::media::audiofx { class Virtualizer_OnParameterChangeListener; }
namespace android::media::audiofx { class Virtualizer_Settings; }

namespace android::media::audiofx {

class Virtualizer : public object_base<SCAPIX_META_STRING("android/media/audiofx/Virtualizer"),
	android::media::audiofx::AudioEffect>
{
public:

	using Settings = Virtualizer_Settings;
	using OnParameterChangeListener = Virtualizer_OnParameterChangeListener;

	static jint PARAM_STRENGTH_();
	static jint PARAM_STRENGTH_SUPPORTED_();
	static jint VIRTUALIZATION_MODE_AUTO_();
	static jint VIRTUALIZATION_MODE_BINAURAL_();
	static jint VIRTUALIZATION_MODE_OFF_();
	static jint VIRTUALIZATION_MODE_TRANSAURAL_();

	static ref<Virtualizer> new_object(jint priority, jint audioSession);
	jboolean getStrengthSupported();
	void setStrength(jshort strength);
	jshort getRoundedStrength();
	jboolean canVirtualize(jint inputChannelMask, jint virtualizationMode);
	jboolean getSpeakerAngles(jint inputChannelMask, jint virtualizationMode, ref<link::java::array<jint>> angles);
	jboolean forceVirtualizationMode(jint virtualizationMode);
	jint getVirtualizationMode();
	void setParameterListener(ref<android::media::audiofx::Virtualizer_OnParameterChangeListener> listener);
	ref<android::media::audiofx::Virtualizer_Settings> getProperties();
	void setProperties(ref<android::media::audiofx::Virtualizer_Settings> settings);

protected:

	Virtualizer(handle_type h) : base_(h) {}

};

} // namespace android::media::audiofx
} // namespace scapix::java_api

#include <scapix/java_api/android/media/audiofx/Virtualizer_OnParameterChangeListener.h>
#include <scapix/java_api/android/media/audiofx/Virtualizer_Settings.h>

namespace scapix::java_api {
namespace android::media::audiofx {

inline jint Virtualizer::PARAM_STRENGTH_() { return get_static_field<SCAPIX_META_STRING("PARAM_STRENGTH"), jint>(); }
inline jint Virtualizer::PARAM_STRENGTH_SUPPORTED_() { return get_static_field<SCAPIX_META_STRING("PARAM_STRENGTH_SUPPORTED"), jint>(); }
inline jint Virtualizer::VIRTUALIZATION_MODE_AUTO_() { return get_static_field<SCAPIX_META_STRING("VIRTUALIZATION_MODE_AUTO"), jint>(); }
inline jint Virtualizer::VIRTUALIZATION_MODE_BINAURAL_() { return get_static_field<SCAPIX_META_STRING("VIRTUALIZATION_MODE_BINAURAL"), jint>(); }
inline jint Virtualizer::VIRTUALIZATION_MODE_OFF_() { return get_static_field<SCAPIX_META_STRING("VIRTUALIZATION_MODE_OFF"), jint>(); }
inline jint Virtualizer::VIRTUALIZATION_MODE_TRANSAURAL_() { return get_static_field<SCAPIX_META_STRING("VIRTUALIZATION_MODE_TRANSAURAL"), jint>(); }
inline ref<Virtualizer> Virtualizer::new_object(jint priority, jint audioSession) { return base_::new_object(priority, audioSession); }
inline jboolean Virtualizer::getStrengthSupported() { return call_method<SCAPIX_META_STRING("getStrengthSupported"), jboolean>(); }
inline void Virtualizer::setStrength(jshort strength) { return call_method<SCAPIX_META_STRING("setStrength"), void>(strength); }
inline jshort Virtualizer::getRoundedStrength() { return call_method<SCAPIX_META_STRING("getRoundedStrength"), jshort>(); }
inline jboolean Virtualizer::canVirtualize(jint inputChannelMask, jint virtualizationMode) { return call_method<SCAPIX_META_STRING("canVirtualize"), jboolean>(inputChannelMask, virtualizationMode); }
inline jboolean Virtualizer::getSpeakerAngles(jint inputChannelMask, jint virtualizationMode, ref<link::java::array<jint>> angles) { return call_method<SCAPIX_META_STRING("getSpeakerAngles"), jboolean>(inputChannelMask, virtualizationMode, angles); }
inline jboolean Virtualizer::forceVirtualizationMode(jint virtualizationMode) { return call_method<SCAPIX_META_STRING("forceVirtualizationMode"), jboolean>(virtualizationMode); }
inline jint Virtualizer::getVirtualizationMode() { return call_method<SCAPIX_META_STRING("getVirtualizationMode"), jint>(); }
inline void Virtualizer::setParameterListener(ref<android::media::audiofx::Virtualizer_OnParameterChangeListener> listener) { return call_method<SCAPIX_META_STRING("setParameterListener"), void>(listener); }
inline ref<android::media::audiofx::Virtualizer_Settings> Virtualizer::getProperties() { return call_method<SCAPIX_META_STRING("getProperties"), ref<android::media::audiofx::Virtualizer_Settings>>(); }
inline void Virtualizer::setProperties(ref<android::media::audiofx::Virtualizer_Settings> settings) { return call_method<SCAPIX_META_STRING("setProperties"), void>(settings); }

} // namespace android::media::audiofx
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_MEDIA_AUDIOFX_VIRTUALIZER_H
