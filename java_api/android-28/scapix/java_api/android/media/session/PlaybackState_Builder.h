// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_MEDIA_SESSION_PLAYBACKSTATE_BUILDER_H
#define SCAPIX_ANDROID_MEDIA_SESSION_PLAYBACKSTATE_BUILDER_H

namespace scapix::java_api {

namespace android::media::session { class PlaybackState; }
namespace android::media::session { class PlaybackState_CustomAction; }
namespace android::os { class Bundle; }
namespace java::lang { class CharSequence; }
namespace java::lang { class String; }

namespace android::media::session {

class PlaybackState_Builder : public object_base<SCAPIX_META_STRING("android/media/session/PlaybackState$Builder"),
	java::lang::Object>
{
public:

	static ref<PlaybackState_Builder> new_object();
	static ref<PlaybackState_Builder> new_object(ref<android::media::session::PlaybackState> from);
	ref<android::media::session::PlaybackState_Builder> setState(jint state, jlong position, jfloat p3, jlong playbackSpeed);
	ref<android::media::session::PlaybackState_Builder> setState(jint state, jlong position, jfloat p3);
	ref<android::media::session::PlaybackState_Builder> setActions(jlong actions);
	ref<android::media::session::PlaybackState_Builder> addCustomAction(ref<java::lang::String> action, ref<java::lang::String> name, jint icon);
	ref<android::media::session::PlaybackState_Builder> addCustomAction(ref<android::media::session::PlaybackState_CustomAction> customAction);
	ref<android::media::session::PlaybackState_Builder> setBufferedPosition(jlong bufferedPosition);
	ref<android::media::session::PlaybackState_Builder> setActiveQueueItemId(jlong id);
	ref<android::media::session::PlaybackState_Builder> setErrorMessage(ref<java::lang::CharSequence> error);
	ref<android::media::session::PlaybackState_Builder> setExtras(ref<android::os::Bundle> extras);
	ref<android::media::session::PlaybackState> build();

protected:

	PlaybackState_Builder(handle_type h) : base_(h) {}

};

} // namespace android::media::session
} // namespace scapix::java_api

#include <scapix/java_api/android/media/session/PlaybackState.h>
#include <scapix/java_api/android/media/session/PlaybackState_CustomAction.h>
#include <scapix/java_api/android/os/Bundle.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::media::session {

inline ref<PlaybackState_Builder> PlaybackState_Builder::new_object() { return base_::new_object(); }
inline ref<PlaybackState_Builder> PlaybackState_Builder::new_object(ref<android::media::session::PlaybackState> from) { return base_::new_object(from); }
inline ref<android::media::session::PlaybackState_Builder> PlaybackState_Builder::setState(jint state, jlong position, jfloat p3, jlong playbackSpeed) { return call_method<SCAPIX_META_STRING("setState"), ref<android::media::session::PlaybackState_Builder>>(state, position, p3, playbackSpeed); }
inline ref<android::media::session::PlaybackState_Builder> PlaybackState_Builder::setState(jint state, jlong position, jfloat p3) { return call_method<SCAPIX_META_STRING("setState"), ref<android::media::session::PlaybackState_Builder>>(state, position, p3); }
inline ref<android::media::session::PlaybackState_Builder> PlaybackState_Builder::setActions(jlong actions) { return call_method<SCAPIX_META_STRING("setActions"), ref<android::media::session::PlaybackState_Builder>>(actions); }
inline ref<android::media::session::PlaybackState_Builder> PlaybackState_Builder::addCustomAction(ref<java::lang::String> action, ref<java::lang::String> name, jint icon) { return call_method<SCAPIX_META_STRING("addCustomAction"), ref<android::media::session::PlaybackState_Builder>>(action, name, icon); }
inline ref<android::media::session::PlaybackState_Builder> PlaybackState_Builder::addCustomAction(ref<android::media::session::PlaybackState_CustomAction> customAction) { return call_method<SCAPIX_META_STRING("addCustomAction"), ref<android::media::session::PlaybackState_Builder>>(customAction); }
inline ref<android::media::session::PlaybackState_Builder> PlaybackState_Builder::setBufferedPosition(jlong bufferedPosition) { return call_method<SCAPIX_META_STRING("setBufferedPosition"), ref<android::media::session::PlaybackState_Builder>>(bufferedPosition); }
inline ref<android::media::session::PlaybackState_Builder> PlaybackState_Builder::setActiveQueueItemId(jlong id) { return call_method<SCAPIX_META_STRING("setActiveQueueItemId"), ref<android::media::session::PlaybackState_Builder>>(id); }
inline ref<android::media::session::PlaybackState_Builder> PlaybackState_Builder::setErrorMessage(ref<java::lang::CharSequence> error) { return call_method<SCAPIX_META_STRING("setErrorMessage"), ref<android::media::session::PlaybackState_Builder>>(error); }
inline ref<android::media::session::PlaybackState_Builder> PlaybackState_Builder::setExtras(ref<android::os::Bundle> extras) { return call_method<SCAPIX_META_STRING("setExtras"), ref<android::media::session::PlaybackState_Builder>>(extras); }
inline ref<android::media::session::PlaybackState> PlaybackState_Builder::build() { return call_method<SCAPIX_META_STRING("build"), ref<android::media::session::PlaybackState>>(); }

} // namespace android::media::session
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_MEDIA_SESSION_PLAYBACKSTATE_BUILDER_H
