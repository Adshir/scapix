// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_MEDIA_SESSION_MEDIACONTROLLER_TRANSPORTCONTROLS_H
#define SCAPIX_ANDROID_MEDIA_SESSION_MEDIACONTROLLER_TRANSPORTCONTROLS_H

namespace scapix::java_api {

namespace android::media { class Rating; }
namespace android::media::session { class PlaybackState_CustomAction; }
namespace android::net { class Uri; }
namespace android::os { class Bundle; }
namespace java::lang { class String; }

namespace android::media::session {

class MediaController_TransportControls : public object_base<SCAPIX_META_STRING("android/media/session/MediaController$TransportControls"),
	java::lang::Object>
{
public:

	void prepare();
	void prepareFromMediaId(ref<java::lang::String> mediaId, ref<android::os::Bundle> extras);
	void prepareFromSearch(ref<java::lang::String> query, ref<android::os::Bundle> extras);
	void prepareFromUri(ref<android::net::Uri> uri, ref<android::os::Bundle> extras);
	void play();
	void playFromMediaId(ref<java::lang::String> mediaId, ref<android::os::Bundle> extras);
	void playFromSearch(ref<java::lang::String> query, ref<android::os::Bundle> extras);
	void playFromUri(ref<android::net::Uri> uri, ref<android::os::Bundle> extras);
	void skipToQueueItem(jlong id);
	void pause();
	void stop();
	void seekTo(jlong pos);
	void fastForward();
	void skipToNext();
	void rewind();
	void skipToPrevious();
	void setRating(ref<android::media::Rating> rating);
	void sendCustomAction(ref<android::media::session::PlaybackState_CustomAction> customAction, ref<android::os::Bundle> args);
	void sendCustomAction(ref<java::lang::String> action, ref<android::os::Bundle> args);

protected:

	MediaController_TransportControls(handle_type h) : base_(h) {}

};

} // namespace android::media::session
} // namespace scapix::java_api

#include <scapix/java_api/android/media/Rating.h>
#include <scapix/java_api/android/media/session/PlaybackState_CustomAction.h>
#include <scapix/java_api/android/net/Uri.h>
#include <scapix/java_api/android/os/Bundle.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::media::session {

inline void MediaController_TransportControls::prepare() { return call_method<SCAPIX_META_STRING("prepare"), void>(); }
inline void MediaController_TransportControls::prepareFromMediaId(ref<java::lang::String> mediaId, ref<android::os::Bundle> extras) { return call_method<SCAPIX_META_STRING("prepareFromMediaId"), void>(mediaId, extras); }
inline void MediaController_TransportControls::prepareFromSearch(ref<java::lang::String> query, ref<android::os::Bundle> extras) { return call_method<SCAPIX_META_STRING("prepareFromSearch"), void>(query, extras); }
inline void MediaController_TransportControls::prepareFromUri(ref<android::net::Uri> uri, ref<android::os::Bundle> extras) { return call_method<SCAPIX_META_STRING("prepareFromUri"), void>(uri, extras); }
inline void MediaController_TransportControls::play() { return call_method<SCAPIX_META_STRING("play"), void>(); }
inline void MediaController_TransportControls::playFromMediaId(ref<java::lang::String> mediaId, ref<android::os::Bundle> extras) { return call_method<SCAPIX_META_STRING("playFromMediaId"), void>(mediaId, extras); }
inline void MediaController_TransportControls::playFromSearch(ref<java::lang::String> query, ref<android::os::Bundle> extras) { return call_method<SCAPIX_META_STRING("playFromSearch"), void>(query, extras); }
inline void MediaController_TransportControls::playFromUri(ref<android::net::Uri> uri, ref<android::os::Bundle> extras) { return call_method<SCAPIX_META_STRING("playFromUri"), void>(uri, extras); }
inline void MediaController_TransportControls::skipToQueueItem(jlong id) { return call_method<SCAPIX_META_STRING("skipToQueueItem"), void>(id); }
inline void MediaController_TransportControls::pause() { return call_method<SCAPIX_META_STRING("pause"), void>(); }
inline void MediaController_TransportControls::stop() { return call_method<SCAPIX_META_STRING("stop"), void>(); }
inline void MediaController_TransportControls::seekTo(jlong pos) { return call_method<SCAPIX_META_STRING("seekTo"), void>(pos); }
inline void MediaController_TransportControls::fastForward() { return call_method<SCAPIX_META_STRING("fastForward"), void>(); }
inline void MediaController_TransportControls::skipToNext() { return call_method<SCAPIX_META_STRING("skipToNext"), void>(); }
inline void MediaController_TransportControls::rewind() { return call_method<SCAPIX_META_STRING("rewind"), void>(); }
inline void MediaController_TransportControls::skipToPrevious() { return call_method<SCAPIX_META_STRING("skipToPrevious"), void>(); }
inline void MediaController_TransportControls::setRating(ref<android::media::Rating> rating) { return call_method<SCAPIX_META_STRING("setRating"), void>(rating); }
inline void MediaController_TransportControls::sendCustomAction(ref<android::media::session::PlaybackState_CustomAction> customAction, ref<android::os::Bundle> args) { return call_method<SCAPIX_META_STRING("sendCustomAction"), void>(customAction, args); }
inline void MediaController_TransportControls::sendCustomAction(ref<java::lang::String> action, ref<android::os::Bundle> args) { return call_method<SCAPIX_META_STRING("sendCustomAction"), void>(action, args); }

} // namespace android::media::session
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_MEDIA_SESSION_MEDIACONTROLLER_TRANSPORTCONTROLS_H
