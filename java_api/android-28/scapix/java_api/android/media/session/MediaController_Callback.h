// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_MEDIA_SESSION_MEDIACONTROLLER_CALLBACK_H
#define SCAPIX_ANDROID_MEDIA_SESSION_MEDIACONTROLLER_CALLBACK_H

namespace scapix::java_api {

namespace android::media { class MediaMetadata; }
namespace android::media::session { class MediaController_PlaybackInfo; }
namespace android::media::session { class PlaybackState; }
namespace android::os { class Bundle; }
namespace java::lang { class CharSequence; }
namespace java::lang { class String; }
namespace java::util { class List; }

namespace android::media::session {

class MediaController_Callback : public object_base<SCAPIX_META_STRING("android/media/session/MediaController$Callback"),
	java::lang::Object>
{
public:

	static ref<MediaController_Callback> new_object();
	void onSessionDestroyed();
	void onSessionEvent(ref<java::lang::String> event, ref<android::os::Bundle> extras);
	void onPlaybackStateChanged(ref<android::media::session::PlaybackState> state);
	void onMetadataChanged(ref<android::media::MediaMetadata> metadata);
	void onQueueChanged(ref<java::util::List> queue);
	void onQueueTitleChanged(ref<java::lang::CharSequence> title);
	void onExtrasChanged(ref<android::os::Bundle> extras);
	void onAudioInfoChanged(ref<android::media::session::MediaController_PlaybackInfo> info);

protected:

	MediaController_Callback(handle_type h) : base_(h) {}

};

} // namespace android::media::session
} // namespace scapix::java_api

#include <scapix/java_api/android/media/MediaMetadata.h>
#include <scapix/java_api/android/media/session/MediaController_PlaybackInfo.h>
#include <scapix/java_api/android/media/session/PlaybackState.h>
#include <scapix/java_api/android/os/Bundle.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/List.h>

namespace scapix::java_api {
namespace android::media::session {

inline ref<MediaController_Callback> MediaController_Callback::new_object() { return base_::new_object(); }
inline void MediaController_Callback::onSessionDestroyed() { return call_method<SCAPIX_META_STRING("onSessionDestroyed"), void>(); }
inline void MediaController_Callback::onSessionEvent(ref<java::lang::String> event, ref<android::os::Bundle> extras) { return call_method<SCAPIX_META_STRING("onSessionEvent"), void>(event, extras); }
inline void MediaController_Callback::onPlaybackStateChanged(ref<android::media::session::PlaybackState> state) { return call_method<SCAPIX_META_STRING("onPlaybackStateChanged"), void>(state); }
inline void MediaController_Callback::onMetadataChanged(ref<android::media::MediaMetadata> metadata) { return call_method<SCAPIX_META_STRING("onMetadataChanged"), void>(metadata); }
inline void MediaController_Callback::onQueueChanged(ref<java::util::List> queue) { return call_method<SCAPIX_META_STRING("onQueueChanged"), void>(queue); }
inline void MediaController_Callback::onQueueTitleChanged(ref<java::lang::CharSequence> title) { return call_method<SCAPIX_META_STRING("onQueueTitleChanged"), void>(title); }
inline void MediaController_Callback::onExtrasChanged(ref<android::os::Bundle> extras) { return call_method<SCAPIX_META_STRING("onExtrasChanged"), void>(extras); }
inline void MediaController_Callback::onAudioInfoChanged(ref<android::media::session::MediaController_PlaybackInfo> info) { return call_method<SCAPIX_META_STRING("onAudioInfoChanged"), void>(info); }

} // namespace android::media::session
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_MEDIA_SESSION_MEDIACONTROLLER_CALLBACK_H
