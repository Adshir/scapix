// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_MEDIA_MEDIAMUXER_H
#define SCAPIX_ANDROID_MEDIA_MEDIAMUXER_H

namespace scapix::java_api {

namespace android::media { class MediaCodec_BufferInfo; }
namespace android::media { class MediaFormat; }
namespace java::io { class FileDescriptor; }
namespace java::lang { class String; }
namespace java::nio { class ByteBuffer; }
namespace android::media { class MediaMuxer_OutputFormat; }

namespace android::media {

class MediaMuxer : public object_base<SCAPIX_META_STRING("android/media/MediaMuxer"),
	java::lang::Object>
{
public:

	using OutputFormat = MediaMuxer_OutputFormat;

	static ref<MediaMuxer> new_object(ref<java::lang::String> path, jint format);
	static ref<MediaMuxer> new_object(ref<java::io::FileDescriptor> fd, jint format);
	void setOrientationHint(jint degrees);
	void setLocation(jfloat latitude, jfloat longitude);
	void start();
	void stop();
	jint addTrack(ref<android::media::MediaFormat> format);
	void writeSampleData(jint trackIndex, ref<java::nio::ByteBuffer> byteBuf, ref<android::media::MediaCodec_BufferInfo> bufferInfo);
	void release();

protected:

	MediaMuxer(handle_type h) : base_(h) {}

};

} // namespace android::media
} // namespace scapix::java_api

#include <scapix/java_api/android/media/MediaCodec_BufferInfo.h>
#include <scapix/java_api/android/media/MediaFormat.h>
#include <scapix/java_api/java/io/FileDescriptor.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/nio/ByteBuffer.h>

namespace scapix::java_api {
namespace android::media {

inline ref<MediaMuxer> MediaMuxer::new_object(ref<java::lang::String> path, jint format) { return base_::new_object(path, format); }
inline ref<MediaMuxer> MediaMuxer::new_object(ref<java::io::FileDescriptor> fd, jint format) { return base_::new_object(fd, format); }
inline void MediaMuxer::setOrientationHint(jint degrees) { return call_method<SCAPIX_META_STRING("setOrientationHint"), void>(degrees); }
inline void MediaMuxer::setLocation(jfloat latitude, jfloat longitude) { return call_method<SCAPIX_META_STRING("setLocation"), void>(latitude, longitude); }
inline void MediaMuxer::start() { return call_method<SCAPIX_META_STRING("start"), void>(); }
inline void MediaMuxer::stop() { return call_method<SCAPIX_META_STRING("stop"), void>(); }
inline jint MediaMuxer::addTrack(ref<android::media::MediaFormat> format) { return call_method<SCAPIX_META_STRING("addTrack"), jint>(format); }
inline void MediaMuxer::writeSampleData(jint trackIndex, ref<java::nio::ByteBuffer> byteBuf, ref<android::media::MediaCodec_BufferInfo> bufferInfo) { return call_method<SCAPIX_META_STRING("writeSampleData"), void>(trackIndex, byteBuf, bufferInfo); }
inline void MediaMuxer::release() { return call_method<SCAPIX_META_STRING("release"), void>(); }

} // namespace android::media
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_MEDIA_MEDIAMUXER_H
