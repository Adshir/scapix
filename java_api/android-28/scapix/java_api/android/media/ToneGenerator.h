// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_MEDIA_TONEGENERATOR_H
#define SCAPIX_ANDROID_MEDIA_TONEGENERATOR_H

namespace scapix::java_api {
namespace android::media {

class ToneGenerator : public object_base<SCAPIX_META_STRING("android/media/ToneGenerator"),
	java::lang::Object>
{
public:

	static jint MAX_VOLUME_();
	static jint MIN_VOLUME_();
	static jint TONE_CDMA_ABBR_ALERT_();
	static jint TONE_CDMA_ABBR_INTERCEPT_();
	static jint TONE_CDMA_ABBR_REORDER_();
	static jint TONE_CDMA_ALERT_AUTOREDIAL_LITE_();
	static jint TONE_CDMA_ALERT_CALL_GUARD_();
	static jint TONE_CDMA_ALERT_INCALL_LITE_();
	static jint TONE_CDMA_ALERT_NETWORK_LITE_();
	static jint TONE_CDMA_ANSWER_();
	static jint TONE_CDMA_CALLDROP_LITE_();
	static jint TONE_CDMA_CALL_SIGNAL_ISDN_INTERGROUP_();
	static jint TONE_CDMA_CALL_SIGNAL_ISDN_NORMAL_();
	static jint TONE_CDMA_CALL_SIGNAL_ISDN_PAT3_();
	static jint TONE_CDMA_CALL_SIGNAL_ISDN_PAT5_();
	static jint TONE_CDMA_CALL_SIGNAL_ISDN_PAT6_();
	static jint TONE_CDMA_CALL_SIGNAL_ISDN_PAT7_();
	static jint TONE_CDMA_CALL_SIGNAL_ISDN_PING_RING_();
	static jint TONE_CDMA_CALL_SIGNAL_ISDN_SP_PRI_();
	static jint TONE_CDMA_CONFIRM_();
	static jint TONE_CDMA_DIAL_TONE_LITE_();
	static jint TONE_CDMA_EMERGENCY_RINGBACK_();
	static jint TONE_CDMA_HIGH_L_();
	static jint TONE_CDMA_HIGH_PBX_L_();
	static jint TONE_CDMA_HIGH_PBX_SLS_();
	static jint TONE_CDMA_HIGH_PBX_SS_();
	static jint TONE_CDMA_HIGH_PBX_SSL_();
	static jint TONE_CDMA_HIGH_PBX_S_X4_();
	static jint TONE_CDMA_HIGH_SLS_();
	static jint TONE_CDMA_HIGH_SS_();
	static jint TONE_CDMA_HIGH_SSL_();
	static jint TONE_CDMA_HIGH_SS_2_();
	static jint TONE_CDMA_HIGH_S_X4_();
	static jint TONE_CDMA_INTERCEPT_();
	static jint TONE_CDMA_KEYPAD_VOLUME_KEY_LITE_();
	static jint TONE_CDMA_LOW_L_();
	static jint TONE_CDMA_LOW_PBX_L_();
	static jint TONE_CDMA_LOW_PBX_SLS_();
	static jint TONE_CDMA_LOW_PBX_SS_();
	static jint TONE_CDMA_LOW_PBX_SSL_();
	static jint TONE_CDMA_LOW_PBX_S_X4_();
	static jint TONE_CDMA_LOW_SLS_();
	static jint TONE_CDMA_LOW_SS_();
	static jint TONE_CDMA_LOW_SSL_();
	static jint TONE_CDMA_LOW_SS_2_();
	static jint TONE_CDMA_LOW_S_X4_();
	static jint TONE_CDMA_MED_L_();
	static jint TONE_CDMA_MED_PBX_L_();
	static jint TONE_CDMA_MED_PBX_SLS_();
	static jint TONE_CDMA_MED_PBX_SS_();
	static jint TONE_CDMA_MED_PBX_SSL_();
	static jint TONE_CDMA_MED_PBX_S_X4_();
	static jint TONE_CDMA_MED_SLS_();
	static jint TONE_CDMA_MED_SS_();
	static jint TONE_CDMA_MED_SSL_();
	static jint TONE_CDMA_MED_SS_2_();
	static jint TONE_CDMA_MED_S_X4_();
	static jint TONE_CDMA_NETWORK_BUSY_();
	static jint TONE_CDMA_NETWORK_BUSY_ONE_SHOT_();
	static jint TONE_CDMA_NETWORK_CALLWAITING_();
	static jint TONE_CDMA_NETWORK_USA_RINGBACK_();
	static jint TONE_CDMA_ONE_MIN_BEEP_();
	static jint TONE_CDMA_PIP_();
	static jint TONE_CDMA_PRESSHOLDKEY_LITE_();
	static jint TONE_CDMA_REORDER_();
	static jint TONE_CDMA_SIGNAL_OFF_();
	static jint TONE_CDMA_SOFT_ERROR_LITE_();
	static jint TONE_DTMF_0_();
	static jint TONE_DTMF_1_();
	static jint TONE_DTMF_2_();
	static jint TONE_DTMF_3_();
	static jint TONE_DTMF_4_();
	static jint TONE_DTMF_5_();
	static jint TONE_DTMF_6_();
	static jint TONE_DTMF_7_();
	static jint TONE_DTMF_8_();
	static jint TONE_DTMF_9_();
	static jint TONE_DTMF_A_();
	static jint TONE_DTMF_B_();
	static jint TONE_DTMF_C_();
	static jint TONE_DTMF_D_();
	static jint TONE_DTMF_P_();
	static jint TONE_DTMF_S_();
	static jint TONE_PROP_ACK_();
	static jint TONE_PROP_BEEP_();
	static jint TONE_PROP_BEEP2_();
	static jint TONE_PROP_NACK_();
	static jint TONE_PROP_PROMPT_();
	static jint TONE_SUP_BUSY_();
	static jint TONE_SUP_CALL_WAITING_();
	static jint TONE_SUP_CONFIRM_();
	static jint TONE_SUP_CONGESTION_();
	static jint TONE_SUP_CONGESTION_ABBREV_();
	static jint TONE_SUP_DIAL_();
	static jint TONE_SUP_ERROR_();
	static jint TONE_SUP_INTERCEPT_();
	static jint TONE_SUP_INTERCEPT_ABBREV_();
	static jint TONE_SUP_PIP_();
	static jint TONE_SUP_RADIO_ACK_();
	static jint TONE_SUP_RADIO_NOTAVAIL_();
	static jint TONE_SUP_RINGTONE_();

	static ref<ToneGenerator> new_object(jint streamType, jint volume);
	jboolean startTone(jint toneType);
	jboolean startTone(jint p1, jint p2);
	void stopTone();
	void release();
	jint getAudioSessionId();

protected:

	ToneGenerator(handle_type h) : base_(h) {}

};

} // namespace android::media
} // namespace scapix::java_api


namespace scapix::java_api {
namespace android::media {

inline jint ToneGenerator::MAX_VOLUME_() { return get_static_field<SCAPIX_META_STRING("MAX_VOLUME"), jint>(); }
inline jint ToneGenerator::MIN_VOLUME_() { return get_static_field<SCAPIX_META_STRING("MIN_VOLUME"), jint>(); }
inline jint ToneGenerator::TONE_CDMA_ABBR_ALERT_() { return get_static_field<SCAPIX_META_STRING("TONE_CDMA_ABBR_ALERT"), jint>(); }
inline jint ToneGenerator::TONE_CDMA_ABBR_INTERCEPT_() { return get_static_field<SCAPIX_META_STRING("TONE_CDMA_ABBR_INTERCEPT"), jint>(); }
inline jint ToneGenerator::TONE_CDMA_ABBR_REORDER_() { return get_static_field<SCAPIX_META_STRING("TONE_CDMA_ABBR_REORDER"), jint>(); }
inline jint ToneGenerator::TONE_CDMA_ALERT_AUTOREDIAL_LITE_() { return get_static_field<SCAPIX_META_STRING("TONE_CDMA_ALERT_AUTOREDIAL_LITE"), jint>(); }
inline jint ToneGenerator::TONE_CDMA_ALERT_CALL_GUARD_() { return get_static_field<SCAPIX_META_STRING("TONE_CDMA_ALERT_CALL_GUARD"), jint>(); }
inline jint ToneGenerator::TONE_CDMA_ALERT_INCALL_LITE_() { return get_static_field<SCAPIX_META_STRING("TONE_CDMA_ALERT_INCALL_LITE"), jint>(); }
inline jint ToneGenerator::TONE_CDMA_ALERT_NETWORK_LITE_() { return get_static_field<SCAPIX_META_STRING("TONE_CDMA_ALERT_NETWORK_LITE"), jint>(); }
inline jint ToneGenerator::TONE_CDMA_ANSWER_() { return get_static_field<SCAPIX_META_STRING("TONE_CDMA_ANSWER"), jint>(); }
inline jint ToneGenerator::TONE_CDMA_CALLDROP_LITE_() { return get_static_field<SCAPIX_META_STRING("TONE_CDMA_CALLDROP_LITE"), jint>(); }
inline jint ToneGenerator::TONE_CDMA_CALL_SIGNAL_ISDN_INTERGROUP_() { return get_static_field<SCAPIX_META_STRING("TONE_CDMA_CALL_SIGNAL_ISDN_INTERGROUP"), jint>(); }
inline jint ToneGenerator::TONE_CDMA_CALL_SIGNAL_ISDN_NORMAL_() { return get_static_field<SCAPIX_META_STRING("TONE_CDMA_CALL_SIGNAL_ISDN_NORMAL"), jint>(); }
inline jint ToneGenerator::TONE_CDMA_CALL_SIGNAL_ISDN_PAT3_() { return get_static_field<SCAPIX_META_STRING("TONE_CDMA_CALL_SIGNAL_ISDN_PAT3"), jint>(); }
inline jint ToneGenerator::TONE_CDMA_CALL_SIGNAL_ISDN_PAT5_() { return get_static_field<SCAPIX_META_STRING("TONE_CDMA_CALL_SIGNAL_ISDN_PAT5"), jint>(); }
inline jint ToneGenerator::TONE_CDMA_CALL_SIGNAL_ISDN_PAT6_() { return get_static_field<SCAPIX_META_STRING("TONE_CDMA_CALL_SIGNAL_ISDN_PAT6"), jint>(); }
inline jint ToneGenerator::TONE_CDMA_CALL_SIGNAL_ISDN_PAT7_() { return get_static_field<SCAPIX_META_STRING("TONE_CDMA_CALL_SIGNAL_ISDN_PAT7"), jint>(); }
inline jint ToneGenerator::TONE_CDMA_CALL_SIGNAL_ISDN_PING_RING_() { return get_static_field<SCAPIX_META_STRING("TONE_CDMA_CALL_SIGNAL_ISDN_PING_RING"), jint>(); }
inline jint ToneGenerator::TONE_CDMA_CALL_SIGNAL_ISDN_SP_PRI_() { return get_static_field<SCAPIX_META_STRING("TONE_CDMA_CALL_SIGNAL_ISDN_SP_PRI"), jint>(); }
inline jint ToneGenerator::TONE_CDMA_CONFIRM_() { return get_static_field<SCAPIX_META_STRING("TONE_CDMA_CONFIRM"), jint>(); }
inline jint ToneGenerator::TONE_CDMA_DIAL_TONE_LITE_() { return get_static_field<SCAPIX_META_STRING("TONE_CDMA_DIAL_TONE_LITE"), jint>(); }
inline jint ToneGenerator::TONE_CDMA_EMERGENCY_RINGBACK_() { return get_static_field<SCAPIX_META_STRING("TONE_CDMA_EMERGENCY_RINGBACK"), jint>(); }
inline jint ToneGenerator::TONE_CDMA_HIGH_L_() { return get_static_field<SCAPIX_META_STRING("TONE_CDMA_HIGH_L"), jint>(); }
inline jint ToneGenerator::TONE_CDMA_HIGH_PBX_L_() { return get_static_field<SCAPIX_META_STRING("TONE_CDMA_HIGH_PBX_L"), jint>(); }
inline jint ToneGenerator::TONE_CDMA_HIGH_PBX_SLS_() { return get_static_field<SCAPIX_META_STRING("TONE_CDMA_HIGH_PBX_SLS"), jint>(); }
inline jint ToneGenerator::TONE_CDMA_HIGH_PBX_SS_() { return get_static_field<SCAPIX_META_STRING("TONE_CDMA_HIGH_PBX_SS"), jint>(); }
inline jint ToneGenerator::TONE_CDMA_HIGH_PBX_SSL_() { return get_static_field<SCAPIX_META_STRING("TONE_CDMA_HIGH_PBX_SSL"), jint>(); }
inline jint ToneGenerator::TONE_CDMA_HIGH_PBX_S_X4_() { return get_static_field<SCAPIX_META_STRING("TONE_CDMA_HIGH_PBX_S_X4"), jint>(); }
inline jint ToneGenerator::TONE_CDMA_HIGH_SLS_() { return get_static_field<SCAPIX_META_STRING("TONE_CDMA_HIGH_SLS"), jint>(); }
inline jint ToneGenerator::TONE_CDMA_HIGH_SS_() { return get_static_field<SCAPIX_META_STRING("TONE_CDMA_HIGH_SS"), jint>(); }
inline jint ToneGenerator::TONE_CDMA_HIGH_SSL_() { return get_static_field<SCAPIX_META_STRING("TONE_CDMA_HIGH_SSL"), jint>(); }
inline jint ToneGenerator::TONE_CDMA_HIGH_SS_2_() { return get_static_field<SCAPIX_META_STRING("TONE_CDMA_HIGH_SS_2"), jint>(); }
inline jint ToneGenerator::TONE_CDMA_HIGH_S_X4_() { return get_static_field<SCAPIX_META_STRING("TONE_CDMA_HIGH_S_X4"), jint>(); }
inline jint ToneGenerator::TONE_CDMA_INTERCEPT_() { return get_static_field<SCAPIX_META_STRING("TONE_CDMA_INTERCEPT"), jint>(); }
inline jint ToneGenerator::TONE_CDMA_KEYPAD_VOLUME_KEY_LITE_() { return get_static_field<SCAPIX_META_STRING("TONE_CDMA_KEYPAD_VOLUME_KEY_LITE"), jint>(); }
inline jint ToneGenerator::TONE_CDMA_LOW_L_() { return get_static_field<SCAPIX_META_STRING("TONE_CDMA_LOW_L"), jint>(); }
inline jint ToneGenerator::TONE_CDMA_LOW_PBX_L_() { return get_static_field<SCAPIX_META_STRING("TONE_CDMA_LOW_PBX_L"), jint>(); }
inline jint ToneGenerator::TONE_CDMA_LOW_PBX_SLS_() { return get_static_field<SCAPIX_META_STRING("TONE_CDMA_LOW_PBX_SLS"), jint>(); }
inline jint ToneGenerator::TONE_CDMA_LOW_PBX_SS_() { return get_static_field<SCAPIX_META_STRING("TONE_CDMA_LOW_PBX_SS"), jint>(); }
inline jint ToneGenerator::TONE_CDMA_LOW_PBX_SSL_() { return get_static_field<SCAPIX_META_STRING("TONE_CDMA_LOW_PBX_SSL"), jint>(); }
inline jint ToneGenerator::TONE_CDMA_LOW_PBX_S_X4_() { return get_static_field<SCAPIX_META_STRING("TONE_CDMA_LOW_PBX_S_X4"), jint>(); }
inline jint ToneGenerator::TONE_CDMA_LOW_SLS_() { return get_static_field<SCAPIX_META_STRING("TONE_CDMA_LOW_SLS"), jint>(); }
inline jint ToneGenerator::TONE_CDMA_LOW_SS_() { return get_static_field<SCAPIX_META_STRING("TONE_CDMA_LOW_SS"), jint>(); }
inline jint ToneGenerator::TONE_CDMA_LOW_SSL_() { return get_static_field<SCAPIX_META_STRING("TONE_CDMA_LOW_SSL"), jint>(); }
inline jint ToneGenerator::TONE_CDMA_LOW_SS_2_() { return get_static_field<SCAPIX_META_STRING("TONE_CDMA_LOW_SS_2"), jint>(); }
inline jint ToneGenerator::TONE_CDMA_LOW_S_X4_() { return get_static_field<SCAPIX_META_STRING("TONE_CDMA_LOW_S_X4"), jint>(); }
inline jint ToneGenerator::TONE_CDMA_MED_L_() { return get_static_field<SCAPIX_META_STRING("TONE_CDMA_MED_L"), jint>(); }
inline jint ToneGenerator::TONE_CDMA_MED_PBX_L_() { return get_static_field<SCAPIX_META_STRING("TONE_CDMA_MED_PBX_L"), jint>(); }
inline jint ToneGenerator::TONE_CDMA_MED_PBX_SLS_() { return get_static_field<SCAPIX_META_STRING("TONE_CDMA_MED_PBX_SLS"), jint>(); }
inline jint ToneGenerator::TONE_CDMA_MED_PBX_SS_() { return get_static_field<SCAPIX_META_STRING("TONE_CDMA_MED_PBX_SS"), jint>(); }
inline jint ToneGenerator::TONE_CDMA_MED_PBX_SSL_() { return get_static_field<SCAPIX_META_STRING("TONE_CDMA_MED_PBX_SSL"), jint>(); }
inline jint ToneGenerator::TONE_CDMA_MED_PBX_S_X4_() { return get_static_field<SCAPIX_META_STRING("TONE_CDMA_MED_PBX_S_X4"), jint>(); }
inline jint ToneGenerator::TONE_CDMA_MED_SLS_() { return get_static_field<SCAPIX_META_STRING("TONE_CDMA_MED_SLS"), jint>(); }
inline jint ToneGenerator::TONE_CDMA_MED_SS_() { return get_static_field<SCAPIX_META_STRING("TONE_CDMA_MED_SS"), jint>(); }
inline jint ToneGenerator::TONE_CDMA_MED_SSL_() { return get_static_field<SCAPIX_META_STRING("TONE_CDMA_MED_SSL"), jint>(); }
inline jint ToneGenerator::TONE_CDMA_MED_SS_2_() { return get_static_field<SCAPIX_META_STRING("TONE_CDMA_MED_SS_2"), jint>(); }
inline jint ToneGenerator::TONE_CDMA_MED_S_X4_() { return get_static_field<SCAPIX_META_STRING("TONE_CDMA_MED_S_X4"), jint>(); }
inline jint ToneGenerator::TONE_CDMA_NETWORK_BUSY_() { return get_static_field<SCAPIX_META_STRING("TONE_CDMA_NETWORK_BUSY"), jint>(); }
inline jint ToneGenerator::TONE_CDMA_NETWORK_BUSY_ONE_SHOT_() { return get_static_field<SCAPIX_META_STRING("TONE_CDMA_NETWORK_BUSY_ONE_SHOT"), jint>(); }
inline jint ToneGenerator::TONE_CDMA_NETWORK_CALLWAITING_() { return get_static_field<SCAPIX_META_STRING("TONE_CDMA_NETWORK_CALLWAITING"), jint>(); }
inline jint ToneGenerator::TONE_CDMA_NETWORK_USA_RINGBACK_() { return get_static_field<SCAPIX_META_STRING("TONE_CDMA_NETWORK_USA_RINGBACK"), jint>(); }
inline jint ToneGenerator::TONE_CDMA_ONE_MIN_BEEP_() { return get_static_field<SCAPIX_META_STRING("TONE_CDMA_ONE_MIN_BEEP"), jint>(); }
inline jint ToneGenerator::TONE_CDMA_PIP_() { return get_static_field<SCAPIX_META_STRING("TONE_CDMA_PIP"), jint>(); }
inline jint ToneGenerator::TONE_CDMA_PRESSHOLDKEY_LITE_() { return get_static_field<SCAPIX_META_STRING("TONE_CDMA_PRESSHOLDKEY_LITE"), jint>(); }
inline jint ToneGenerator::TONE_CDMA_REORDER_() { return get_static_field<SCAPIX_META_STRING("TONE_CDMA_REORDER"), jint>(); }
inline jint ToneGenerator::TONE_CDMA_SIGNAL_OFF_() { return get_static_field<SCAPIX_META_STRING("TONE_CDMA_SIGNAL_OFF"), jint>(); }
inline jint ToneGenerator::TONE_CDMA_SOFT_ERROR_LITE_() { return get_static_field<SCAPIX_META_STRING("TONE_CDMA_SOFT_ERROR_LITE"), jint>(); }
inline jint ToneGenerator::TONE_DTMF_0_() { return get_static_field<SCAPIX_META_STRING("TONE_DTMF_0"), jint>(); }
inline jint ToneGenerator::TONE_DTMF_1_() { return get_static_field<SCAPIX_META_STRING("TONE_DTMF_1"), jint>(); }
inline jint ToneGenerator::TONE_DTMF_2_() { return get_static_field<SCAPIX_META_STRING("TONE_DTMF_2"), jint>(); }
inline jint ToneGenerator::TONE_DTMF_3_() { return get_static_field<SCAPIX_META_STRING("TONE_DTMF_3"), jint>(); }
inline jint ToneGenerator::TONE_DTMF_4_() { return get_static_field<SCAPIX_META_STRING("TONE_DTMF_4"), jint>(); }
inline jint ToneGenerator::TONE_DTMF_5_() { return get_static_field<SCAPIX_META_STRING("TONE_DTMF_5"), jint>(); }
inline jint ToneGenerator::TONE_DTMF_6_() { return get_static_field<SCAPIX_META_STRING("TONE_DTMF_6"), jint>(); }
inline jint ToneGenerator::TONE_DTMF_7_() { return get_static_field<SCAPIX_META_STRING("TONE_DTMF_7"), jint>(); }
inline jint ToneGenerator::TONE_DTMF_8_() { return get_static_field<SCAPIX_META_STRING("TONE_DTMF_8"), jint>(); }
inline jint ToneGenerator::TONE_DTMF_9_() { return get_static_field<SCAPIX_META_STRING("TONE_DTMF_9"), jint>(); }
inline jint ToneGenerator::TONE_DTMF_A_() { return get_static_field<SCAPIX_META_STRING("TONE_DTMF_A"), jint>(); }
inline jint ToneGenerator::TONE_DTMF_B_() { return get_static_field<SCAPIX_META_STRING("TONE_DTMF_B"), jint>(); }
inline jint ToneGenerator::TONE_DTMF_C_() { return get_static_field<SCAPIX_META_STRING("TONE_DTMF_C"), jint>(); }
inline jint ToneGenerator::TONE_DTMF_D_() { return get_static_field<SCAPIX_META_STRING("TONE_DTMF_D"), jint>(); }
inline jint ToneGenerator::TONE_DTMF_P_() { return get_static_field<SCAPIX_META_STRING("TONE_DTMF_P"), jint>(); }
inline jint ToneGenerator::TONE_DTMF_S_() { return get_static_field<SCAPIX_META_STRING("TONE_DTMF_S"), jint>(); }
inline jint ToneGenerator::TONE_PROP_ACK_() { return get_static_field<SCAPIX_META_STRING("TONE_PROP_ACK"), jint>(); }
inline jint ToneGenerator::TONE_PROP_BEEP_() { return get_static_field<SCAPIX_META_STRING("TONE_PROP_BEEP"), jint>(); }
inline jint ToneGenerator::TONE_PROP_BEEP2_() { return get_static_field<SCAPIX_META_STRING("TONE_PROP_BEEP2"), jint>(); }
inline jint ToneGenerator::TONE_PROP_NACK_() { return get_static_field<SCAPIX_META_STRING("TONE_PROP_NACK"), jint>(); }
inline jint ToneGenerator::TONE_PROP_PROMPT_() { return get_static_field<SCAPIX_META_STRING("TONE_PROP_PROMPT"), jint>(); }
inline jint ToneGenerator::TONE_SUP_BUSY_() { return get_static_field<SCAPIX_META_STRING("TONE_SUP_BUSY"), jint>(); }
inline jint ToneGenerator::TONE_SUP_CALL_WAITING_() { return get_static_field<SCAPIX_META_STRING("TONE_SUP_CALL_WAITING"), jint>(); }
inline jint ToneGenerator::TONE_SUP_CONFIRM_() { return get_static_field<SCAPIX_META_STRING("TONE_SUP_CONFIRM"), jint>(); }
inline jint ToneGenerator::TONE_SUP_CONGESTION_() { return get_static_field<SCAPIX_META_STRING("TONE_SUP_CONGESTION"), jint>(); }
inline jint ToneGenerator::TONE_SUP_CONGESTION_ABBREV_() { return get_static_field<SCAPIX_META_STRING("TONE_SUP_CONGESTION_ABBREV"), jint>(); }
inline jint ToneGenerator::TONE_SUP_DIAL_() { return get_static_field<SCAPIX_META_STRING("TONE_SUP_DIAL"), jint>(); }
inline jint ToneGenerator::TONE_SUP_ERROR_() { return get_static_field<SCAPIX_META_STRING("TONE_SUP_ERROR"), jint>(); }
inline jint ToneGenerator::TONE_SUP_INTERCEPT_() { return get_static_field<SCAPIX_META_STRING("TONE_SUP_INTERCEPT"), jint>(); }
inline jint ToneGenerator::TONE_SUP_INTERCEPT_ABBREV_() { return get_static_field<SCAPIX_META_STRING("TONE_SUP_INTERCEPT_ABBREV"), jint>(); }
inline jint ToneGenerator::TONE_SUP_PIP_() { return get_static_field<SCAPIX_META_STRING("TONE_SUP_PIP"), jint>(); }
inline jint ToneGenerator::TONE_SUP_RADIO_ACK_() { return get_static_field<SCAPIX_META_STRING("TONE_SUP_RADIO_ACK"), jint>(); }
inline jint ToneGenerator::TONE_SUP_RADIO_NOTAVAIL_() { return get_static_field<SCAPIX_META_STRING("TONE_SUP_RADIO_NOTAVAIL"), jint>(); }
inline jint ToneGenerator::TONE_SUP_RINGTONE_() { return get_static_field<SCAPIX_META_STRING("TONE_SUP_RINGTONE"), jint>(); }
inline ref<ToneGenerator> ToneGenerator::new_object(jint streamType, jint volume) { return base_::new_object(streamType, volume); }
inline jboolean ToneGenerator::startTone(jint toneType) { return call_method<SCAPIX_META_STRING("startTone"), jboolean>(toneType); }
inline jboolean ToneGenerator::startTone(jint p1, jint p2) { return call_method<SCAPIX_META_STRING("startTone"), jboolean>(p1, p2); }
inline void ToneGenerator::stopTone() { return call_method<SCAPIX_META_STRING("stopTone"), void>(); }
inline void ToneGenerator::release() { return call_method<SCAPIX_META_STRING("release"), void>(); }
inline jint ToneGenerator::getAudioSessionId() { return call_method<SCAPIX_META_STRING("getAudioSessionId"), jint>(); }

} // namespace android::media
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_MEDIA_TONEGENERATOR_H
