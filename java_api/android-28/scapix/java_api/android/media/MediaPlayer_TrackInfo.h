// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_ANDROID_MEDIA_MEDIAPLAYER_TRACKINFO_H
#define SCAPIX_ANDROID_MEDIA_MEDIAPLAYER_TRACKINFO_H

namespace scapix::java_api {

namespace android::media { class MediaFormat; }
namespace android::os { class Parcel; }
namespace java::lang { class String; }

namespace android::media {

class MediaPlayer_TrackInfo : public object_base<SCAPIX_META_STRING("android/media/MediaPlayer$TrackInfo"),
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static jint MEDIA_TRACK_TYPE_AUDIO_();
	static jint MEDIA_TRACK_TYPE_METADATA_();
	static jint MEDIA_TRACK_TYPE_SUBTITLE_();
	static jint MEDIA_TRACK_TYPE_TIMEDTEXT_();
	static jint MEDIA_TRACK_TYPE_UNKNOWN_();
	static jint MEDIA_TRACK_TYPE_VIDEO_();

	jint getTrackType();
	ref<java::lang::String> getLanguage();
	ref<android::media::MediaFormat> getFormat();
	jint describeContents();
	void writeToParcel(ref<android::os::Parcel> dest, jint flags);
	ref<java::lang::String> toString();

protected:

	MediaPlayer_TrackInfo(handle_type h) : base_(h) {}

};

} // namespace android::media
} // namespace scapix::java_api

#include <scapix/java_api/android/media/MediaFormat.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::media {

inline jint MediaPlayer_TrackInfo::MEDIA_TRACK_TYPE_AUDIO_() { return get_static_field<SCAPIX_META_STRING("MEDIA_TRACK_TYPE_AUDIO"), jint>(); }
inline jint MediaPlayer_TrackInfo::MEDIA_TRACK_TYPE_METADATA_() { return get_static_field<SCAPIX_META_STRING("MEDIA_TRACK_TYPE_METADATA"), jint>(); }
inline jint MediaPlayer_TrackInfo::MEDIA_TRACK_TYPE_SUBTITLE_() { return get_static_field<SCAPIX_META_STRING("MEDIA_TRACK_TYPE_SUBTITLE"), jint>(); }
inline jint MediaPlayer_TrackInfo::MEDIA_TRACK_TYPE_TIMEDTEXT_() { return get_static_field<SCAPIX_META_STRING("MEDIA_TRACK_TYPE_TIMEDTEXT"), jint>(); }
inline jint MediaPlayer_TrackInfo::MEDIA_TRACK_TYPE_UNKNOWN_() { return get_static_field<SCAPIX_META_STRING("MEDIA_TRACK_TYPE_UNKNOWN"), jint>(); }
inline jint MediaPlayer_TrackInfo::MEDIA_TRACK_TYPE_VIDEO_() { return get_static_field<SCAPIX_META_STRING("MEDIA_TRACK_TYPE_VIDEO"), jint>(); }
inline jint MediaPlayer_TrackInfo::getTrackType() { return call_method<SCAPIX_META_STRING("getTrackType"), jint>(); }
inline ref<java::lang::String> MediaPlayer_TrackInfo::getLanguage() { return call_method<SCAPIX_META_STRING("getLanguage"), ref<java::lang::String>>(); }
inline ref<android::media::MediaFormat> MediaPlayer_TrackInfo::getFormat() { return call_method<SCAPIX_META_STRING("getFormat"), ref<android::media::MediaFormat>>(); }
inline jint MediaPlayer_TrackInfo::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }
inline void MediaPlayer_TrackInfo::writeToParcel(ref<android::os::Parcel> dest, jint flags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(dest, flags); }
inline ref<java::lang::String> MediaPlayer_TrackInfo::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }

} // namespace android::media
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_MEDIA_MEDIAPLAYER_TRACKINFO_H
