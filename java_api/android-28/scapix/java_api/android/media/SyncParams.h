// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_MEDIA_SYNCPARAMS_H
#define SCAPIX_ANDROID_MEDIA_SYNCPARAMS_H

namespace scapix::java_api {
namespace android::media {

class SyncParams : public object_base<SCAPIX_META_STRING("android/media/SyncParams"),
	java::lang::Object>
{
public:

	static jint AUDIO_ADJUST_MODE_DEFAULT_();
	static jint AUDIO_ADJUST_MODE_RESAMPLE_();
	static jint AUDIO_ADJUST_MODE_STRETCH_();
	static jint SYNC_SOURCE_AUDIO_();
	static jint SYNC_SOURCE_DEFAULT_();
	static jint SYNC_SOURCE_SYSTEM_CLOCK_();
	static jint SYNC_SOURCE_VSYNC_();

	static ref<SyncParams> new_object();
	ref<android::media::SyncParams> allowDefaults();
	ref<android::media::SyncParams> setAudioAdjustMode(jint audioAdjustMode);
	jint getAudioAdjustMode();
	ref<android::media::SyncParams> setSyncSource(jint syncSource);
	jint getSyncSource();
	ref<android::media::SyncParams> setTolerance(jfloat tolerance);
	jfloat getTolerance();
	ref<android::media::SyncParams> setFrameRate(jfloat frameRate);
	jfloat getFrameRate();

protected:

	SyncParams(handle_type h) : base_(h) {}

};

} // namespace android::media
} // namespace scapix::java_api


namespace scapix::java_api {
namespace android::media {

inline jint SyncParams::AUDIO_ADJUST_MODE_DEFAULT_() { return get_static_field<SCAPIX_META_STRING("AUDIO_ADJUST_MODE_DEFAULT"), jint>(); }
inline jint SyncParams::AUDIO_ADJUST_MODE_RESAMPLE_() { return get_static_field<SCAPIX_META_STRING("AUDIO_ADJUST_MODE_RESAMPLE"), jint>(); }
inline jint SyncParams::AUDIO_ADJUST_MODE_STRETCH_() { return get_static_field<SCAPIX_META_STRING("AUDIO_ADJUST_MODE_STRETCH"), jint>(); }
inline jint SyncParams::SYNC_SOURCE_AUDIO_() { return get_static_field<SCAPIX_META_STRING("SYNC_SOURCE_AUDIO"), jint>(); }
inline jint SyncParams::SYNC_SOURCE_DEFAULT_() { return get_static_field<SCAPIX_META_STRING("SYNC_SOURCE_DEFAULT"), jint>(); }
inline jint SyncParams::SYNC_SOURCE_SYSTEM_CLOCK_() { return get_static_field<SCAPIX_META_STRING("SYNC_SOURCE_SYSTEM_CLOCK"), jint>(); }
inline jint SyncParams::SYNC_SOURCE_VSYNC_() { return get_static_field<SCAPIX_META_STRING("SYNC_SOURCE_VSYNC"), jint>(); }
inline ref<SyncParams> SyncParams::new_object() { return base_::new_object(); }
inline ref<android::media::SyncParams> SyncParams::allowDefaults() { return call_method<SCAPIX_META_STRING("allowDefaults"), ref<android::media::SyncParams>>(); }
inline ref<android::media::SyncParams> SyncParams::setAudioAdjustMode(jint audioAdjustMode) { return call_method<SCAPIX_META_STRING("setAudioAdjustMode"), ref<android::media::SyncParams>>(audioAdjustMode); }
inline jint SyncParams::getAudioAdjustMode() { return call_method<SCAPIX_META_STRING("getAudioAdjustMode"), jint>(); }
inline ref<android::media::SyncParams> SyncParams::setSyncSource(jint syncSource) { return call_method<SCAPIX_META_STRING("setSyncSource"), ref<android::media::SyncParams>>(syncSource); }
inline jint SyncParams::getSyncSource() { return call_method<SCAPIX_META_STRING("getSyncSource"), jint>(); }
inline ref<android::media::SyncParams> SyncParams::setTolerance(jfloat tolerance) { return call_method<SCAPIX_META_STRING("setTolerance"), ref<android::media::SyncParams>>(tolerance); }
inline jfloat SyncParams::getTolerance() { return call_method<SCAPIX_META_STRING("getTolerance"), jfloat>(); }
inline ref<android::media::SyncParams> SyncParams::setFrameRate(jfloat frameRate) { return call_method<SCAPIX_META_STRING("setFrameRate"), ref<android::media::SyncParams>>(frameRate); }
inline jfloat SyncParams::getFrameRate() { return call_method<SCAPIX_META_STRING("getFrameRate"), jfloat>(); }

} // namespace android::media
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_MEDIA_SYNCPARAMS_H
