// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_MEDIA_ASYNCPLAYER_H
#define SCAPIX_ANDROID_MEDIA_ASYNCPLAYER_H

namespace scapix::java_api {

namespace android::content { class Context; }
namespace android::media { class AudioAttributes; }
namespace android::net { class Uri; }
namespace java::lang { class String; }

namespace android::media {

class AsyncPlayer : public object_base<SCAPIX_META_STRING("android/media/AsyncPlayer"),
	java::lang::Object>
{
public:

	static ref<AsyncPlayer> new_object(ref<java::lang::String> tag);
	void play(ref<android::content::Context> context, ref<android::net::Uri> uri, jboolean looping, jint stream);
	void play(ref<android::content::Context> context, ref<android::net::Uri> uri, jboolean looping, ref<android::media::AudioAttributes> attributes);
	void stop();

protected:

	AsyncPlayer(handle_type h) : base_(h) {}

};

} // namespace android::media
} // namespace scapix::java_api

#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/media/AudioAttributes.h>
#include <scapix/java_api/android/net/Uri.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::media {

inline ref<AsyncPlayer> AsyncPlayer::new_object(ref<java::lang::String> tag) { return base_::new_object(tag); }
inline void AsyncPlayer::play(ref<android::content::Context> context, ref<android::net::Uri> uri, jboolean looping, jint stream) { return call_method<SCAPIX_META_STRING("play"), void>(context, uri, looping, stream); }
inline void AsyncPlayer::play(ref<android::content::Context> context, ref<android::net::Uri> uri, jboolean looping, ref<android::media::AudioAttributes> attributes) { return call_method<SCAPIX_META_STRING("play"), void>(context, uri, looping, attributes); }
inline void AsyncPlayer::stop() { return call_method<SCAPIX_META_STRING("stop"), void>(); }

} // namespace android::media
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_MEDIA_ASYNCPLAYER_H
