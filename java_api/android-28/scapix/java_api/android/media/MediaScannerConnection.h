// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/content/ServiceConnection.h>

#ifndef SCAPIX_ANDROID_MEDIA_MEDIASCANNERCONNECTION_H
#define SCAPIX_ANDROID_MEDIA_MEDIASCANNERCONNECTION_H

namespace scapix::java_api {

namespace android::content { class ComponentName; }
namespace android::content { class Context; }
namespace android::media { class MediaScannerConnection_MediaScannerConnectionClient; }
namespace android::media { class MediaScannerConnection_OnScanCompletedListener; }
namespace android::os { class IBinder; }
namespace java::lang { class String; }

namespace android::media {

class MediaScannerConnection : public object_base<SCAPIX_META_STRING("android/media/MediaScannerConnection"),
	java::lang::Object,
	android::content::ServiceConnection>
{
public:

	using OnScanCompletedListener = MediaScannerConnection_OnScanCompletedListener;
	using MediaScannerConnectionClient = MediaScannerConnection_MediaScannerConnectionClient;

	static ref<MediaScannerConnection> new_object(ref<android::content::Context> context, ref<android::media::MediaScannerConnection_MediaScannerConnectionClient> client);
	void connect();
	void disconnect();
	jboolean isConnected();
	void scanFile(ref<java::lang::String> path, ref<java::lang::String> mimeType);
	static void scanFile(ref<android::content::Context> context, ref<link::java::array<java::lang::String>> paths, ref<link::java::array<java::lang::String>> mimeTypes, ref<android::media::MediaScannerConnection_OnScanCompletedListener> callback);
	void onServiceConnected(ref<android::content::ComponentName> className, ref<android::os::IBinder> service);
	void onServiceDisconnected(ref<android::content::ComponentName> className);

protected:

	MediaScannerConnection(handle_type h) : base_(h) {}

};

} // namespace android::media
} // namespace scapix::java_api

#include <scapix/java_api/android/content/ComponentName.h>
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/media/MediaScannerConnection_MediaScannerConnectionClient.h>
#include <scapix/java_api/android/media/MediaScannerConnection_OnScanCompletedListener.h>
#include <scapix/java_api/android/os/IBinder.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::media {

inline ref<MediaScannerConnection> MediaScannerConnection::new_object(ref<android::content::Context> context, ref<android::media::MediaScannerConnection_MediaScannerConnectionClient> client) { return base_::new_object(context, client); }
inline void MediaScannerConnection::connect() { return call_method<SCAPIX_META_STRING("connect"), void>(); }
inline void MediaScannerConnection::disconnect() { return call_method<SCAPIX_META_STRING("disconnect"), void>(); }
inline jboolean MediaScannerConnection::isConnected() { return call_method<SCAPIX_META_STRING("isConnected"), jboolean>(); }
inline void MediaScannerConnection::scanFile(ref<java::lang::String> path, ref<java::lang::String> mimeType) { return call_method<SCAPIX_META_STRING("scanFile"), void>(path, mimeType); }
inline void MediaScannerConnection::scanFile(ref<android::content::Context> context, ref<link::java::array<java::lang::String>> paths, ref<link::java::array<java::lang::String>> mimeTypes, ref<android::media::MediaScannerConnection_OnScanCompletedListener> callback) { return call_static_method<SCAPIX_META_STRING("scanFile"), void>(context, paths, mimeTypes, callback); }
inline void MediaScannerConnection::onServiceConnected(ref<android::content::ComponentName> className, ref<android::os::IBinder> service) { return call_method<SCAPIX_META_STRING("onServiceConnected"), void>(className, service); }
inline void MediaScannerConnection::onServiceDisconnected(ref<android::content::ComponentName> className) { return call_method<SCAPIX_META_STRING("onServiceDisconnected"), void>(className); }

} // namespace android::media
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_MEDIA_MEDIASCANNERCONNECTION_H
