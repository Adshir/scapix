// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_MEDIA_MEDIACODECINFO_VIDEOCAPABILITIES_H
#define SCAPIX_ANDROID_MEDIA_MEDIACODECINFO_VIDEOCAPABILITIES_H

namespace scapix::java_api {

namespace android::util { class Range; }

namespace android::media {

class MediaCodecInfo_VideoCapabilities : public object_base<SCAPIX_META_STRING("android/media/MediaCodecInfo$VideoCapabilities"),
	java::lang::Object>
{
public:

	ref<android::util::Range> getBitrateRange();
	ref<android::util::Range> getSupportedWidths();
	ref<android::util::Range> getSupportedHeights();
	jint getWidthAlignment();
	jint getHeightAlignment();
	ref<android::util::Range> getSupportedFrameRates();
	ref<android::util::Range> getSupportedWidthsFor(jint height);
	ref<android::util::Range> getSupportedHeightsFor(jint width);
	ref<android::util::Range> getSupportedFrameRatesFor(jint width, jint height);
	ref<android::util::Range> getAchievableFrameRatesFor(jint width, jint height);
	jboolean areSizeAndRateSupported(jint width, jint height, jdouble frameRate);
	jboolean isSizeSupported(jint width, jint height);

protected:

	MediaCodecInfo_VideoCapabilities(handle_type h) : base_(h) {}

};

} // namespace android::media
} // namespace scapix::java_api

#include <scapix/java_api/android/util/Range.h>

namespace scapix::java_api {
namespace android::media {

inline ref<android::util::Range> MediaCodecInfo_VideoCapabilities::getBitrateRange() { return call_method<SCAPIX_META_STRING("getBitrateRange"), ref<android::util::Range>>(); }
inline ref<android::util::Range> MediaCodecInfo_VideoCapabilities::getSupportedWidths() { return call_method<SCAPIX_META_STRING("getSupportedWidths"), ref<android::util::Range>>(); }
inline ref<android::util::Range> MediaCodecInfo_VideoCapabilities::getSupportedHeights() { return call_method<SCAPIX_META_STRING("getSupportedHeights"), ref<android::util::Range>>(); }
inline jint MediaCodecInfo_VideoCapabilities::getWidthAlignment() { return call_method<SCAPIX_META_STRING("getWidthAlignment"), jint>(); }
inline jint MediaCodecInfo_VideoCapabilities::getHeightAlignment() { return call_method<SCAPIX_META_STRING("getHeightAlignment"), jint>(); }
inline ref<android::util::Range> MediaCodecInfo_VideoCapabilities::getSupportedFrameRates() { return call_method<SCAPIX_META_STRING("getSupportedFrameRates"), ref<android::util::Range>>(); }
inline ref<android::util::Range> MediaCodecInfo_VideoCapabilities::getSupportedWidthsFor(jint height) { return call_method<SCAPIX_META_STRING("getSupportedWidthsFor"), ref<android::util::Range>>(height); }
inline ref<android::util::Range> MediaCodecInfo_VideoCapabilities::getSupportedHeightsFor(jint width) { return call_method<SCAPIX_META_STRING("getSupportedHeightsFor"), ref<android::util::Range>>(width); }
inline ref<android::util::Range> MediaCodecInfo_VideoCapabilities::getSupportedFrameRatesFor(jint width, jint height) { return call_method<SCAPIX_META_STRING("getSupportedFrameRatesFor"), ref<android::util::Range>>(width, height); }
inline ref<android::util::Range> MediaCodecInfo_VideoCapabilities::getAchievableFrameRatesFor(jint width, jint height) { return call_method<SCAPIX_META_STRING("getAchievableFrameRatesFor"), ref<android::util::Range>>(width, height); }
inline jboolean MediaCodecInfo_VideoCapabilities::areSizeAndRateSupported(jint width, jint height, jdouble frameRate) { return call_method<SCAPIX_META_STRING("areSizeAndRateSupported"), jboolean>(width, height, frameRate); }
inline jboolean MediaCodecInfo_VideoCapabilities::isSizeSupported(jint width, jint height) { return call_method<SCAPIX_META_STRING("isSizeSupported"), jboolean>(width, height); }

} // namespace android::media
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_MEDIA_MEDIACODECINFO_VIDEOCAPABILITIES_H
