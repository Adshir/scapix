// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/media/MediaRouter_RouteInfo.h>

#ifndef SCAPIX_ANDROID_MEDIA_MEDIAROUTER_USERROUTEINFO_H
#define SCAPIX_ANDROID_MEDIA_MEDIAROUTER_USERROUTEINFO_H

namespace scapix::java_api {

namespace android::graphics::drawable { class Drawable; }
namespace android::media { class MediaRouter_VolumeCallback; }
namespace android::media { class RemoteControlClient; }
namespace java::lang { class CharSequence; }

namespace android::media {

class MediaRouter_UserRouteInfo : public object_base<SCAPIX_META_STRING("android/media/MediaRouter$UserRouteInfo"),
	android::media::MediaRouter_RouteInfo>
{
public:

	void setName(ref<java::lang::CharSequence> name);
	void setName(jint resId);
	void setDescription(ref<java::lang::CharSequence> description);
	void setStatus(ref<java::lang::CharSequence> status);
	void setRemoteControlClient(ref<android::media::RemoteControlClient> rcc);
	ref<android::media::RemoteControlClient> getRemoteControlClient();
	void setIconDrawable(ref<android::graphics::drawable::Drawable> icon);
	void setIconResource(jint resId);
	void setVolumeCallback(ref<android::media::MediaRouter_VolumeCallback> vcb);
	void setPlaybackType(jint type);
	void setVolumeHandling(jint volumeHandling);
	void setVolume(jint volume);
	void requestSetVolume(jint volume);
	void requestUpdateVolume(jint direction);
	void setVolumeMax(jint volumeMax);
	void setPlaybackStream(jint stream);

protected:

	MediaRouter_UserRouteInfo(handle_type h) : base_(h) {}

};

} // namespace android::media
} // namespace scapix::java_api

#include <scapix/java_api/android/graphics/drawable/Drawable.h>
#include <scapix/java_api/android/media/MediaRouter_VolumeCallback.h>
#include <scapix/java_api/android/media/RemoteControlClient.h>
#include <scapix/java_api/java/lang/CharSequence.h>

namespace scapix::java_api {
namespace android::media {

inline void MediaRouter_UserRouteInfo::setName(ref<java::lang::CharSequence> name) { return call_method<SCAPIX_META_STRING("setName"), void>(name); }
inline void MediaRouter_UserRouteInfo::setName(jint resId) { return call_method<SCAPIX_META_STRING("setName"), void>(resId); }
inline void MediaRouter_UserRouteInfo::setDescription(ref<java::lang::CharSequence> description) { return call_method<SCAPIX_META_STRING("setDescription"), void>(description); }
inline void MediaRouter_UserRouteInfo::setStatus(ref<java::lang::CharSequence> status) { return call_method<SCAPIX_META_STRING("setStatus"), void>(status); }
inline void MediaRouter_UserRouteInfo::setRemoteControlClient(ref<android::media::RemoteControlClient> rcc) { return call_method<SCAPIX_META_STRING("setRemoteControlClient"), void>(rcc); }
inline ref<android::media::RemoteControlClient> MediaRouter_UserRouteInfo::getRemoteControlClient() { return call_method<SCAPIX_META_STRING("getRemoteControlClient"), ref<android::media::RemoteControlClient>>(); }
inline void MediaRouter_UserRouteInfo::setIconDrawable(ref<android::graphics::drawable::Drawable> icon) { return call_method<SCAPIX_META_STRING("setIconDrawable"), void>(icon); }
inline void MediaRouter_UserRouteInfo::setIconResource(jint resId) { return call_method<SCAPIX_META_STRING("setIconResource"), void>(resId); }
inline void MediaRouter_UserRouteInfo::setVolumeCallback(ref<android::media::MediaRouter_VolumeCallback> vcb) { return call_method<SCAPIX_META_STRING("setVolumeCallback"), void>(vcb); }
inline void MediaRouter_UserRouteInfo::setPlaybackType(jint type) { return call_method<SCAPIX_META_STRING("setPlaybackType"), void>(type); }
inline void MediaRouter_UserRouteInfo::setVolumeHandling(jint volumeHandling) { return call_method<SCAPIX_META_STRING("setVolumeHandling"), void>(volumeHandling); }
inline void MediaRouter_UserRouteInfo::setVolume(jint volume) { return call_method<SCAPIX_META_STRING("setVolume"), void>(volume); }
inline void MediaRouter_UserRouteInfo::requestSetVolume(jint volume) { return call_method<SCAPIX_META_STRING("requestSetVolume"), void>(volume); }
inline void MediaRouter_UserRouteInfo::requestUpdateVolume(jint direction) { return call_method<SCAPIX_META_STRING("requestUpdateVolume"), void>(direction); }
inline void MediaRouter_UserRouteInfo::setVolumeMax(jint volumeMax) { return call_method<SCAPIX_META_STRING("setVolumeMax"), void>(volumeMax); }
inline void MediaRouter_UserRouteInfo::setPlaybackStream(jint stream) { return call_method<SCAPIX_META_STRING("setPlaybackStream"), void>(stream); }

} // namespace android::media
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_MEDIA_MEDIAROUTER_USERROUTEINFO_H
