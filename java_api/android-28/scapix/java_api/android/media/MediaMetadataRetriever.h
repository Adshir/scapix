// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_MEDIA_MEDIAMETADATARETRIEVER_H
#define SCAPIX_ANDROID_MEDIA_MEDIAMETADATARETRIEVER_H

namespace scapix::java_api {

namespace android::content { class Context; }
namespace android::graphics { class Bitmap; }
namespace android::media { class MediaDataSource; }
namespace android::media { class MediaMetadataRetriever_BitmapParams; }
namespace android::net { class Uri; }
namespace java::io { class FileDescriptor; }
namespace java::lang { class String; }
namespace java::util { class List; }
namespace java::util { class Map; }

namespace android::media {

class MediaMetadataRetriever : public object_base<SCAPIX_META_STRING("android/media/MediaMetadataRetriever"),
	java::lang::Object>
{
public:

	using BitmapParams = MediaMetadataRetriever_BitmapParams;

	static jint METADATA_KEY_ALBUM_();
	static jint METADATA_KEY_ALBUMARTIST_();
	static jint METADATA_KEY_ARTIST_();
	static jint METADATA_KEY_AUTHOR_();
	static jint METADATA_KEY_BITRATE_();
	static jint METADATA_KEY_CAPTURE_FRAMERATE_();
	static jint METADATA_KEY_CD_TRACK_NUMBER_();
	static jint METADATA_KEY_COMPILATION_();
	static jint METADATA_KEY_COMPOSER_();
	static jint METADATA_KEY_DATE_();
	static jint METADATA_KEY_DISC_NUMBER_();
	static jint METADATA_KEY_DURATION_();
	static jint METADATA_KEY_GENRE_();
	static jint METADATA_KEY_HAS_AUDIO_();
	static jint METADATA_KEY_HAS_IMAGE_();
	static jint METADATA_KEY_HAS_VIDEO_();
	static jint METADATA_KEY_IMAGE_COUNT_();
	static jint METADATA_KEY_IMAGE_HEIGHT_();
	static jint METADATA_KEY_IMAGE_PRIMARY_();
	static jint METADATA_KEY_IMAGE_ROTATION_();
	static jint METADATA_KEY_IMAGE_WIDTH_();
	static jint METADATA_KEY_LOCATION_();
	static jint METADATA_KEY_MIMETYPE_();
	static jint METADATA_KEY_NUM_TRACKS_();
	static jint METADATA_KEY_TITLE_();
	static jint METADATA_KEY_VIDEO_FRAME_COUNT_();
	static jint METADATA_KEY_VIDEO_HEIGHT_();
	static jint METADATA_KEY_VIDEO_ROTATION_();
	static jint METADATA_KEY_VIDEO_WIDTH_();
	static jint METADATA_KEY_WRITER_();
	static jint METADATA_KEY_YEAR_();
	static jint OPTION_CLOSEST_();
	static jint OPTION_CLOSEST_SYNC_();
	static jint OPTION_NEXT_SYNC_();
	static jint OPTION_PREVIOUS_SYNC_();

	static ref<MediaMetadataRetriever> new_object();
	void setDataSource(ref<java::lang::String> path);
	void setDataSource(ref<java::lang::String> uri, ref<java::util::Map> headers);
	void setDataSource(ref<java::io::FileDescriptor> p1, jlong p2, jlong p3);
	void setDataSource(ref<java::io::FileDescriptor> fd);
	void setDataSource(ref<android::content::Context> context, ref<android::net::Uri> uri);
	void setDataSource(ref<android::media::MediaDataSource> dataSource);
	ref<java::lang::String> extractMetadata(jint p1);
	ref<android::graphics::Bitmap> getFrameAtTime(jlong timeUs, jint p2);
	ref<android::graphics::Bitmap> getScaledFrameAtTime(jlong timeUs, jint p2, jint option, jint dstWidth);
	ref<android::graphics::Bitmap> getFrameAtTime(jlong timeUs);
	ref<android::graphics::Bitmap> getFrameAtTime();
	ref<android::graphics::Bitmap> getFrameAtIndex(jint frameIndex, ref<android::media::MediaMetadataRetriever_BitmapParams> params);
	ref<android::graphics::Bitmap> getFrameAtIndex(jint frameIndex);
	ref<java::util::List> getFramesAtIndex(jint frameIndex, jint numFrames, ref<android::media::MediaMetadataRetriever_BitmapParams> params);
	ref<java::util::List> getFramesAtIndex(jint frameIndex, jint numFrames);
	ref<android::graphics::Bitmap> getImageAtIndex(jint imageIndex, ref<android::media::MediaMetadataRetriever_BitmapParams> params);
	ref<android::graphics::Bitmap> getImageAtIndex(jint imageIndex);
	ref<android::graphics::Bitmap> getPrimaryImage(ref<android::media::MediaMetadataRetriever_BitmapParams> params);
	ref<android::graphics::Bitmap> getPrimaryImage();
	ref<link::java::array<jbyte>> getEmbeddedPicture();
	void release();

protected:

	MediaMetadataRetriever(handle_type h) : base_(h) {}

};

} // namespace android::media
} // namespace scapix::java_api

#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/graphics/Bitmap.h>
#include <scapix/java_api/android/media/MediaDataSource.h>
#include <scapix/java_api/android/media/MediaMetadataRetriever_BitmapParams.h>
#include <scapix/java_api/android/net/Uri.h>
#include <scapix/java_api/java/io/FileDescriptor.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/List.h>
#include <scapix/java_api/java/util/Map.h>

namespace scapix::java_api {
namespace android::media {

inline jint MediaMetadataRetriever::METADATA_KEY_ALBUM_() { return get_static_field<SCAPIX_META_STRING("METADATA_KEY_ALBUM"), jint>(); }
inline jint MediaMetadataRetriever::METADATA_KEY_ALBUMARTIST_() { return get_static_field<SCAPIX_META_STRING("METADATA_KEY_ALBUMARTIST"), jint>(); }
inline jint MediaMetadataRetriever::METADATA_KEY_ARTIST_() { return get_static_field<SCAPIX_META_STRING("METADATA_KEY_ARTIST"), jint>(); }
inline jint MediaMetadataRetriever::METADATA_KEY_AUTHOR_() { return get_static_field<SCAPIX_META_STRING("METADATA_KEY_AUTHOR"), jint>(); }
inline jint MediaMetadataRetriever::METADATA_KEY_BITRATE_() { return get_static_field<SCAPIX_META_STRING("METADATA_KEY_BITRATE"), jint>(); }
inline jint MediaMetadataRetriever::METADATA_KEY_CAPTURE_FRAMERATE_() { return get_static_field<SCAPIX_META_STRING("METADATA_KEY_CAPTURE_FRAMERATE"), jint>(); }
inline jint MediaMetadataRetriever::METADATA_KEY_CD_TRACK_NUMBER_() { return get_static_field<SCAPIX_META_STRING("METADATA_KEY_CD_TRACK_NUMBER"), jint>(); }
inline jint MediaMetadataRetriever::METADATA_KEY_COMPILATION_() { return get_static_field<SCAPIX_META_STRING("METADATA_KEY_COMPILATION"), jint>(); }
inline jint MediaMetadataRetriever::METADATA_KEY_COMPOSER_() { return get_static_field<SCAPIX_META_STRING("METADATA_KEY_COMPOSER"), jint>(); }
inline jint MediaMetadataRetriever::METADATA_KEY_DATE_() { return get_static_field<SCAPIX_META_STRING("METADATA_KEY_DATE"), jint>(); }
inline jint MediaMetadataRetriever::METADATA_KEY_DISC_NUMBER_() { return get_static_field<SCAPIX_META_STRING("METADATA_KEY_DISC_NUMBER"), jint>(); }
inline jint MediaMetadataRetriever::METADATA_KEY_DURATION_() { return get_static_field<SCAPIX_META_STRING("METADATA_KEY_DURATION"), jint>(); }
inline jint MediaMetadataRetriever::METADATA_KEY_GENRE_() { return get_static_field<SCAPIX_META_STRING("METADATA_KEY_GENRE"), jint>(); }
inline jint MediaMetadataRetriever::METADATA_KEY_HAS_AUDIO_() { return get_static_field<SCAPIX_META_STRING("METADATA_KEY_HAS_AUDIO"), jint>(); }
inline jint MediaMetadataRetriever::METADATA_KEY_HAS_IMAGE_() { return get_static_field<SCAPIX_META_STRING("METADATA_KEY_HAS_IMAGE"), jint>(); }
inline jint MediaMetadataRetriever::METADATA_KEY_HAS_VIDEO_() { return get_static_field<SCAPIX_META_STRING("METADATA_KEY_HAS_VIDEO"), jint>(); }
inline jint MediaMetadataRetriever::METADATA_KEY_IMAGE_COUNT_() { return get_static_field<SCAPIX_META_STRING("METADATA_KEY_IMAGE_COUNT"), jint>(); }
inline jint MediaMetadataRetriever::METADATA_KEY_IMAGE_HEIGHT_() { return get_static_field<SCAPIX_META_STRING("METADATA_KEY_IMAGE_HEIGHT"), jint>(); }
inline jint MediaMetadataRetriever::METADATA_KEY_IMAGE_PRIMARY_() { return get_static_field<SCAPIX_META_STRING("METADATA_KEY_IMAGE_PRIMARY"), jint>(); }
inline jint MediaMetadataRetriever::METADATA_KEY_IMAGE_ROTATION_() { return get_static_field<SCAPIX_META_STRING("METADATA_KEY_IMAGE_ROTATION"), jint>(); }
inline jint MediaMetadataRetriever::METADATA_KEY_IMAGE_WIDTH_() { return get_static_field<SCAPIX_META_STRING("METADATA_KEY_IMAGE_WIDTH"), jint>(); }
inline jint MediaMetadataRetriever::METADATA_KEY_LOCATION_() { return get_static_field<SCAPIX_META_STRING("METADATA_KEY_LOCATION"), jint>(); }
inline jint MediaMetadataRetriever::METADATA_KEY_MIMETYPE_() { return get_static_field<SCAPIX_META_STRING("METADATA_KEY_MIMETYPE"), jint>(); }
inline jint MediaMetadataRetriever::METADATA_KEY_NUM_TRACKS_() { return get_static_field<SCAPIX_META_STRING("METADATA_KEY_NUM_TRACKS"), jint>(); }
inline jint MediaMetadataRetriever::METADATA_KEY_TITLE_() { return get_static_field<SCAPIX_META_STRING("METADATA_KEY_TITLE"), jint>(); }
inline jint MediaMetadataRetriever::METADATA_KEY_VIDEO_FRAME_COUNT_() { return get_static_field<SCAPIX_META_STRING("METADATA_KEY_VIDEO_FRAME_COUNT"), jint>(); }
inline jint MediaMetadataRetriever::METADATA_KEY_VIDEO_HEIGHT_() { return get_static_field<SCAPIX_META_STRING("METADATA_KEY_VIDEO_HEIGHT"), jint>(); }
inline jint MediaMetadataRetriever::METADATA_KEY_VIDEO_ROTATION_() { return get_static_field<SCAPIX_META_STRING("METADATA_KEY_VIDEO_ROTATION"), jint>(); }
inline jint MediaMetadataRetriever::METADATA_KEY_VIDEO_WIDTH_() { return get_static_field<SCAPIX_META_STRING("METADATA_KEY_VIDEO_WIDTH"), jint>(); }
inline jint MediaMetadataRetriever::METADATA_KEY_WRITER_() { return get_static_field<SCAPIX_META_STRING("METADATA_KEY_WRITER"), jint>(); }
inline jint MediaMetadataRetriever::METADATA_KEY_YEAR_() { return get_static_field<SCAPIX_META_STRING("METADATA_KEY_YEAR"), jint>(); }
inline jint MediaMetadataRetriever::OPTION_CLOSEST_() { return get_static_field<SCAPIX_META_STRING("OPTION_CLOSEST"), jint>(); }
inline jint MediaMetadataRetriever::OPTION_CLOSEST_SYNC_() { return get_static_field<SCAPIX_META_STRING("OPTION_CLOSEST_SYNC"), jint>(); }
inline jint MediaMetadataRetriever::OPTION_NEXT_SYNC_() { return get_static_field<SCAPIX_META_STRING("OPTION_NEXT_SYNC"), jint>(); }
inline jint MediaMetadataRetriever::OPTION_PREVIOUS_SYNC_() { return get_static_field<SCAPIX_META_STRING("OPTION_PREVIOUS_SYNC"), jint>(); }
inline ref<MediaMetadataRetriever> MediaMetadataRetriever::new_object() { return base_::new_object(); }
inline void MediaMetadataRetriever::setDataSource(ref<java::lang::String> path) { return call_method<SCAPIX_META_STRING("setDataSource"), void>(path); }
inline void MediaMetadataRetriever::setDataSource(ref<java::lang::String> uri, ref<java::util::Map> headers) { return call_method<SCAPIX_META_STRING("setDataSource"), void>(uri, headers); }
inline void MediaMetadataRetriever::setDataSource(ref<java::io::FileDescriptor> p1, jlong p2, jlong p3) { return call_method<SCAPIX_META_STRING("setDataSource"), void>(p1, p2, p3); }
inline void MediaMetadataRetriever::setDataSource(ref<java::io::FileDescriptor> fd) { return call_method<SCAPIX_META_STRING("setDataSource"), void>(fd); }
inline void MediaMetadataRetriever::setDataSource(ref<android::content::Context> context, ref<android::net::Uri> uri) { return call_method<SCAPIX_META_STRING("setDataSource"), void>(context, uri); }
inline void MediaMetadataRetriever::setDataSource(ref<android::media::MediaDataSource> dataSource) { return call_method<SCAPIX_META_STRING("setDataSource"), void>(dataSource); }
inline ref<java::lang::String> MediaMetadataRetriever::extractMetadata(jint p1) { return call_method<SCAPIX_META_STRING("extractMetadata"), ref<java::lang::String>>(p1); }
inline ref<android::graphics::Bitmap> MediaMetadataRetriever::getFrameAtTime(jlong timeUs, jint p2) { return call_method<SCAPIX_META_STRING("getFrameAtTime"), ref<android::graphics::Bitmap>>(timeUs, p2); }
inline ref<android::graphics::Bitmap> MediaMetadataRetriever::getScaledFrameAtTime(jlong timeUs, jint p2, jint option, jint dstWidth) { return call_method<SCAPIX_META_STRING("getScaledFrameAtTime"), ref<android::graphics::Bitmap>>(timeUs, p2, option, dstWidth); }
inline ref<android::graphics::Bitmap> MediaMetadataRetriever::getFrameAtTime(jlong timeUs) { return call_method<SCAPIX_META_STRING("getFrameAtTime"), ref<android::graphics::Bitmap>>(timeUs); }
inline ref<android::graphics::Bitmap> MediaMetadataRetriever::getFrameAtTime() { return call_method<SCAPIX_META_STRING("getFrameAtTime"), ref<android::graphics::Bitmap>>(); }
inline ref<android::graphics::Bitmap> MediaMetadataRetriever::getFrameAtIndex(jint frameIndex, ref<android::media::MediaMetadataRetriever_BitmapParams> params) { return call_method<SCAPIX_META_STRING("getFrameAtIndex"), ref<android::graphics::Bitmap>>(frameIndex, params); }
inline ref<android::graphics::Bitmap> MediaMetadataRetriever::getFrameAtIndex(jint frameIndex) { return call_method<SCAPIX_META_STRING("getFrameAtIndex"), ref<android::graphics::Bitmap>>(frameIndex); }
inline ref<java::util::List> MediaMetadataRetriever::getFramesAtIndex(jint frameIndex, jint numFrames, ref<android::media::MediaMetadataRetriever_BitmapParams> params) { return call_method<SCAPIX_META_STRING("getFramesAtIndex"), ref<java::util::List>>(frameIndex, numFrames, params); }
inline ref<java::util::List> MediaMetadataRetriever::getFramesAtIndex(jint frameIndex, jint numFrames) { return call_method<SCAPIX_META_STRING("getFramesAtIndex"), ref<java::util::List>>(frameIndex, numFrames); }
inline ref<android::graphics::Bitmap> MediaMetadataRetriever::getImageAtIndex(jint imageIndex, ref<android::media::MediaMetadataRetriever_BitmapParams> params) { return call_method<SCAPIX_META_STRING("getImageAtIndex"), ref<android::graphics::Bitmap>>(imageIndex, params); }
inline ref<android::graphics::Bitmap> MediaMetadataRetriever::getImageAtIndex(jint imageIndex) { return call_method<SCAPIX_META_STRING("getImageAtIndex"), ref<android::graphics::Bitmap>>(imageIndex); }
inline ref<android::graphics::Bitmap> MediaMetadataRetriever::getPrimaryImage(ref<android::media::MediaMetadataRetriever_BitmapParams> params) { return call_method<SCAPIX_META_STRING("getPrimaryImage"), ref<android::graphics::Bitmap>>(params); }
inline ref<android::graphics::Bitmap> MediaMetadataRetriever::getPrimaryImage() { return call_method<SCAPIX_META_STRING("getPrimaryImage"), ref<android::graphics::Bitmap>>(); }
inline ref<link::java::array<jbyte>> MediaMetadataRetriever::getEmbeddedPicture() { return call_method<SCAPIX_META_STRING("getEmbeddedPicture"), ref<link::java::array<jbyte>>>(); }
inline void MediaMetadataRetriever::release() { return call_method<SCAPIX_META_STRING("release"), void>(); }

} // namespace android::media
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_MEDIA_MEDIAMETADATARETRIEVER_H
