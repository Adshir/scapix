// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_ANDROID_MEDIA_PLAYBACKPARAMS_H
#define SCAPIX_ANDROID_MEDIA_PLAYBACKPARAMS_H

namespace scapix::java_api {

namespace android::os { class Parcel; }
namespace android::os { class Parcelable_Creator; }

namespace android::media {

class PlaybackParams : public object_base<SCAPIX_META_STRING("android/media/PlaybackParams"),
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static jint AUDIO_FALLBACK_MODE_DEFAULT_();
	static jint AUDIO_FALLBACK_MODE_FAIL_();
	static jint AUDIO_FALLBACK_MODE_MUTE_();
	static ref<android::os::Parcelable_Creator> CREATOR_();

	static ref<PlaybackParams> new_object();
	ref<android::media::PlaybackParams> allowDefaults();
	ref<android::media::PlaybackParams> setAudioFallbackMode(jint audioFallbackMode);
	jint getAudioFallbackMode();
	ref<android::media::PlaybackParams> setPitch(jfloat pitch);
	jfloat getPitch();
	ref<android::media::PlaybackParams> setSpeed(jfloat speed);
	jfloat getSpeed();
	jint describeContents();
	void writeToParcel(ref<android::os::Parcel> dest, jint flags);

protected:

	PlaybackParams(handle_type h) : base_(h) {}

};

} // namespace android::media
} // namespace scapix::java_api

#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>

namespace scapix::java_api {
namespace android::media {

inline jint PlaybackParams::AUDIO_FALLBACK_MODE_DEFAULT_() { return get_static_field<SCAPIX_META_STRING("AUDIO_FALLBACK_MODE_DEFAULT"), jint>(); }
inline jint PlaybackParams::AUDIO_FALLBACK_MODE_FAIL_() { return get_static_field<SCAPIX_META_STRING("AUDIO_FALLBACK_MODE_FAIL"), jint>(); }
inline jint PlaybackParams::AUDIO_FALLBACK_MODE_MUTE_() { return get_static_field<SCAPIX_META_STRING("AUDIO_FALLBACK_MODE_MUTE"), jint>(); }
inline ref<android::os::Parcelable_Creator> PlaybackParams::CREATOR_() { return get_static_field<SCAPIX_META_STRING("CREATOR"), ref<android::os::Parcelable_Creator>>(); }
inline ref<PlaybackParams> PlaybackParams::new_object() { return base_::new_object(); }
inline ref<android::media::PlaybackParams> PlaybackParams::allowDefaults() { return call_method<SCAPIX_META_STRING("allowDefaults"), ref<android::media::PlaybackParams>>(); }
inline ref<android::media::PlaybackParams> PlaybackParams::setAudioFallbackMode(jint audioFallbackMode) { return call_method<SCAPIX_META_STRING("setAudioFallbackMode"), ref<android::media::PlaybackParams>>(audioFallbackMode); }
inline jint PlaybackParams::getAudioFallbackMode() { return call_method<SCAPIX_META_STRING("getAudioFallbackMode"), jint>(); }
inline ref<android::media::PlaybackParams> PlaybackParams::setPitch(jfloat pitch) { return call_method<SCAPIX_META_STRING("setPitch"), ref<android::media::PlaybackParams>>(pitch); }
inline jfloat PlaybackParams::getPitch() { return call_method<SCAPIX_META_STRING("getPitch"), jfloat>(); }
inline ref<android::media::PlaybackParams> PlaybackParams::setSpeed(jfloat speed) { return call_method<SCAPIX_META_STRING("setSpeed"), ref<android::media::PlaybackParams>>(speed); }
inline jfloat PlaybackParams::getSpeed() { return call_method<SCAPIX_META_STRING("getSpeed"), jfloat>(); }
inline jint PlaybackParams::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }
inline void PlaybackParams::writeToParcel(ref<android::os::Parcel> dest, jint flags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(dest, flags); }

} // namespace android::media
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_MEDIA_PLAYBACKPARAMS_H
