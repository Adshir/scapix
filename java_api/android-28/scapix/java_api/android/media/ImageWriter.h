// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/AutoCloseable.h>

#ifndef SCAPIX_ANDROID_MEDIA_IMAGEWRITER_H
#define SCAPIX_ANDROID_MEDIA_IMAGEWRITER_H

namespace scapix::java_api {

namespace android::media { class Image; }
namespace android::media { class ImageWriter_OnImageReleasedListener; }
namespace android::os { class Handler; }
namespace android::view { class Surface; }

namespace android::media {

class ImageWriter : public object_base<SCAPIX_META_STRING("android/media/ImageWriter"),
	java::lang::Object,
	java::lang::AutoCloseable>
{
public:

	using OnImageReleasedListener = ImageWriter_OnImageReleasedListener;

	static ref<android::media::ImageWriter> newInstance(ref<android::view::Surface> surface, jint maxImages);
	jint getMaxImages();
	ref<android::media::Image> dequeueInputImage();
	void queueInputImage(ref<android::media::Image> image);
	jint getFormat();
	void setOnImageReleasedListener(ref<android::media::ImageWriter_OnImageReleasedListener> listener, ref<android::os::Handler> handler);
	void close();

protected:

	ImageWriter(handle_type h) : base_(h) {}

};

} // namespace android::media
} // namespace scapix::java_api

#include <scapix/java_api/android/media/Image.h>
#include <scapix/java_api/android/media/ImageWriter_OnImageReleasedListener.h>
#include <scapix/java_api/android/os/Handler.h>
#include <scapix/java_api/android/view/Surface.h>

namespace scapix::java_api {
namespace android::media {

inline ref<android::media::ImageWriter> ImageWriter::newInstance(ref<android::view::Surface> surface, jint maxImages) { return call_static_method<SCAPIX_META_STRING("newInstance"), ref<android::media::ImageWriter>>(surface, maxImages); }
inline jint ImageWriter::getMaxImages() { return call_method<SCAPIX_META_STRING("getMaxImages"), jint>(); }
inline ref<android::media::Image> ImageWriter::dequeueInputImage() { return call_method<SCAPIX_META_STRING("dequeueInputImage"), ref<android::media::Image>>(); }
inline void ImageWriter::queueInputImage(ref<android::media::Image> image) { return call_method<SCAPIX_META_STRING("queueInputImage"), void>(image); }
inline jint ImageWriter::getFormat() { return call_method<SCAPIX_META_STRING("getFormat"), jint>(); }
inline void ImageWriter::setOnImageReleasedListener(ref<android::media::ImageWriter_OnImageReleasedListener> listener, ref<android::os::Handler> handler) { return call_method<SCAPIX_META_STRING("setOnImageReleasedListener"), void>(listener, handler); }
inline void ImageWriter::close() { return call_method<SCAPIX_META_STRING("close"), void>(); }

} // namespace android::media
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_MEDIA_IMAGEWRITER_H
