// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/AutoCloseable.h>

#ifndef SCAPIX_ANDROID_MEDIA_IMAGE_H
#define SCAPIX_ANDROID_MEDIA_IMAGE_H

namespace scapix::java_api {

namespace android::graphics { class Rect; }
namespace android::hardware { class HardwareBuffer; }
namespace android::media { class Image_Plane; }

namespace android::media {

class Image : public object_base<SCAPIX_META_STRING("android/media/Image"),
	java::lang::Object,
	java::lang::AutoCloseable>
{
public:

	using Plane = Image_Plane;

	jint getFormat();
	jint getWidth();
	jint getHeight();
	jlong getTimestamp();
	ref<android::hardware::HardwareBuffer> getHardwareBuffer();
	void setTimestamp(jlong timestamp);
	ref<android::graphics::Rect> getCropRect();
	void setCropRect(ref<android::graphics::Rect> cropRect);
	ref<link::java::array<android::media::Image_Plane>> getPlanes();
	void close();

protected:

	Image(handle_type h) : base_(h) {}

};

} // namespace android::media
} // namespace scapix::java_api

#include <scapix/java_api/android/graphics/Rect.h>
#include <scapix/java_api/android/hardware/HardwareBuffer.h>
#include <scapix/java_api/android/media/Image_Plane.h>

namespace scapix::java_api {
namespace android::media {

inline jint Image::getFormat() { return call_method<SCAPIX_META_STRING("getFormat"), jint>(); }
inline jint Image::getWidth() { return call_method<SCAPIX_META_STRING("getWidth"), jint>(); }
inline jint Image::getHeight() { return call_method<SCAPIX_META_STRING("getHeight"), jint>(); }
inline jlong Image::getTimestamp() { return call_method<SCAPIX_META_STRING("getTimestamp"), jlong>(); }
inline ref<android::hardware::HardwareBuffer> Image::getHardwareBuffer() { return call_method<SCAPIX_META_STRING("getHardwareBuffer"), ref<android::hardware::HardwareBuffer>>(); }
inline void Image::setTimestamp(jlong timestamp) { return call_method<SCAPIX_META_STRING("setTimestamp"), void>(timestamp); }
inline ref<android::graphics::Rect> Image::getCropRect() { return call_method<SCAPIX_META_STRING("getCropRect"), ref<android::graphics::Rect>>(); }
inline void Image::setCropRect(ref<android::graphics::Rect> cropRect) { return call_method<SCAPIX_META_STRING("setCropRect"), void>(cropRect); }
inline ref<link::java::array<android::media::Image_Plane>> Image::getPlanes() { return call_method<SCAPIX_META_STRING("getPlanes"), ref<link::java::array<android::media::Image_Plane>>>(); }
inline void Image::close() { return call_method<SCAPIX_META_STRING("close"), void>(); }

} // namespace android::media
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_MEDIA_IMAGE_H
