// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/io/Closeable.h>

#ifndef SCAPIX_ANDROID_MEDIA_MIDI_MIDIDEVICE_H
#define SCAPIX_ANDROID_MEDIA_MIDI_MIDIDEVICE_H

namespace scapix::java_api {

namespace android::media::midi { class MidiDevice_MidiConnection; }
namespace android::media::midi { class MidiDeviceInfo; }
namespace android::media::midi { class MidiInputPort; }
namespace android::media::midi { class MidiOutputPort; }
namespace java::lang { class String; }

namespace android::media::midi {

class MidiDevice : public object_base<SCAPIX_META_STRING("android/media/midi/MidiDevice"),
	java::lang::Object,
	java::io::Closeable>
{
public:

	using MidiConnection = MidiDevice_MidiConnection;

	ref<android::media::midi::MidiDeviceInfo> getInfo();
	ref<android::media::midi::MidiInputPort> openInputPort(jint portNumber);
	ref<android::media::midi::MidiOutputPort> openOutputPort(jint portNumber);
	ref<android::media::midi::MidiDevice_MidiConnection> connectPorts(ref<android::media::midi::MidiInputPort> inputPort, jint outputPortNumber);
	void close();
	ref<java::lang::String> toString();

protected:

	MidiDevice(handle_type h) : base_(h) {}

};

} // namespace android::media::midi
} // namespace scapix::java_api

#include <scapix/java_api/android/media/midi/MidiDevice_MidiConnection.h>
#include <scapix/java_api/android/media/midi/MidiDeviceInfo.h>
#include <scapix/java_api/android/media/midi/MidiInputPort.h>
#include <scapix/java_api/android/media/midi/MidiOutputPort.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::media::midi {

inline ref<android::media::midi::MidiDeviceInfo> MidiDevice::getInfo() { return call_method<SCAPIX_META_STRING("getInfo"), ref<android::media::midi::MidiDeviceInfo>>(); }
inline ref<android::media::midi::MidiInputPort> MidiDevice::openInputPort(jint portNumber) { return call_method<SCAPIX_META_STRING("openInputPort"), ref<android::media::midi::MidiInputPort>>(portNumber); }
inline ref<android::media::midi::MidiOutputPort> MidiDevice::openOutputPort(jint portNumber) { return call_method<SCAPIX_META_STRING("openOutputPort"), ref<android::media::midi::MidiOutputPort>>(portNumber); }
inline ref<android::media::midi::MidiDevice_MidiConnection> MidiDevice::connectPorts(ref<android::media::midi::MidiInputPort> inputPort, jint outputPortNumber) { return call_method<SCAPIX_META_STRING("connectPorts"), ref<android::media::midi::MidiDevice_MidiConnection>>(inputPort, outputPortNumber); }
inline void MidiDevice::close() { return call_method<SCAPIX_META_STRING("close"), void>(); }
inline ref<java::lang::String> MidiDevice::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }

} // namespace android::media::midi
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_MEDIA_MIDI_MIDIDEVICE_H
