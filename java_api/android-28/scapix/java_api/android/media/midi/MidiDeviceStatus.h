// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_ANDROID_MEDIA_MIDI_MIDIDEVICESTATUS_H
#define SCAPIX_ANDROID_MEDIA_MIDI_MIDIDEVICESTATUS_H

namespace scapix::java_api {

namespace android::media::midi { class MidiDeviceInfo; }
namespace android::os { class Parcel; }
namespace android::os { class Parcelable_Creator; }
namespace java::lang { class String; }

namespace android::media::midi {

class MidiDeviceStatus : public object_base<SCAPIX_META_STRING("android/media/midi/MidiDeviceStatus"),
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static ref<android::os::Parcelable_Creator> CREATOR_();

	ref<android::media::midi::MidiDeviceInfo> getDeviceInfo();
	jboolean isInputPortOpen(jint portNumber);
	jint getOutputPortOpenCount(jint portNumber);
	ref<java::lang::String> toString();
	jint describeContents();
	void writeToParcel(ref<android::os::Parcel> parcel, jint flags);

protected:

	MidiDeviceStatus(handle_type h) : base_(h) {}

};

} // namespace android::media::midi
} // namespace scapix::java_api

#include <scapix/java_api/android/media/midi/MidiDeviceInfo.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::media::midi {

inline ref<android::os::Parcelable_Creator> MidiDeviceStatus::CREATOR_() { return get_static_field<SCAPIX_META_STRING("CREATOR"), ref<android::os::Parcelable_Creator>>(); }
inline ref<android::media::midi::MidiDeviceInfo> MidiDeviceStatus::getDeviceInfo() { return call_method<SCAPIX_META_STRING("getDeviceInfo"), ref<android::media::midi::MidiDeviceInfo>>(); }
inline jboolean MidiDeviceStatus::isInputPortOpen(jint portNumber) { return call_method<SCAPIX_META_STRING("isInputPortOpen"), jboolean>(portNumber); }
inline jint MidiDeviceStatus::getOutputPortOpenCount(jint portNumber) { return call_method<SCAPIX_META_STRING("getOutputPortOpenCount"), jint>(portNumber); }
inline ref<java::lang::String> MidiDeviceStatus::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }
inline jint MidiDeviceStatus::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }
inline void MidiDeviceStatus::writeToParcel(ref<android::os::Parcel> parcel, jint flags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(parcel, flags); }

} // namespace android::media::midi
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_MEDIA_MIDI_MIDIDEVICESTATUS_H
