// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/view/ViewGroup.h>

#ifndef SCAPIX_ANDROID_MEDIA_TV_TVVIEW_H
#define SCAPIX_ANDROID_MEDIA_TV_TVVIEW_H

namespace scapix::java_api {

namespace android::content { class Context; }
namespace android::graphics { class Canvas; }
namespace android::graphics { class Region; }
namespace android::media { class PlaybackParams; }
namespace android::media::tv { class TvView_OnUnhandledInputEventListener; }
namespace android::media::tv { class TvView_TimeShiftPositionCallback; }
namespace android::media::tv { class TvView_TvInputCallback; }
namespace android::net { class Uri; }
namespace android::os { class Bundle; }
namespace android::util { class AttributeSet; }
namespace android::view { class InputEvent; }
namespace android::view { class KeyEvent; }
namespace android::view { class MotionEvent; }
namespace java::lang { class String; }
namespace java::util { class List; }

namespace android::media::tv {

class TvView : public object_base<SCAPIX_META_STRING("android/media/tv/TvView"),
	android::view::ViewGroup>
{
public:

	using TvInputCallback = TvView_TvInputCallback;
	using TimeShiftPositionCallback = TvView_TimeShiftPositionCallback;
	using OnUnhandledInputEventListener = TvView_OnUnhandledInputEventListener;

	static ref<TvView> new_object(ref<android::content::Context> context);
	static ref<TvView> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs);
	static ref<TvView> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr);
	void setCallback(ref<android::media::tv::TvView_TvInputCallback> callback);
	void setZOrderMediaOverlay(jboolean isMediaOverlay);
	void setZOrderOnTop(jboolean onTop);
	void setStreamVolume(jfloat volume);
	void tune(ref<java::lang::String> inputId, ref<android::net::Uri> channelUri);
	void tune(ref<java::lang::String> inputId, ref<android::net::Uri> channelUri, ref<android::os::Bundle> params);
	void reset();
	void setCaptionEnabled(jboolean enabled);
	void selectTrack(jint type, ref<java::lang::String> trackId);
	ref<java::util::List> getTracks(jint type);
	ref<java::lang::String> getSelectedTrack(jint type);
	void timeShiftPlay(ref<java::lang::String> inputId, ref<android::net::Uri> recordedProgramUri);
	void timeShiftPause();
	void timeShiftResume();
	void timeShiftSeekTo(jlong timeMs);
	void timeShiftSetPlaybackParams(ref<android::media::PlaybackParams> params);
	void setTimeShiftPositionCallback(ref<android::media::tv::TvView_TimeShiftPositionCallback> callback);
	void sendAppPrivateCommand(ref<java::lang::String> action, ref<android::os::Bundle> data);
	jboolean dispatchUnhandledInputEvent(ref<android::view::InputEvent> event);
	jboolean onUnhandledInputEvent(ref<android::view::InputEvent> event);
	void setOnUnhandledInputEventListener(ref<android::media::tv::TvView_OnUnhandledInputEventListener> listener);
	jboolean dispatchKeyEvent(ref<android::view::KeyEvent> event);
	jboolean dispatchTouchEvent(ref<android::view::MotionEvent> event);
	jboolean dispatchTrackballEvent(ref<android::view::MotionEvent> event);
	jboolean dispatchGenericMotionEvent(ref<android::view::MotionEvent> event);
	void dispatchWindowFocusChanged(jboolean hasFocus);
	jboolean gatherTransparentRegion(ref<android::graphics::Region> region);
	void draw(ref<android::graphics::Canvas> canvas);

protected:

	TvView(handle_type h) : base_(h) {}

};

} // namespace android::media::tv
} // namespace scapix::java_api

#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/graphics/Canvas.h>
#include <scapix/java_api/android/graphics/Region.h>
#include <scapix/java_api/android/media/PlaybackParams.h>
#include <scapix/java_api/android/media/tv/TvView_OnUnhandledInputEventListener.h>
#include <scapix/java_api/android/media/tv/TvView_TimeShiftPositionCallback.h>
#include <scapix/java_api/android/media/tv/TvView_TvInputCallback.h>
#include <scapix/java_api/android/net/Uri.h>
#include <scapix/java_api/android/os/Bundle.h>
#include <scapix/java_api/android/util/AttributeSet.h>
#include <scapix/java_api/android/view/InputEvent.h>
#include <scapix/java_api/android/view/KeyEvent.h>
#include <scapix/java_api/android/view/MotionEvent.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/List.h>

namespace scapix::java_api {
namespace android::media::tv {

inline ref<TvView> TvView::new_object(ref<android::content::Context> context) { return base_::new_object(context); }
inline ref<TvView> TvView::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs) { return base_::new_object(context, attrs); }
inline ref<TvView> TvView::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr) { return base_::new_object(context, attrs, defStyleAttr); }
inline void TvView::setCallback(ref<android::media::tv::TvView_TvInputCallback> callback) { return call_method<SCAPIX_META_STRING("setCallback"), void>(callback); }
inline void TvView::setZOrderMediaOverlay(jboolean isMediaOverlay) { return call_method<SCAPIX_META_STRING("setZOrderMediaOverlay"), void>(isMediaOverlay); }
inline void TvView::setZOrderOnTop(jboolean onTop) { return call_method<SCAPIX_META_STRING("setZOrderOnTop"), void>(onTop); }
inline void TvView::setStreamVolume(jfloat volume) { return call_method<SCAPIX_META_STRING("setStreamVolume"), void>(volume); }
inline void TvView::tune(ref<java::lang::String> inputId, ref<android::net::Uri> channelUri) { return call_method<SCAPIX_META_STRING("tune"), void>(inputId, channelUri); }
inline void TvView::tune(ref<java::lang::String> inputId, ref<android::net::Uri> channelUri, ref<android::os::Bundle> params) { return call_method<SCAPIX_META_STRING("tune"), void>(inputId, channelUri, params); }
inline void TvView::reset() { return call_method<SCAPIX_META_STRING("reset"), void>(); }
inline void TvView::setCaptionEnabled(jboolean enabled) { return call_method<SCAPIX_META_STRING("setCaptionEnabled"), void>(enabled); }
inline void TvView::selectTrack(jint type, ref<java::lang::String> trackId) { return call_method<SCAPIX_META_STRING("selectTrack"), void>(type, trackId); }
inline ref<java::util::List> TvView::getTracks(jint type) { return call_method<SCAPIX_META_STRING("getTracks"), ref<java::util::List>>(type); }
inline ref<java::lang::String> TvView::getSelectedTrack(jint type) { return call_method<SCAPIX_META_STRING("getSelectedTrack"), ref<java::lang::String>>(type); }
inline void TvView::timeShiftPlay(ref<java::lang::String> inputId, ref<android::net::Uri> recordedProgramUri) { return call_method<SCAPIX_META_STRING("timeShiftPlay"), void>(inputId, recordedProgramUri); }
inline void TvView::timeShiftPause() { return call_method<SCAPIX_META_STRING("timeShiftPause"), void>(); }
inline void TvView::timeShiftResume() { return call_method<SCAPIX_META_STRING("timeShiftResume"), void>(); }
inline void TvView::timeShiftSeekTo(jlong timeMs) { return call_method<SCAPIX_META_STRING("timeShiftSeekTo"), void>(timeMs); }
inline void TvView::timeShiftSetPlaybackParams(ref<android::media::PlaybackParams> params) { return call_method<SCAPIX_META_STRING("timeShiftSetPlaybackParams"), void>(params); }
inline void TvView::setTimeShiftPositionCallback(ref<android::media::tv::TvView_TimeShiftPositionCallback> callback) { return call_method<SCAPIX_META_STRING("setTimeShiftPositionCallback"), void>(callback); }
inline void TvView::sendAppPrivateCommand(ref<java::lang::String> action, ref<android::os::Bundle> data) { return call_method<SCAPIX_META_STRING("sendAppPrivateCommand"), void>(action, data); }
inline jboolean TvView::dispatchUnhandledInputEvent(ref<android::view::InputEvent> event) { return call_method<SCAPIX_META_STRING("dispatchUnhandledInputEvent"), jboolean>(event); }
inline jboolean TvView::onUnhandledInputEvent(ref<android::view::InputEvent> event) { return call_method<SCAPIX_META_STRING("onUnhandledInputEvent"), jboolean>(event); }
inline void TvView::setOnUnhandledInputEventListener(ref<android::media::tv::TvView_OnUnhandledInputEventListener> listener) { return call_method<SCAPIX_META_STRING("setOnUnhandledInputEventListener"), void>(listener); }
inline jboolean TvView::dispatchKeyEvent(ref<android::view::KeyEvent> event) { return call_method<SCAPIX_META_STRING("dispatchKeyEvent"), jboolean>(event); }
inline jboolean TvView::dispatchTouchEvent(ref<android::view::MotionEvent> event) { return call_method<SCAPIX_META_STRING("dispatchTouchEvent"), jboolean>(event); }
inline jboolean TvView::dispatchTrackballEvent(ref<android::view::MotionEvent> event) { return call_method<SCAPIX_META_STRING("dispatchTrackballEvent"), jboolean>(event); }
inline jboolean TvView::dispatchGenericMotionEvent(ref<android::view::MotionEvent> event) { return call_method<SCAPIX_META_STRING("dispatchGenericMotionEvent"), jboolean>(event); }
inline void TvView::dispatchWindowFocusChanged(jboolean hasFocus) { return call_method<SCAPIX_META_STRING("dispatchWindowFocusChanged"), void>(hasFocus); }
inline jboolean TvView::gatherTransparentRegion(ref<android::graphics::Region> region) { return call_method<SCAPIX_META_STRING("gatherTransparentRegion"), jboolean>(region); }
inline void TvView::draw(ref<android::graphics::Canvas> canvas) { return call_method<SCAPIX_META_STRING("draw"), void>(canvas); }

} // namespace android::media::tv
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_MEDIA_TV_TVVIEW_H
