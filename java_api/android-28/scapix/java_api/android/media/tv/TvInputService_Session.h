// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/view/KeyEvent_Callback.h>

#ifndef SCAPIX_ANDROID_MEDIA_TV_TVINPUTSERVICE_SESSION_H
#define SCAPIX_ANDROID_MEDIA_TV_TVINPUTSERVICE_SESSION_H

namespace scapix::java_api {

namespace android::content { class Context; }
namespace android::media { class PlaybackParams; }
namespace android::media::tv { class TvContentRating; }
namespace android::net { class Uri; }
namespace android::os { class Bundle; }
namespace android::view { class KeyEvent; }
namespace android::view { class MotionEvent; }
namespace android::view { class Surface; }
namespace android::view { class View; }
namespace java::lang { class String; }
namespace java::util { class List; }

namespace android::media::tv {

class TvInputService_Session : public object_base<SCAPIX_META_STRING("android/media/tv/TvInputService$Session"),
	java::lang::Object,
	android::view::KeyEvent_Callback>
{
public:

	static ref<TvInputService_Session> new_object(ref<android::content::Context> context);
	void setOverlayViewEnabled(jboolean enable);
	void notifyChannelRetuned(ref<android::net::Uri> channelUri);
	void notifyTracksChanged(ref<java::util::List> tracks);
	void notifyTrackSelected(jint type, ref<java::lang::String> trackId);
	void notifyVideoAvailable();
	void notifyVideoUnavailable(jint reason);
	void notifyContentAllowed();
	void notifyContentBlocked(ref<android::media::tv::TvContentRating> rating);
	void notifyTimeShiftStatusChanged(jint status);
	void layoutSurface(jint left, jint top, jint right, jint bottom);
	void onRelease();
	jboolean onSetSurface(ref<android::view::Surface> p1);
	void onSurfaceChanged(jint format, jint width, jint height);
	void onOverlayViewSizeChanged(jint width, jint height);
	void onSetStreamVolume(jfloat p1);
	jboolean onTune(ref<android::net::Uri> p1);
	jboolean onTune(ref<android::net::Uri> channelUri, ref<android::os::Bundle> params);
	void onSetCaptionEnabled(jboolean p1);
	void onUnblockContent(ref<android::media::tv::TvContentRating> unblockedRating);
	jboolean onSelectTrack(jint type, ref<java::lang::String> trackId);
	void onAppPrivateCommand(ref<java::lang::String> action, ref<android::os::Bundle> data);
	ref<android::view::View> onCreateOverlayView();
	void onTimeShiftPlay(ref<android::net::Uri> recordedProgramUri);
	void onTimeShiftPause();
	void onTimeShiftResume();
	void onTimeShiftSeekTo(jlong timeMs);
	void onTimeShiftSetPlaybackParams(ref<android::media::PlaybackParams> params);
	jlong onTimeShiftGetStartPosition();
	jlong onTimeShiftGetCurrentPosition();
	jboolean onKeyDown(jint keyCode, ref<android::view::KeyEvent> event);
	jboolean onKeyLongPress(jint keyCode, ref<android::view::KeyEvent> event);
	jboolean onKeyMultiple(jint keyCode, jint count, ref<android::view::KeyEvent> event);
	jboolean onKeyUp(jint keyCode, ref<android::view::KeyEvent> event);
	jboolean onTouchEvent(ref<android::view::MotionEvent> event);
	jboolean onTrackballEvent(ref<android::view::MotionEvent> event);
	jboolean onGenericMotionEvent(ref<android::view::MotionEvent> event);

protected:

	TvInputService_Session(handle_type h) : base_(h) {}

};

} // namespace android::media::tv
} // namespace scapix::java_api

#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/media/PlaybackParams.h>
#include <scapix/java_api/android/media/tv/TvContentRating.h>
#include <scapix/java_api/android/net/Uri.h>
#include <scapix/java_api/android/os/Bundle.h>
#include <scapix/java_api/android/view/KeyEvent.h>
#include <scapix/java_api/android/view/MotionEvent.h>
#include <scapix/java_api/android/view/Surface.h>
#include <scapix/java_api/android/view/View.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/List.h>

namespace scapix::java_api {
namespace android::media::tv {

inline ref<TvInputService_Session> TvInputService_Session::new_object(ref<android::content::Context> context) { return base_::new_object(context); }
inline void TvInputService_Session::setOverlayViewEnabled(jboolean enable) { return call_method<SCAPIX_META_STRING("setOverlayViewEnabled"), void>(enable); }
inline void TvInputService_Session::notifyChannelRetuned(ref<android::net::Uri> channelUri) { return call_method<SCAPIX_META_STRING("notifyChannelRetuned"), void>(channelUri); }
inline void TvInputService_Session::notifyTracksChanged(ref<java::util::List> tracks) { return call_method<SCAPIX_META_STRING("notifyTracksChanged"), void>(tracks); }
inline void TvInputService_Session::notifyTrackSelected(jint type, ref<java::lang::String> trackId) { return call_method<SCAPIX_META_STRING("notifyTrackSelected"), void>(type, trackId); }
inline void TvInputService_Session::notifyVideoAvailable() { return call_method<SCAPIX_META_STRING("notifyVideoAvailable"), void>(); }
inline void TvInputService_Session::notifyVideoUnavailable(jint reason) { return call_method<SCAPIX_META_STRING("notifyVideoUnavailable"), void>(reason); }
inline void TvInputService_Session::notifyContentAllowed() { return call_method<SCAPIX_META_STRING("notifyContentAllowed"), void>(); }
inline void TvInputService_Session::notifyContentBlocked(ref<android::media::tv::TvContentRating> rating) { return call_method<SCAPIX_META_STRING("notifyContentBlocked"), void>(rating); }
inline void TvInputService_Session::notifyTimeShiftStatusChanged(jint status) { return call_method<SCAPIX_META_STRING("notifyTimeShiftStatusChanged"), void>(status); }
inline void TvInputService_Session::layoutSurface(jint left, jint top, jint right, jint bottom) { return call_method<SCAPIX_META_STRING("layoutSurface"), void>(left, top, right, bottom); }
inline void TvInputService_Session::onRelease() { return call_method<SCAPIX_META_STRING("onRelease"), void>(); }
inline jboolean TvInputService_Session::onSetSurface(ref<android::view::Surface> p1) { return call_method<SCAPIX_META_STRING("onSetSurface"), jboolean>(p1); }
inline void TvInputService_Session::onSurfaceChanged(jint format, jint width, jint height) { return call_method<SCAPIX_META_STRING("onSurfaceChanged"), void>(format, width, height); }
inline void TvInputService_Session::onOverlayViewSizeChanged(jint width, jint height) { return call_method<SCAPIX_META_STRING("onOverlayViewSizeChanged"), void>(width, height); }
inline void TvInputService_Session::onSetStreamVolume(jfloat p1) { return call_method<SCAPIX_META_STRING("onSetStreamVolume"), void>(p1); }
inline jboolean TvInputService_Session::onTune(ref<android::net::Uri> p1) { return call_method<SCAPIX_META_STRING("onTune"), jboolean>(p1); }
inline jboolean TvInputService_Session::onTune(ref<android::net::Uri> channelUri, ref<android::os::Bundle> params) { return call_method<SCAPIX_META_STRING("onTune"), jboolean>(channelUri, params); }
inline void TvInputService_Session::onSetCaptionEnabled(jboolean p1) { return call_method<SCAPIX_META_STRING("onSetCaptionEnabled"), void>(p1); }
inline void TvInputService_Session::onUnblockContent(ref<android::media::tv::TvContentRating> unblockedRating) { return call_method<SCAPIX_META_STRING("onUnblockContent"), void>(unblockedRating); }
inline jboolean TvInputService_Session::onSelectTrack(jint type, ref<java::lang::String> trackId) { return call_method<SCAPIX_META_STRING("onSelectTrack"), jboolean>(type, trackId); }
inline void TvInputService_Session::onAppPrivateCommand(ref<java::lang::String> action, ref<android::os::Bundle> data) { return call_method<SCAPIX_META_STRING("onAppPrivateCommand"), void>(action, data); }
inline ref<android::view::View> TvInputService_Session::onCreateOverlayView() { return call_method<SCAPIX_META_STRING("onCreateOverlayView"), ref<android::view::View>>(); }
inline void TvInputService_Session::onTimeShiftPlay(ref<android::net::Uri> recordedProgramUri) { return call_method<SCAPIX_META_STRING("onTimeShiftPlay"), void>(recordedProgramUri); }
inline void TvInputService_Session::onTimeShiftPause() { return call_method<SCAPIX_META_STRING("onTimeShiftPause"), void>(); }
inline void TvInputService_Session::onTimeShiftResume() { return call_method<SCAPIX_META_STRING("onTimeShiftResume"), void>(); }
inline void TvInputService_Session::onTimeShiftSeekTo(jlong timeMs) { return call_method<SCAPIX_META_STRING("onTimeShiftSeekTo"), void>(timeMs); }
inline void TvInputService_Session::onTimeShiftSetPlaybackParams(ref<android::media::PlaybackParams> params) { return call_method<SCAPIX_META_STRING("onTimeShiftSetPlaybackParams"), void>(params); }
inline jlong TvInputService_Session::onTimeShiftGetStartPosition() { return call_method<SCAPIX_META_STRING("onTimeShiftGetStartPosition"), jlong>(); }
inline jlong TvInputService_Session::onTimeShiftGetCurrentPosition() { return call_method<SCAPIX_META_STRING("onTimeShiftGetCurrentPosition"), jlong>(); }
inline jboolean TvInputService_Session::onKeyDown(jint keyCode, ref<android::view::KeyEvent> event) { return call_method<SCAPIX_META_STRING("onKeyDown"), jboolean>(keyCode, event); }
inline jboolean TvInputService_Session::onKeyLongPress(jint keyCode, ref<android::view::KeyEvent> event) { return call_method<SCAPIX_META_STRING("onKeyLongPress"), jboolean>(keyCode, event); }
inline jboolean TvInputService_Session::onKeyMultiple(jint keyCode, jint count, ref<android::view::KeyEvent> event) { return call_method<SCAPIX_META_STRING("onKeyMultiple"), jboolean>(keyCode, count, event); }
inline jboolean TvInputService_Session::onKeyUp(jint keyCode, ref<android::view::KeyEvent> event) { return call_method<SCAPIX_META_STRING("onKeyUp"), jboolean>(keyCode, event); }
inline jboolean TvInputService_Session::onTouchEvent(ref<android::view::MotionEvent> event) { return call_method<SCAPIX_META_STRING("onTouchEvent"), jboolean>(event); }
inline jboolean TvInputService_Session::onTrackballEvent(ref<android::view::MotionEvent> event) { return call_method<SCAPIX_META_STRING("onTrackballEvent"), jboolean>(event); }
inline jboolean TvInputService_Session::onGenericMotionEvent(ref<android::view::MotionEvent> event) { return call_method<SCAPIX_META_STRING("onGenericMotionEvent"), jboolean>(event); }

} // namespace android::media::tv
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_MEDIA_TV_TVINPUTSERVICE_SESSION_H
