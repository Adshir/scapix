// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Exception.h>

#ifndef SCAPIX_ANDROID_SYSTEM_ERRNOEXCEPTION_H
#define SCAPIX_ANDROID_SYSTEM_ERRNOEXCEPTION_H

namespace scapix::java_api {

namespace java::lang { class String; }
namespace java::lang { class Throwable; }

namespace android::system {

class ErrnoException : public object_base<SCAPIX_META_STRING("android/system/ErrnoException"),
	java::lang::Exception>
{
public:

	jint errno();

	static ref<ErrnoException> new_object(ref<java::lang::String> functionName, jint errno);
	static ref<ErrnoException> new_object(ref<java::lang::String> functionName, jint errno, ref<java::lang::Throwable> cause);
	ref<java::lang::String> getMessage();

protected:

	ErrnoException(handle_type h) : base_(h) {}

};

} // namespace android::system
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/lang/Throwable.h>

namespace scapix::java_api {
namespace android::system {

inline jint ErrnoException::errno() { return get_field<SCAPIX_META_STRING("errno"), jint>(); }
inline ref<ErrnoException> ErrnoException::new_object(ref<java::lang::String> functionName, jint errno) { return base_::new_object(functionName, errno); }
inline ref<ErrnoException> ErrnoException::new_object(ref<java::lang::String> functionName, jint errno, ref<java::lang::Throwable> cause) { return base_::new_object(functionName, errno, cause); }
inline ref<java::lang::String> ErrnoException::getMessage() { return call_method<SCAPIX_META_STRING("getMessage"), ref<java::lang::String>>(); }

} // namespace android::system
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_SYSTEM_ERRNOEXCEPTION_H
