// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_NET_SIP_SIPREGISTRATIONLISTENER_H
#define SCAPIX_ANDROID_NET_SIP_SIPREGISTRATIONLISTENER_H

namespace scapix::java_api {

namespace java::lang { class String; }

namespace android::net::sip {

class SipRegistrationListener : public object_base<SCAPIX_META_STRING("android/net/sip/SipRegistrationListener"),
	java::lang::Object>
{
public:

	void onRegistering(ref<java::lang::String> p1);
	void onRegistrationDone(ref<java::lang::String> p1, jlong p2);
	void onRegistrationFailed(ref<java::lang::String> p1, jint p2, ref<java::lang::String> p3);

protected:

	SipRegistrationListener(handle_type h) : base_(h) {}

};

} // namespace android::net::sip
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::net::sip {

inline void SipRegistrationListener::onRegistering(ref<java::lang::String> p1) { return call_method<SCAPIX_META_STRING("onRegistering"), void>(p1); }
inline void SipRegistrationListener::onRegistrationDone(ref<java::lang::String> p1, jlong p2) { return call_method<SCAPIX_META_STRING("onRegistrationDone"), void>(p1, p2); }
inline void SipRegistrationListener::onRegistrationFailed(ref<java::lang::String> p1, jint p2, ref<java::lang::String> p3) { return call_method<SCAPIX_META_STRING("onRegistrationFailed"), void>(p1, p2, p3); }

} // namespace android::net::sip
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_NET_SIP_SIPREGISTRATIONLISTENER_H
