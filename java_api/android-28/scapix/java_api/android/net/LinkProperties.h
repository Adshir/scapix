// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_ANDROID_NET_LINKPROPERTIES_H
#define SCAPIX_ANDROID_NET_LINKPROPERTIES_H

namespace scapix::java_api {

namespace android::net { class ProxyInfo; }
namespace android::os { class Parcel; }
namespace android::os { class Parcelable_Creator; }
namespace java::lang { class String; }
namespace java::util { class List; }

namespace android::net {

class LinkProperties : public object_base<SCAPIX_META_STRING("android/net/LinkProperties"),
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static ref<android::os::Parcelable_Creator> CREATOR_();

	ref<java::lang::String> getInterfaceName();
	ref<java::util::List> getLinkAddresses();
	ref<java::util::List> getDnsServers();
	jboolean isPrivateDnsActive();
	ref<java::lang::String> getPrivateDnsServerName();
	ref<java::lang::String> getDomains();
	ref<java::util::List> getRoutes();
	ref<android::net::ProxyInfo> getHttpProxy();
	jint describeContents();
	ref<java::lang::String> toString();
	jboolean equals(ref<java::lang::Object> obj);
	jint hashCode();
	void writeToParcel(ref<android::os::Parcel> dest, jint flags);

protected:

	LinkProperties(handle_type h) : base_(h) {}

};

} // namespace android::net
} // namespace scapix::java_api

#include <scapix/java_api/android/net/ProxyInfo.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/List.h>

namespace scapix::java_api {
namespace android::net {

inline ref<android::os::Parcelable_Creator> LinkProperties::CREATOR_() { return get_static_field<SCAPIX_META_STRING("CREATOR"), ref<android::os::Parcelable_Creator>>(); }
inline ref<java::lang::String> LinkProperties::getInterfaceName() { return call_method<SCAPIX_META_STRING("getInterfaceName"), ref<java::lang::String>>(); }
inline ref<java::util::List> LinkProperties::getLinkAddresses() { return call_method<SCAPIX_META_STRING("getLinkAddresses"), ref<java::util::List>>(); }
inline ref<java::util::List> LinkProperties::getDnsServers() { return call_method<SCAPIX_META_STRING("getDnsServers"), ref<java::util::List>>(); }
inline jboolean LinkProperties::isPrivateDnsActive() { return call_method<SCAPIX_META_STRING("isPrivateDnsActive"), jboolean>(); }
inline ref<java::lang::String> LinkProperties::getPrivateDnsServerName() { return call_method<SCAPIX_META_STRING("getPrivateDnsServerName"), ref<java::lang::String>>(); }
inline ref<java::lang::String> LinkProperties::getDomains() { return call_method<SCAPIX_META_STRING("getDomains"), ref<java::lang::String>>(); }
inline ref<java::util::List> LinkProperties::getRoutes() { return call_method<SCAPIX_META_STRING("getRoutes"), ref<java::util::List>>(); }
inline ref<android::net::ProxyInfo> LinkProperties::getHttpProxy() { return call_method<SCAPIX_META_STRING("getHttpProxy"), ref<android::net::ProxyInfo>>(); }
inline jint LinkProperties::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }
inline ref<java::lang::String> LinkProperties::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }
inline jboolean LinkProperties::equals(ref<java::lang::Object> obj) { return call_method<SCAPIX_META_STRING("equals"), jboolean>(obj); }
inline jint LinkProperties::hashCode() { return call_method<SCAPIX_META_STRING("hashCode"), jint>(); }
inline void LinkProperties::writeToParcel(ref<android::os::Parcel> dest, jint flags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(dest, flags); }

} // namespace android::net
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_NET_LINKPROPERTIES_H
