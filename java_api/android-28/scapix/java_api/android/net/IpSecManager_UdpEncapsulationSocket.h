// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/AutoCloseable.h>

#ifndef SCAPIX_ANDROID_NET_IPSECMANAGER_UDPENCAPSULATIONSOCKET_H
#define SCAPIX_ANDROID_NET_IPSECMANAGER_UDPENCAPSULATIONSOCKET_H

namespace scapix::java_api {

namespace java::io { class FileDescriptor; }
namespace java::lang { class String; }

namespace android::net {

class IpSecManager_UdpEncapsulationSocket : public object_base<SCAPIX_META_STRING("android/net/IpSecManager$UdpEncapsulationSocket"),
	java::lang::Object,
	java::lang::AutoCloseable>
{
public:

	ref<java::io::FileDescriptor> getFileDescriptor();
	jint getPort();
	void close();
	ref<java::lang::String> toString();

protected:

	IpSecManager_UdpEncapsulationSocket(handle_type h) : base_(h) {}

};

} // namespace android::net
} // namespace scapix::java_api

#include <scapix/java_api/java/io/FileDescriptor.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::net {

inline ref<java::io::FileDescriptor> IpSecManager_UdpEncapsulationSocket::getFileDescriptor() { return call_method<SCAPIX_META_STRING("getFileDescriptor"), ref<java::io::FileDescriptor>>(); }
inline jint IpSecManager_UdpEncapsulationSocket::getPort() { return call_method<SCAPIX_META_STRING("getPort"), jint>(); }
inline void IpSecManager_UdpEncapsulationSocket::close() { return call_method<SCAPIX_META_STRING("close"), void>(); }
inline ref<java::lang::String> IpSecManager_UdpEncapsulationSocket::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }

} // namespace android::net
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_NET_IPSECMANAGER_UDPENCAPSULATIONSOCKET_H
