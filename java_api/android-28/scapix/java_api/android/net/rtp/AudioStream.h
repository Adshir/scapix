// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/net/rtp/RtpStream.h>

#ifndef SCAPIX_ANDROID_NET_RTP_AUDIOSTREAM_H
#define SCAPIX_ANDROID_NET_RTP_AUDIOSTREAM_H

namespace scapix::java_api {

namespace android::net::rtp { class AudioCodec; }
namespace android::net::rtp { class AudioGroup; }
namespace java::net { class InetAddress; }

namespace android::net::rtp {

class AudioStream : public object_base<SCAPIX_META_STRING("android/net/rtp/AudioStream"),
	android::net::rtp::RtpStream>
{
public:

	static ref<AudioStream> new_object(ref<java::net::InetAddress> address);
	jboolean isBusy();
	ref<android::net::rtp::AudioGroup> getGroup();
	void join(ref<android::net::rtp::AudioGroup> group);
	ref<android::net::rtp::AudioCodec> getCodec();
	void setCodec(ref<android::net::rtp::AudioCodec> codec);
	jint getDtmfType();
	void setDtmfType(jint type);

protected:

	AudioStream(handle_type h) : base_(h) {}

};

} // namespace android::net::rtp
} // namespace scapix::java_api

#include <scapix/java_api/android/net/rtp/AudioCodec.h>
#include <scapix/java_api/android/net/rtp/AudioGroup.h>
#include <scapix/java_api/java/net/InetAddress.h>

namespace scapix::java_api {
namespace android::net::rtp {

inline ref<AudioStream> AudioStream::new_object(ref<java::net::InetAddress> address) { return base_::new_object(address); }
inline jboolean AudioStream::isBusy() { return call_method<SCAPIX_META_STRING("isBusy"), jboolean>(); }
inline ref<android::net::rtp::AudioGroup> AudioStream::getGroup() { return call_method<SCAPIX_META_STRING("getGroup"), ref<android::net::rtp::AudioGroup>>(); }
inline void AudioStream::join(ref<android::net::rtp::AudioGroup> group) { return call_method<SCAPIX_META_STRING("join"), void>(group); }
inline ref<android::net::rtp::AudioCodec> AudioStream::getCodec() { return call_method<SCAPIX_META_STRING("getCodec"), ref<android::net::rtp::AudioCodec>>(); }
inline void AudioStream::setCodec(ref<android::net::rtp::AudioCodec> codec) { return call_method<SCAPIX_META_STRING("setCodec"), void>(codec); }
inline jint AudioStream::getDtmfType() { return call_method<SCAPIX_META_STRING("getDtmfType"), jint>(); }
inline void AudioStream::setDtmfType(jint type) { return call_method<SCAPIX_META_STRING("setDtmfType"), void>(type); }

} // namespace android::net::rtp
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_NET_RTP_AUDIOSTREAM_H
