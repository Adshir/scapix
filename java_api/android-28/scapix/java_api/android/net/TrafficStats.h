// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_NET_TRAFFICSTATS_H
#define SCAPIX_ANDROID_NET_TRAFFICSTATS_H

namespace scapix::java_api {

namespace java::io { class FileDescriptor; }
namespace java::net { class DatagramSocket; }
namespace java::net { class Socket; }

namespace android::net {

class TrafficStats : public object_base<SCAPIX_META_STRING("android/net/TrafficStats"),
	java::lang::Object>
{
public:

	static jint UNSUPPORTED_();

	static ref<TrafficStats> new_object();
	static void setThreadStatsTag(jint tag);
	static jint getAndSetThreadStatsTag(jint tag);
	static jint getThreadStatsTag();
	static void clearThreadStatsTag();
	static void setThreadStatsUid(jint uid);
	static jint getThreadStatsUid();
	static void clearThreadStatsUid();
	static void tagSocket(ref<java::net::Socket> socket);
	static void untagSocket(ref<java::net::Socket> socket);
	static void tagDatagramSocket(ref<java::net::DatagramSocket> socket);
	static void untagDatagramSocket(ref<java::net::DatagramSocket> socket);
	static void tagFileDescriptor(ref<java::io::FileDescriptor> fd);
	static void untagFileDescriptor(ref<java::io::FileDescriptor> fd);
	static void incrementOperationCount(jint operationCount);
	static void incrementOperationCount(jint tag, jint operationCount);
	static jlong getMobileTxPackets();
	static jlong getMobileRxPackets();
	static jlong getMobileTxBytes();
	static jlong getMobileRxBytes();
	static jlong getTotalTxPackets();
	static jlong getTotalRxPackets();
	static jlong getTotalTxBytes();
	static jlong getTotalRxBytes();
	static jlong getUidTxBytes(jint uid);
	static jlong getUidRxBytes(jint uid);
	static jlong getUidTxPackets(jint uid);
	static jlong getUidRxPackets(jint uid);
	static jlong getUidTcpTxBytes(jint uid);
	static jlong getUidTcpRxBytes(jint uid);
	static jlong getUidUdpTxBytes(jint uid);
	static jlong getUidUdpRxBytes(jint uid);
	static jlong getUidTcpTxSegments(jint uid);
	static jlong getUidTcpRxSegments(jint uid);
	static jlong getUidUdpTxPackets(jint uid);
	static jlong getUidUdpRxPackets(jint uid);

protected:

	TrafficStats(handle_type h) : base_(h) {}

};

} // namespace android::net
} // namespace scapix::java_api

#include <scapix/java_api/java/io/FileDescriptor.h>
#include <scapix/java_api/java/net/DatagramSocket.h>
#include <scapix/java_api/java/net/Socket.h>

namespace scapix::java_api {
namespace android::net {

inline jint TrafficStats::UNSUPPORTED_() { return get_static_field<SCAPIX_META_STRING("UNSUPPORTED"), jint>(); }
inline ref<TrafficStats> TrafficStats::new_object() { return base_::new_object(); }
inline void TrafficStats::setThreadStatsTag(jint tag) { return call_static_method<SCAPIX_META_STRING("setThreadStatsTag"), void>(tag); }
inline jint TrafficStats::getAndSetThreadStatsTag(jint tag) { return call_static_method<SCAPIX_META_STRING("getAndSetThreadStatsTag"), jint>(tag); }
inline jint TrafficStats::getThreadStatsTag() { return call_static_method<SCAPIX_META_STRING("getThreadStatsTag"), jint>(); }
inline void TrafficStats::clearThreadStatsTag() { return call_static_method<SCAPIX_META_STRING("clearThreadStatsTag"), void>(); }
inline void TrafficStats::setThreadStatsUid(jint uid) { return call_static_method<SCAPIX_META_STRING("setThreadStatsUid"), void>(uid); }
inline jint TrafficStats::getThreadStatsUid() { return call_static_method<SCAPIX_META_STRING("getThreadStatsUid"), jint>(); }
inline void TrafficStats::clearThreadStatsUid() { return call_static_method<SCAPIX_META_STRING("clearThreadStatsUid"), void>(); }
inline void TrafficStats::tagSocket(ref<java::net::Socket> socket) { return call_static_method<SCAPIX_META_STRING("tagSocket"), void>(socket); }
inline void TrafficStats::untagSocket(ref<java::net::Socket> socket) { return call_static_method<SCAPIX_META_STRING("untagSocket"), void>(socket); }
inline void TrafficStats::tagDatagramSocket(ref<java::net::DatagramSocket> socket) { return call_static_method<SCAPIX_META_STRING("tagDatagramSocket"), void>(socket); }
inline void TrafficStats::untagDatagramSocket(ref<java::net::DatagramSocket> socket) { return call_static_method<SCAPIX_META_STRING("untagDatagramSocket"), void>(socket); }
inline void TrafficStats::tagFileDescriptor(ref<java::io::FileDescriptor> fd) { return call_static_method<SCAPIX_META_STRING("tagFileDescriptor"), void>(fd); }
inline void TrafficStats::untagFileDescriptor(ref<java::io::FileDescriptor> fd) { return call_static_method<SCAPIX_META_STRING("untagFileDescriptor"), void>(fd); }
inline void TrafficStats::incrementOperationCount(jint operationCount) { return call_static_method<SCAPIX_META_STRING("incrementOperationCount"), void>(operationCount); }
inline void TrafficStats::incrementOperationCount(jint tag, jint operationCount) { return call_static_method<SCAPIX_META_STRING("incrementOperationCount"), void>(tag, operationCount); }
inline jlong TrafficStats::getMobileTxPackets() { return call_static_method<SCAPIX_META_STRING("getMobileTxPackets"), jlong>(); }
inline jlong TrafficStats::getMobileRxPackets() { return call_static_method<SCAPIX_META_STRING("getMobileRxPackets"), jlong>(); }
inline jlong TrafficStats::getMobileTxBytes() { return call_static_method<SCAPIX_META_STRING("getMobileTxBytes"), jlong>(); }
inline jlong TrafficStats::getMobileRxBytes() { return call_static_method<SCAPIX_META_STRING("getMobileRxBytes"), jlong>(); }
inline jlong TrafficStats::getTotalTxPackets() { return call_static_method<SCAPIX_META_STRING("getTotalTxPackets"), jlong>(); }
inline jlong TrafficStats::getTotalRxPackets() { return call_static_method<SCAPIX_META_STRING("getTotalRxPackets"), jlong>(); }
inline jlong TrafficStats::getTotalTxBytes() { return call_static_method<SCAPIX_META_STRING("getTotalTxBytes"), jlong>(); }
inline jlong TrafficStats::getTotalRxBytes() { return call_static_method<SCAPIX_META_STRING("getTotalRxBytes"), jlong>(); }
inline jlong TrafficStats::getUidTxBytes(jint uid) { return call_static_method<SCAPIX_META_STRING("getUidTxBytes"), jlong>(uid); }
inline jlong TrafficStats::getUidRxBytes(jint uid) { return call_static_method<SCAPIX_META_STRING("getUidRxBytes"), jlong>(uid); }
inline jlong TrafficStats::getUidTxPackets(jint uid) { return call_static_method<SCAPIX_META_STRING("getUidTxPackets"), jlong>(uid); }
inline jlong TrafficStats::getUidRxPackets(jint uid) { return call_static_method<SCAPIX_META_STRING("getUidRxPackets"), jlong>(uid); }
inline jlong TrafficStats::getUidTcpTxBytes(jint uid) { return call_static_method<SCAPIX_META_STRING("getUidTcpTxBytes"), jlong>(uid); }
inline jlong TrafficStats::getUidTcpRxBytes(jint uid) { return call_static_method<SCAPIX_META_STRING("getUidTcpRxBytes"), jlong>(uid); }
inline jlong TrafficStats::getUidUdpTxBytes(jint uid) { return call_static_method<SCAPIX_META_STRING("getUidUdpTxBytes"), jlong>(uid); }
inline jlong TrafficStats::getUidUdpRxBytes(jint uid) { return call_static_method<SCAPIX_META_STRING("getUidUdpRxBytes"), jlong>(uid); }
inline jlong TrafficStats::getUidTcpTxSegments(jint uid) { return call_static_method<SCAPIX_META_STRING("getUidTcpTxSegments"), jlong>(uid); }
inline jlong TrafficStats::getUidTcpRxSegments(jint uid) { return call_static_method<SCAPIX_META_STRING("getUidTcpRxSegments"), jlong>(uid); }
inline jlong TrafficStats::getUidUdpTxPackets(jint uid) { return call_static_method<SCAPIX_META_STRING("getUidUdpTxPackets"), jlong>(uid); }
inline jlong TrafficStats::getUidUdpRxPackets(jint uid) { return call_static_method<SCAPIX_META_STRING("getUidUdpRxPackets"), jlong>(uid); }

} // namespace android::net
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_NET_TRAFFICSTATS_H
