// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/net/wifi/p2p/nsd/WifiP2pServiceRequest.h>

#ifndef SCAPIX_ANDROID_NET_WIFI_P2P_NSD_WIFIP2PUPNPSERVICEREQUEST_H
#define SCAPIX_ANDROID_NET_WIFI_P2P_NSD_WIFIP2PUPNPSERVICEREQUEST_H

namespace scapix::java_api {

namespace java::lang { class String; }

namespace android::net::wifi::p2p::nsd {

class WifiP2pUpnpServiceRequest : public object_base<SCAPIX_META_STRING("android/net/wifi/p2p/nsd/WifiP2pUpnpServiceRequest"),
	android::net::wifi::p2p::nsd::WifiP2pServiceRequest>
{
public:

	static ref<android::net::wifi::p2p::nsd::WifiP2pUpnpServiceRequest> newInstance();
	static ref<android::net::wifi::p2p::nsd::WifiP2pUpnpServiceRequest> newInstance(ref<java::lang::String> st);

protected:

	WifiP2pUpnpServiceRequest(handle_type h) : base_(h) {}

};

} // namespace android::net::wifi::p2p::nsd
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::net::wifi::p2p::nsd {

inline ref<android::net::wifi::p2p::nsd::WifiP2pUpnpServiceRequest> WifiP2pUpnpServiceRequest::newInstance() { return call_static_method<SCAPIX_META_STRING("newInstance"), ref<android::net::wifi::p2p::nsd::WifiP2pUpnpServiceRequest>>(); }
inline ref<android::net::wifi::p2p::nsd::WifiP2pUpnpServiceRequest> WifiP2pUpnpServiceRequest::newInstance(ref<java::lang::String> st) { return call_static_method<SCAPIX_META_STRING("newInstance"), ref<android::net::wifi::p2p::nsd::WifiP2pUpnpServiceRequest>>(st); }

} // namespace android::net::wifi::p2p::nsd
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_NET_WIFI_P2P_NSD_WIFIP2PUPNPSERVICEREQUEST_H
