// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_NET_WIFI_P2P_WIFIP2PMANAGER_H
#define SCAPIX_ANDROID_NET_WIFI_P2P_WIFIP2PMANAGER_H

namespace scapix::java_api {

namespace android::content { class Context; }
namespace android::net::wifi::p2p { class WifiP2pConfig; }
namespace android::net::wifi::p2p { class WifiP2pManager_ActionListener; }
namespace android::net::wifi::p2p { class WifiP2pManager_Channel; }
namespace android::net::wifi::p2p { class WifiP2pManager_ChannelListener; }
namespace android::net::wifi::p2p { class WifiP2pManager_ConnectionInfoListener; }
namespace android::net::wifi::p2p { class WifiP2pManager_DnsSdServiceResponseListener; }
namespace android::net::wifi::p2p { class WifiP2pManager_DnsSdTxtRecordListener; }
namespace android::net::wifi::p2p { class WifiP2pManager_GroupInfoListener; }
namespace android::net::wifi::p2p { class WifiP2pManager_PeerListListener; }
namespace android::net::wifi::p2p { class WifiP2pManager_ServiceResponseListener; }
namespace android::net::wifi::p2p { class WifiP2pManager_UpnpServiceResponseListener; }
namespace android::net::wifi::p2p::nsd { class WifiP2pServiceInfo; }
namespace android::net::wifi::p2p::nsd { class WifiP2pServiceRequest; }
namespace android::os { class Looper; }
namespace java::lang { class String; }

namespace android::net::wifi::p2p {

class WifiP2pManager : public object_base<SCAPIX_META_STRING("android/net/wifi/p2p/WifiP2pManager"),
	java::lang::Object>
{
public:

	using UpnpServiceResponseListener = WifiP2pManager_UpnpServiceResponseListener;
	using ServiceResponseListener = WifiP2pManager_ServiceResponseListener;
	using PeerListListener = WifiP2pManager_PeerListListener;
	using GroupInfoListener = WifiP2pManager_GroupInfoListener;
	using DnsSdTxtRecordListener = WifiP2pManager_DnsSdTxtRecordListener;
	using DnsSdServiceResponseListener = WifiP2pManager_DnsSdServiceResponseListener;
	using ConnectionInfoListener = WifiP2pManager_ConnectionInfoListener;
	using ChannelListener = WifiP2pManager_ChannelListener;
	using Channel = WifiP2pManager_Channel;
	using ActionListener = WifiP2pManager_ActionListener;

	static jint BUSY_();
	static jint ERROR_();
	static ref<java::lang::String> EXTRA_DISCOVERY_STATE_();
	static ref<java::lang::String> EXTRA_NETWORK_INFO_();
	static ref<java::lang::String> EXTRA_P2P_DEVICE_LIST_();
	static ref<java::lang::String> EXTRA_WIFI_P2P_DEVICE_();
	static ref<java::lang::String> EXTRA_WIFI_P2P_GROUP_();
	static ref<java::lang::String> EXTRA_WIFI_P2P_INFO_();
	static ref<java::lang::String> EXTRA_WIFI_STATE_();
	static jint NO_SERVICE_REQUESTS_();
	static jint P2P_UNSUPPORTED_();
	static ref<java::lang::String> WIFI_P2P_CONNECTION_CHANGED_ACTION_();
	static ref<java::lang::String> WIFI_P2P_DISCOVERY_CHANGED_ACTION_();
	static jint WIFI_P2P_DISCOVERY_STARTED_();
	static jint WIFI_P2P_DISCOVERY_STOPPED_();
	static ref<java::lang::String> WIFI_P2P_PEERS_CHANGED_ACTION_();
	static ref<java::lang::String> WIFI_P2P_STATE_CHANGED_ACTION_();
	static jint WIFI_P2P_STATE_DISABLED_();
	static jint WIFI_P2P_STATE_ENABLED_();
	static ref<java::lang::String> WIFI_P2P_THIS_DEVICE_CHANGED_ACTION_();

	ref<android::net::wifi::p2p::WifiP2pManager_Channel> initialize(ref<android::content::Context> srcContext, ref<android::os::Looper> srcLooper, ref<android::net::wifi::p2p::WifiP2pManager_ChannelListener> listener);
	void discoverPeers(ref<android::net::wifi::p2p::WifiP2pManager_Channel> c, ref<android::net::wifi::p2p::WifiP2pManager_ActionListener> listener);
	void stopPeerDiscovery(ref<android::net::wifi::p2p::WifiP2pManager_Channel> c, ref<android::net::wifi::p2p::WifiP2pManager_ActionListener> listener);
	void connect(ref<android::net::wifi::p2p::WifiP2pManager_Channel> c, ref<android::net::wifi::p2p::WifiP2pConfig> config, ref<android::net::wifi::p2p::WifiP2pManager_ActionListener> listener);
	void cancelConnect(ref<android::net::wifi::p2p::WifiP2pManager_Channel> c, ref<android::net::wifi::p2p::WifiP2pManager_ActionListener> listener);
	void createGroup(ref<android::net::wifi::p2p::WifiP2pManager_Channel> c, ref<android::net::wifi::p2p::WifiP2pManager_ActionListener> listener);
	void removeGroup(ref<android::net::wifi::p2p::WifiP2pManager_Channel> c, ref<android::net::wifi::p2p::WifiP2pManager_ActionListener> listener);
	void addLocalService(ref<android::net::wifi::p2p::WifiP2pManager_Channel> c, ref<android::net::wifi::p2p::nsd::WifiP2pServiceInfo> servInfo, ref<android::net::wifi::p2p::WifiP2pManager_ActionListener> listener);
	void removeLocalService(ref<android::net::wifi::p2p::WifiP2pManager_Channel> c, ref<android::net::wifi::p2p::nsd::WifiP2pServiceInfo> servInfo, ref<android::net::wifi::p2p::WifiP2pManager_ActionListener> listener);
	void clearLocalServices(ref<android::net::wifi::p2p::WifiP2pManager_Channel> c, ref<android::net::wifi::p2p::WifiP2pManager_ActionListener> listener);
	void setServiceResponseListener(ref<android::net::wifi::p2p::WifiP2pManager_Channel> c, ref<android::net::wifi::p2p::WifiP2pManager_ServiceResponseListener> listener);
	void setDnsSdResponseListeners(ref<android::net::wifi::p2p::WifiP2pManager_Channel> c, ref<android::net::wifi::p2p::WifiP2pManager_DnsSdServiceResponseListener> servListener, ref<android::net::wifi::p2p::WifiP2pManager_DnsSdTxtRecordListener> txtListener);
	void setUpnpServiceResponseListener(ref<android::net::wifi::p2p::WifiP2pManager_Channel> c, ref<android::net::wifi::p2p::WifiP2pManager_UpnpServiceResponseListener> listener);
	void discoverServices(ref<android::net::wifi::p2p::WifiP2pManager_Channel> c, ref<android::net::wifi::p2p::WifiP2pManager_ActionListener> listener);
	void addServiceRequest(ref<android::net::wifi::p2p::WifiP2pManager_Channel> c, ref<android::net::wifi::p2p::nsd::WifiP2pServiceRequest> req, ref<android::net::wifi::p2p::WifiP2pManager_ActionListener> listener);
	void removeServiceRequest(ref<android::net::wifi::p2p::WifiP2pManager_Channel> c, ref<android::net::wifi::p2p::nsd::WifiP2pServiceRequest> req, ref<android::net::wifi::p2p::WifiP2pManager_ActionListener> listener);
	void clearServiceRequests(ref<android::net::wifi::p2p::WifiP2pManager_Channel> c, ref<android::net::wifi::p2p::WifiP2pManager_ActionListener> listener);
	void requestPeers(ref<android::net::wifi::p2p::WifiP2pManager_Channel> c, ref<android::net::wifi::p2p::WifiP2pManager_PeerListListener> listener);
	void requestConnectionInfo(ref<android::net::wifi::p2p::WifiP2pManager_Channel> c, ref<android::net::wifi::p2p::WifiP2pManager_ConnectionInfoListener> listener);
	void requestGroupInfo(ref<android::net::wifi::p2p::WifiP2pManager_Channel> c, ref<android::net::wifi::p2p::WifiP2pManager_GroupInfoListener> listener);

protected:

	WifiP2pManager(handle_type h) : base_(h) {}

};

} // namespace android::net::wifi::p2p
} // namespace scapix::java_api

#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/net/wifi/p2p/WifiP2pConfig.h>
#include <scapix/java_api/android/net/wifi/p2p/WifiP2pManager_ActionListener.h>
#include <scapix/java_api/android/net/wifi/p2p/WifiP2pManager_Channel.h>
#include <scapix/java_api/android/net/wifi/p2p/WifiP2pManager_ChannelListener.h>
#include <scapix/java_api/android/net/wifi/p2p/WifiP2pManager_ConnectionInfoListener.h>
#include <scapix/java_api/android/net/wifi/p2p/WifiP2pManager_DnsSdServiceResponseListener.h>
#include <scapix/java_api/android/net/wifi/p2p/WifiP2pManager_DnsSdTxtRecordListener.h>
#include <scapix/java_api/android/net/wifi/p2p/WifiP2pManager_GroupInfoListener.h>
#include <scapix/java_api/android/net/wifi/p2p/WifiP2pManager_PeerListListener.h>
#include <scapix/java_api/android/net/wifi/p2p/WifiP2pManager_ServiceResponseListener.h>
#include <scapix/java_api/android/net/wifi/p2p/WifiP2pManager_UpnpServiceResponseListener.h>
#include <scapix/java_api/android/net/wifi/p2p/nsd/WifiP2pServiceInfo.h>
#include <scapix/java_api/android/net/wifi/p2p/nsd/WifiP2pServiceRequest.h>
#include <scapix/java_api/android/os/Looper.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::net::wifi::p2p {

inline jint WifiP2pManager::BUSY_() { return get_static_field<SCAPIX_META_STRING("BUSY"), jint>(); }
inline jint WifiP2pManager::ERROR_() { return get_static_field<SCAPIX_META_STRING("ERROR"), jint>(); }
inline ref<java::lang::String> WifiP2pManager::EXTRA_DISCOVERY_STATE_() { return get_static_field<SCAPIX_META_STRING("EXTRA_DISCOVERY_STATE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> WifiP2pManager::EXTRA_NETWORK_INFO_() { return get_static_field<SCAPIX_META_STRING("EXTRA_NETWORK_INFO"), ref<java::lang::String>>(); }
inline ref<java::lang::String> WifiP2pManager::EXTRA_P2P_DEVICE_LIST_() { return get_static_field<SCAPIX_META_STRING("EXTRA_P2P_DEVICE_LIST"), ref<java::lang::String>>(); }
inline ref<java::lang::String> WifiP2pManager::EXTRA_WIFI_P2P_DEVICE_() { return get_static_field<SCAPIX_META_STRING("EXTRA_WIFI_P2P_DEVICE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> WifiP2pManager::EXTRA_WIFI_P2P_GROUP_() { return get_static_field<SCAPIX_META_STRING("EXTRA_WIFI_P2P_GROUP"), ref<java::lang::String>>(); }
inline ref<java::lang::String> WifiP2pManager::EXTRA_WIFI_P2P_INFO_() { return get_static_field<SCAPIX_META_STRING("EXTRA_WIFI_P2P_INFO"), ref<java::lang::String>>(); }
inline ref<java::lang::String> WifiP2pManager::EXTRA_WIFI_STATE_() { return get_static_field<SCAPIX_META_STRING("EXTRA_WIFI_STATE"), ref<java::lang::String>>(); }
inline jint WifiP2pManager::NO_SERVICE_REQUESTS_() { return get_static_field<SCAPIX_META_STRING("NO_SERVICE_REQUESTS"), jint>(); }
inline jint WifiP2pManager::P2P_UNSUPPORTED_() { return get_static_field<SCAPIX_META_STRING("P2P_UNSUPPORTED"), jint>(); }
inline ref<java::lang::String> WifiP2pManager::WIFI_P2P_CONNECTION_CHANGED_ACTION_() { return get_static_field<SCAPIX_META_STRING("WIFI_P2P_CONNECTION_CHANGED_ACTION"), ref<java::lang::String>>(); }
inline ref<java::lang::String> WifiP2pManager::WIFI_P2P_DISCOVERY_CHANGED_ACTION_() { return get_static_field<SCAPIX_META_STRING("WIFI_P2P_DISCOVERY_CHANGED_ACTION"), ref<java::lang::String>>(); }
inline jint WifiP2pManager::WIFI_P2P_DISCOVERY_STARTED_() { return get_static_field<SCAPIX_META_STRING("WIFI_P2P_DISCOVERY_STARTED"), jint>(); }
inline jint WifiP2pManager::WIFI_P2P_DISCOVERY_STOPPED_() { return get_static_field<SCAPIX_META_STRING("WIFI_P2P_DISCOVERY_STOPPED"), jint>(); }
inline ref<java::lang::String> WifiP2pManager::WIFI_P2P_PEERS_CHANGED_ACTION_() { return get_static_field<SCAPIX_META_STRING("WIFI_P2P_PEERS_CHANGED_ACTION"), ref<java::lang::String>>(); }
inline ref<java::lang::String> WifiP2pManager::WIFI_P2P_STATE_CHANGED_ACTION_() { return get_static_field<SCAPIX_META_STRING("WIFI_P2P_STATE_CHANGED_ACTION"), ref<java::lang::String>>(); }
inline jint WifiP2pManager::WIFI_P2P_STATE_DISABLED_() { return get_static_field<SCAPIX_META_STRING("WIFI_P2P_STATE_DISABLED"), jint>(); }
inline jint WifiP2pManager::WIFI_P2P_STATE_ENABLED_() { return get_static_field<SCAPIX_META_STRING("WIFI_P2P_STATE_ENABLED"), jint>(); }
inline ref<java::lang::String> WifiP2pManager::WIFI_P2P_THIS_DEVICE_CHANGED_ACTION_() { return get_static_field<SCAPIX_META_STRING("WIFI_P2P_THIS_DEVICE_CHANGED_ACTION"), ref<java::lang::String>>(); }
inline ref<android::net::wifi::p2p::WifiP2pManager_Channel> WifiP2pManager::initialize(ref<android::content::Context> srcContext, ref<android::os::Looper> srcLooper, ref<android::net::wifi::p2p::WifiP2pManager_ChannelListener> listener) { return call_method<SCAPIX_META_STRING("initialize"), ref<android::net::wifi::p2p::WifiP2pManager_Channel>>(srcContext, srcLooper, listener); }
inline void WifiP2pManager::discoverPeers(ref<android::net::wifi::p2p::WifiP2pManager_Channel> c, ref<android::net::wifi::p2p::WifiP2pManager_ActionListener> listener) { return call_method<SCAPIX_META_STRING("discoverPeers"), void>(c, listener); }
inline void WifiP2pManager::stopPeerDiscovery(ref<android::net::wifi::p2p::WifiP2pManager_Channel> c, ref<android::net::wifi::p2p::WifiP2pManager_ActionListener> listener) { return call_method<SCAPIX_META_STRING("stopPeerDiscovery"), void>(c, listener); }
inline void WifiP2pManager::connect(ref<android::net::wifi::p2p::WifiP2pManager_Channel> c, ref<android::net::wifi::p2p::WifiP2pConfig> config, ref<android::net::wifi::p2p::WifiP2pManager_ActionListener> listener) { return call_method<SCAPIX_META_STRING("connect"), void>(c, config, listener); }
inline void WifiP2pManager::cancelConnect(ref<android::net::wifi::p2p::WifiP2pManager_Channel> c, ref<android::net::wifi::p2p::WifiP2pManager_ActionListener> listener) { return call_method<SCAPIX_META_STRING("cancelConnect"), void>(c, listener); }
inline void WifiP2pManager::createGroup(ref<android::net::wifi::p2p::WifiP2pManager_Channel> c, ref<android::net::wifi::p2p::WifiP2pManager_ActionListener> listener) { return call_method<SCAPIX_META_STRING("createGroup"), void>(c, listener); }
inline void WifiP2pManager::removeGroup(ref<android::net::wifi::p2p::WifiP2pManager_Channel> c, ref<android::net::wifi::p2p::WifiP2pManager_ActionListener> listener) { return call_method<SCAPIX_META_STRING("removeGroup"), void>(c, listener); }
inline void WifiP2pManager::addLocalService(ref<android::net::wifi::p2p::WifiP2pManager_Channel> c, ref<android::net::wifi::p2p::nsd::WifiP2pServiceInfo> servInfo, ref<android::net::wifi::p2p::WifiP2pManager_ActionListener> listener) { return call_method<SCAPIX_META_STRING("addLocalService"), void>(c, servInfo, listener); }
inline void WifiP2pManager::removeLocalService(ref<android::net::wifi::p2p::WifiP2pManager_Channel> c, ref<android::net::wifi::p2p::nsd::WifiP2pServiceInfo> servInfo, ref<android::net::wifi::p2p::WifiP2pManager_ActionListener> listener) { return call_method<SCAPIX_META_STRING("removeLocalService"), void>(c, servInfo, listener); }
inline void WifiP2pManager::clearLocalServices(ref<android::net::wifi::p2p::WifiP2pManager_Channel> c, ref<android::net::wifi::p2p::WifiP2pManager_ActionListener> listener) { return call_method<SCAPIX_META_STRING("clearLocalServices"), void>(c, listener); }
inline void WifiP2pManager::setServiceResponseListener(ref<android::net::wifi::p2p::WifiP2pManager_Channel> c, ref<android::net::wifi::p2p::WifiP2pManager_ServiceResponseListener> listener) { return call_method<SCAPIX_META_STRING("setServiceResponseListener"), void>(c, listener); }
inline void WifiP2pManager::setDnsSdResponseListeners(ref<android::net::wifi::p2p::WifiP2pManager_Channel> c, ref<android::net::wifi::p2p::WifiP2pManager_DnsSdServiceResponseListener> servListener, ref<android::net::wifi::p2p::WifiP2pManager_DnsSdTxtRecordListener> txtListener) { return call_method<SCAPIX_META_STRING("setDnsSdResponseListeners"), void>(c, servListener, txtListener); }
inline void WifiP2pManager::setUpnpServiceResponseListener(ref<android::net::wifi::p2p::WifiP2pManager_Channel> c, ref<android::net::wifi::p2p::WifiP2pManager_UpnpServiceResponseListener> listener) { return call_method<SCAPIX_META_STRING("setUpnpServiceResponseListener"), void>(c, listener); }
inline void WifiP2pManager::discoverServices(ref<android::net::wifi::p2p::WifiP2pManager_Channel> c, ref<android::net::wifi::p2p::WifiP2pManager_ActionListener> listener) { return call_method<SCAPIX_META_STRING("discoverServices"), void>(c, listener); }
inline void WifiP2pManager::addServiceRequest(ref<android::net::wifi::p2p::WifiP2pManager_Channel> c, ref<android::net::wifi::p2p::nsd::WifiP2pServiceRequest> req, ref<android::net::wifi::p2p::WifiP2pManager_ActionListener> listener) { return call_method<SCAPIX_META_STRING("addServiceRequest"), void>(c, req, listener); }
inline void WifiP2pManager::removeServiceRequest(ref<android::net::wifi::p2p::WifiP2pManager_Channel> c, ref<android::net::wifi::p2p::nsd::WifiP2pServiceRequest> req, ref<android::net::wifi::p2p::WifiP2pManager_ActionListener> listener) { return call_method<SCAPIX_META_STRING("removeServiceRequest"), void>(c, req, listener); }
inline void WifiP2pManager::clearServiceRequests(ref<android::net::wifi::p2p::WifiP2pManager_Channel> c, ref<android::net::wifi::p2p::WifiP2pManager_ActionListener> listener) { return call_method<SCAPIX_META_STRING("clearServiceRequests"), void>(c, listener); }
inline void WifiP2pManager::requestPeers(ref<android::net::wifi::p2p::WifiP2pManager_Channel> c, ref<android::net::wifi::p2p::WifiP2pManager_PeerListListener> listener) { return call_method<SCAPIX_META_STRING("requestPeers"), void>(c, listener); }
inline void WifiP2pManager::requestConnectionInfo(ref<android::net::wifi::p2p::WifiP2pManager_Channel> c, ref<android::net::wifi::p2p::WifiP2pManager_ConnectionInfoListener> listener) { return call_method<SCAPIX_META_STRING("requestConnectionInfo"), void>(c, listener); }
inline void WifiP2pManager::requestGroupInfo(ref<android::net::wifi::p2p::WifiP2pManager_Channel> c, ref<android::net::wifi::p2p::WifiP2pManager_GroupInfoListener> listener) { return call_method<SCAPIX_META_STRING("requestGroupInfo"), void>(c, listener); }

} // namespace android::net::wifi::p2p
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_NET_WIFI_P2P_WIFIP2PMANAGER_H
