// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_ANDROID_NET_WIFI_P2P_WIFIP2PGROUP_H
#define SCAPIX_ANDROID_NET_WIFI_P2P_WIFIP2PGROUP_H

namespace scapix::java_api {

namespace android::net::wifi::p2p { class WifiP2pDevice; }
namespace android::os { class Parcel; }
namespace android::os { class Parcelable_Creator; }
namespace java::lang { class String; }
namespace java::util { class Collection; }

namespace android::net::wifi::p2p {

class WifiP2pGroup : public object_base<SCAPIX_META_STRING("android/net/wifi/p2p/WifiP2pGroup"),
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static ref<android::os::Parcelable_Creator> CREATOR_();

	static ref<WifiP2pGroup> new_object();
	static ref<WifiP2pGroup> new_object(ref<android::net::wifi::p2p::WifiP2pGroup> source);
	ref<java::lang::String> getNetworkName();
	jboolean isGroupOwner();
	ref<android::net::wifi::p2p::WifiP2pDevice> getOwner();
	ref<java::util::Collection> getClientList();
	ref<java::lang::String> getPassphrase();
	ref<java::lang::String> getInterface();
	ref<java::lang::String> toString();
	jint describeContents();
	void writeToParcel(ref<android::os::Parcel> dest, jint flags);

protected:

	WifiP2pGroup(handle_type h) : base_(h) {}

};

} // namespace android::net::wifi::p2p
} // namespace scapix::java_api

#include <scapix/java_api/android/net/wifi/p2p/WifiP2pDevice.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Collection.h>

namespace scapix::java_api {
namespace android::net::wifi::p2p {

inline ref<android::os::Parcelable_Creator> WifiP2pGroup::CREATOR_() { return get_static_field<SCAPIX_META_STRING("CREATOR"), ref<android::os::Parcelable_Creator>>(); }
inline ref<WifiP2pGroup> WifiP2pGroup::new_object() { return base_::new_object(); }
inline ref<WifiP2pGroup> WifiP2pGroup::new_object(ref<android::net::wifi::p2p::WifiP2pGroup> source) { return base_::new_object(source); }
inline ref<java::lang::String> WifiP2pGroup::getNetworkName() { return call_method<SCAPIX_META_STRING("getNetworkName"), ref<java::lang::String>>(); }
inline jboolean WifiP2pGroup::isGroupOwner() { return call_method<SCAPIX_META_STRING("isGroupOwner"), jboolean>(); }
inline ref<android::net::wifi::p2p::WifiP2pDevice> WifiP2pGroup::getOwner() { return call_method<SCAPIX_META_STRING("getOwner"), ref<android::net::wifi::p2p::WifiP2pDevice>>(); }
inline ref<java::util::Collection> WifiP2pGroup::getClientList() { return call_method<SCAPIX_META_STRING("getClientList"), ref<java::util::Collection>>(); }
inline ref<java::lang::String> WifiP2pGroup::getPassphrase() { return call_method<SCAPIX_META_STRING("getPassphrase"), ref<java::lang::String>>(); }
inline ref<java::lang::String> WifiP2pGroup::getInterface() { return call_method<SCAPIX_META_STRING("getInterface"), ref<java::lang::String>>(); }
inline ref<java::lang::String> WifiP2pGroup::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }
inline jint WifiP2pGroup::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }
inline void WifiP2pGroup::writeToParcel(ref<android::os::Parcel> dest, jint flags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(dest, flags); }

} // namespace android::net::wifi::p2p
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_NET_WIFI_P2P_WIFIP2PGROUP_H
