// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_ANDROID_NET_WIFI_P2P_WIFIP2PDEVICELIST_H
#define SCAPIX_ANDROID_NET_WIFI_P2P_WIFIP2PDEVICELIST_H

namespace scapix::java_api {

namespace android::net::wifi::p2p { class WifiP2pDevice; }
namespace android::os { class Parcel; }
namespace android::os { class Parcelable_Creator; }
namespace java::lang { class String; }
namespace java::util { class Collection; }

namespace android::net::wifi::p2p {

class WifiP2pDeviceList : public object_base<SCAPIX_META_STRING("android/net/wifi/p2p/WifiP2pDeviceList"),
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static ref<android::os::Parcelable_Creator> CREATOR_();

	static ref<WifiP2pDeviceList> new_object();
	static ref<WifiP2pDeviceList> new_object(ref<android::net::wifi::p2p::WifiP2pDeviceList> source);
	ref<android::net::wifi::p2p::WifiP2pDevice> get(ref<java::lang::String> deviceAddress);
	ref<java::util::Collection> getDeviceList();
	ref<java::lang::String> toString();
	jint describeContents();
	void writeToParcel(ref<android::os::Parcel> dest, jint flags);

protected:

	WifiP2pDeviceList(handle_type h) : base_(h) {}

};

} // namespace android::net::wifi::p2p
} // namespace scapix::java_api

#include <scapix/java_api/android/net/wifi/p2p/WifiP2pDevice.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Collection.h>

namespace scapix::java_api {
namespace android::net::wifi::p2p {

inline ref<android::os::Parcelable_Creator> WifiP2pDeviceList::CREATOR_() { return get_static_field<SCAPIX_META_STRING("CREATOR"), ref<android::os::Parcelable_Creator>>(); }
inline ref<WifiP2pDeviceList> WifiP2pDeviceList::new_object() { return base_::new_object(); }
inline ref<WifiP2pDeviceList> WifiP2pDeviceList::new_object(ref<android::net::wifi::p2p::WifiP2pDeviceList> source) { return base_::new_object(source); }
inline ref<android::net::wifi::p2p::WifiP2pDevice> WifiP2pDeviceList::get(ref<java::lang::String> deviceAddress) { return call_method<SCAPIX_META_STRING("get"), ref<android::net::wifi::p2p::WifiP2pDevice>>(deviceAddress); }
inline ref<java::util::Collection> WifiP2pDeviceList::getDeviceList() { return call_method<SCAPIX_META_STRING("getDeviceList"), ref<java::util::Collection>>(); }
inline ref<java::lang::String> WifiP2pDeviceList::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }
inline jint WifiP2pDeviceList::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }
inline void WifiP2pDeviceList::writeToParcel(ref<android::os::Parcel> dest, jint flags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(dest, flags); }

} // namespace android::net::wifi::p2p
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_NET_WIFI_P2P_WIFIP2PDEVICELIST_H
