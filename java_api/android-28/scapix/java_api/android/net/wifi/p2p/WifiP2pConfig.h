// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_ANDROID_NET_WIFI_P2P_WIFIP2PCONFIG_H
#define SCAPIX_ANDROID_NET_WIFI_P2P_WIFIP2PCONFIG_H

namespace scapix::java_api {

namespace android::net::wifi { class WpsInfo; }
namespace android::os { class Parcel; }
namespace android::os { class Parcelable_Creator; }
namespace java::lang { class String; }

namespace android::net::wifi::p2p {

class WifiP2pConfig : public object_base<SCAPIX_META_STRING("android/net/wifi/p2p/WifiP2pConfig"),
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static ref<android::os::Parcelable_Creator> CREATOR_();
	ref<java::lang::String> deviceAddress();
	void deviceAddress(ref<java::lang::String>);
	jint groupOwnerIntent();
	void groupOwnerIntent(jint);
	ref<android::net::wifi::WpsInfo> wps();
	void wps(ref<android::net::wifi::WpsInfo>);

	static ref<WifiP2pConfig> new_object();
	static ref<WifiP2pConfig> new_object(ref<android::net::wifi::p2p::WifiP2pConfig> source);
	ref<java::lang::String> toString();
	jint describeContents();
	void writeToParcel(ref<android::os::Parcel> dest, jint flags);

protected:

	WifiP2pConfig(handle_type h) : base_(h) {}

};

} // namespace android::net::wifi::p2p
} // namespace scapix::java_api

#include <scapix/java_api/android/net/wifi/WpsInfo.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::net::wifi::p2p {

inline ref<android::os::Parcelable_Creator> WifiP2pConfig::CREATOR_() { return get_static_field<SCAPIX_META_STRING("CREATOR"), ref<android::os::Parcelable_Creator>>(); }
inline ref<java::lang::String> WifiP2pConfig::deviceAddress() { return get_field<SCAPIX_META_STRING("deviceAddress"), ref<java::lang::String>>(); }
inline void WifiP2pConfig::deviceAddress(ref<java::lang::String> v) { set_field<SCAPIX_META_STRING("deviceAddress"), ref<java::lang::String>>(v); }
inline jint WifiP2pConfig::groupOwnerIntent() { return get_field<SCAPIX_META_STRING("groupOwnerIntent"), jint>(); }
inline void WifiP2pConfig::groupOwnerIntent(jint v) { set_field<SCAPIX_META_STRING("groupOwnerIntent"), jint>(v); }
inline ref<android::net::wifi::WpsInfo> WifiP2pConfig::wps() { return get_field<SCAPIX_META_STRING("wps"), ref<android::net::wifi::WpsInfo>>(); }
inline void WifiP2pConfig::wps(ref<android::net::wifi::WpsInfo> v) { set_field<SCAPIX_META_STRING("wps"), ref<android::net::wifi::WpsInfo>>(v); }
inline ref<WifiP2pConfig> WifiP2pConfig::new_object() { return base_::new_object(); }
inline ref<WifiP2pConfig> WifiP2pConfig::new_object(ref<android::net::wifi::p2p::WifiP2pConfig> source) { return base_::new_object(source); }
inline ref<java::lang::String> WifiP2pConfig::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }
inline jint WifiP2pConfig::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }
inline void WifiP2pConfig::writeToParcel(ref<android::os::Parcel> dest, jint flags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(dest, flags); }

} // namespace android::net::wifi::p2p
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_NET_WIFI_P2P_WIFIP2PCONFIG_H
