// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_ANDROID_NET_WIFI_HOTSPOT2_PPS_CREDENTIAL_SIMCREDENTIAL_H
#define SCAPIX_ANDROID_NET_WIFI_HOTSPOT2_PPS_CREDENTIAL_SIMCREDENTIAL_H

namespace scapix::java_api {

namespace android::os { class Parcel; }
namespace android::os { class Parcelable_Creator; }
namespace java::lang { class String; }

namespace android::net::wifi::hotspot2::pps {

class Credential_SimCredential : public object_base<SCAPIX_META_STRING("android/net/wifi/hotspot2/pps/Credential$SimCredential"),
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static ref<android::os::Parcelable_Creator> CREATOR_();

	static ref<Credential_SimCredential> new_object();
	static ref<Credential_SimCredential> new_object(ref<android::net::wifi::hotspot2::pps::Credential_SimCredential> source);
	void setImsi(ref<java::lang::String> imsi);
	ref<java::lang::String> getImsi();
	void setEapType(jint eapType);
	jint getEapType();
	jint describeContents();
	jboolean equals(ref<java::lang::Object> thatObject);
	jint hashCode();
	ref<java::lang::String> toString();
	void writeToParcel(ref<android::os::Parcel> dest, jint flags);

protected:

	Credential_SimCredential(handle_type h) : base_(h) {}

};

} // namespace android::net::wifi::hotspot2::pps
} // namespace scapix::java_api

#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::net::wifi::hotspot2::pps {

inline ref<android::os::Parcelable_Creator> Credential_SimCredential::CREATOR_() { return get_static_field<SCAPIX_META_STRING("CREATOR"), ref<android::os::Parcelable_Creator>>(); }
inline ref<Credential_SimCredential> Credential_SimCredential::new_object() { return base_::new_object(); }
inline ref<Credential_SimCredential> Credential_SimCredential::new_object(ref<android::net::wifi::hotspot2::pps::Credential_SimCredential> source) { return base_::new_object(source); }
inline void Credential_SimCredential::setImsi(ref<java::lang::String> imsi) { return call_method<SCAPIX_META_STRING("setImsi"), void>(imsi); }
inline ref<java::lang::String> Credential_SimCredential::getImsi() { return call_method<SCAPIX_META_STRING("getImsi"), ref<java::lang::String>>(); }
inline void Credential_SimCredential::setEapType(jint eapType) { return call_method<SCAPIX_META_STRING("setEapType"), void>(eapType); }
inline jint Credential_SimCredential::getEapType() { return call_method<SCAPIX_META_STRING("getEapType"), jint>(); }
inline jint Credential_SimCredential::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }
inline jboolean Credential_SimCredential::equals(ref<java::lang::Object> thatObject) { return call_method<SCAPIX_META_STRING("equals"), jboolean>(thatObject); }
inline jint Credential_SimCredential::hashCode() { return call_method<SCAPIX_META_STRING("hashCode"), jint>(); }
inline ref<java::lang::String> Credential_SimCredential::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }
inline void Credential_SimCredential::writeToParcel(ref<android::os::Parcel> dest, jint flags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(dest, flags); }

} // namespace android::net::wifi::hotspot2::pps
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_NET_WIFI_HOTSPOT2_PPS_CREDENTIAL_SIMCREDENTIAL_H
