// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_ANDROID_NET_WIFI_HOTSPOT2_PPS_CREDENTIAL_H
#define SCAPIX_ANDROID_NET_WIFI_HOTSPOT2_PPS_CREDENTIAL_H

namespace scapix::java_api {

namespace android::net::wifi::hotspot2::pps { class Credential_CertificateCredential; }
namespace android::net::wifi::hotspot2::pps { class Credential_SimCredential; }
namespace android::net::wifi::hotspot2::pps { class Credential_UserCredential; }
namespace android::os { class Parcel; }
namespace android::os { class Parcelable_Creator; }
namespace java::lang { class String; }
namespace java::security { class PrivateKey; }
namespace java::security::cert { class X509Certificate; }

namespace android::net::wifi::hotspot2::pps {

class Credential : public object_base<SCAPIX_META_STRING("android/net/wifi/hotspot2/pps/Credential"),
	java::lang::Object,
	android::os::Parcelable>
{
public:

	using UserCredential = Credential_UserCredential;
	using SimCredential = Credential_SimCredential;
	using CertificateCredential = Credential_CertificateCredential;

	static ref<android::os::Parcelable_Creator> CREATOR_();

	static ref<Credential> new_object();
	static ref<Credential> new_object(ref<android::net::wifi::hotspot2::pps::Credential> source);
	void setRealm(ref<java::lang::String> realm);
	ref<java::lang::String> getRealm();
	void setUserCredential(ref<android::net::wifi::hotspot2::pps::Credential_UserCredential> userCredential);
	ref<android::net::wifi::hotspot2::pps::Credential_UserCredential> getUserCredential();
	void setCertCredential(ref<android::net::wifi::hotspot2::pps::Credential_CertificateCredential> certCredential);
	ref<android::net::wifi::hotspot2::pps::Credential_CertificateCredential> getCertCredential();
	void setSimCredential(ref<android::net::wifi::hotspot2::pps::Credential_SimCredential> simCredential);
	ref<android::net::wifi::hotspot2::pps::Credential_SimCredential> getSimCredential();
	void setCaCertificate(ref<java::security::cert::X509Certificate> caCertificate);
	ref<java::security::cert::X509Certificate> getCaCertificate();
	void setClientCertificateChain(ref<link::java::array<java::security::cert::X509Certificate>> certificateChain);
	ref<link::java::array<java::security::cert::X509Certificate>> getClientCertificateChain();
	void setClientPrivateKey(ref<java::security::PrivateKey> clientPrivateKey);
	ref<java::security::PrivateKey> getClientPrivateKey();
	jint describeContents();
	void writeToParcel(ref<android::os::Parcel> dest, jint flags);
	jboolean equals(ref<java::lang::Object> thatObject);
	jint hashCode();
	ref<java::lang::String> toString();

protected:

	Credential(handle_type h) : base_(h) {}

};

} // namespace android::net::wifi::hotspot2::pps
} // namespace scapix::java_api

#include <scapix/java_api/android/net/wifi/hotspot2/pps/Credential_CertificateCredential.h>
#include <scapix/java_api/android/net/wifi/hotspot2/pps/Credential_SimCredential.h>
#include <scapix/java_api/android/net/wifi/hotspot2/pps/Credential_UserCredential.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/security/PrivateKey.h>
#include <scapix/java_api/java/security/cert/X509Certificate.h>

namespace scapix::java_api {
namespace android::net::wifi::hotspot2::pps {

inline ref<android::os::Parcelable_Creator> Credential::CREATOR_() { return get_static_field<SCAPIX_META_STRING("CREATOR"), ref<android::os::Parcelable_Creator>>(); }
inline ref<Credential> Credential::new_object() { return base_::new_object(); }
inline ref<Credential> Credential::new_object(ref<android::net::wifi::hotspot2::pps::Credential> source) { return base_::new_object(source); }
inline void Credential::setRealm(ref<java::lang::String> realm) { return call_method<SCAPIX_META_STRING("setRealm"), void>(realm); }
inline ref<java::lang::String> Credential::getRealm() { return call_method<SCAPIX_META_STRING("getRealm"), ref<java::lang::String>>(); }
inline void Credential::setUserCredential(ref<android::net::wifi::hotspot2::pps::Credential_UserCredential> userCredential) { return call_method<SCAPIX_META_STRING("setUserCredential"), void>(userCredential); }
inline ref<android::net::wifi::hotspot2::pps::Credential_UserCredential> Credential::getUserCredential() { return call_method<SCAPIX_META_STRING("getUserCredential"), ref<android::net::wifi::hotspot2::pps::Credential_UserCredential>>(); }
inline void Credential::setCertCredential(ref<android::net::wifi::hotspot2::pps::Credential_CertificateCredential> certCredential) { return call_method<SCAPIX_META_STRING("setCertCredential"), void>(certCredential); }
inline ref<android::net::wifi::hotspot2::pps::Credential_CertificateCredential> Credential::getCertCredential() { return call_method<SCAPIX_META_STRING("getCertCredential"), ref<android::net::wifi::hotspot2::pps::Credential_CertificateCredential>>(); }
inline void Credential::setSimCredential(ref<android::net::wifi::hotspot2::pps::Credential_SimCredential> simCredential) { return call_method<SCAPIX_META_STRING("setSimCredential"), void>(simCredential); }
inline ref<android::net::wifi::hotspot2::pps::Credential_SimCredential> Credential::getSimCredential() { return call_method<SCAPIX_META_STRING("getSimCredential"), ref<android::net::wifi::hotspot2::pps::Credential_SimCredential>>(); }
inline void Credential::setCaCertificate(ref<java::security::cert::X509Certificate> caCertificate) { return call_method<SCAPIX_META_STRING("setCaCertificate"), void>(caCertificate); }
inline ref<java::security::cert::X509Certificate> Credential::getCaCertificate() { return call_method<SCAPIX_META_STRING("getCaCertificate"), ref<java::security::cert::X509Certificate>>(); }
inline void Credential::setClientCertificateChain(ref<link::java::array<java::security::cert::X509Certificate>> certificateChain) { return call_method<SCAPIX_META_STRING("setClientCertificateChain"), void>(certificateChain); }
inline ref<link::java::array<java::security::cert::X509Certificate>> Credential::getClientCertificateChain() { return call_method<SCAPIX_META_STRING("getClientCertificateChain"), ref<link::java::array<java::security::cert::X509Certificate>>>(); }
inline void Credential::setClientPrivateKey(ref<java::security::PrivateKey> clientPrivateKey) { return call_method<SCAPIX_META_STRING("setClientPrivateKey"), void>(clientPrivateKey); }
inline ref<java::security::PrivateKey> Credential::getClientPrivateKey() { return call_method<SCAPIX_META_STRING("getClientPrivateKey"), ref<java::security::PrivateKey>>(); }
inline jint Credential::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }
inline void Credential::writeToParcel(ref<android::os::Parcel> dest, jint flags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(dest, flags); }
inline jboolean Credential::equals(ref<java::lang::Object> thatObject) { return call_method<SCAPIX_META_STRING("equals"), jboolean>(thatObject); }
inline jint Credential::hashCode() { return call_method<SCAPIX_META_STRING("hashCode"), jint>(); }
inline ref<java::lang::String> Credential::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }

} // namespace android::net::wifi::hotspot2::pps
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_NET_WIFI_HOTSPOT2_PPS_CREDENTIAL_H
