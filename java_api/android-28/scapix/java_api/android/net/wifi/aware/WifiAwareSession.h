// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/AutoCloseable.h>

#ifndef SCAPIX_ANDROID_NET_WIFI_AWARE_WIFIAWARESESSION_H
#define SCAPIX_ANDROID_NET_WIFI_AWARE_WIFIAWARESESSION_H

namespace scapix::java_api {

namespace android::net { class NetworkSpecifier; }
namespace android::net::wifi::aware { class DiscoverySessionCallback; }
namespace android::net::wifi::aware { class PublishConfig; }
namespace android::net::wifi::aware { class SubscribeConfig; }
namespace android::os { class Handler; }
namespace java::lang { class String; }

namespace android::net::wifi::aware {

class WifiAwareSession : public object_base<SCAPIX_META_STRING("android/net/wifi/aware/WifiAwareSession"),
	java::lang::Object,
	java::lang::AutoCloseable>
{
public:

	void close();
	void publish(ref<android::net::wifi::aware::PublishConfig> publishConfig, ref<android::net::wifi::aware::DiscoverySessionCallback> callback, ref<android::os::Handler> handler);
	void subscribe(ref<android::net::wifi::aware::SubscribeConfig> subscribeConfig, ref<android::net::wifi::aware::DiscoverySessionCallback> callback, ref<android::os::Handler> handler);
	ref<android::net::NetworkSpecifier> createNetworkSpecifierOpen(jint role, ref<link::java::array<jbyte>> peer);
	ref<android::net::NetworkSpecifier> createNetworkSpecifierPassphrase(jint role, ref<link::java::array<jbyte>> peer, ref<java::lang::String> passphrase);

protected:

	WifiAwareSession(handle_type h) : base_(h) {}

};

} // namespace android::net::wifi::aware
} // namespace scapix::java_api

#include <scapix/java_api/android/net/NetworkSpecifier.h>
#include <scapix/java_api/android/net/wifi/aware/DiscoverySessionCallback.h>
#include <scapix/java_api/android/net/wifi/aware/PublishConfig.h>
#include <scapix/java_api/android/net/wifi/aware/SubscribeConfig.h>
#include <scapix/java_api/android/os/Handler.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::net::wifi::aware {

inline void WifiAwareSession::close() { return call_method<SCAPIX_META_STRING("close"), void>(); }
inline void WifiAwareSession::publish(ref<android::net::wifi::aware::PublishConfig> publishConfig, ref<android::net::wifi::aware::DiscoverySessionCallback> callback, ref<android::os::Handler> handler) { return call_method<SCAPIX_META_STRING("publish"), void>(publishConfig, callback, handler); }
inline void WifiAwareSession::subscribe(ref<android::net::wifi::aware::SubscribeConfig> subscribeConfig, ref<android::net::wifi::aware::DiscoverySessionCallback> callback, ref<android::os::Handler> handler) { return call_method<SCAPIX_META_STRING("subscribe"), void>(subscribeConfig, callback, handler); }
inline ref<android::net::NetworkSpecifier> WifiAwareSession::createNetworkSpecifierOpen(jint role, ref<link::java::array<jbyte>> peer) { return call_method<SCAPIX_META_STRING("createNetworkSpecifierOpen"), ref<android::net::NetworkSpecifier>>(role, peer); }
inline ref<android::net::NetworkSpecifier> WifiAwareSession::createNetworkSpecifierPassphrase(jint role, ref<link::java::array<jbyte>> peer, ref<java::lang::String> passphrase) { return call_method<SCAPIX_META_STRING("createNetworkSpecifierPassphrase"), ref<android::net::NetworkSpecifier>>(role, peer, passphrase); }

} // namespace android::net::wifi::aware
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_NET_WIFI_AWARE_WIFIAWARESESSION_H
