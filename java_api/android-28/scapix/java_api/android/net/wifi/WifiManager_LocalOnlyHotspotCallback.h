// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_NET_WIFI_WIFIMANAGER_LOCALONLYHOTSPOTCALLBACK_H
#define SCAPIX_ANDROID_NET_WIFI_WIFIMANAGER_LOCALONLYHOTSPOTCALLBACK_H

namespace scapix::java_api {

namespace android::net::wifi { class WifiManager_LocalOnlyHotspotReservation; }

namespace android::net::wifi {

class WifiManager_LocalOnlyHotspotCallback : public object_base<SCAPIX_META_STRING("android/net/wifi/WifiManager$LocalOnlyHotspotCallback"),
	java::lang::Object>
{
public:

	static jint ERROR_GENERIC_();
	static jint ERROR_INCOMPATIBLE_MODE_();
	static jint ERROR_NO_CHANNEL_();
	static jint ERROR_TETHERING_DISALLOWED_();

	static ref<WifiManager_LocalOnlyHotspotCallback> new_object();
	void onStarted(ref<android::net::wifi::WifiManager_LocalOnlyHotspotReservation> reservation);
	void onStopped();
	void onFailed(jint reason);

protected:

	WifiManager_LocalOnlyHotspotCallback(handle_type h) : base_(h) {}

};

} // namespace android::net::wifi
} // namespace scapix::java_api

#include <scapix/java_api/android/net/wifi/WifiManager_LocalOnlyHotspotReservation.h>

namespace scapix::java_api {
namespace android::net::wifi {

inline jint WifiManager_LocalOnlyHotspotCallback::ERROR_GENERIC_() { return get_static_field<SCAPIX_META_STRING("ERROR_GENERIC"), jint>(); }
inline jint WifiManager_LocalOnlyHotspotCallback::ERROR_INCOMPATIBLE_MODE_() { return get_static_field<SCAPIX_META_STRING("ERROR_INCOMPATIBLE_MODE"), jint>(); }
inline jint WifiManager_LocalOnlyHotspotCallback::ERROR_NO_CHANNEL_() { return get_static_field<SCAPIX_META_STRING("ERROR_NO_CHANNEL"), jint>(); }
inline jint WifiManager_LocalOnlyHotspotCallback::ERROR_TETHERING_DISALLOWED_() { return get_static_field<SCAPIX_META_STRING("ERROR_TETHERING_DISALLOWED"), jint>(); }
inline ref<WifiManager_LocalOnlyHotspotCallback> WifiManager_LocalOnlyHotspotCallback::new_object() { return base_::new_object(); }
inline void WifiManager_LocalOnlyHotspotCallback::onStarted(ref<android::net::wifi::WifiManager_LocalOnlyHotspotReservation> reservation) { return call_method<SCAPIX_META_STRING("onStarted"), void>(reservation); }
inline void WifiManager_LocalOnlyHotspotCallback::onStopped() { return call_method<SCAPIX_META_STRING("onStopped"), void>(); }
inline void WifiManager_LocalOnlyHotspotCallback::onFailed(jint reason) { return call_method<SCAPIX_META_STRING("onFailed"), void>(reason); }

} // namespace android::net::wifi
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_NET_WIFI_WIFIMANAGER_LOCALONLYHOTSPOTCALLBACK_H
