// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_ANDROID_NET_WIFI_WIFIENTERPRISECONFIG_H
#define SCAPIX_ANDROID_NET_WIFI_WIFIENTERPRISECONFIG_H

namespace scapix::java_api {

namespace android::os { class Parcel; }
namespace android::os { class Parcelable_Creator; }
namespace java::lang { class String; }
namespace java::security { class PrivateKey; }
namespace java::security::cert { class X509Certificate; }
namespace android::net::wifi { class WifiEnterpriseConfig_Phase2; }
namespace android::net::wifi { class WifiEnterpriseConfig_Eap; }

namespace android::net::wifi {

class WifiEnterpriseConfig : public object_base<SCAPIX_META_STRING("android/net/wifi/WifiEnterpriseConfig"),
	java::lang::Object,
	android::os::Parcelable>
{
public:

	using Phase2 = WifiEnterpriseConfig_Phase2;
	using Eap = WifiEnterpriseConfig_Eap;

	static ref<android::os::Parcelable_Creator> CREATOR_();

	static ref<WifiEnterpriseConfig> new_object();
	static ref<WifiEnterpriseConfig> new_object(ref<android::net::wifi::WifiEnterpriseConfig> source);
	jint describeContents();
	void writeToParcel(ref<android::os::Parcel> dest, jint flags);
	void setEapMethod(jint eapMethod);
	jint getEapMethod();
	void setPhase2Method(jint phase2Method);
	jint getPhase2Method();
	void setIdentity(ref<java::lang::String> identity);
	ref<java::lang::String> getIdentity();
	void setAnonymousIdentity(ref<java::lang::String> anonymousIdentity);
	ref<java::lang::String> getAnonymousIdentity();
	void setPassword(ref<java::lang::String> password);
	ref<java::lang::String> getPassword();
	void setCaCertificate(ref<java::security::cert::X509Certificate> cert);
	ref<java::security::cert::X509Certificate> getCaCertificate();
	void setCaCertificates(ref<link::java::array<java::security::cert::X509Certificate>> certs);
	ref<link::java::array<java::security::cert::X509Certificate>> getCaCertificates();
	void setClientKeyEntry(ref<java::security::PrivateKey> privateKey, ref<java::security::cert::X509Certificate> clientCertificate);
	void setClientKeyEntryWithCertificateChain(ref<java::security::PrivateKey> privateKey, ref<link::java::array<java::security::cert::X509Certificate>> clientCertificateChain);
	ref<java::security::cert::X509Certificate> getClientCertificate();
	ref<link::java::array<java::security::cert::X509Certificate>> getClientCertificateChain();
	void setSubjectMatch(ref<java::lang::String> subjectMatch);
	ref<java::lang::String> getSubjectMatch();
	void setAltSubjectMatch(ref<java::lang::String> altSubjectMatch);
	ref<java::lang::String> getAltSubjectMatch();
	void setDomainSuffixMatch(ref<java::lang::String> domain);
	ref<java::lang::String> getDomainSuffixMatch();
	void setRealm(ref<java::lang::String> realm);
	ref<java::lang::String> getRealm();
	void setPlmn(ref<java::lang::String> plmn);
	ref<java::lang::String> getPlmn();
	ref<java::lang::String> toString();

protected:

	WifiEnterpriseConfig(handle_type h) : base_(h) {}

};

} // namespace android::net::wifi
} // namespace scapix::java_api

#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/security/PrivateKey.h>
#include <scapix/java_api/java/security/cert/X509Certificate.h>

namespace scapix::java_api {
namespace android::net::wifi {

inline ref<android::os::Parcelable_Creator> WifiEnterpriseConfig::CREATOR_() { return get_static_field<SCAPIX_META_STRING("CREATOR"), ref<android::os::Parcelable_Creator>>(); }
inline ref<WifiEnterpriseConfig> WifiEnterpriseConfig::new_object() { return base_::new_object(); }
inline ref<WifiEnterpriseConfig> WifiEnterpriseConfig::new_object(ref<android::net::wifi::WifiEnterpriseConfig> source) { return base_::new_object(source); }
inline jint WifiEnterpriseConfig::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }
inline void WifiEnterpriseConfig::writeToParcel(ref<android::os::Parcel> dest, jint flags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(dest, flags); }
inline void WifiEnterpriseConfig::setEapMethod(jint eapMethod) { return call_method<SCAPIX_META_STRING("setEapMethod"), void>(eapMethod); }
inline jint WifiEnterpriseConfig::getEapMethod() { return call_method<SCAPIX_META_STRING("getEapMethod"), jint>(); }
inline void WifiEnterpriseConfig::setPhase2Method(jint phase2Method) { return call_method<SCAPIX_META_STRING("setPhase2Method"), void>(phase2Method); }
inline jint WifiEnterpriseConfig::getPhase2Method() { return call_method<SCAPIX_META_STRING("getPhase2Method"), jint>(); }
inline void WifiEnterpriseConfig::setIdentity(ref<java::lang::String> identity) { return call_method<SCAPIX_META_STRING("setIdentity"), void>(identity); }
inline ref<java::lang::String> WifiEnterpriseConfig::getIdentity() { return call_method<SCAPIX_META_STRING("getIdentity"), ref<java::lang::String>>(); }
inline void WifiEnterpriseConfig::setAnonymousIdentity(ref<java::lang::String> anonymousIdentity) { return call_method<SCAPIX_META_STRING("setAnonymousIdentity"), void>(anonymousIdentity); }
inline ref<java::lang::String> WifiEnterpriseConfig::getAnonymousIdentity() { return call_method<SCAPIX_META_STRING("getAnonymousIdentity"), ref<java::lang::String>>(); }
inline void WifiEnterpriseConfig::setPassword(ref<java::lang::String> password) { return call_method<SCAPIX_META_STRING("setPassword"), void>(password); }
inline ref<java::lang::String> WifiEnterpriseConfig::getPassword() { return call_method<SCAPIX_META_STRING("getPassword"), ref<java::lang::String>>(); }
inline void WifiEnterpriseConfig::setCaCertificate(ref<java::security::cert::X509Certificate> cert) { return call_method<SCAPIX_META_STRING("setCaCertificate"), void>(cert); }
inline ref<java::security::cert::X509Certificate> WifiEnterpriseConfig::getCaCertificate() { return call_method<SCAPIX_META_STRING("getCaCertificate"), ref<java::security::cert::X509Certificate>>(); }
inline void WifiEnterpriseConfig::setCaCertificates(ref<link::java::array<java::security::cert::X509Certificate>> certs) { return call_method<SCAPIX_META_STRING("setCaCertificates"), void>(certs); }
inline ref<link::java::array<java::security::cert::X509Certificate>> WifiEnterpriseConfig::getCaCertificates() { return call_method<SCAPIX_META_STRING("getCaCertificates"), ref<link::java::array<java::security::cert::X509Certificate>>>(); }
inline void WifiEnterpriseConfig::setClientKeyEntry(ref<java::security::PrivateKey> privateKey, ref<java::security::cert::X509Certificate> clientCertificate) { return call_method<SCAPIX_META_STRING("setClientKeyEntry"), void>(privateKey, clientCertificate); }
inline void WifiEnterpriseConfig::setClientKeyEntryWithCertificateChain(ref<java::security::PrivateKey> privateKey, ref<link::java::array<java::security::cert::X509Certificate>> clientCertificateChain) { return call_method<SCAPIX_META_STRING("setClientKeyEntryWithCertificateChain"), void>(privateKey, clientCertificateChain); }
inline ref<java::security::cert::X509Certificate> WifiEnterpriseConfig::getClientCertificate() { return call_method<SCAPIX_META_STRING("getClientCertificate"), ref<java::security::cert::X509Certificate>>(); }
inline ref<link::java::array<java::security::cert::X509Certificate>> WifiEnterpriseConfig::getClientCertificateChain() { return call_method<SCAPIX_META_STRING("getClientCertificateChain"), ref<link::java::array<java::security::cert::X509Certificate>>>(); }
inline void WifiEnterpriseConfig::setSubjectMatch(ref<java::lang::String> subjectMatch) { return call_method<SCAPIX_META_STRING("setSubjectMatch"), void>(subjectMatch); }
inline ref<java::lang::String> WifiEnterpriseConfig::getSubjectMatch() { return call_method<SCAPIX_META_STRING("getSubjectMatch"), ref<java::lang::String>>(); }
inline void WifiEnterpriseConfig::setAltSubjectMatch(ref<java::lang::String> altSubjectMatch) { return call_method<SCAPIX_META_STRING("setAltSubjectMatch"), void>(altSubjectMatch); }
inline ref<java::lang::String> WifiEnterpriseConfig::getAltSubjectMatch() { return call_method<SCAPIX_META_STRING("getAltSubjectMatch"), ref<java::lang::String>>(); }
inline void WifiEnterpriseConfig::setDomainSuffixMatch(ref<java::lang::String> domain) { return call_method<SCAPIX_META_STRING("setDomainSuffixMatch"), void>(domain); }
inline ref<java::lang::String> WifiEnterpriseConfig::getDomainSuffixMatch() { return call_method<SCAPIX_META_STRING("getDomainSuffixMatch"), ref<java::lang::String>>(); }
inline void WifiEnterpriseConfig::setRealm(ref<java::lang::String> realm) { return call_method<SCAPIX_META_STRING("setRealm"), void>(realm); }
inline ref<java::lang::String> WifiEnterpriseConfig::getRealm() { return call_method<SCAPIX_META_STRING("getRealm"), ref<java::lang::String>>(); }
inline void WifiEnterpriseConfig::setPlmn(ref<java::lang::String> plmn) { return call_method<SCAPIX_META_STRING("setPlmn"), void>(plmn); }
inline ref<java::lang::String> WifiEnterpriseConfig::getPlmn() { return call_method<SCAPIX_META_STRING("getPlmn"), ref<java::lang::String>>(); }
inline ref<java::lang::String> WifiEnterpriseConfig::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }

} // namespace android::net::wifi
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_NET_WIFI_WIFIENTERPRISECONFIG_H
