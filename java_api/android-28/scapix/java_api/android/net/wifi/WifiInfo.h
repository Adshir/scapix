// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_ANDROID_NET_WIFI_WIFIINFO_H
#define SCAPIX_ANDROID_NET_WIFI_WIFIINFO_H

namespace scapix::java_api {

namespace android::net { class NetworkInfo_DetailedState; }
namespace android::net::wifi { class SupplicantState; }
namespace android::os { class Parcel; }
namespace java::lang { class String; }

namespace android::net::wifi {

class WifiInfo : public object_base<SCAPIX_META_STRING("android/net/wifi/WifiInfo"),
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static ref<java::lang::String> FREQUENCY_UNITS_();
	static ref<java::lang::String> LINK_SPEED_UNITS_();

	ref<java::lang::String> getSSID();
	ref<java::lang::String> getBSSID();
	jint getRssi();
	jint getLinkSpeed();
	jint getFrequency();
	ref<java::lang::String> getMacAddress();
	jint getNetworkId();
	ref<android::net::wifi::SupplicantState> getSupplicantState();
	jint getIpAddress();
	jboolean getHiddenSSID();
	static ref<android::net::NetworkInfo_DetailedState> getDetailedStateOf(ref<android::net::wifi::SupplicantState> suppState);
	ref<java::lang::String> toString();
	jint describeContents();
	void writeToParcel(ref<android::os::Parcel> dest, jint flags);

protected:

	WifiInfo(handle_type h) : base_(h) {}

};

} // namespace android::net::wifi
} // namespace scapix::java_api

#include <scapix/java_api/android/net/NetworkInfo_DetailedState.h>
#include <scapix/java_api/android/net/wifi/SupplicantState.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::net::wifi {

inline ref<java::lang::String> WifiInfo::FREQUENCY_UNITS_() { return get_static_field<SCAPIX_META_STRING("FREQUENCY_UNITS"), ref<java::lang::String>>(); }
inline ref<java::lang::String> WifiInfo::LINK_SPEED_UNITS_() { return get_static_field<SCAPIX_META_STRING("LINK_SPEED_UNITS"), ref<java::lang::String>>(); }
inline ref<java::lang::String> WifiInfo::getSSID() { return call_method<SCAPIX_META_STRING("getSSID"), ref<java::lang::String>>(); }
inline ref<java::lang::String> WifiInfo::getBSSID() { return call_method<SCAPIX_META_STRING("getBSSID"), ref<java::lang::String>>(); }
inline jint WifiInfo::getRssi() { return call_method<SCAPIX_META_STRING("getRssi"), jint>(); }
inline jint WifiInfo::getLinkSpeed() { return call_method<SCAPIX_META_STRING("getLinkSpeed"), jint>(); }
inline jint WifiInfo::getFrequency() { return call_method<SCAPIX_META_STRING("getFrequency"), jint>(); }
inline ref<java::lang::String> WifiInfo::getMacAddress() { return call_method<SCAPIX_META_STRING("getMacAddress"), ref<java::lang::String>>(); }
inline jint WifiInfo::getNetworkId() { return call_method<SCAPIX_META_STRING("getNetworkId"), jint>(); }
inline ref<android::net::wifi::SupplicantState> WifiInfo::getSupplicantState() { return call_method<SCAPIX_META_STRING("getSupplicantState"), ref<android::net::wifi::SupplicantState>>(); }
inline jint WifiInfo::getIpAddress() { return call_method<SCAPIX_META_STRING("getIpAddress"), jint>(); }
inline jboolean WifiInfo::getHiddenSSID() { return call_method<SCAPIX_META_STRING("getHiddenSSID"), jboolean>(); }
inline ref<android::net::NetworkInfo_DetailedState> WifiInfo::getDetailedStateOf(ref<android::net::wifi::SupplicantState> suppState) { return call_static_method<SCAPIX_META_STRING("getDetailedStateOf"), ref<android::net::NetworkInfo_DetailedState>>(suppState); }
inline ref<java::lang::String> WifiInfo::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }
inline jint WifiInfo::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }
inline void WifiInfo::writeToParcel(ref<android::os::Parcel> dest, jint flags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(dest, flags); }

} // namespace android::net::wifi
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_NET_WIFI_WIFIINFO_H
