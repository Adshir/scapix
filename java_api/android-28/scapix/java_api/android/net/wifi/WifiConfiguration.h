// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_ANDROID_NET_WIFI_WIFICONFIGURATION_H
#define SCAPIX_ANDROID_NET_WIFI_WIFICONFIGURATION_H

namespace scapix::java_api {

namespace android::net { class ProxyInfo; }
namespace android::net::wifi { class WifiEnterpriseConfig; }
namespace android::os { class Parcel; }
namespace java::lang { class String; }
namespace java::util { class BitSet; }
namespace android::net::wifi { class WifiConfiguration_Status; }
namespace android::net::wifi { class WifiConfiguration_Protocol; }
namespace android::net::wifi { class WifiConfiguration_PairwiseCipher; }
namespace android::net::wifi { class WifiConfiguration_KeyMgmt; }
namespace android::net::wifi { class WifiConfiguration_GroupCipher; }
namespace android::net::wifi { class WifiConfiguration_AuthAlgorithm; }

namespace android::net::wifi {

class WifiConfiguration : public object_base<SCAPIX_META_STRING("android/net/wifi/WifiConfiguration"),
	java::lang::Object,
	android::os::Parcelable>
{
public:

	using Status = WifiConfiguration_Status;
	using Protocol = WifiConfiguration_Protocol;
	using PairwiseCipher = WifiConfiguration_PairwiseCipher;
	using KeyMgmt = WifiConfiguration_KeyMgmt;
	using GroupCipher = WifiConfiguration_GroupCipher;
	using AuthAlgorithm = WifiConfiguration_AuthAlgorithm;

	ref<java::lang::String> BSSID_();
	void BSSID_(ref<java::lang::String>);
	ref<java::lang::String> FQDN_();
	void FQDN_(ref<java::lang::String>);
	ref<java::lang::String> SSID_();
	void SSID_(ref<java::lang::String>);
	ref<java::util::BitSet> allowedAuthAlgorithms();
	void allowedAuthAlgorithms(ref<java::util::BitSet>);
	ref<java::util::BitSet> allowedGroupCiphers();
	void allowedGroupCiphers(ref<java::util::BitSet>);
	ref<java::util::BitSet> allowedKeyManagement();
	void allowedKeyManagement(ref<java::util::BitSet>);
	ref<java::util::BitSet> allowedPairwiseCiphers();
	void allowedPairwiseCiphers(ref<java::util::BitSet>);
	ref<java::util::BitSet> allowedProtocols();
	void allowedProtocols(ref<java::util::BitSet>);
	ref<android::net::wifi::WifiEnterpriseConfig> enterpriseConfig();
	void enterpriseConfig(ref<android::net::wifi::WifiEnterpriseConfig>);
	jboolean hiddenSSID();
	void hiddenSSID(jboolean);
	jboolean isHomeProviderNetwork();
	void isHomeProviderNetwork(jboolean);
	jint networkId();
	void networkId(jint);
	ref<java::lang::String> preSharedKey();
	void preSharedKey(ref<java::lang::String>);
	jint priority();
	void priority(jint);
	ref<java::lang::String> providerFriendlyName();
	void providerFriendlyName(ref<java::lang::String>);
	ref<link::java::array<jlong>> roamingConsortiumIds();
	void roamingConsortiumIds(ref<link::java::array<jlong>>);
	jint status();
	void status(jint);
	ref<link::java::array<java::lang::String>> wepKeys();
	void wepKeys(ref<link::java::array<java::lang::String>>);
	jint wepTxKeyIndex();
	void wepTxKeyIndex(jint);

	static ref<WifiConfiguration> new_object();
	jboolean isPasspoint();
	ref<java::lang::String> toString();
	ref<android::net::ProxyInfo> getHttpProxy();
	void setHttpProxy(ref<android::net::ProxyInfo> httpProxy);
	jint describeContents();
	void writeToParcel(ref<android::os::Parcel> dest, jint flags);

protected:

	WifiConfiguration(handle_type h) : base_(h) {}

};

} // namespace android::net::wifi
} // namespace scapix::java_api

#include <scapix/java_api/android/net/ProxyInfo.h>
#include <scapix/java_api/android/net/wifi/WifiEnterpriseConfig.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/BitSet.h>

namespace scapix::java_api {
namespace android::net::wifi {

inline ref<java::lang::String> WifiConfiguration::BSSID_() { return get_field<SCAPIX_META_STRING("BSSID"), ref<java::lang::String>>(); }
inline void WifiConfiguration::BSSID_(ref<java::lang::String> v) { set_field<SCAPIX_META_STRING("BSSID"), ref<java::lang::String>>(v); }
inline ref<java::lang::String> WifiConfiguration::FQDN_() { return get_field<SCAPIX_META_STRING("FQDN"), ref<java::lang::String>>(); }
inline void WifiConfiguration::FQDN_(ref<java::lang::String> v) { set_field<SCAPIX_META_STRING("FQDN"), ref<java::lang::String>>(v); }
inline ref<java::lang::String> WifiConfiguration::SSID_() { return get_field<SCAPIX_META_STRING("SSID"), ref<java::lang::String>>(); }
inline void WifiConfiguration::SSID_(ref<java::lang::String> v) { set_field<SCAPIX_META_STRING("SSID"), ref<java::lang::String>>(v); }
inline ref<java::util::BitSet> WifiConfiguration::allowedAuthAlgorithms() { return get_field<SCAPIX_META_STRING("allowedAuthAlgorithms"), ref<java::util::BitSet>>(); }
inline void WifiConfiguration::allowedAuthAlgorithms(ref<java::util::BitSet> v) { set_field<SCAPIX_META_STRING("allowedAuthAlgorithms"), ref<java::util::BitSet>>(v); }
inline ref<java::util::BitSet> WifiConfiguration::allowedGroupCiphers() { return get_field<SCAPIX_META_STRING("allowedGroupCiphers"), ref<java::util::BitSet>>(); }
inline void WifiConfiguration::allowedGroupCiphers(ref<java::util::BitSet> v) { set_field<SCAPIX_META_STRING("allowedGroupCiphers"), ref<java::util::BitSet>>(v); }
inline ref<java::util::BitSet> WifiConfiguration::allowedKeyManagement() { return get_field<SCAPIX_META_STRING("allowedKeyManagement"), ref<java::util::BitSet>>(); }
inline void WifiConfiguration::allowedKeyManagement(ref<java::util::BitSet> v) { set_field<SCAPIX_META_STRING("allowedKeyManagement"), ref<java::util::BitSet>>(v); }
inline ref<java::util::BitSet> WifiConfiguration::allowedPairwiseCiphers() { return get_field<SCAPIX_META_STRING("allowedPairwiseCiphers"), ref<java::util::BitSet>>(); }
inline void WifiConfiguration::allowedPairwiseCiphers(ref<java::util::BitSet> v) { set_field<SCAPIX_META_STRING("allowedPairwiseCiphers"), ref<java::util::BitSet>>(v); }
inline ref<java::util::BitSet> WifiConfiguration::allowedProtocols() { return get_field<SCAPIX_META_STRING("allowedProtocols"), ref<java::util::BitSet>>(); }
inline void WifiConfiguration::allowedProtocols(ref<java::util::BitSet> v) { set_field<SCAPIX_META_STRING("allowedProtocols"), ref<java::util::BitSet>>(v); }
inline ref<android::net::wifi::WifiEnterpriseConfig> WifiConfiguration::enterpriseConfig() { return get_field<SCAPIX_META_STRING("enterpriseConfig"), ref<android::net::wifi::WifiEnterpriseConfig>>(); }
inline void WifiConfiguration::enterpriseConfig(ref<android::net::wifi::WifiEnterpriseConfig> v) { set_field<SCAPIX_META_STRING("enterpriseConfig"), ref<android::net::wifi::WifiEnterpriseConfig>>(v); }
inline jboolean WifiConfiguration::hiddenSSID() { return get_field<SCAPIX_META_STRING("hiddenSSID"), jboolean>(); }
inline void WifiConfiguration::hiddenSSID(jboolean v) { set_field<SCAPIX_META_STRING("hiddenSSID"), jboolean>(v); }
inline jboolean WifiConfiguration::isHomeProviderNetwork() { return get_field<SCAPIX_META_STRING("isHomeProviderNetwork"), jboolean>(); }
inline void WifiConfiguration::isHomeProviderNetwork(jboolean v) { set_field<SCAPIX_META_STRING("isHomeProviderNetwork"), jboolean>(v); }
inline jint WifiConfiguration::networkId() { return get_field<SCAPIX_META_STRING("networkId"), jint>(); }
inline void WifiConfiguration::networkId(jint v) { set_field<SCAPIX_META_STRING("networkId"), jint>(v); }
inline ref<java::lang::String> WifiConfiguration::preSharedKey() { return get_field<SCAPIX_META_STRING("preSharedKey"), ref<java::lang::String>>(); }
inline void WifiConfiguration::preSharedKey(ref<java::lang::String> v) { set_field<SCAPIX_META_STRING("preSharedKey"), ref<java::lang::String>>(v); }
inline jint WifiConfiguration::priority() { return get_field<SCAPIX_META_STRING("priority"), jint>(); }
inline void WifiConfiguration::priority(jint v) { set_field<SCAPIX_META_STRING("priority"), jint>(v); }
inline ref<java::lang::String> WifiConfiguration::providerFriendlyName() { return get_field<SCAPIX_META_STRING("providerFriendlyName"), ref<java::lang::String>>(); }
inline void WifiConfiguration::providerFriendlyName(ref<java::lang::String> v) { set_field<SCAPIX_META_STRING("providerFriendlyName"), ref<java::lang::String>>(v); }
inline ref<link::java::array<jlong>> WifiConfiguration::roamingConsortiumIds() { return get_field<SCAPIX_META_STRING("roamingConsortiumIds"), ref<link::java::array<jlong>>>(); }
inline void WifiConfiguration::roamingConsortiumIds(ref<link::java::array<jlong>> v) { set_field<SCAPIX_META_STRING("roamingConsortiumIds"), ref<link::java::array<jlong>>>(v); }
inline jint WifiConfiguration::status() { return get_field<SCAPIX_META_STRING("status"), jint>(); }
inline void WifiConfiguration::status(jint v) { set_field<SCAPIX_META_STRING("status"), jint>(v); }
inline ref<link::java::array<java::lang::String>> WifiConfiguration::wepKeys() { return get_field<SCAPIX_META_STRING("wepKeys"), ref<link::java::array<java::lang::String>>>(); }
inline void WifiConfiguration::wepKeys(ref<link::java::array<java::lang::String>> v) { set_field<SCAPIX_META_STRING("wepKeys"), ref<link::java::array<java::lang::String>>>(v); }
inline jint WifiConfiguration::wepTxKeyIndex() { return get_field<SCAPIX_META_STRING("wepTxKeyIndex"), jint>(); }
inline void WifiConfiguration::wepTxKeyIndex(jint v) { set_field<SCAPIX_META_STRING("wepTxKeyIndex"), jint>(v); }
inline ref<WifiConfiguration> WifiConfiguration::new_object() { return base_::new_object(); }
inline jboolean WifiConfiguration::isPasspoint() { return call_method<SCAPIX_META_STRING("isPasspoint"), jboolean>(); }
inline ref<java::lang::String> WifiConfiguration::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }
inline ref<android::net::ProxyInfo> WifiConfiguration::getHttpProxy() { return call_method<SCAPIX_META_STRING("getHttpProxy"), ref<android::net::ProxyInfo>>(); }
inline void WifiConfiguration::setHttpProxy(ref<android::net::ProxyInfo> httpProxy) { return call_method<SCAPIX_META_STRING("setHttpProxy"), void>(httpProxy); }
inline jint WifiConfiguration::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }
inline void WifiConfiguration::writeToParcel(ref<android::os::Parcel> dest, jint flags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(dest, flags); }

} // namespace android::net::wifi
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_NET_WIFI_WIFICONFIGURATION_H
