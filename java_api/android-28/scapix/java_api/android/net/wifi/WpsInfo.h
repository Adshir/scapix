// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_ANDROID_NET_WIFI_WPSINFO_H
#define SCAPIX_ANDROID_NET_WIFI_WPSINFO_H

namespace scapix::java_api {

namespace android::os { class Parcel; }
namespace android::os { class Parcelable_Creator; }
namespace java::lang { class String; }

namespace android::net::wifi {

class WpsInfo : public object_base<SCAPIX_META_STRING("android/net/wifi/WpsInfo"),
	java::lang::Object,
	android::os::Parcelable>
{
public:

	ref<java::lang::String> BSSID_();
	void BSSID_(ref<java::lang::String>);
	static ref<android::os::Parcelable_Creator> CREATOR_();
	static jint DISPLAY_();
	static jint INVALID_();
	static jint KEYPAD_();
	static jint LABEL_();
	static jint PBC_();
	ref<java::lang::String> pin();
	void pin(ref<java::lang::String>);
	jint setup();
	void setup(jint);

	static ref<WpsInfo> new_object();
	static ref<WpsInfo> new_object(ref<android::net::wifi::WpsInfo> source);
	ref<java::lang::String> toString();
	jint describeContents();
	void writeToParcel(ref<android::os::Parcel> dest, jint flags);

protected:

	WpsInfo(handle_type h) : base_(h) {}

};

} // namespace android::net::wifi
} // namespace scapix::java_api

#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::net::wifi {

inline ref<java::lang::String> WpsInfo::BSSID_() { return get_field<SCAPIX_META_STRING("BSSID"), ref<java::lang::String>>(); }
inline void WpsInfo::BSSID_(ref<java::lang::String> v) { set_field<SCAPIX_META_STRING("BSSID"), ref<java::lang::String>>(v); }
inline ref<android::os::Parcelable_Creator> WpsInfo::CREATOR_() { return get_static_field<SCAPIX_META_STRING("CREATOR"), ref<android::os::Parcelable_Creator>>(); }
inline jint WpsInfo::DISPLAY_() { return get_static_field<SCAPIX_META_STRING("DISPLAY"), jint>(); }
inline jint WpsInfo::INVALID_() { return get_static_field<SCAPIX_META_STRING("INVALID"), jint>(); }
inline jint WpsInfo::KEYPAD_() { return get_static_field<SCAPIX_META_STRING("KEYPAD"), jint>(); }
inline jint WpsInfo::LABEL_() { return get_static_field<SCAPIX_META_STRING("LABEL"), jint>(); }
inline jint WpsInfo::PBC_() { return get_static_field<SCAPIX_META_STRING("PBC"), jint>(); }
inline ref<java::lang::String> WpsInfo::pin() { return get_field<SCAPIX_META_STRING("pin"), ref<java::lang::String>>(); }
inline void WpsInfo::pin(ref<java::lang::String> v) { set_field<SCAPIX_META_STRING("pin"), ref<java::lang::String>>(v); }
inline jint WpsInfo::setup() { return get_field<SCAPIX_META_STRING("setup"), jint>(); }
inline void WpsInfo::setup(jint v) { set_field<SCAPIX_META_STRING("setup"), jint>(v); }
inline ref<WpsInfo> WpsInfo::new_object() { return base_::new_object(); }
inline ref<WpsInfo> WpsInfo::new_object(ref<android::net::wifi::WpsInfo> source) { return base_::new_object(source); }
inline ref<java::lang::String> WpsInfo::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }
inline jint WpsInfo::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }
inline void WpsInfo::writeToParcel(ref<android::os::Parcel> dest, jint flags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(dest, flags); }

} // namespace android::net::wifi
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_NET_WIFI_WPSINFO_H
