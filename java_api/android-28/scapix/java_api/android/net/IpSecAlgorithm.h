// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_ANDROID_NET_IPSECALGORITHM_H
#define SCAPIX_ANDROID_NET_IPSECALGORITHM_H

namespace scapix::java_api {

namespace android::os { class Parcel; }
namespace android::os { class Parcelable_Creator; }
namespace java::lang { class String; }

namespace android::net {

class IpSecAlgorithm : public object_base<SCAPIX_META_STRING("android/net/IpSecAlgorithm"),
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static ref<java::lang::String> AUTH_CRYPT_AES_GCM_();
	static ref<java::lang::String> AUTH_HMAC_MD5_();
	static ref<java::lang::String> AUTH_HMAC_SHA1_();
	static ref<java::lang::String> AUTH_HMAC_SHA256_();
	static ref<java::lang::String> AUTH_HMAC_SHA384_();
	static ref<java::lang::String> AUTH_HMAC_SHA512_();
	static ref<android::os::Parcelable_Creator> CREATOR_();
	static ref<java::lang::String> CRYPT_AES_CBC_();

	static ref<IpSecAlgorithm> new_object(ref<java::lang::String> algorithm, ref<link::java::array<jbyte>> key);
	static ref<IpSecAlgorithm> new_object(ref<java::lang::String> algorithm, ref<link::java::array<jbyte>> key, jint truncLenBits);
	ref<java::lang::String> getName();
	ref<link::java::array<jbyte>> getKey();
	jint getTruncationLengthBits();
	jint describeContents();
	void writeToParcel(ref<android::os::Parcel> out, jint flags);
	ref<java::lang::String> toString();

protected:

	IpSecAlgorithm(handle_type h) : base_(h) {}

};

} // namespace android::net
} // namespace scapix::java_api

#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::net {

inline ref<java::lang::String> IpSecAlgorithm::AUTH_CRYPT_AES_GCM_() { return get_static_field<SCAPIX_META_STRING("AUTH_CRYPT_AES_GCM"), ref<java::lang::String>>(); }
inline ref<java::lang::String> IpSecAlgorithm::AUTH_HMAC_MD5_() { return get_static_field<SCAPIX_META_STRING("AUTH_HMAC_MD5"), ref<java::lang::String>>(); }
inline ref<java::lang::String> IpSecAlgorithm::AUTH_HMAC_SHA1_() { return get_static_field<SCAPIX_META_STRING("AUTH_HMAC_SHA1"), ref<java::lang::String>>(); }
inline ref<java::lang::String> IpSecAlgorithm::AUTH_HMAC_SHA256_() { return get_static_field<SCAPIX_META_STRING("AUTH_HMAC_SHA256"), ref<java::lang::String>>(); }
inline ref<java::lang::String> IpSecAlgorithm::AUTH_HMAC_SHA384_() { return get_static_field<SCAPIX_META_STRING("AUTH_HMAC_SHA384"), ref<java::lang::String>>(); }
inline ref<java::lang::String> IpSecAlgorithm::AUTH_HMAC_SHA512_() { return get_static_field<SCAPIX_META_STRING("AUTH_HMAC_SHA512"), ref<java::lang::String>>(); }
inline ref<android::os::Parcelable_Creator> IpSecAlgorithm::CREATOR_() { return get_static_field<SCAPIX_META_STRING("CREATOR"), ref<android::os::Parcelable_Creator>>(); }
inline ref<java::lang::String> IpSecAlgorithm::CRYPT_AES_CBC_() { return get_static_field<SCAPIX_META_STRING("CRYPT_AES_CBC"), ref<java::lang::String>>(); }
inline ref<IpSecAlgorithm> IpSecAlgorithm::new_object(ref<java::lang::String> algorithm, ref<link::java::array<jbyte>> key) { return base_::new_object(algorithm, key); }
inline ref<IpSecAlgorithm> IpSecAlgorithm::new_object(ref<java::lang::String> algorithm, ref<link::java::array<jbyte>> key, jint truncLenBits) { return base_::new_object(algorithm, key, truncLenBits); }
inline ref<java::lang::String> IpSecAlgorithm::getName() { return call_method<SCAPIX_META_STRING("getName"), ref<java::lang::String>>(); }
inline ref<link::java::array<jbyte>> IpSecAlgorithm::getKey() { return call_method<SCAPIX_META_STRING("getKey"), ref<link::java::array<jbyte>>>(); }
inline jint IpSecAlgorithm::getTruncationLengthBits() { return call_method<SCAPIX_META_STRING("getTruncationLengthBits"), jint>(); }
inline jint IpSecAlgorithm::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }
inline void IpSecAlgorithm::writeToParcel(ref<android::os::Parcel> out, jint flags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(out, flags); }
inline ref<java::lang::String> IpSecAlgorithm::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }

} // namespace android::net
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_NET_IPSECALGORITHM_H
