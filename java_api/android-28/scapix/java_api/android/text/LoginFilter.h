// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/text/InputFilter.h>

#ifndef SCAPIX_ANDROID_TEXT_LOGINFILTER_H
#define SCAPIX_ANDROID_TEXT_LOGINFILTER_H

namespace scapix::java_api {

namespace android::text { class Spanned; }
namespace java::lang { class CharSequence; }
namespace android::text { class LoginFilter_UsernameFilterGeneric; }
namespace android::text { class LoginFilter_UsernameFilterGMail; }
namespace android::text { class LoginFilter_PasswordFilterGMail; }

namespace android::text {

class LoginFilter : public object_base<SCAPIX_META_STRING("android/text/LoginFilter"),
	java::lang::Object,
	android::text::InputFilter>
{
public:

	using UsernameFilterGeneric = LoginFilter_UsernameFilterGeneric;
	using UsernameFilterGMail = LoginFilter_UsernameFilterGMail;
	using PasswordFilterGMail = LoginFilter_PasswordFilterGMail;

	ref<java::lang::CharSequence> filter(ref<java::lang::CharSequence> source, jint start, jint end, ref<android::text::Spanned> dest, jint dstart, jint dend);
	void onStart();
	void onInvalidCharacter(jchar c);
	void onStop();
	jboolean isAllowed(jchar p1);

protected:

	LoginFilter(handle_type h) : base_(h) {}

};

} // namespace android::text
} // namespace scapix::java_api

#include <scapix/java_api/android/text/Spanned.h>
#include <scapix/java_api/java/lang/CharSequence.h>

namespace scapix::java_api {
namespace android::text {

inline ref<java::lang::CharSequence> LoginFilter::filter(ref<java::lang::CharSequence> source, jint start, jint end, ref<android::text::Spanned> dest, jint dstart, jint dend) { return call_method<SCAPIX_META_STRING("filter"), ref<java::lang::CharSequence>>(source, start, end, dest, dstart, dend); }
inline void LoginFilter::onStart() { return call_method<SCAPIX_META_STRING("onStart"), void>(); }
inline void LoginFilter::onInvalidCharacter(jchar c) { return call_method<SCAPIX_META_STRING("onInvalidCharacter"), void>(c); }
inline void LoginFilter::onStop() { return call_method<SCAPIX_META_STRING("onStop"), void>(); }
inline jboolean LoginFilter::isAllowed(jchar p1) { return call_method<SCAPIX_META_STRING("isAllowed"), jboolean>(p1); }

} // namespace android::text
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_TEXT_LOGINFILTER_H
