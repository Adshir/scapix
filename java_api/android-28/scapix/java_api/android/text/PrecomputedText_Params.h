// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_TEXT_PRECOMPUTEDTEXT_PARAMS_H
#define SCAPIX_ANDROID_TEXT_PRECOMPUTEDTEXT_PARAMS_H

namespace scapix::java_api {

namespace android::text { class TextDirectionHeuristic; }
namespace android::text { class TextPaint; }
namespace java::lang { class String; }
namespace android::text { class PrecomputedText_Params_Builder; }

namespace android::text {

class PrecomputedText_Params : public object_base<SCAPIX_META_STRING("android/text/PrecomputedText$Params"),
	java::lang::Object>
{
public:

	using Builder = PrecomputedText_Params_Builder;

	ref<android::text::TextPaint> getTextPaint();
	ref<android::text::TextDirectionHeuristic> getTextDirection();
	jint getBreakStrategy();
	jint getHyphenationFrequency();
	jboolean equals(ref<java::lang::Object> o);
	jint hashCode();
	ref<java::lang::String> toString();

protected:

	PrecomputedText_Params(handle_type h) : base_(h) {}

};

} // namespace android::text
} // namespace scapix::java_api

#include <scapix/java_api/android/text/TextDirectionHeuristic.h>
#include <scapix/java_api/android/text/TextPaint.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::text {

inline ref<android::text::TextPaint> PrecomputedText_Params::getTextPaint() { return call_method<SCAPIX_META_STRING("getTextPaint"), ref<android::text::TextPaint>>(); }
inline ref<android::text::TextDirectionHeuristic> PrecomputedText_Params::getTextDirection() { return call_method<SCAPIX_META_STRING("getTextDirection"), ref<android::text::TextDirectionHeuristic>>(); }
inline jint PrecomputedText_Params::getBreakStrategy() { return call_method<SCAPIX_META_STRING("getBreakStrategy"), jint>(); }
inline jint PrecomputedText_Params::getHyphenationFrequency() { return call_method<SCAPIX_META_STRING("getHyphenationFrequency"), jint>(); }
inline jboolean PrecomputedText_Params::equals(ref<java::lang::Object> o) { return call_method<SCAPIX_META_STRING("equals"), jboolean>(o); }
inline jint PrecomputedText_Params::hashCode() { return call_method<SCAPIX_META_STRING("hashCode"), jint>(); }
inline ref<java::lang::String> PrecomputedText_Params::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }

} // namespace android::text
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_TEXT_PRECOMPUTEDTEXT_PARAMS_H
