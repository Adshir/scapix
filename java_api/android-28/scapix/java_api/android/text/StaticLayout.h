// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/text/Layout.h>

#ifndef SCAPIX_ANDROID_TEXT_STATICLAYOUT_H
#define SCAPIX_ANDROID_TEXT_STATICLAYOUT_H

namespace scapix::java_api {

namespace android::text { class Layout_Alignment; }
namespace android::text { class Layout_Directions; }
namespace android::text { class TextPaint; }
namespace android::text { class TextUtils_TruncateAt; }
namespace java::lang { class CharSequence; }
namespace android::text { class StaticLayout_Builder; }

namespace android::text {

class StaticLayout : public object_base<SCAPIX_META_STRING("android/text/StaticLayout"),
	android::text::Layout>
{
public:

	using Builder = StaticLayout_Builder;

	static ref<StaticLayout> new_object(ref<java::lang::CharSequence> source, ref<android::text::TextPaint> paint, jint width, ref<android::text::Layout_Alignment> align, jfloat spacingmult, jfloat spacingadd, jboolean includepad);
	static ref<StaticLayout> new_object(ref<java::lang::CharSequence> source, jint bufstart, jint bufend, ref<android::text::TextPaint> paint, jint outerwidth, ref<android::text::Layout_Alignment> align, jfloat spacingmult, jfloat spacingadd, jboolean includepad);
	static ref<StaticLayout> new_object(ref<java::lang::CharSequence> source, jint bufstart, jint bufend, ref<android::text::TextPaint> paint, jint outerwidth, ref<android::text::Layout_Alignment> align, jfloat spacingmult, jfloat spacingadd, jboolean includepad, ref<android::text::TextUtils_TruncateAt> ellipsize, jint ellipsizedWidth);
	jint getLineForVertical(jint vertical);
	jint getLineCount();
	jint getLineTop(jint line);
	jint getLineDescent(jint line);
	jint getLineStart(jint line);
	jint getParagraphDirection(jint line);
	jboolean getLineContainsTab(jint line);
	ref<android::text::Layout_Directions> getLineDirections(jint line);
	jint getTopPadding();
	jint getBottomPadding();
	jint getEllipsisCount(jint line);
	jint getEllipsisStart(jint line);
	jint getEllipsizedWidth();

protected:

	StaticLayout(handle_type h) : base_(h) {}

};

} // namespace android::text
} // namespace scapix::java_api

#include <scapix/java_api/android/text/Layout_Alignment.h>
#include <scapix/java_api/android/text/Layout_Directions.h>
#include <scapix/java_api/android/text/TextPaint.h>
#include <scapix/java_api/android/text/TextUtils_TruncateAt.h>
#include <scapix/java_api/java/lang/CharSequence.h>

namespace scapix::java_api {
namespace android::text {

inline ref<StaticLayout> StaticLayout::new_object(ref<java::lang::CharSequence> source, ref<android::text::TextPaint> paint, jint width, ref<android::text::Layout_Alignment> align, jfloat spacingmult, jfloat spacingadd, jboolean includepad) { return base_::new_object(source, paint, width, align, spacingmult, spacingadd, includepad); }
inline ref<StaticLayout> StaticLayout::new_object(ref<java::lang::CharSequence> source, jint bufstart, jint bufend, ref<android::text::TextPaint> paint, jint outerwidth, ref<android::text::Layout_Alignment> align, jfloat spacingmult, jfloat spacingadd, jboolean includepad) { return base_::new_object(source, bufstart, bufend, paint, outerwidth, align, spacingmult, spacingadd, includepad); }
inline ref<StaticLayout> StaticLayout::new_object(ref<java::lang::CharSequence> source, jint bufstart, jint bufend, ref<android::text::TextPaint> paint, jint outerwidth, ref<android::text::Layout_Alignment> align, jfloat spacingmult, jfloat spacingadd, jboolean includepad, ref<android::text::TextUtils_TruncateAt> ellipsize, jint ellipsizedWidth) { return base_::new_object(source, bufstart, bufend, paint, outerwidth, align, spacingmult, spacingadd, includepad, ellipsize, ellipsizedWidth); }
inline jint StaticLayout::getLineForVertical(jint vertical) { return call_method<SCAPIX_META_STRING("getLineForVertical"), jint>(vertical); }
inline jint StaticLayout::getLineCount() { return call_method<SCAPIX_META_STRING("getLineCount"), jint>(); }
inline jint StaticLayout::getLineTop(jint line) { return call_method<SCAPIX_META_STRING("getLineTop"), jint>(line); }
inline jint StaticLayout::getLineDescent(jint line) { return call_method<SCAPIX_META_STRING("getLineDescent"), jint>(line); }
inline jint StaticLayout::getLineStart(jint line) { return call_method<SCAPIX_META_STRING("getLineStart"), jint>(line); }
inline jint StaticLayout::getParagraphDirection(jint line) { return call_method<SCAPIX_META_STRING("getParagraphDirection"), jint>(line); }
inline jboolean StaticLayout::getLineContainsTab(jint line) { return call_method<SCAPIX_META_STRING("getLineContainsTab"), jboolean>(line); }
inline ref<android::text::Layout_Directions> StaticLayout::getLineDirections(jint line) { return call_method<SCAPIX_META_STRING("getLineDirections"), ref<android::text::Layout_Directions>>(line); }
inline jint StaticLayout::getTopPadding() { return call_method<SCAPIX_META_STRING("getTopPadding"), jint>(); }
inline jint StaticLayout::getBottomPadding() { return call_method<SCAPIX_META_STRING("getBottomPadding"), jint>(); }
inline jint StaticLayout::getEllipsisCount(jint line) { return call_method<SCAPIX_META_STRING("getEllipsisCount"), jint>(line); }
inline jint StaticLayout::getEllipsisStart(jint line) { return call_method<SCAPIX_META_STRING("getEllipsisStart"), jint>(line); }
inline jint StaticLayout::getEllipsizedWidth() { return call_method<SCAPIX_META_STRING("getEllipsizedWidth"), jint>(); }

} // namespace android::text
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_TEXT_STATICLAYOUT_H
