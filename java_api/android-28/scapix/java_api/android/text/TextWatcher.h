// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/text/NoCopySpan.h>

#ifndef SCAPIX_ANDROID_TEXT_TEXTWATCHER_H
#define SCAPIX_ANDROID_TEXT_TEXTWATCHER_H

namespace scapix::java_api {

namespace android::text { class Editable; }
namespace java::lang { class CharSequence; }

namespace android::text {

class TextWatcher : public object_base<SCAPIX_META_STRING("android/text/TextWatcher"),
	java::lang::Object,
	android::text::NoCopySpan>
{
public:

	void beforeTextChanged(ref<java::lang::CharSequence> p1, jint p2, jint p3, jint p4);
	void onTextChanged(ref<java::lang::CharSequence> p1, jint p2, jint p3, jint p4);
	void afterTextChanged(ref<android::text::Editable> p1);

protected:

	TextWatcher(handle_type h) : base_(h) {}

};

} // namespace android::text
} // namespace scapix::java_api

#include <scapix/java_api/android/text/Editable.h>
#include <scapix/java_api/java/lang/CharSequence.h>

namespace scapix::java_api {
namespace android::text {

inline void TextWatcher::beforeTextChanged(ref<java::lang::CharSequence> p1, jint p2, jint p3, jint p4) { return call_method<SCAPIX_META_STRING("beforeTextChanged"), void>(p1, p2, p3, p4); }
inline void TextWatcher::onTextChanged(ref<java::lang::CharSequence> p1, jint p2, jint p3, jint p4) { return call_method<SCAPIX_META_STRING("onTextChanged"), void>(p1, p2, p3, p4); }
inline void TextWatcher::afterTextChanged(ref<android::text::Editable> p1) { return call_method<SCAPIX_META_STRING("afterTextChanged"), void>(p1); }

} // namespace android::text
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_TEXT_TEXTWATCHER_H
