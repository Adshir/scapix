// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_TEXT_FORMAT_FORMATTER_H
#define SCAPIX_ANDROID_TEXT_FORMAT_FORMATTER_H

namespace scapix::java_api {

namespace android::content { class Context; }
namespace java::lang { class String; }

namespace android::text::format {

class Formatter : public object_base<SCAPIX_META_STRING("android/text/format/Formatter"),
	java::lang::Object>
{
public:

	static ref<Formatter> new_object();
	static ref<java::lang::String> formatFileSize(ref<android::content::Context> context, jlong sizeBytes);
	static ref<java::lang::String> formatShortFileSize(ref<android::content::Context> context, jlong sizeBytes);
	static ref<java::lang::String> formatIpAddress(jint ipv4Address);

protected:

	Formatter(handle_type h) : base_(h) {}

};

} // namespace android::text::format
} // namespace scapix::java_api

#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::text::format {

inline ref<Formatter> Formatter::new_object() { return base_::new_object(); }
inline ref<java::lang::String> Formatter::formatFileSize(ref<android::content::Context> context, jlong sizeBytes) { return call_static_method<SCAPIX_META_STRING("formatFileSize"), ref<java::lang::String>>(context, sizeBytes); }
inline ref<java::lang::String> Formatter::formatShortFileSize(ref<android::content::Context> context, jlong sizeBytes) { return call_static_method<SCAPIX_META_STRING("formatShortFileSize"), ref<java::lang::String>>(context, sizeBytes); }
inline ref<java::lang::String> Formatter::formatIpAddress(jint ipv4Address) { return call_static_method<SCAPIX_META_STRING("formatIpAddress"), ref<java::lang::String>>(ipv4Address); }

} // namespace android::text::format
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_TEXT_FORMAT_FORMATTER_H
