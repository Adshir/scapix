// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/text/ParcelableSpan.h>

#ifndef SCAPIX_ANDROID_TEXT_STYLE_TTSSPAN_H
#define SCAPIX_ANDROID_TEXT_STYLE_TTSSPAN_H

namespace scapix::java_api {

namespace android::os { class Parcel; }
namespace android::os { class PersistableBundle; }
namespace java::lang { class String; }
namespace android::text::style { class TtsSpan_VerbatimBuilder; }
namespace android::text::style { class TtsSpan_TimeBuilder; }
namespace android::text::style { class TtsSpan_TextBuilder; }
namespace android::text::style { class TtsSpan_TelephoneBuilder; }
namespace android::text::style { class TtsSpan_SemioticClassBuilder; }
namespace android::text::style { class TtsSpan_OrdinalBuilder; }
namespace android::text::style { class TtsSpan_MoneyBuilder; }
namespace android::text::style { class TtsSpan_MeasureBuilder; }
namespace android::text::style { class TtsSpan_FractionBuilder; }
namespace android::text::style { class TtsSpan_ElectronicBuilder; }
namespace android::text::style { class TtsSpan_DigitsBuilder; }
namespace android::text::style { class TtsSpan_DecimalBuilder; }
namespace android::text::style { class TtsSpan_DateBuilder; }
namespace android::text::style { class TtsSpan_CardinalBuilder; }
namespace android::text::style { class TtsSpan_Builder; }

namespace android::text::style {

class TtsSpan : public object_base<SCAPIX_META_STRING("android/text/style/TtsSpan"),
	java::lang::Object,
	android::text::ParcelableSpan>
{
public:

	using VerbatimBuilder = TtsSpan_VerbatimBuilder;
	using TimeBuilder = TtsSpan_TimeBuilder;
	using TextBuilder = TtsSpan_TextBuilder;
	using TelephoneBuilder = TtsSpan_TelephoneBuilder;
	using SemioticClassBuilder = TtsSpan_SemioticClassBuilder;
	using OrdinalBuilder = TtsSpan_OrdinalBuilder;
	using MoneyBuilder = TtsSpan_MoneyBuilder;
	using MeasureBuilder = TtsSpan_MeasureBuilder;
	using FractionBuilder = TtsSpan_FractionBuilder;
	using ElectronicBuilder = TtsSpan_ElectronicBuilder;
	using DigitsBuilder = TtsSpan_DigitsBuilder;
	using DecimalBuilder = TtsSpan_DecimalBuilder;
	using DateBuilder = TtsSpan_DateBuilder;
	using CardinalBuilder = TtsSpan_CardinalBuilder;
	using Builder = TtsSpan_Builder;

	static ref<java::lang::String> ANIMACY_ANIMATE_();
	static ref<java::lang::String> ANIMACY_INANIMATE_();
	static ref<java::lang::String> ARG_ANIMACY_();
	static ref<java::lang::String> ARG_CASE_();
	static ref<java::lang::String> ARG_COUNTRY_CODE_();
	static ref<java::lang::String> ARG_CURRENCY_();
	static ref<java::lang::String> ARG_DAY_();
	static ref<java::lang::String> ARG_DENOMINATOR_();
	static ref<java::lang::String> ARG_DIGITS_();
	static ref<java::lang::String> ARG_DOMAIN_();
	static ref<java::lang::String> ARG_EXTENSION_();
	static ref<java::lang::String> ARG_FRACTIONAL_PART_();
	static ref<java::lang::String> ARG_FRAGMENT_ID_();
	static ref<java::lang::String> ARG_GENDER_();
	static ref<java::lang::String> ARG_HOURS_();
	static ref<java::lang::String> ARG_INTEGER_PART_();
	static ref<java::lang::String> ARG_MINUTES_();
	static ref<java::lang::String> ARG_MONTH_();
	static ref<java::lang::String> ARG_MULTIPLICITY_();
	static ref<java::lang::String> ARG_NUMBER_();
	static ref<java::lang::String> ARG_NUMBER_PARTS_();
	static ref<java::lang::String> ARG_NUMERATOR_();
	static ref<java::lang::String> ARG_PASSWORD_();
	static ref<java::lang::String> ARG_PATH_();
	static ref<java::lang::String> ARG_PORT_();
	static ref<java::lang::String> ARG_PROTOCOL_();
	static ref<java::lang::String> ARG_QUANTITY_();
	static ref<java::lang::String> ARG_QUERY_STRING_();
	static ref<java::lang::String> ARG_TEXT_();
	static ref<java::lang::String> ARG_UNIT_();
	static ref<java::lang::String> ARG_USERNAME_();
	static ref<java::lang::String> ARG_VERBATIM_();
	static ref<java::lang::String> ARG_WEEKDAY_();
	static ref<java::lang::String> ARG_YEAR_();
	static ref<java::lang::String> CASE_ABLATIVE_();
	static ref<java::lang::String> CASE_ACCUSATIVE_();
	static ref<java::lang::String> CASE_DATIVE_();
	static ref<java::lang::String> CASE_GENITIVE_();
	static ref<java::lang::String> CASE_INSTRUMENTAL_();
	static ref<java::lang::String> CASE_LOCATIVE_();
	static ref<java::lang::String> CASE_NOMINATIVE_();
	static ref<java::lang::String> CASE_VOCATIVE_();
	static ref<java::lang::String> GENDER_FEMALE_();
	static ref<java::lang::String> GENDER_MALE_();
	static ref<java::lang::String> GENDER_NEUTRAL_();
	static jint MONTH_APRIL_();
	static jint MONTH_AUGUST_();
	static jint MONTH_DECEMBER_();
	static jint MONTH_FEBRUARY_();
	static jint MONTH_JANUARY_();
	static jint MONTH_JULY_();
	static jint MONTH_JUNE_();
	static jint MONTH_MARCH_();
	static jint MONTH_MAY_();
	static jint MONTH_NOVEMBER_();
	static jint MONTH_OCTOBER_();
	static jint MONTH_SEPTEMBER_();
	static ref<java::lang::String> MULTIPLICITY_DUAL_();
	static ref<java::lang::String> MULTIPLICITY_PLURAL_();
	static ref<java::lang::String> MULTIPLICITY_SINGLE_();
	static ref<java::lang::String> TYPE_CARDINAL_();
	static ref<java::lang::String> TYPE_DATE_();
	static ref<java::lang::String> TYPE_DECIMAL_();
	static ref<java::lang::String> TYPE_DIGITS_();
	static ref<java::lang::String> TYPE_ELECTRONIC_();
	static ref<java::lang::String> TYPE_FRACTION_();
	static ref<java::lang::String> TYPE_MEASURE_();
	static ref<java::lang::String> TYPE_MONEY_();
	static ref<java::lang::String> TYPE_ORDINAL_();
	static ref<java::lang::String> TYPE_TELEPHONE_();
	static ref<java::lang::String> TYPE_TEXT_();
	static ref<java::lang::String> TYPE_TIME_();
	static ref<java::lang::String> TYPE_VERBATIM_();
	static jint WEEKDAY_FRIDAY_();
	static jint WEEKDAY_MONDAY_();
	static jint WEEKDAY_SATURDAY_();
	static jint WEEKDAY_SUNDAY_();
	static jint WEEKDAY_THURSDAY_();
	static jint WEEKDAY_TUESDAY_();
	static jint WEEKDAY_WEDNESDAY_();

	static ref<TtsSpan> new_object(ref<java::lang::String> type, ref<android::os::PersistableBundle> args);
	static ref<TtsSpan> new_object(ref<android::os::Parcel> src);
	ref<java::lang::String> getType();
	ref<android::os::PersistableBundle> getArgs();
	jint describeContents();
	void writeToParcel(ref<android::os::Parcel> dest, jint flags);
	jint getSpanTypeId();

protected:

	TtsSpan(handle_type h) : base_(h) {}

};

} // namespace android::text::style
} // namespace scapix::java_api

#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/PersistableBundle.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::text::style {

inline ref<java::lang::String> TtsSpan::ANIMACY_ANIMATE_() { return get_static_field<SCAPIX_META_STRING("ANIMACY_ANIMATE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TtsSpan::ANIMACY_INANIMATE_() { return get_static_field<SCAPIX_META_STRING("ANIMACY_INANIMATE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TtsSpan::ARG_ANIMACY_() { return get_static_field<SCAPIX_META_STRING("ARG_ANIMACY"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TtsSpan::ARG_CASE_() { return get_static_field<SCAPIX_META_STRING("ARG_CASE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TtsSpan::ARG_COUNTRY_CODE_() { return get_static_field<SCAPIX_META_STRING("ARG_COUNTRY_CODE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TtsSpan::ARG_CURRENCY_() { return get_static_field<SCAPIX_META_STRING("ARG_CURRENCY"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TtsSpan::ARG_DAY_() { return get_static_field<SCAPIX_META_STRING("ARG_DAY"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TtsSpan::ARG_DENOMINATOR_() { return get_static_field<SCAPIX_META_STRING("ARG_DENOMINATOR"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TtsSpan::ARG_DIGITS_() { return get_static_field<SCAPIX_META_STRING("ARG_DIGITS"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TtsSpan::ARG_DOMAIN_() { return get_static_field<SCAPIX_META_STRING("ARG_DOMAIN"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TtsSpan::ARG_EXTENSION_() { return get_static_field<SCAPIX_META_STRING("ARG_EXTENSION"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TtsSpan::ARG_FRACTIONAL_PART_() { return get_static_field<SCAPIX_META_STRING("ARG_FRACTIONAL_PART"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TtsSpan::ARG_FRAGMENT_ID_() { return get_static_field<SCAPIX_META_STRING("ARG_FRAGMENT_ID"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TtsSpan::ARG_GENDER_() { return get_static_field<SCAPIX_META_STRING("ARG_GENDER"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TtsSpan::ARG_HOURS_() { return get_static_field<SCAPIX_META_STRING("ARG_HOURS"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TtsSpan::ARG_INTEGER_PART_() { return get_static_field<SCAPIX_META_STRING("ARG_INTEGER_PART"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TtsSpan::ARG_MINUTES_() { return get_static_field<SCAPIX_META_STRING("ARG_MINUTES"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TtsSpan::ARG_MONTH_() { return get_static_field<SCAPIX_META_STRING("ARG_MONTH"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TtsSpan::ARG_MULTIPLICITY_() { return get_static_field<SCAPIX_META_STRING("ARG_MULTIPLICITY"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TtsSpan::ARG_NUMBER_() { return get_static_field<SCAPIX_META_STRING("ARG_NUMBER"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TtsSpan::ARG_NUMBER_PARTS_() { return get_static_field<SCAPIX_META_STRING("ARG_NUMBER_PARTS"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TtsSpan::ARG_NUMERATOR_() { return get_static_field<SCAPIX_META_STRING("ARG_NUMERATOR"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TtsSpan::ARG_PASSWORD_() { return get_static_field<SCAPIX_META_STRING("ARG_PASSWORD"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TtsSpan::ARG_PATH_() { return get_static_field<SCAPIX_META_STRING("ARG_PATH"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TtsSpan::ARG_PORT_() { return get_static_field<SCAPIX_META_STRING("ARG_PORT"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TtsSpan::ARG_PROTOCOL_() { return get_static_field<SCAPIX_META_STRING("ARG_PROTOCOL"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TtsSpan::ARG_QUANTITY_() { return get_static_field<SCAPIX_META_STRING("ARG_QUANTITY"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TtsSpan::ARG_QUERY_STRING_() { return get_static_field<SCAPIX_META_STRING("ARG_QUERY_STRING"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TtsSpan::ARG_TEXT_() { return get_static_field<SCAPIX_META_STRING("ARG_TEXT"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TtsSpan::ARG_UNIT_() { return get_static_field<SCAPIX_META_STRING("ARG_UNIT"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TtsSpan::ARG_USERNAME_() { return get_static_field<SCAPIX_META_STRING("ARG_USERNAME"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TtsSpan::ARG_VERBATIM_() { return get_static_field<SCAPIX_META_STRING("ARG_VERBATIM"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TtsSpan::ARG_WEEKDAY_() { return get_static_field<SCAPIX_META_STRING("ARG_WEEKDAY"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TtsSpan::ARG_YEAR_() { return get_static_field<SCAPIX_META_STRING("ARG_YEAR"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TtsSpan::CASE_ABLATIVE_() { return get_static_field<SCAPIX_META_STRING("CASE_ABLATIVE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TtsSpan::CASE_ACCUSATIVE_() { return get_static_field<SCAPIX_META_STRING("CASE_ACCUSATIVE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TtsSpan::CASE_DATIVE_() { return get_static_field<SCAPIX_META_STRING("CASE_DATIVE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TtsSpan::CASE_GENITIVE_() { return get_static_field<SCAPIX_META_STRING("CASE_GENITIVE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TtsSpan::CASE_INSTRUMENTAL_() { return get_static_field<SCAPIX_META_STRING("CASE_INSTRUMENTAL"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TtsSpan::CASE_LOCATIVE_() { return get_static_field<SCAPIX_META_STRING("CASE_LOCATIVE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TtsSpan::CASE_NOMINATIVE_() { return get_static_field<SCAPIX_META_STRING("CASE_NOMINATIVE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TtsSpan::CASE_VOCATIVE_() { return get_static_field<SCAPIX_META_STRING("CASE_VOCATIVE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TtsSpan::GENDER_FEMALE_() { return get_static_field<SCAPIX_META_STRING("GENDER_FEMALE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TtsSpan::GENDER_MALE_() { return get_static_field<SCAPIX_META_STRING("GENDER_MALE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TtsSpan::GENDER_NEUTRAL_() { return get_static_field<SCAPIX_META_STRING("GENDER_NEUTRAL"), ref<java::lang::String>>(); }
inline jint TtsSpan::MONTH_APRIL_() { return get_static_field<SCAPIX_META_STRING("MONTH_APRIL"), jint>(); }
inline jint TtsSpan::MONTH_AUGUST_() { return get_static_field<SCAPIX_META_STRING("MONTH_AUGUST"), jint>(); }
inline jint TtsSpan::MONTH_DECEMBER_() { return get_static_field<SCAPIX_META_STRING("MONTH_DECEMBER"), jint>(); }
inline jint TtsSpan::MONTH_FEBRUARY_() { return get_static_field<SCAPIX_META_STRING("MONTH_FEBRUARY"), jint>(); }
inline jint TtsSpan::MONTH_JANUARY_() { return get_static_field<SCAPIX_META_STRING("MONTH_JANUARY"), jint>(); }
inline jint TtsSpan::MONTH_JULY_() { return get_static_field<SCAPIX_META_STRING("MONTH_JULY"), jint>(); }
inline jint TtsSpan::MONTH_JUNE_() { return get_static_field<SCAPIX_META_STRING("MONTH_JUNE"), jint>(); }
inline jint TtsSpan::MONTH_MARCH_() { return get_static_field<SCAPIX_META_STRING("MONTH_MARCH"), jint>(); }
inline jint TtsSpan::MONTH_MAY_() { return get_static_field<SCAPIX_META_STRING("MONTH_MAY"), jint>(); }
inline jint TtsSpan::MONTH_NOVEMBER_() { return get_static_field<SCAPIX_META_STRING("MONTH_NOVEMBER"), jint>(); }
inline jint TtsSpan::MONTH_OCTOBER_() { return get_static_field<SCAPIX_META_STRING("MONTH_OCTOBER"), jint>(); }
inline jint TtsSpan::MONTH_SEPTEMBER_() { return get_static_field<SCAPIX_META_STRING("MONTH_SEPTEMBER"), jint>(); }
inline ref<java::lang::String> TtsSpan::MULTIPLICITY_DUAL_() { return get_static_field<SCAPIX_META_STRING("MULTIPLICITY_DUAL"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TtsSpan::MULTIPLICITY_PLURAL_() { return get_static_field<SCAPIX_META_STRING("MULTIPLICITY_PLURAL"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TtsSpan::MULTIPLICITY_SINGLE_() { return get_static_field<SCAPIX_META_STRING("MULTIPLICITY_SINGLE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TtsSpan::TYPE_CARDINAL_() { return get_static_field<SCAPIX_META_STRING("TYPE_CARDINAL"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TtsSpan::TYPE_DATE_() { return get_static_field<SCAPIX_META_STRING("TYPE_DATE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TtsSpan::TYPE_DECIMAL_() { return get_static_field<SCAPIX_META_STRING("TYPE_DECIMAL"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TtsSpan::TYPE_DIGITS_() { return get_static_field<SCAPIX_META_STRING("TYPE_DIGITS"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TtsSpan::TYPE_ELECTRONIC_() { return get_static_field<SCAPIX_META_STRING("TYPE_ELECTRONIC"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TtsSpan::TYPE_FRACTION_() { return get_static_field<SCAPIX_META_STRING("TYPE_FRACTION"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TtsSpan::TYPE_MEASURE_() { return get_static_field<SCAPIX_META_STRING("TYPE_MEASURE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TtsSpan::TYPE_MONEY_() { return get_static_field<SCAPIX_META_STRING("TYPE_MONEY"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TtsSpan::TYPE_ORDINAL_() { return get_static_field<SCAPIX_META_STRING("TYPE_ORDINAL"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TtsSpan::TYPE_TELEPHONE_() { return get_static_field<SCAPIX_META_STRING("TYPE_TELEPHONE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TtsSpan::TYPE_TEXT_() { return get_static_field<SCAPIX_META_STRING("TYPE_TEXT"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TtsSpan::TYPE_TIME_() { return get_static_field<SCAPIX_META_STRING("TYPE_TIME"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TtsSpan::TYPE_VERBATIM_() { return get_static_field<SCAPIX_META_STRING("TYPE_VERBATIM"), ref<java::lang::String>>(); }
inline jint TtsSpan::WEEKDAY_FRIDAY_() { return get_static_field<SCAPIX_META_STRING("WEEKDAY_FRIDAY"), jint>(); }
inline jint TtsSpan::WEEKDAY_MONDAY_() { return get_static_field<SCAPIX_META_STRING("WEEKDAY_MONDAY"), jint>(); }
inline jint TtsSpan::WEEKDAY_SATURDAY_() { return get_static_field<SCAPIX_META_STRING("WEEKDAY_SATURDAY"), jint>(); }
inline jint TtsSpan::WEEKDAY_SUNDAY_() { return get_static_field<SCAPIX_META_STRING("WEEKDAY_SUNDAY"), jint>(); }
inline jint TtsSpan::WEEKDAY_THURSDAY_() { return get_static_field<SCAPIX_META_STRING("WEEKDAY_THURSDAY"), jint>(); }
inline jint TtsSpan::WEEKDAY_TUESDAY_() { return get_static_field<SCAPIX_META_STRING("WEEKDAY_TUESDAY"), jint>(); }
inline jint TtsSpan::WEEKDAY_WEDNESDAY_() { return get_static_field<SCAPIX_META_STRING("WEEKDAY_WEDNESDAY"), jint>(); }
inline ref<TtsSpan> TtsSpan::new_object(ref<java::lang::String> type, ref<android::os::PersistableBundle> args) { return base_::new_object(type, args); }
inline ref<TtsSpan> TtsSpan::new_object(ref<android::os::Parcel> src) { return base_::new_object(src); }
inline ref<java::lang::String> TtsSpan::getType() { return call_method<SCAPIX_META_STRING("getType"), ref<java::lang::String>>(); }
inline ref<android::os::PersistableBundle> TtsSpan::getArgs() { return call_method<SCAPIX_META_STRING("getArgs"), ref<android::os::PersistableBundle>>(); }
inline jint TtsSpan::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }
inline void TtsSpan::writeToParcel(ref<android::os::Parcel> dest, jint flags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(dest, flags); }
inline jint TtsSpan::getSpanTypeId() { return call_method<SCAPIX_META_STRING("getSpanTypeId"), jint>(); }

} // namespace android::text::style
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_TEXT_STYLE_TTSSPAN_H
