// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/text/style/MetricAffectingSpan.h>
#include <scapix/java_api/android/text/ParcelableSpan.h>

#ifndef SCAPIX_ANDROID_TEXT_STYLE_LOCALESPAN_H
#define SCAPIX_ANDROID_TEXT_STYLE_LOCALESPAN_H

namespace scapix::java_api {

namespace android::os { class LocaleList; }
namespace android::os { class Parcel; }
namespace android::text { class TextPaint; }
namespace java::util { class Locale; }

namespace android::text::style {

class LocaleSpan : public object_base<SCAPIX_META_STRING("android/text/style/LocaleSpan"),
	android::text::style::MetricAffectingSpan,
	android::text::ParcelableSpan>
{
public:

	static ref<LocaleSpan> new_object(ref<java::util::Locale> locale);
	static ref<LocaleSpan> new_object(ref<android::os::LocaleList> locales);
	static ref<LocaleSpan> new_object(ref<android::os::Parcel> source);
	jint getSpanTypeId();
	jint describeContents();
	void writeToParcel(ref<android::os::Parcel> dest, jint flags);
	ref<java::util::Locale> getLocale();
	ref<android::os::LocaleList> getLocales();
	void updateDrawState(ref<android::text::TextPaint> ds);
	void updateMeasureState(ref<android::text::TextPaint> paint);

protected:

	LocaleSpan(handle_type h) : base_(h) {}

};

} // namespace android::text::style
} // namespace scapix::java_api

#include <scapix/java_api/android/os/LocaleList.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/text/TextPaint.h>
#include <scapix/java_api/java/util/Locale.h>

namespace scapix::java_api {
namespace android::text::style {

inline ref<LocaleSpan> LocaleSpan::new_object(ref<java::util::Locale> locale) { return base_::new_object(locale); }
inline ref<LocaleSpan> LocaleSpan::new_object(ref<android::os::LocaleList> locales) { return base_::new_object(locales); }
inline ref<LocaleSpan> LocaleSpan::new_object(ref<android::os::Parcel> source) { return base_::new_object(source); }
inline jint LocaleSpan::getSpanTypeId() { return call_method<SCAPIX_META_STRING("getSpanTypeId"), jint>(); }
inline jint LocaleSpan::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }
inline void LocaleSpan::writeToParcel(ref<android::os::Parcel> dest, jint flags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(dest, flags); }
inline ref<java::util::Locale> LocaleSpan::getLocale() { return call_method<SCAPIX_META_STRING("getLocale"), ref<java::util::Locale>>(); }
inline ref<android::os::LocaleList> LocaleSpan::getLocales() { return call_method<SCAPIX_META_STRING("getLocales"), ref<android::os::LocaleList>>(); }
inline void LocaleSpan::updateDrawState(ref<android::text::TextPaint> ds) { return call_method<SCAPIX_META_STRING("updateDrawState"), void>(ds); }
inline void LocaleSpan::updateMeasureState(ref<android::text::TextPaint> paint) { return call_method<SCAPIX_META_STRING("updateMeasureState"), void>(paint); }

} // namespace android::text::style
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_TEXT_STYLE_LOCALESPAN_H
