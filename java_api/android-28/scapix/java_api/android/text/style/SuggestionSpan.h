// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/text/style/CharacterStyle.h>
#include <scapix/java_api/android/text/ParcelableSpan.h>

#ifndef SCAPIX_ANDROID_TEXT_STYLE_SUGGESTIONSPAN_H
#define SCAPIX_ANDROID_TEXT_STYLE_SUGGESTIONSPAN_H

namespace scapix::java_api {

namespace android::content { class Context; }
namespace android::os { class Parcel; }
namespace android::os { class Parcelable_Creator; }
namespace android::text { class TextPaint; }
namespace java::lang { class Class; }
namespace java::lang { class Object; }
namespace java::lang { class String; }
namespace java::util { class Locale; }

namespace android::text::style {

class SuggestionSpan : public object_base<SCAPIX_META_STRING("android/text/style/SuggestionSpan"),
	android::text::style::CharacterStyle,
	android::text::ParcelableSpan>
{
public:

	static ref<java::lang::String> ACTION_SUGGESTION_PICKED_();
	static ref<android::os::Parcelable_Creator> CREATOR_();
	static jint FLAG_AUTO_CORRECTION_();
	static jint FLAG_EASY_CORRECT_();
	static jint FLAG_MISSPELLED_();
	static jint SUGGESTIONS_MAX_SIZE_();
	static ref<java::lang::String> SUGGESTION_SPAN_PICKED_AFTER_();
	static ref<java::lang::String> SUGGESTION_SPAN_PICKED_BEFORE_();
	static ref<java::lang::String> SUGGESTION_SPAN_PICKED_HASHCODE_();

	static ref<SuggestionSpan> new_object(ref<android::content::Context> context, ref<link::java::array<java::lang::String>> suggestions, jint flags);
	static ref<SuggestionSpan> new_object(ref<java::util::Locale> locale, ref<link::java::array<java::lang::String>> suggestions, jint flags);
	static ref<SuggestionSpan> new_object(ref<android::content::Context> context, ref<java::util::Locale> locale, ref<link::java::array<java::lang::String>> suggestions, jint flags, ref<java::lang::Class> notificationTargetClass);
	static ref<SuggestionSpan> new_object(ref<android::os::Parcel> src);
	ref<link::java::array<java::lang::String>> getSuggestions();
	ref<java::lang::String> getLocale();
	ref<java::util::Locale> getLocaleObject();
	jint getFlags();
	void setFlags(jint flags);
	jint describeContents();
	void writeToParcel(ref<android::os::Parcel> dest, jint flags);
	jint getSpanTypeId();
	jboolean equals(ref<java::lang::Object> o);
	jint hashCode();
	void updateDrawState(ref<android::text::TextPaint> tp);

protected:

	SuggestionSpan(handle_type h) : base_(h) {}

};

} // namespace android::text::style
} // namespace scapix::java_api

#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/android/text/TextPaint.h>
#include <scapix/java_api/java/lang/Class.h>
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Locale.h>

namespace scapix::java_api {
namespace android::text::style {

inline ref<java::lang::String> SuggestionSpan::ACTION_SUGGESTION_PICKED_() { return get_static_field<SCAPIX_META_STRING("ACTION_SUGGESTION_PICKED"), ref<java::lang::String>>(); }
inline ref<android::os::Parcelable_Creator> SuggestionSpan::CREATOR_() { return get_static_field<SCAPIX_META_STRING("CREATOR"), ref<android::os::Parcelable_Creator>>(); }
inline jint SuggestionSpan::FLAG_AUTO_CORRECTION_() { return get_static_field<SCAPIX_META_STRING("FLAG_AUTO_CORRECTION"), jint>(); }
inline jint SuggestionSpan::FLAG_EASY_CORRECT_() { return get_static_field<SCAPIX_META_STRING("FLAG_EASY_CORRECT"), jint>(); }
inline jint SuggestionSpan::FLAG_MISSPELLED_() { return get_static_field<SCAPIX_META_STRING("FLAG_MISSPELLED"), jint>(); }
inline jint SuggestionSpan::SUGGESTIONS_MAX_SIZE_() { return get_static_field<SCAPIX_META_STRING("SUGGESTIONS_MAX_SIZE"), jint>(); }
inline ref<java::lang::String> SuggestionSpan::SUGGESTION_SPAN_PICKED_AFTER_() { return get_static_field<SCAPIX_META_STRING("SUGGESTION_SPAN_PICKED_AFTER"), ref<java::lang::String>>(); }
inline ref<java::lang::String> SuggestionSpan::SUGGESTION_SPAN_PICKED_BEFORE_() { return get_static_field<SCAPIX_META_STRING("SUGGESTION_SPAN_PICKED_BEFORE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> SuggestionSpan::SUGGESTION_SPAN_PICKED_HASHCODE_() { return get_static_field<SCAPIX_META_STRING("SUGGESTION_SPAN_PICKED_HASHCODE"), ref<java::lang::String>>(); }
inline ref<SuggestionSpan> SuggestionSpan::new_object(ref<android::content::Context> context, ref<link::java::array<java::lang::String>> suggestions, jint flags) { return base_::new_object(context, suggestions, flags); }
inline ref<SuggestionSpan> SuggestionSpan::new_object(ref<java::util::Locale> locale, ref<link::java::array<java::lang::String>> suggestions, jint flags) { return base_::new_object(locale, suggestions, flags); }
inline ref<SuggestionSpan> SuggestionSpan::new_object(ref<android::content::Context> context, ref<java::util::Locale> locale, ref<link::java::array<java::lang::String>> suggestions, jint flags, ref<java::lang::Class> notificationTargetClass) { return base_::new_object(context, locale, suggestions, flags, notificationTargetClass); }
inline ref<SuggestionSpan> SuggestionSpan::new_object(ref<android::os::Parcel> src) { return base_::new_object(src); }
inline ref<link::java::array<java::lang::String>> SuggestionSpan::getSuggestions() { return call_method<SCAPIX_META_STRING("getSuggestions"), ref<link::java::array<java::lang::String>>>(); }
inline ref<java::lang::String> SuggestionSpan::getLocale() { return call_method<SCAPIX_META_STRING("getLocale"), ref<java::lang::String>>(); }
inline ref<java::util::Locale> SuggestionSpan::getLocaleObject() { return call_method<SCAPIX_META_STRING("getLocaleObject"), ref<java::util::Locale>>(); }
inline jint SuggestionSpan::getFlags() { return call_method<SCAPIX_META_STRING("getFlags"), jint>(); }
inline void SuggestionSpan::setFlags(jint flags) { return call_method<SCAPIX_META_STRING("setFlags"), void>(flags); }
inline jint SuggestionSpan::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }
inline void SuggestionSpan::writeToParcel(ref<android::os::Parcel> dest, jint flags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(dest, flags); }
inline jint SuggestionSpan::getSpanTypeId() { return call_method<SCAPIX_META_STRING("getSpanTypeId"), jint>(); }
inline jboolean SuggestionSpan::equals(ref<java::lang::Object> o) { return call_method<SCAPIX_META_STRING("equals"), jboolean>(o); }
inline jint SuggestionSpan::hashCode() { return call_method<SCAPIX_META_STRING("hashCode"), jint>(); }
inline void SuggestionSpan::updateDrawState(ref<android::text::TextPaint> tp) { return call_method<SCAPIX_META_STRING("updateDrawState"), void>(tp); }

} // namespace android::text::style
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_TEXT_STYLE_SUGGESTIONSPAN_H
