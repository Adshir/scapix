// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/text/style/LeadingMarginSpan.h>
#include <scapix/java_api/android/text/style/LineHeightSpan.h>

#ifndef SCAPIX_ANDROID_TEXT_STYLE_ICONMARGINSPAN_H
#define SCAPIX_ANDROID_TEXT_STYLE_ICONMARGINSPAN_H

namespace scapix::java_api {

namespace android::graphics { class Bitmap; }
namespace android::graphics { class Canvas; }
namespace android::graphics { class Paint; }
namespace android::graphics { class Paint_FontMetricsInt; }
namespace android::text { class Layout; }
namespace java::lang { class CharSequence; }

namespace android::text::style {

class IconMarginSpan : public object_base<SCAPIX_META_STRING("android/text/style/IconMarginSpan"),
	java::lang::Object,
	android::text::style::LeadingMarginSpan,
	android::text::style::LineHeightSpan>
{
public:

	static ref<IconMarginSpan> new_object(ref<android::graphics::Bitmap> bitmap);
	static ref<IconMarginSpan> new_object(ref<android::graphics::Bitmap> bitmap, jint pad);
	jint getLeadingMargin(jboolean first);
	void drawLeadingMargin(ref<android::graphics::Canvas> c, ref<android::graphics::Paint> p, jint x, jint dir, jint top, jint baseline, jint bottom, ref<java::lang::CharSequence> text, jint start, jint end, jboolean first, ref<android::text::Layout> layout);
	void chooseHeight(ref<java::lang::CharSequence> text, jint start, jint end, jint istartv, jint v, ref<android::graphics::Paint_FontMetricsInt> fm);

protected:

	IconMarginSpan(handle_type h) : base_(h) {}

};

} // namespace android::text::style
} // namespace scapix::java_api

#include <scapix/java_api/android/graphics/Bitmap.h>
#include <scapix/java_api/android/graphics/Canvas.h>
#include <scapix/java_api/android/graphics/Paint.h>
#include <scapix/java_api/android/graphics/Paint_FontMetricsInt.h>
#include <scapix/java_api/android/text/Layout.h>
#include <scapix/java_api/java/lang/CharSequence.h>

namespace scapix::java_api {
namespace android::text::style {

inline ref<IconMarginSpan> IconMarginSpan::new_object(ref<android::graphics::Bitmap> bitmap) { return base_::new_object(bitmap); }
inline ref<IconMarginSpan> IconMarginSpan::new_object(ref<android::graphics::Bitmap> bitmap, jint pad) { return base_::new_object(bitmap, pad); }
inline jint IconMarginSpan::getLeadingMargin(jboolean first) { return call_method<SCAPIX_META_STRING("getLeadingMargin"), jint>(first); }
inline void IconMarginSpan::drawLeadingMargin(ref<android::graphics::Canvas> c, ref<android::graphics::Paint> p, jint x, jint dir, jint top, jint baseline, jint bottom, ref<java::lang::CharSequence> text, jint start, jint end, jboolean first, ref<android::text::Layout> layout) { return call_method<SCAPIX_META_STRING("drawLeadingMargin"), void>(c, p, x, dir, top, baseline, bottom, text, start, end, first, layout); }
inline void IconMarginSpan::chooseHeight(ref<java::lang::CharSequence> text, jint start, jint end, jint istartv, jint v, ref<android::graphics::Paint_FontMetricsInt> fm) { return call_method<SCAPIX_META_STRING("chooseHeight"), void>(text, start, end, istartv, v, fm); }

} // namespace android::text::style
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_TEXT_STYLE_ICONMARGINSPAN_H
