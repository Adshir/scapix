// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/text/style/CharacterStyle.h>
#include <scapix/java_api/android/text/style/UpdateLayout.h>

#ifndef SCAPIX_ANDROID_TEXT_STYLE_METRICAFFECTINGSPAN_H
#define SCAPIX_ANDROID_TEXT_STYLE_METRICAFFECTINGSPAN_H

namespace scapix::java_api {

namespace android::text { class TextPaint; }

namespace android::text::style {

class MetricAffectingSpan : public object_base<SCAPIX_META_STRING("android/text/style/MetricAffectingSpan"),
	android::text::style::CharacterStyle,
	android::text::style::UpdateLayout>
{
public:

	static ref<MetricAffectingSpan> new_object();
	void updateMeasureState(ref<android::text::TextPaint> p1);
	ref<android::text::style::MetricAffectingSpan> getUnderlying();

protected:

	MetricAffectingSpan(handle_type h) : base_(h) {}

};

} // namespace android::text::style
} // namespace scapix::java_api

#include <scapix/java_api/android/text/TextPaint.h>

namespace scapix::java_api {
namespace android::text::style {

inline ref<MetricAffectingSpan> MetricAffectingSpan::new_object() { return base_::new_object(); }
inline void MetricAffectingSpan::updateMeasureState(ref<android::text::TextPaint> p1) { return call_method<SCAPIX_META_STRING("updateMeasureState"), void>(p1); }
inline ref<android::text::style::MetricAffectingSpan> MetricAffectingSpan::getUnderlying() { return call_method<SCAPIX_META_STRING("getUnderlying"), ref<android::text::style::MetricAffectingSpan>>(); }

} // namespace android::text::style
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_TEXT_STYLE_METRICAFFECTINGSPAN_H
