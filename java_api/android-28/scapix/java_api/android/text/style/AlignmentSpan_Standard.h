// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/text/style/AlignmentSpan.h>
#include <scapix/java_api/android/text/ParcelableSpan.h>

#ifndef SCAPIX_ANDROID_TEXT_STYLE_ALIGNMENTSPAN_STANDARD_H
#define SCAPIX_ANDROID_TEXT_STYLE_ALIGNMENTSPAN_STANDARD_H

namespace scapix::java_api {

namespace android::os { class Parcel; }
namespace android::text { class Layout_Alignment; }

namespace android::text::style {

class AlignmentSpan_Standard : public object_base<SCAPIX_META_STRING("android/text/style/AlignmentSpan$Standard"),
	java::lang::Object,
	android::text::style::AlignmentSpan,
	android::text::ParcelableSpan>
{
public:

	static ref<AlignmentSpan_Standard> new_object(ref<android::text::Layout_Alignment> align);
	static ref<AlignmentSpan_Standard> new_object(ref<android::os::Parcel> src);
	jint getSpanTypeId();
	jint describeContents();
	void writeToParcel(ref<android::os::Parcel> dest, jint flags);
	ref<android::text::Layout_Alignment> getAlignment();

protected:

	AlignmentSpan_Standard(handle_type h) : base_(h) {}

};

} // namespace android::text::style
} // namespace scapix::java_api

#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/text/Layout_Alignment.h>

namespace scapix::java_api {
namespace android::text::style {

inline ref<AlignmentSpan_Standard> AlignmentSpan_Standard::new_object(ref<android::text::Layout_Alignment> align) { return base_::new_object(align); }
inline ref<AlignmentSpan_Standard> AlignmentSpan_Standard::new_object(ref<android::os::Parcel> src) { return base_::new_object(src); }
inline jint AlignmentSpan_Standard::getSpanTypeId() { return call_method<SCAPIX_META_STRING("getSpanTypeId"), jint>(); }
inline jint AlignmentSpan_Standard::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }
inline void AlignmentSpan_Standard::writeToParcel(ref<android::os::Parcel> dest, jint flags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(dest, flags); }
inline ref<android::text::Layout_Alignment> AlignmentSpan_Standard::getAlignment() { return call_method<SCAPIX_META_STRING("getAlignment"), ref<android::text::Layout_Alignment>>(); }

} // namespace android::text::style
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_TEXT_STYLE_ALIGNMENTSPAN_STANDARD_H
