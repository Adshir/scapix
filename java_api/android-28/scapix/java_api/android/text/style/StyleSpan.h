// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/text/style/MetricAffectingSpan.h>
#include <scapix/java_api/android/text/ParcelableSpan.h>

#ifndef SCAPIX_ANDROID_TEXT_STYLE_STYLESPAN_H
#define SCAPIX_ANDROID_TEXT_STYLE_STYLESPAN_H

namespace scapix::java_api {

namespace android::os { class Parcel; }
namespace android::text { class TextPaint; }

namespace android::text::style {

class StyleSpan : public object_base<SCAPIX_META_STRING("android/text/style/StyleSpan"),
	android::text::style::MetricAffectingSpan,
	android::text::ParcelableSpan>
{
public:

	static ref<StyleSpan> new_object(jint style);
	static ref<StyleSpan> new_object(ref<android::os::Parcel> src);
	jint getSpanTypeId();
	jint describeContents();
	void writeToParcel(ref<android::os::Parcel> dest, jint flags);
	jint getStyle();
	void updateDrawState(ref<android::text::TextPaint> ds);
	void updateMeasureState(ref<android::text::TextPaint> paint);

protected:

	StyleSpan(handle_type h) : base_(h) {}

};

} // namespace android::text::style
} // namespace scapix::java_api

#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/text/TextPaint.h>

namespace scapix::java_api {
namespace android::text::style {

inline ref<StyleSpan> StyleSpan::new_object(jint style) { return base_::new_object(style); }
inline ref<StyleSpan> StyleSpan::new_object(ref<android::os::Parcel> src) { return base_::new_object(src); }
inline jint StyleSpan::getSpanTypeId() { return call_method<SCAPIX_META_STRING("getSpanTypeId"), jint>(); }
inline jint StyleSpan::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }
inline void StyleSpan::writeToParcel(ref<android::os::Parcel> dest, jint flags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(dest, flags); }
inline jint StyleSpan::getStyle() { return call_method<SCAPIX_META_STRING("getStyle"), jint>(); }
inline void StyleSpan::updateDrawState(ref<android::text::TextPaint> ds) { return call_method<SCAPIX_META_STRING("updateDrawState"), void>(ds); }
inline void StyleSpan::updateMeasureState(ref<android::text::TextPaint> paint) { return call_method<SCAPIX_META_STRING("updateMeasureState"), void>(paint); }

} // namespace android::text::style
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_TEXT_STYLE_STYLESPAN_H
