// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_TEXT_METHOD_KEYLISTENER_H
#define SCAPIX_ANDROID_TEXT_METHOD_KEYLISTENER_H

namespace scapix::java_api {

namespace android::text { class Editable; }
namespace android::view { class KeyEvent; }
namespace android::view { class View; }

namespace android::text::method {

class KeyListener : public object_base<SCAPIX_META_STRING("android/text/method/KeyListener"),
	java::lang::Object>
{
public:

	jint getInputType();
	jboolean onKeyDown(ref<android::view::View> p1, ref<android::text::Editable> p2, jint p3, ref<android::view::KeyEvent> p4);
	jboolean onKeyUp(ref<android::view::View> p1, ref<android::text::Editable> p2, jint p3, ref<android::view::KeyEvent> p4);
	jboolean onKeyOther(ref<android::view::View> p1, ref<android::text::Editable> p2, ref<android::view::KeyEvent> p3);
	void clearMetaKeyState(ref<android::view::View> p1, ref<android::text::Editable> p2, jint p3);

protected:

	KeyListener(handle_type h) : base_(h) {}

};

} // namespace android::text::method
} // namespace scapix::java_api

#include <scapix/java_api/android/text/Editable.h>
#include <scapix/java_api/android/view/KeyEvent.h>
#include <scapix/java_api/android/view/View.h>

namespace scapix::java_api {
namespace android::text::method {

inline jint KeyListener::getInputType() { return call_method<SCAPIX_META_STRING("getInputType"), jint>(); }
inline jboolean KeyListener::onKeyDown(ref<android::view::View> p1, ref<android::text::Editable> p2, jint p3, ref<android::view::KeyEvent> p4) { return call_method<SCAPIX_META_STRING("onKeyDown"), jboolean>(p1, p2, p3, p4); }
inline jboolean KeyListener::onKeyUp(ref<android::view::View> p1, ref<android::text::Editable> p2, jint p3, ref<android::view::KeyEvent> p4) { return call_method<SCAPIX_META_STRING("onKeyUp"), jboolean>(p1, p2, p3, p4); }
inline jboolean KeyListener::onKeyOther(ref<android::view::View> p1, ref<android::text::Editable> p2, ref<android::view::KeyEvent> p3) { return call_method<SCAPIX_META_STRING("onKeyOther"), jboolean>(p1, p2, p3); }
inline void KeyListener::clearMetaKeyState(ref<android::view::View> p1, ref<android::text::Editable> p2, jint p3) { return call_method<SCAPIX_META_STRING("clearMetaKeyState"), void>(p1, p2, p3); }

} // namespace android::text::method
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_TEXT_METHOD_KEYLISTENER_H
