// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/text/method/BaseKeyListener.h>

#ifndef SCAPIX_ANDROID_TEXT_METHOD_QWERTYKEYLISTENER_H
#define SCAPIX_ANDROID_TEXT_METHOD_QWERTYKEYLISTENER_H

namespace scapix::java_api {

namespace android::text { class Editable; }
namespace android::text { class Spannable; }
namespace android::text::method { class TextKeyListener_Capitalize; }
namespace android::view { class KeyEvent; }
namespace android::view { class View; }
namespace java::lang { class String; }

namespace android::text::method {

class QwertyKeyListener : public object_base<SCAPIX_META_STRING("android/text/method/QwertyKeyListener"),
	android::text::method::BaseKeyListener>
{
public:

	static ref<QwertyKeyListener> new_object(ref<android::text::method::TextKeyListener_Capitalize> cap, jboolean autoText);
	static ref<android::text::method::QwertyKeyListener> getInstance(jboolean autoText, ref<android::text::method::TextKeyListener_Capitalize> cap);
	static ref<android::text::method::QwertyKeyListener> getInstanceForFullKeyboard();
	jint getInputType();
	jboolean onKeyDown(ref<android::view::View> view, ref<android::text::Editable> content, jint keyCode, ref<android::view::KeyEvent> event);
	static void markAsReplaced(ref<android::text::Spannable> content, jint start, jint end, ref<java::lang::String> original);

protected:

	QwertyKeyListener(handle_type h) : base_(h) {}

};

} // namespace android::text::method
} // namespace scapix::java_api

#include <scapix/java_api/android/text/Editable.h>
#include <scapix/java_api/android/text/Spannable.h>
#include <scapix/java_api/android/text/method/TextKeyListener_Capitalize.h>
#include <scapix/java_api/android/view/KeyEvent.h>
#include <scapix/java_api/android/view/View.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::text::method {

inline ref<QwertyKeyListener> QwertyKeyListener::new_object(ref<android::text::method::TextKeyListener_Capitalize> cap, jboolean autoText) { return base_::new_object(cap, autoText); }
inline ref<android::text::method::QwertyKeyListener> QwertyKeyListener::getInstance(jboolean autoText, ref<android::text::method::TextKeyListener_Capitalize> cap) { return call_static_method<SCAPIX_META_STRING("getInstance"), ref<android::text::method::QwertyKeyListener>>(autoText, cap); }
inline ref<android::text::method::QwertyKeyListener> QwertyKeyListener::getInstanceForFullKeyboard() { return call_static_method<SCAPIX_META_STRING("getInstanceForFullKeyboard"), ref<android::text::method::QwertyKeyListener>>(); }
inline jint QwertyKeyListener::getInputType() { return call_method<SCAPIX_META_STRING("getInputType"), jint>(); }
inline jboolean QwertyKeyListener::onKeyDown(ref<android::view::View> view, ref<android::text::Editable> content, jint keyCode, ref<android::view::KeyEvent> event) { return call_method<SCAPIX_META_STRING("onKeyDown"), jboolean>(view, content, keyCode, event); }
inline void QwertyKeyListener::markAsReplaced(ref<android::text::Spannable> content, jint start, jint end, ref<java::lang::String> original) { return call_static_method<SCAPIX_META_STRING("markAsReplaced"), void>(content, start, end, original); }

} // namespace android::text::method
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_TEXT_METHOD_QWERTYKEYLISTENER_H
