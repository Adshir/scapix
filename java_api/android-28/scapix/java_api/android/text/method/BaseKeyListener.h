// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/text/method/MetaKeyKeyListener.h>
#include <scapix/java_api/android/text/method/KeyListener.h>

#ifndef SCAPIX_ANDROID_TEXT_METHOD_BASEKEYLISTENER_H
#define SCAPIX_ANDROID_TEXT_METHOD_BASEKEYLISTENER_H

namespace scapix::java_api {

namespace android::text { class Editable; }
namespace android::view { class KeyEvent; }
namespace android::view { class View; }

namespace android::text::method {

class BaseKeyListener : public object_base<SCAPIX_META_STRING("android/text/method/BaseKeyListener"),
	android::text::method::MetaKeyKeyListener,
	android::text::method::KeyListener>
{
public:

	static ref<BaseKeyListener> new_object();
	jboolean backspace(ref<android::view::View> view, ref<android::text::Editable> content, jint keyCode, ref<android::view::KeyEvent> event);
	jboolean forwardDelete(ref<android::view::View> view, ref<android::text::Editable> content, jint keyCode, ref<android::view::KeyEvent> event);
	jboolean onKeyDown(ref<android::view::View> view, ref<android::text::Editable> content, jint keyCode, ref<android::view::KeyEvent> event);
	jboolean onKeyOther(ref<android::view::View> view, ref<android::text::Editable> content, ref<android::view::KeyEvent> event);

protected:

	BaseKeyListener(handle_type h) : base_(h) {}

};

} // namespace android::text::method
} // namespace scapix::java_api

#include <scapix/java_api/android/text/Editable.h>
#include <scapix/java_api/android/view/KeyEvent.h>
#include <scapix/java_api/android/view/View.h>

namespace scapix::java_api {
namespace android::text::method {

inline ref<BaseKeyListener> BaseKeyListener::new_object() { return base_::new_object(); }
inline jboolean BaseKeyListener::backspace(ref<android::view::View> view, ref<android::text::Editable> content, jint keyCode, ref<android::view::KeyEvent> event) { return call_method<SCAPIX_META_STRING("backspace"), jboolean>(view, content, keyCode, event); }
inline jboolean BaseKeyListener::forwardDelete(ref<android::view::View> view, ref<android::text::Editable> content, jint keyCode, ref<android::view::KeyEvent> event) { return call_method<SCAPIX_META_STRING("forwardDelete"), jboolean>(view, content, keyCode, event); }
inline jboolean BaseKeyListener::onKeyDown(ref<android::view::View> view, ref<android::text::Editable> content, jint keyCode, ref<android::view::KeyEvent> event) { return call_method<SCAPIX_META_STRING("onKeyDown"), jboolean>(view, content, keyCode, event); }
inline jboolean BaseKeyListener::onKeyOther(ref<android::view::View> view, ref<android::text::Editable> content, ref<android::view::KeyEvent> event) { return call_method<SCAPIX_META_STRING("onKeyOther"), jboolean>(view, content, event); }

} // namespace android::text::method
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_TEXT_METHOD_BASEKEYLISTENER_H
