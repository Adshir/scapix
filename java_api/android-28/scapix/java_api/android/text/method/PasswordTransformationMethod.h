// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/text/method/TransformationMethod.h>
#include <scapix/java_api/android/text/TextWatcher.h>

#ifndef SCAPIX_ANDROID_TEXT_METHOD_PASSWORDTRANSFORMATIONMETHOD_H
#define SCAPIX_ANDROID_TEXT_METHOD_PASSWORDTRANSFORMATIONMETHOD_H

namespace scapix::java_api {

namespace android::graphics { class Rect; }
namespace android::text { class Editable; }
namespace android::view { class View; }
namespace java::lang { class CharSequence; }

namespace android::text::method {

class PasswordTransformationMethod : public object_base<SCAPIX_META_STRING("android/text/method/PasswordTransformationMethod"),
	java::lang::Object,
	android::text::method::TransformationMethod,
	android::text::TextWatcher>
{
public:

	static ref<PasswordTransformationMethod> new_object();
	ref<java::lang::CharSequence> getTransformation(ref<java::lang::CharSequence> source, ref<android::view::View> view);
	static ref<android::text::method::PasswordTransformationMethod> getInstance();
	void beforeTextChanged(ref<java::lang::CharSequence> s, jint start, jint count, jint after);
	void onTextChanged(ref<java::lang::CharSequence> s, jint start, jint before, jint count);
	void afterTextChanged(ref<android::text::Editable> s);
	void onFocusChanged(ref<android::view::View> view, ref<java::lang::CharSequence> sourceText, jboolean focused, jint direction, ref<android::graphics::Rect> previouslyFocusedRect);

protected:

	PasswordTransformationMethod(handle_type h) : base_(h) {}

};

} // namespace android::text::method
} // namespace scapix::java_api

#include <scapix/java_api/android/graphics/Rect.h>
#include <scapix/java_api/android/text/Editable.h>
#include <scapix/java_api/android/view/View.h>
#include <scapix/java_api/java/lang/CharSequence.h>

namespace scapix::java_api {
namespace android::text::method {

inline ref<PasswordTransformationMethod> PasswordTransformationMethod::new_object() { return base_::new_object(); }
inline ref<java::lang::CharSequence> PasswordTransformationMethod::getTransformation(ref<java::lang::CharSequence> source, ref<android::view::View> view) { return call_method<SCAPIX_META_STRING("getTransformation"), ref<java::lang::CharSequence>>(source, view); }
inline ref<android::text::method::PasswordTransformationMethod> PasswordTransformationMethod::getInstance() { return call_static_method<SCAPIX_META_STRING("getInstance"), ref<android::text::method::PasswordTransformationMethod>>(); }
inline void PasswordTransformationMethod::beforeTextChanged(ref<java::lang::CharSequence> s, jint start, jint count, jint after) { return call_method<SCAPIX_META_STRING("beforeTextChanged"), void>(s, start, count, after); }
inline void PasswordTransformationMethod::onTextChanged(ref<java::lang::CharSequence> s, jint start, jint before, jint count) { return call_method<SCAPIX_META_STRING("onTextChanged"), void>(s, start, before, count); }
inline void PasswordTransformationMethod::afterTextChanged(ref<android::text::Editable> s) { return call_method<SCAPIX_META_STRING("afterTextChanged"), void>(s); }
inline void PasswordTransformationMethod::onFocusChanged(ref<android::view::View> view, ref<java::lang::CharSequence> sourceText, jboolean focused, jint direction, ref<android::graphics::Rect> previouslyFocusedRect) { return call_method<SCAPIX_META_STRING("onFocusChanged"), void>(view, sourceText, focused, direction, previouslyFocusedRect); }

} // namespace android::text::method
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_TEXT_METHOD_PASSWORDTRANSFORMATIONMETHOD_H
