// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/text/method/NumberKeyListener.h>

#ifndef SCAPIX_ANDROID_TEXT_METHOD_DIGITSKEYLISTENER_H
#define SCAPIX_ANDROID_TEXT_METHOD_DIGITSKEYLISTENER_H

namespace scapix::java_api {

namespace android::text { class Spanned; }
namespace java::lang { class CharSequence; }
namespace java::lang { class String; }
namespace java::util { class Locale; }

namespace android::text::method {

class DigitsKeyListener : public object_base<SCAPIX_META_STRING("android/text/method/DigitsKeyListener"),
	android::text::method::NumberKeyListener>
{
public:

	static ref<DigitsKeyListener> new_object();
	static ref<DigitsKeyListener> new_object(jboolean sign, jboolean decimal);
	static ref<DigitsKeyListener> new_object(ref<java::util::Locale> locale);
	static ref<DigitsKeyListener> new_object(ref<java::util::Locale> locale, jboolean sign, jboolean decimal);
	static ref<android::text::method::DigitsKeyListener> getInstance();
	static ref<android::text::method::DigitsKeyListener> getInstance(jboolean sign, jboolean decimal);
	static ref<android::text::method::DigitsKeyListener> getInstance(ref<java::util::Locale> locale);
	static ref<android::text::method::DigitsKeyListener> getInstance(ref<java::util::Locale> locale, jboolean sign, jboolean decimal);
	static ref<android::text::method::DigitsKeyListener> getInstance(ref<java::lang::String> accepted);
	jint getInputType();
	ref<java::lang::CharSequence> filter(ref<java::lang::CharSequence> source, jint start, jint end, ref<android::text::Spanned> dest, jint dstart, jint dend);

protected:

	DigitsKeyListener(handle_type h) : base_(h) {}

};

} // namespace android::text::method
} // namespace scapix::java_api

#include <scapix/java_api/android/text/Spanned.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Locale.h>

namespace scapix::java_api {
namespace android::text::method {

inline ref<DigitsKeyListener> DigitsKeyListener::new_object() { return base_::new_object(); }
inline ref<DigitsKeyListener> DigitsKeyListener::new_object(jboolean sign, jboolean decimal) { return base_::new_object(sign, decimal); }
inline ref<DigitsKeyListener> DigitsKeyListener::new_object(ref<java::util::Locale> locale) { return base_::new_object(locale); }
inline ref<DigitsKeyListener> DigitsKeyListener::new_object(ref<java::util::Locale> locale, jboolean sign, jboolean decimal) { return base_::new_object(locale, sign, decimal); }
inline ref<android::text::method::DigitsKeyListener> DigitsKeyListener::getInstance() { return call_static_method<SCAPIX_META_STRING("getInstance"), ref<android::text::method::DigitsKeyListener>>(); }
inline ref<android::text::method::DigitsKeyListener> DigitsKeyListener::getInstance(jboolean sign, jboolean decimal) { return call_static_method<SCAPIX_META_STRING("getInstance"), ref<android::text::method::DigitsKeyListener>>(sign, decimal); }
inline ref<android::text::method::DigitsKeyListener> DigitsKeyListener::getInstance(ref<java::util::Locale> locale) { return call_static_method<SCAPIX_META_STRING("getInstance"), ref<android::text::method::DigitsKeyListener>>(locale); }
inline ref<android::text::method::DigitsKeyListener> DigitsKeyListener::getInstance(ref<java::util::Locale> locale, jboolean sign, jboolean decimal) { return call_static_method<SCAPIX_META_STRING("getInstance"), ref<android::text::method::DigitsKeyListener>>(locale, sign, decimal); }
inline ref<android::text::method::DigitsKeyListener> DigitsKeyListener::getInstance(ref<java::lang::String> accepted) { return call_static_method<SCAPIX_META_STRING("getInstance"), ref<android::text::method::DigitsKeyListener>>(accepted); }
inline jint DigitsKeyListener::getInputType() { return call_method<SCAPIX_META_STRING("getInputType"), jint>(); }
inline ref<java::lang::CharSequence> DigitsKeyListener::filter(ref<java::lang::CharSequence> source, jint start, jint end, ref<android::text::Spanned> dest, jint dstart, jint dend) { return call_method<SCAPIX_META_STRING("filter"), ref<java::lang::CharSequence>>(source, start, end, dest, dstart, dend); }

} // namespace android::text::method
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_TEXT_METHOD_DIGITSKEYLISTENER_H
