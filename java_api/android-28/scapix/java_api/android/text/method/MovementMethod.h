// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_TEXT_METHOD_MOVEMENTMETHOD_H
#define SCAPIX_ANDROID_TEXT_METHOD_MOVEMENTMETHOD_H

namespace scapix::java_api {

namespace android::text { class Spannable; }
namespace android::view { class KeyEvent; }
namespace android::view { class MotionEvent; }
namespace android::widget { class TextView; }

namespace android::text::method {

class MovementMethod : public object_base<SCAPIX_META_STRING("android/text/method/MovementMethod"),
	java::lang::Object>
{
public:

	void initialize(ref<android::widget::TextView> p1, ref<android::text::Spannable> p2);
	jboolean onKeyDown(ref<android::widget::TextView> p1, ref<android::text::Spannable> p2, jint p3, ref<android::view::KeyEvent> p4);
	jboolean onKeyUp(ref<android::widget::TextView> p1, ref<android::text::Spannable> p2, jint p3, ref<android::view::KeyEvent> p4);
	jboolean onKeyOther(ref<android::widget::TextView> p1, ref<android::text::Spannable> p2, ref<android::view::KeyEvent> p3);
	void onTakeFocus(ref<android::widget::TextView> p1, ref<android::text::Spannable> p2, jint p3);
	jboolean onTrackballEvent(ref<android::widget::TextView> p1, ref<android::text::Spannable> p2, ref<android::view::MotionEvent> p3);
	jboolean onTouchEvent(ref<android::widget::TextView> p1, ref<android::text::Spannable> p2, ref<android::view::MotionEvent> p3);
	jboolean onGenericMotionEvent(ref<android::widget::TextView> p1, ref<android::text::Spannable> p2, ref<android::view::MotionEvent> p3);
	jboolean canSelectArbitrarily();

protected:

	MovementMethod(handle_type h) : base_(h) {}

};

} // namespace android::text::method
} // namespace scapix::java_api

#include <scapix/java_api/android/text/Spannable.h>
#include <scapix/java_api/android/view/KeyEvent.h>
#include <scapix/java_api/android/view/MotionEvent.h>
#include <scapix/java_api/android/widget/TextView.h>

namespace scapix::java_api {
namespace android::text::method {

inline void MovementMethod::initialize(ref<android::widget::TextView> p1, ref<android::text::Spannable> p2) { return call_method<SCAPIX_META_STRING("initialize"), void>(p1, p2); }
inline jboolean MovementMethod::onKeyDown(ref<android::widget::TextView> p1, ref<android::text::Spannable> p2, jint p3, ref<android::view::KeyEvent> p4) { return call_method<SCAPIX_META_STRING("onKeyDown"), jboolean>(p1, p2, p3, p4); }
inline jboolean MovementMethod::onKeyUp(ref<android::widget::TextView> p1, ref<android::text::Spannable> p2, jint p3, ref<android::view::KeyEvent> p4) { return call_method<SCAPIX_META_STRING("onKeyUp"), jboolean>(p1, p2, p3, p4); }
inline jboolean MovementMethod::onKeyOther(ref<android::widget::TextView> p1, ref<android::text::Spannable> p2, ref<android::view::KeyEvent> p3) { return call_method<SCAPIX_META_STRING("onKeyOther"), jboolean>(p1, p2, p3); }
inline void MovementMethod::onTakeFocus(ref<android::widget::TextView> p1, ref<android::text::Spannable> p2, jint p3) { return call_method<SCAPIX_META_STRING("onTakeFocus"), void>(p1, p2, p3); }
inline jboolean MovementMethod::onTrackballEvent(ref<android::widget::TextView> p1, ref<android::text::Spannable> p2, ref<android::view::MotionEvent> p3) { return call_method<SCAPIX_META_STRING("onTrackballEvent"), jboolean>(p1, p2, p3); }
inline jboolean MovementMethod::onTouchEvent(ref<android::widget::TextView> p1, ref<android::text::Spannable> p2, ref<android::view::MotionEvent> p3) { return call_method<SCAPIX_META_STRING("onTouchEvent"), jboolean>(p1, p2, p3); }
inline jboolean MovementMethod::onGenericMotionEvent(ref<android::widget::TextView> p1, ref<android::text::Spannable> p2, ref<android::view::MotionEvent> p3) { return call_method<SCAPIX_META_STRING("onGenericMotionEvent"), jboolean>(p1, p2, p3); }
inline jboolean MovementMethod::canSelectArbitrarily() { return call_method<SCAPIX_META_STRING("canSelectArbitrarily"), jboolean>(); }

} // namespace android::text::method
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_TEXT_METHOD_MOVEMENTMETHOD_H
