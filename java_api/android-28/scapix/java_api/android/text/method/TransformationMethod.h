// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_TEXT_METHOD_TRANSFORMATIONMETHOD_H
#define SCAPIX_ANDROID_TEXT_METHOD_TRANSFORMATIONMETHOD_H

namespace scapix::java_api {

namespace android::graphics { class Rect; }
namespace android::view { class View; }
namespace java::lang { class CharSequence; }

namespace android::text::method {

class TransformationMethod : public object_base<SCAPIX_META_STRING("android/text/method/TransformationMethod"),
	java::lang::Object>
{
public:

	ref<java::lang::CharSequence> getTransformation(ref<java::lang::CharSequence> p1, ref<android::view::View> p2);
	void onFocusChanged(ref<android::view::View> p1, ref<java::lang::CharSequence> p2, jboolean p3, jint p4, ref<android::graphics::Rect> p5);

protected:

	TransformationMethod(handle_type h) : base_(h) {}

};

} // namespace android::text::method
} // namespace scapix::java_api

#include <scapix/java_api/android/graphics/Rect.h>
#include <scapix/java_api/android/view/View.h>
#include <scapix/java_api/java/lang/CharSequence.h>

namespace scapix::java_api {
namespace android::text::method {

inline ref<java::lang::CharSequence> TransformationMethod::getTransformation(ref<java::lang::CharSequence> p1, ref<android::view::View> p2) { return call_method<SCAPIX_META_STRING("getTransformation"), ref<java::lang::CharSequence>>(p1, p2); }
inline void TransformationMethod::onFocusChanged(ref<android::view::View> p1, ref<java::lang::CharSequence> p2, jboolean p3, jint p4, ref<android::graphics::Rect> p5) { return call_method<SCAPIX_META_STRING("onFocusChanged"), void>(p1, p2, p3, p4, p5); }

} // namespace android::text::method
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_TEXT_METHOD_TRANSFORMATIONMETHOD_H
