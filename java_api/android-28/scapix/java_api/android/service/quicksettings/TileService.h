// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/app/Service.h>

#ifndef SCAPIX_ANDROID_SERVICE_QUICKSETTINGS_TILESERVICE_H
#define SCAPIX_ANDROID_SERVICE_QUICKSETTINGS_TILESERVICE_H

namespace scapix::java_api {

namespace android::app { class Dialog; }
namespace android::content { class ComponentName; }
namespace android::content { class Context; }
namespace android::content { class Intent; }
namespace android::os { class IBinder; }
namespace android::service::quicksettings { class Tile; }
namespace java::lang { class Runnable; }
namespace java::lang { class String; }

namespace android::service::quicksettings {

class TileService : public object_base<SCAPIX_META_STRING("android/service/quicksettings/TileService"),
	android::app::Service>
{
public:

	static ref<java::lang::String> ACTION_QS_TILE_();
	static ref<java::lang::String> ACTION_QS_TILE_PREFERENCES_();
	static ref<java::lang::String> META_DATA_ACTIVE_TILE_();

	static ref<TileService> new_object();
	void onDestroy();
	void onTileAdded();
	void onTileRemoved();
	void onStartListening();
	void onStopListening();
	void onClick();
	void showDialog(ref<android::app::Dialog> dialog);
	void unlockAndRun(ref<java::lang::Runnable> runnable);
	jboolean isSecure();
	jboolean isLocked();
	void startActivityAndCollapse(ref<android::content::Intent> intent);
	ref<android::service::quicksettings::Tile> getQsTile();
	ref<android::os::IBinder> onBind(ref<android::content::Intent> intent);
	static void requestListeningState(ref<android::content::Context> context, ref<android::content::ComponentName> component);

protected:

	TileService(handle_type h) : base_(h) {}

};

} // namespace android::service::quicksettings
} // namespace scapix::java_api

#include <scapix/java_api/android/app/Dialog.h>
#include <scapix/java_api/android/content/ComponentName.h>
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/content/Intent.h>
#include <scapix/java_api/android/os/IBinder.h>
#include <scapix/java_api/android/service/quicksettings/Tile.h>
#include <scapix/java_api/java/lang/Runnable.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::service::quicksettings {

inline ref<java::lang::String> TileService::ACTION_QS_TILE_() { return get_static_field<SCAPIX_META_STRING("ACTION_QS_TILE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TileService::ACTION_QS_TILE_PREFERENCES_() { return get_static_field<SCAPIX_META_STRING("ACTION_QS_TILE_PREFERENCES"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TileService::META_DATA_ACTIVE_TILE_() { return get_static_field<SCAPIX_META_STRING("META_DATA_ACTIVE_TILE"), ref<java::lang::String>>(); }
inline ref<TileService> TileService::new_object() { return base_::new_object(); }
inline void TileService::onDestroy() { return call_method<SCAPIX_META_STRING("onDestroy"), void>(); }
inline void TileService::onTileAdded() { return call_method<SCAPIX_META_STRING("onTileAdded"), void>(); }
inline void TileService::onTileRemoved() { return call_method<SCAPIX_META_STRING("onTileRemoved"), void>(); }
inline void TileService::onStartListening() { return call_method<SCAPIX_META_STRING("onStartListening"), void>(); }
inline void TileService::onStopListening() { return call_method<SCAPIX_META_STRING("onStopListening"), void>(); }
inline void TileService::onClick() { return call_method<SCAPIX_META_STRING("onClick"), void>(); }
inline void TileService::showDialog(ref<android::app::Dialog> dialog) { return call_method<SCAPIX_META_STRING("showDialog"), void>(dialog); }
inline void TileService::unlockAndRun(ref<java::lang::Runnable> runnable) { return call_method<SCAPIX_META_STRING("unlockAndRun"), void>(runnable); }
inline jboolean TileService::isSecure() { return call_method<SCAPIX_META_STRING("isSecure"), jboolean>(); }
inline jboolean TileService::isLocked() { return call_method<SCAPIX_META_STRING("isLocked"), jboolean>(); }
inline void TileService::startActivityAndCollapse(ref<android::content::Intent> intent) { return call_method<SCAPIX_META_STRING("startActivityAndCollapse"), void>(intent); }
inline ref<android::service::quicksettings::Tile> TileService::getQsTile() { return call_method<SCAPIX_META_STRING("getQsTile"), ref<android::service::quicksettings::Tile>>(); }
inline ref<android::os::IBinder> TileService::onBind(ref<android::content::Intent> intent) { return call_method<SCAPIX_META_STRING("onBind"), ref<android::os::IBinder>>(intent); }
inline void TileService::requestListeningState(ref<android::content::Context> context, ref<android::content::ComponentName> component) { return call_static_method<SCAPIX_META_STRING("requestListeningState"), void>(context, component); }

} // namespace android::service::quicksettings
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_SERVICE_QUICKSETTINGS_TILESERVICE_H
