// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_ANDROID_SERVICE_QUICKSETTINGS_TILE_H
#define SCAPIX_ANDROID_SERVICE_QUICKSETTINGS_TILE_H

namespace scapix::java_api {

namespace android::graphics::drawable { class Icon; }
namespace android::os { class Parcel; }
namespace android::os { class Parcelable_Creator; }
namespace java::lang { class CharSequence; }

namespace android::service::quicksettings {

class Tile : public object_base<SCAPIX_META_STRING("android/service/quicksettings/Tile"),
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static ref<android::os::Parcelable_Creator> CREATOR_();
	static jint STATE_ACTIVE_();
	static jint STATE_INACTIVE_();
	static jint STATE_UNAVAILABLE_();

	jint getState();
	void setState(jint state);
	ref<android::graphics::drawable::Icon> getIcon();
	void setIcon(ref<android::graphics::drawable::Icon> icon);
	ref<java::lang::CharSequence> getLabel();
	void setLabel(ref<java::lang::CharSequence> label);
	ref<java::lang::CharSequence> getContentDescription();
	void setContentDescription(ref<java::lang::CharSequence> contentDescription);
	jint describeContents();
	void updateTile();
	void writeToParcel(ref<android::os::Parcel> dest, jint flags);

protected:

	Tile(handle_type h) : base_(h) {}

};

} // namespace android::service::quicksettings
} // namespace scapix::java_api

#include <scapix/java_api/android/graphics/drawable/Icon.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/CharSequence.h>

namespace scapix::java_api {
namespace android::service::quicksettings {

inline ref<android::os::Parcelable_Creator> Tile::CREATOR_() { return get_static_field<SCAPIX_META_STRING("CREATOR"), ref<android::os::Parcelable_Creator>>(); }
inline jint Tile::STATE_ACTIVE_() { return get_static_field<SCAPIX_META_STRING("STATE_ACTIVE"), jint>(); }
inline jint Tile::STATE_INACTIVE_() { return get_static_field<SCAPIX_META_STRING("STATE_INACTIVE"), jint>(); }
inline jint Tile::STATE_UNAVAILABLE_() { return get_static_field<SCAPIX_META_STRING("STATE_UNAVAILABLE"), jint>(); }
inline jint Tile::getState() { return call_method<SCAPIX_META_STRING("getState"), jint>(); }
inline void Tile::setState(jint state) { return call_method<SCAPIX_META_STRING("setState"), void>(state); }
inline ref<android::graphics::drawable::Icon> Tile::getIcon() { return call_method<SCAPIX_META_STRING("getIcon"), ref<android::graphics::drawable::Icon>>(); }
inline void Tile::setIcon(ref<android::graphics::drawable::Icon> icon) { return call_method<SCAPIX_META_STRING("setIcon"), void>(icon); }
inline ref<java::lang::CharSequence> Tile::getLabel() { return call_method<SCAPIX_META_STRING("getLabel"), ref<java::lang::CharSequence>>(); }
inline void Tile::setLabel(ref<java::lang::CharSequence> label) { return call_method<SCAPIX_META_STRING("setLabel"), void>(label); }
inline ref<java::lang::CharSequence> Tile::getContentDescription() { return call_method<SCAPIX_META_STRING("getContentDescription"), ref<java::lang::CharSequence>>(); }
inline void Tile::setContentDescription(ref<java::lang::CharSequence> contentDescription) { return call_method<SCAPIX_META_STRING("setContentDescription"), void>(contentDescription); }
inline jint Tile::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }
inline void Tile::updateTile() { return call_method<SCAPIX_META_STRING("updateTile"), void>(); }
inline void Tile::writeToParcel(ref<android::os::Parcel> dest, jint flags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(dest, flags); }

} // namespace android::service::quicksettings
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_SERVICE_QUICKSETTINGS_TILE_H
