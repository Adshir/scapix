// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/app/Service.h>

#ifndef SCAPIX_ANDROID_SERVICE_MEDIA_MEDIABROWSERSERVICE_H
#define SCAPIX_ANDROID_SERVICE_MEDIA_MEDIABROWSERSERVICE_H

namespace scapix::java_api {

namespace android::content { class Intent; }
namespace android::media::session { class MediaSession_Token; }
namespace android::media::session { class MediaSessionManager_RemoteUserInfo; }
namespace android::os { class Bundle; }
namespace android::os { class IBinder; }
namespace android::service::media { class MediaBrowserService_BrowserRoot; }
namespace android::service::media { class MediaBrowserService_Result; }
namespace java::io { class FileDescriptor; }
namespace java::io { class PrintWriter; }
namespace java::lang { class String; }

namespace android::service::media {

class MediaBrowserService : public object_base<SCAPIX_META_STRING("android/service/media/MediaBrowserService"),
	android::app::Service>
{
public:

	using Result = MediaBrowserService_Result;
	using BrowserRoot = MediaBrowserService_BrowserRoot;

	static ref<java::lang::String> SERVICE_INTERFACE_();

	static ref<MediaBrowserService> new_object();
	void onCreate();
	ref<android::os::IBinder> onBind(ref<android::content::Intent> intent);
	void dump(ref<java::io::FileDescriptor> fd, ref<java::io::PrintWriter> writer, ref<link::java::array<java::lang::String>> args);
	ref<android::service::media::MediaBrowserService_BrowserRoot> onGetRoot(ref<java::lang::String> p1, jint p2, ref<android::os::Bundle> p3);
	void onLoadChildren(ref<java::lang::String> p1, ref<android::service::media::MediaBrowserService_Result> p2);
	void onLoadChildren(ref<java::lang::String> parentId, ref<android::service::media::MediaBrowserService_Result> result, ref<android::os::Bundle> options);
	void onLoadItem(ref<java::lang::String> itemId, ref<android::service::media::MediaBrowserService_Result> result);
	void setSessionToken(ref<android::media::session::MediaSession_Token> token);
	ref<android::media::session::MediaSession_Token> getSessionToken();
	ref<android::os::Bundle> getBrowserRootHints();
	ref<android::media::session::MediaSessionManager_RemoteUserInfo> getCurrentBrowserInfo();
	void notifyChildrenChanged(ref<java::lang::String> parentId);
	void notifyChildrenChanged(ref<java::lang::String> parentId, ref<android::os::Bundle> options);

protected:

	MediaBrowserService(handle_type h) : base_(h) {}

};

} // namespace android::service::media
} // namespace scapix::java_api

#include <scapix/java_api/android/content/Intent.h>
#include <scapix/java_api/android/media/session/MediaSession_Token.h>
#include <scapix/java_api/android/media/session/MediaSessionManager_RemoteUserInfo.h>
#include <scapix/java_api/android/os/Bundle.h>
#include <scapix/java_api/android/os/IBinder.h>
#include <scapix/java_api/android/service/media/MediaBrowserService_BrowserRoot.h>
#include <scapix/java_api/android/service/media/MediaBrowserService_Result.h>
#include <scapix/java_api/java/io/FileDescriptor.h>
#include <scapix/java_api/java/io/PrintWriter.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::service::media {

inline ref<java::lang::String> MediaBrowserService::SERVICE_INTERFACE_() { return get_static_field<SCAPIX_META_STRING("SERVICE_INTERFACE"), ref<java::lang::String>>(); }
inline ref<MediaBrowserService> MediaBrowserService::new_object() { return base_::new_object(); }
inline void MediaBrowserService::onCreate() { return call_method<SCAPIX_META_STRING("onCreate"), void>(); }
inline ref<android::os::IBinder> MediaBrowserService::onBind(ref<android::content::Intent> intent) { return call_method<SCAPIX_META_STRING("onBind"), ref<android::os::IBinder>>(intent); }
inline void MediaBrowserService::dump(ref<java::io::FileDescriptor> fd, ref<java::io::PrintWriter> writer, ref<link::java::array<java::lang::String>> args) { return call_method<SCAPIX_META_STRING("dump"), void>(fd, writer, args); }
inline ref<android::service::media::MediaBrowserService_BrowserRoot> MediaBrowserService::onGetRoot(ref<java::lang::String> p1, jint p2, ref<android::os::Bundle> p3) { return call_method<SCAPIX_META_STRING("onGetRoot"), ref<android::service::media::MediaBrowserService_BrowserRoot>>(p1, p2, p3); }
inline void MediaBrowserService::onLoadChildren(ref<java::lang::String> p1, ref<android::service::media::MediaBrowserService_Result> p2) { return call_method<SCAPIX_META_STRING("onLoadChildren"), void>(p1, p2); }
inline void MediaBrowserService::onLoadChildren(ref<java::lang::String> parentId, ref<android::service::media::MediaBrowserService_Result> result, ref<android::os::Bundle> options) { return call_method<SCAPIX_META_STRING("onLoadChildren"), void>(parentId, result, options); }
inline void MediaBrowserService::onLoadItem(ref<java::lang::String> itemId, ref<android::service::media::MediaBrowserService_Result> result) { return call_method<SCAPIX_META_STRING("onLoadItem"), void>(itemId, result); }
inline void MediaBrowserService::setSessionToken(ref<android::media::session::MediaSession_Token> token) { return call_method<SCAPIX_META_STRING("setSessionToken"), void>(token); }
inline ref<android::media::session::MediaSession_Token> MediaBrowserService::getSessionToken() { return call_method<SCAPIX_META_STRING("getSessionToken"), ref<android::media::session::MediaSession_Token>>(); }
inline ref<android::os::Bundle> MediaBrowserService::getBrowserRootHints() { return call_method<SCAPIX_META_STRING("getBrowserRootHints"), ref<android::os::Bundle>>(); }
inline ref<android::media::session::MediaSessionManager_RemoteUserInfo> MediaBrowserService::getCurrentBrowserInfo() { return call_method<SCAPIX_META_STRING("getCurrentBrowserInfo"), ref<android::media::session::MediaSessionManager_RemoteUserInfo>>(); }
inline void MediaBrowserService::notifyChildrenChanged(ref<java::lang::String> parentId) { return call_method<SCAPIX_META_STRING("notifyChildrenChanged"), void>(parentId); }
inline void MediaBrowserService::notifyChildrenChanged(ref<java::lang::String> parentId, ref<android::os::Bundle> options) { return call_method<SCAPIX_META_STRING("notifyChildrenChanged"), void>(parentId, options); }

} // namespace android::service::media
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_SERVICE_MEDIA_MEDIABROWSERSERVICE_H
