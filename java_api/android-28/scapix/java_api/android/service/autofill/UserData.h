// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_ANDROID_SERVICE_AUTOFILL_USERDATA_H
#define SCAPIX_ANDROID_SERVICE_AUTOFILL_USERDATA_H

namespace scapix::java_api {

namespace android::os { class Parcel; }
namespace android::os { class Parcelable_Creator; }
namespace java::lang { class String; }
namespace android::service::autofill { class UserData_Builder; }

namespace android::service::autofill {

class UserData : public object_base<SCAPIX_META_STRING("android/service/autofill/UserData"),
	java::lang::Object,
	android::os::Parcelable>
{
public:

	using Builder = UserData_Builder;

	static ref<android::os::Parcelable_Creator> CREATOR_();

	ref<java::lang::String> getFieldClassificationAlgorithm();
	ref<java::lang::String> getId();
	ref<java::lang::String> toString();
	jint describeContents();
	void writeToParcel(ref<android::os::Parcel> parcel, jint flags);
	static jint getMaxUserDataSize();
	static jint getMaxFieldClassificationIdsSize();
	static jint getMaxCategoryCount();
	static jint getMinValueLength();
	static jint getMaxValueLength();

protected:

	UserData(handle_type h) : base_(h) {}

};

} // namespace android::service::autofill
} // namespace scapix::java_api

#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::service::autofill {

inline ref<android::os::Parcelable_Creator> UserData::CREATOR_() { return get_static_field<SCAPIX_META_STRING("CREATOR"), ref<android::os::Parcelable_Creator>>(); }
inline ref<java::lang::String> UserData::getFieldClassificationAlgorithm() { return call_method<SCAPIX_META_STRING("getFieldClassificationAlgorithm"), ref<java::lang::String>>(); }
inline ref<java::lang::String> UserData::getId() { return call_method<SCAPIX_META_STRING("getId"), ref<java::lang::String>>(); }
inline ref<java::lang::String> UserData::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }
inline jint UserData::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }
inline void UserData::writeToParcel(ref<android::os::Parcel> parcel, jint flags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(parcel, flags); }
inline jint UserData::getMaxUserDataSize() { return call_static_method<SCAPIX_META_STRING("getMaxUserDataSize"), jint>(); }
inline jint UserData::getMaxFieldClassificationIdsSize() { return call_static_method<SCAPIX_META_STRING("getMaxFieldClassificationIdsSize"), jint>(); }
inline jint UserData::getMaxCategoryCount() { return call_static_method<SCAPIX_META_STRING("getMaxCategoryCount"), jint>(); }
inline jint UserData::getMinValueLength() { return call_static_method<SCAPIX_META_STRING("getMinValueLength"), jint>(); }
inline jint UserData::getMaxValueLength() { return call_static_method<SCAPIX_META_STRING("getMaxValueLength"), jint>(); }

} // namespace android::service::autofill
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_SERVICE_AUTOFILL_USERDATA_H
