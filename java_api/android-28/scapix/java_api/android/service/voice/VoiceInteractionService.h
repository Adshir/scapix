// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/app/Service.h>

#ifndef SCAPIX_ANDROID_SERVICE_VOICE_VOICEINTERACTIONSERVICE_H
#define SCAPIX_ANDROID_SERVICE_VOICE_VOICEINTERACTIONSERVICE_H

namespace scapix::java_api {

namespace android::content { class ComponentName; }
namespace android::content { class Context; }
namespace android::content { class Intent; }
namespace android::os { class Bundle; }
namespace android::os { class IBinder; }
namespace android::service::voice { class AlwaysOnHotwordDetector; }
namespace android::service::voice { class AlwaysOnHotwordDetector_Callback; }
namespace java::lang { class String; }
namespace java::util { class Locale; }

namespace android::service::voice {

class VoiceInteractionService : public object_base<SCAPIX_META_STRING("android/service/voice/VoiceInteractionService"),
	android::app::Service>
{
public:

	static ref<java::lang::String> SERVICE_INTERFACE_();
	static ref<java::lang::String> SERVICE_META_DATA_();

	static ref<VoiceInteractionService> new_object();
	void onLaunchVoiceAssistFromKeyguard();
	static jboolean isActiveService(ref<android::content::Context> context, ref<android::content::ComponentName> service);
	void setDisabledShowContext(jint flags);
	jint getDisabledShowContext();
	void showSession(ref<android::os::Bundle> args, jint flags);
	void onCreate();
	ref<android::os::IBinder> onBind(ref<android::content::Intent> intent);
	void onReady();
	void onShutdown();
	ref<android::service::voice::AlwaysOnHotwordDetector> createAlwaysOnHotwordDetector(ref<java::lang::String> keyphrase, ref<java::util::Locale> locale, ref<android::service::voice::AlwaysOnHotwordDetector_Callback> callback);

protected:

	VoiceInteractionService(handle_type h) : base_(h) {}

};

} // namespace android::service::voice
} // namespace scapix::java_api

#include <scapix/java_api/android/content/ComponentName.h>
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/content/Intent.h>
#include <scapix/java_api/android/os/Bundle.h>
#include <scapix/java_api/android/os/IBinder.h>
#include <scapix/java_api/android/service/voice/AlwaysOnHotwordDetector.h>
#include <scapix/java_api/android/service/voice/AlwaysOnHotwordDetector_Callback.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Locale.h>

namespace scapix::java_api {
namespace android::service::voice {

inline ref<java::lang::String> VoiceInteractionService::SERVICE_INTERFACE_() { return get_static_field<SCAPIX_META_STRING("SERVICE_INTERFACE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> VoiceInteractionService::SERVICE_META_DATA_() { return get_static_field<SCAPIX_META_STRING("SERVICE_META_DATA"), ref<java::lang::String>>(); }
inline ref<VoiceInteractionService> VoiceInteractionService::new_object() { return base_::new_object(); }
inline void VoiceInteractionService::onLaunchVoiceAssistFromKeyguard() { return call_method<SCAPIX_META_STRING("onLaunchVoiceAssistFromKeyguard"), void>(); }
inline jboolean VoiceInteractionService::isActiveService(ref<android::content::Context> context, ref<android::content::ComponentName> service) { return call_static_method<SCAPIX_META_STRING("isActiveService"), jboolean>(context, service); }
inline void VoiceInteractionService::setDisabledShowContext(jint flags) { return call_method<SCAPIX_META_STRING("setDisabledShowContext"), void>(flags); }
inline jint VoiceInteractionService::getDisabledShowContext() { return call_method<SCAPIX_META_STRING("getDisabledShowContext"), jint>(); }
inline void VoiceInteractionService::showSession(ref<android::os::Bundle> args, jint flags) { return call_method<SCAPIX_META_STRING("showSession"), void>(args, flags); }
inline void VoiceInteractionService::onCreate() { return call_method<SCAPIX_META_STRING("onCreate"), void>(); }
inline ref<android::os::IBinder> VoiceInteractionService::onBind(ref<android::content::Intent> intent) { return call_method<SCAPIX_META_STRING("onBind"), ref<android::os::IBinder>>(intent); }
inline void VoiceInteractionService::onReady() { return call_method<SCAPIX_META_STRING("onReady"), void>(); }
inline void VoiceInteractionService::onShutdown() { return call_method<SCAPIX_META_STRING("onShutdown"), void>(); }
inline ref<android::service::voice::AlwaysOnHotwordDetector> VoiceInteractionService::createAlwaysOnHotwordDetector(ref<java::lang::String> keyphrase, ref<java::util::Locale> locale, ref<android::service::voice::AlwaysOnHotwordDetector_Callback> callback) { return call_method<SCAPIX_META_STRING("createAlwaysOnHotwordDetector"), ref<android::service::voice::AlwaysOnHotwordDetector>>(keyphrase, locale, callback); }

} // namespace android::service::voice
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_SERVICE_VOICE_VOICEINTERACTIONSERVICE_H
