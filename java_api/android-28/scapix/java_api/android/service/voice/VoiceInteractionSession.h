// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/view/KeyEvent_Callback.h>
#include <scapix/java_api/android/content/ComponentCallbacks2.h>

#ifndef SCAPIX_ANDROID_SERVICE_VOICE_VOICEINTERACTIONSESSION_H
#define SCAPIX_ANDROID_SERVICE_VOICE_VOICEINTERACTIONSESSION_H

namespace scapix::java_api {

namespace android::app { class Dialog; }
namespace android::app::assist { class AssistContent; }
namespace android::app::assist { class AssistStructure; }
namespace android::content { class Context; }
namespace android::content { class Intent; }
namespace android::content::res { class Configuration; }
namespace android::graphics { class Bitmap; }
namespace android::os { class Bundle; }
namespace android::os { class Handler; }
namespace android::service::voice { class VoiceInteractionSession_AbortVoiceRequest; }
namespace android::service::voice { class VoiceInteractionSession_CommandRequest; }
namespace android::service::voice { class VoiceInteractionSession_CompleteVoiceRequest; }
namespace android::service::voice { class VoiceInteractionSession_ConfirmationRequest; }
namespace android::service::voice { class VoiceInteractionSession_Insets; }
namespace android::service::voice { class VoiceInteractionSession_PickOptionRequest; }
namespace android::service::voice { class VoiceInteractionSession_Request; }
namespace android::view { class KeyEvent; }
namespace android::view { class LayoutInflater; }
namespace android::view { class View; }
namespace java::io { class FileDescriptor; }
namespace java::io { class PrintWriter; }
namespace java::lang { class String; }
namespace java::lang { class Throwable; }

namespace android::service::voice {

class VoiceInteractionSession : public object_base<SCAPIX_META_STRING("android/service/voice/VoiceInteractionSession"),
	java::lang::Object,
	android::view::KeyEvent_Callback,
	android::content::ComponentCallbacks2>
{
public:

	using Request = VoiceInteractionSession_Request;
	using PickOptionRequest = VoiceInteractionSession_PickOptionRequest;
	using Insets = VoiceInteractionSession_Insets;
	using ConfirmationRequest = VoiceInteractionSession_ConfirmationRequest;
	using CompleteVoiceRequest = VoiceInteractionSession_CompleteVoiceRequest;
	using CommandRequest = VoiceInteractionSession_CommandRequest;
	using AbortVoiceRequest = VoiceInteractionSession_AbortVoiceRequest;

	static jint SHOW_SOURCE_ACTIVITY_();
	static jint SHOW_SOURCE_APPLICATION_();
	static jint SHOW_SOURCE_ASSIST_GESTURE_();
	static jint SHOW_WITH_ASSIST_();
	static jint SHOW_WITH_SCREENSHOT_();

	static ref<VoiceInteractionSession> new_object(ref<android::content::Context> context);
	static ref<VoiceInteractionSession> new_object(ref<android::content::Context> context, ref<android::os::Handler> handler);
	ref<android::content::Context> getContext();
	void setDisabledShowContext(jint flags);
	jint getDisabledShowContext();
	jint getUserDisabledShowContext();
	void show(ref<android::os::Bundle> args, jint flags);
	void hide();
	void setUiEnabled(jboolean enabled);
	void setTheme(jint theme);
	void startVoiceActivity(ref<android::content::Intent> intent);
	void startAssistantActivity(ref<android::content::Intent> intent);
	void setKeepAwake(jboolean keepAwake);
	void closeSystemDialogs();
	ref<android::view::LayoutInflater> getLayoutInflater();
	ref<android::app::Dialog> getWindow();
	void finish();
	void onCreate();
	void onPrepareShow(ref<android::os::Bundle> args, jint showFlags);
	void onShow(ref<android::os::Bundle> args, jint showFlags);
	void onHide();
	void onDestroy();
	ref<android::view::View> onCreateContentView();
	void setContentView(ref<android::view::View> view);
	void onAssistStructureFailure(ref<java::lang::Throwable> failure);
	void onHandleAssist(ref<android::os::Bundle> data, ref<android::app::assist::AssistStructure> structure, ref<android::app::assist::AssistContent> content);
	void onHandleAssistSecondary(ref<android::os::Bundle> data, ref<android::app::assist::AssistStructure> structure, ref<android::app::assist::AssistContent> content, jint index, jint count);
	void onHandleScreenshot(ref<android::graphics::Bitmap> screenshot);
	jboolean onKeyDown(jint keyCode, ref<android::view::KeyEvent> event);
	jboolean onKeyLongPress(jint keyCode, ref<android::view::KeyEvent> event);
	jboolean onKeyUp(jint keyCode, ref<android::view::KeyEvent> event);
	jboolean onKeyMultiple(jint keyCode, jint count, ref<android::view::KeyEvent> event);
	void onBackPressed();
	void onCloseSystemDialogs();
	void onLockscreenShown();
	void onConfigurationChanged(ref<android::content::res::Configuration> newConfig);
	void onLowMemory();
	void onTrimMemory(jint level);
	void onComputeInsets(ref<android::service::voice::VoiceInteractionSession_Insets> outInsets);
	void onTaskStarted(ref<android::content::Intent> intent, jint taskId);
	void onTaskFinished(ref<android::content::Intent> intent, jint taskId);
	ref<link::java::array<jboolean>> onGetSupportedCommands(ref<link::java::array<java::lang::String>> commands);
	void onRequestConfirmation(ref<android::service::voice::VoiceInteractionSession_ConfirmationRequest> request);
	void onRequestPickOption(ref<android::service::voice::VoiceInteractionSession_PickOptionRequest> request);
	void onRequestCompleteVoice(ref<android::service::voice::VoiceInteractionSession_CompleteVoiceRequest> request);
	void onRequestAbortVoice(ref<android::service::voice::VoiceInteractionSession_AbortVoiceRequest> request);
	void onRequestCommand(ref<android::service::voice::VoiceInteractionSession_CommandRequest> request);
	void onCancelRequest(ref<android::service::voice::VoiceInteractionSession_Request> request);
	void dump(ref<java::lang::String> prefix, ref<java::io::FileDescriptor> fd, ref<java::io::PrintWriter> writer, ref<link::java::array<java::lang::String>> args);

protected:

	VoiceInteractionSession(handle_type h) : base_(h) {}

};

} // namespace android::service::voice
} // namespace scapix::java_api

#include <scapix/java_api/android/app/Dialog.h>
#include <scapix/java_api/android/app/assist/AssistContent.h>
#include <scapix/java_api/android/app/assist/AssistStructure.h>
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/content/Intent.h>
#include <scapix/java_api/android/content/res/Configuration.h>
#include <scapix/java_api/android/graphics/Bitmap.h>
#include <scapix/java_api/android/os/Bundle.h>
#include <scapix/java_api/android/os/Handler.h>
#include <scapix/java_api/android/service/voice/VoiceInteractionSession_AbortVoiceRequest.h>
#include <scapix/java_api/android/service/voice/VoiceInteractionSession_CommandRequest.h>
#include <scapix/java_api/android/service/voice/VoiceInteractionSession_CompleteVoiceRequest.h>
#include <scapix/java_api/android/service/voice/VoiceInteractionSession_ConfirmationRequest.h>
#include <scapix/java_api/android/service/voice/VoiceInteractionSession_Insets.h>
#include <scapix/java_api/android/service/voice/VoiceInteractionSession_PickOptionRequest.h>
#include <scapix/java_api/android/service/voice/VoiceInteractionSession_Request.h>
#include <scapix/java_api/android/view/KeyEvent.h>
#include <scapix/java_api/android/view/LayoutInflater.h>
#include <scapix/java_api/android/view/View.h>
#include <scapix/java_api/java/io/FileDescriptor.h>
#include <scapix/java_api/java/io/PrintWriter.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/lang/Throwable.h>

namespace scapix::java_api {
namespace android::service::voice {

inline jint VoiceInteractionSession::SHOW_SOURCE_ACTIVITY_() { return get_static_field<SCAPIX_META_STRING("SHOW_SOURCE_ACTIVITY"), jint>(); }
inline jint VoiceInteractionSession::SHOW_SOURCE_APPLICATION_() { return get_static_field<SCAPIX_META_STRING("SHOW_SOURCE_APPLICATION"), jint>(); }
inline jint VoiceInteractionSession::SHOW_SOURCE_ASSIST_GESTURE_() { return get_static_field<SCAPIX_META_STRING("SHOW_SOURCE_ASSIST_GESTURE"), jint>(); }
inline jint VoiceInteractionSession::SHOW_WITH_ASSIST_() { return get_static_field<SCAPIX_META_STRING("SHOW_WITH_ASSIST"), jint>(); }
inline jint VoiceInteractionSession::SHOW_WITH_SCREENSHOT_() { return get_static_field<SCAPIX_META_STRING("SHOW_WITH_SCREENSHOT"), jint>(); }
inline ref<VoiceInteractionSession> VoiceInteractionSession::new_object(ref<android::content::Context> context) { return base_::new_object(context); }
inline ref<VoiceInteractionSession> VoiceInteractionSession::new_object(ref<android::content::Context> context, ref<android::os::Handler> handler) { return base_::new_object(context, handler); }
inline ref<android::content::Context> VoiceInteractionSession::getContext() { return call_method<SCAPIX_META_STRING("getContext"), ref<android::content::Context>>(); }
inline void VoiceInteractionSession::setDisabledShowContext(jint flags) { return call_method<SCAPIX_META_STRING("setDisabledShowContext"), void>(flags); }
inline jint VoiceInteractionSession::getDisabledShowContext() { return call_method<SCAPIX_META_STRING("getDisabledShowContext"), jint>(); }
inline jint VoiceInteractionSession::getUserDisabledShowContext() { return call_method<SCAPIX_META_STRING("getUserDisabledShowContext"), jint>(); }
inline void VoiceInteractionSession::show(ref<android::os::Bundle> args, jint flags) { return call_method<SCAPIX_META_STRING("show"), void>(args, flags); }
inline void VoiceInteractionSession::hide() { return call_method<SCAPIX_META_STRING("hide"), void>(); }
inline void VoiceInteractionSession::setUiEnabled(jboolean enabled) { return call_method<SCAPIX_META_STRING("setUiEnabled"), void>(enabled); }
inline void VoiceInteractionSession::setTheme(jint theme) { return call_method<SCAPIX_META_STRING("setTheme"), void>(theme); }
inline void VoiceInteractionSession::startVoiceActivity(ref<android::content::Intent> intent) { return call_method<SCAPIX_META_STRING("startVoiceActivity"), void>(intent); }
inline void VoiceInteractionSession::startAssistantActivity(ref<android::content::Intent> intent) { return call_method<SCAPIX_META_STRING("startAssistantActivity"), void>(intent); }
inline void VoiceInteractionSession::setKeepAwake(jboolean keepAwake) { return call_method<SCAPIX_META_STRING("setKeepAwake"), void>(keepAwake); }
inline void VoiceInteractionSession::closeSystemDialogs() { return call_method<SCAPIX_META_STRING("closeSystemDialogs"), void>(); }
inline ref<android::view::LayoutInflater> VoiceInteractionSession::getLayoutInflater() { return call_method<SCAPIX_META_STRING("getLayoutInflater"), ref<android::view::LayoutInflater>>(); }
inline ref<android::app::Dialog> VoiceInteractionSession::getWindow() { return call_method<SCAPIX_META_STRING("getWindow"), ref<android::app::Dialog>>(); }
inline void VoiceInteractionSession::finish() { return call_method<SCAPIX_META_STRING("finish"), void>(); }
inline void VoiceInteractionSession::onCreate() { return call_method<SCAPIX_META_STRING("onCreate"), void>(); }
inline void VoiceInteractionSession::onPrepareShow(ref<android::os::Bundle> args, jint showFlags) { return call_method<SCAPIX_META_STRING("onPrepareShow"), void>(args, showFlags); }
inline void VoiceInteractionSession::onShow(ref<android::os::Bundle> args, jint showFlags) { return call_method<SCAPIX_META_STRING("onShow"), void>(args, showFlags); }
inline void VoiceInteractionSession::onHide() { return call_method<SCAPIX_META_STRING("onHide"), void>(); }
inline void VoiceInteractionSession::onDestroy() { return call_method<SCAPIX_META_STRING("onDestroy"), void>(); }
inline ref<android::view::View> VoiceInteractionSession::onCreateContentView() { return call_method<SCAPIX_META_STRING("onCreateContentView"), ref<android::view::View>>(); }
inline void VoiceInteractionSession::setContentView(ref<android::view::View> view) { return call_method<SCAPIX_META_STRING("setContentView"), void>(view); }
inline void VoiceInteractionSession::onAssistStructureFailure(ref<java::lang::Throwable> failure) { return call_method<SCAPIX_META_STRING("onAssistStructureFailure"), void>(failure); }
inline void VoiceInteractionSession::onHandleAssist(ref<android::os::Bundle> data, ref<android::app::assist::AssistStructure> structure, ref<android::app::assist::AssistContent> content) { return call_method<SCAPIX_META_STRING("onHandleAssist"), void>(data, structure, content); }
inline void VoiceInteractionSession::onHandleAssistSecondary(ref<android::os::Bundle> data, ref<android::app::assist::AssistStructure> structure, ref<android::app::assist::AssistContent> content, jint index, jint count) { return call_method<SCAPIX_META_STRING("onHandleAssistSecondary"), void>(data, structure, content, index, count); }
inline void VoiceInteractionSession::onHandleScreenshot(ref<android::graphics::Bitmap> screenshot) { return call_method<SCAPIX_META_STRING("onHandleScreenshot"), void>(screenshot); }
inline jboolean VoiceInteractionSession::onKeyDown(jint keyCode, ref<android::view::KeyEvent> event) { return call_method<SCAPIX_META_STRING("onKeyDown"), jboolean>(keyCode, event); }
inline jboolean VoiceInteractionSession::onKeyLongPress(jint keyCode, ref<android::view::KeyEvent> event) { return call_method<SCAPIX_META_STRING("onKeyLongPress"), jboolean>(keyCode, event); }
inline jboolean VoiceInteractionSession::onKeyUp(jint keyCode, ref<android::view::KeyEvent> event) { return call_method<SCAPIX_META_STRING("onKeyUp"), jboolean>(keyCode, event); }
inline jboolean VoiceInteractionSession::onKeyMultiple(jint keyCode, jint count, ref<android::view::KeyEvent> event) { return call_method<SCAPIX_META_STRING("onKeyMultiple"), jboolean>(keyCode, count, event); }
inline void VoiceInteractionSession::onBackPressed() { return call_method<SCAPIX_META_STRING("onBackPressed"), void>(); }
inline void VoiceInteractionSession::onCloseSystemDialogs() { return call_method<SCAPIX_META_STRING("onCloseSystemDialogs"), void>(); }
inline void VoiceInteractionSession::onLockscreenShown() { return call_method<SCAPIX_META_STRING("onLockscreenShown"), void>(); }
inline void VoiceInteractionSession::onConfigurationChanged(ref<android::content::res::Configuration> newConfig) { return call_method<SCAPIX_META_STRING("onConfigurationChanged"), void>(newConfig); }
inline void VoiceInteractionSession::onLowMemory() { return call_method<SCAPIX_META_STRING("onLowMemory"), void>(); }
inline void VoiceInteractionSession::onTrimMemory(jint level) { return call_method<SCAPIX_META_STRING("onTrimMemory"), void>(level); }
inline void VoiceInteractionSession::onComputeInsets(ref<android::service::voice::VoiceInteractionSession_Insets> outInsets) { return call_method<SCAPIX_META_STRING("onComputeInsets"), void>(outInsets); }
inline void VoiceInteractionSession::onTaskStarted(ref<android::content::Intent> intent, jint taskId) { return call_method<SCAPIX_META_STRING("onTaskStarted"), void>(intent, taskId); }
inline void VoiceInteractionSession::onTaskFinished(ref<android::content::Intent> intent, jint taskId) { return call_method<SCAPIX_META_STRING("onTaskFinished"), void>(intent, taskId); }
inline ref<link::java::array<jboolean>> VoiceInteractionSession::onGetSupportedCommands(ref<link::java::array<java::lang::String>> commands) { return call_method<SCAPIX_META_STRING("onGetSupportedCommands"), ref<link::java::array<jboolean>>>(commands); }
inline void VoiceInteractionSession::onRequestConfirmation(ref<android::service::voice::VoiceInteractionSession_ConfirmationRequest> request) { return call_method<SCAPIX_META_STRING("onRequestConfirmation"), void>(request); }
inline void VoiceInteractionSession::onRequestPickOption(ref<android::service::voice::VoiceInteractionSession_PickOptionRequest> request) { return call_method<SCAPIX_META_STRING("onRequestPickOption"), void>(request); }
inline void VoiceInteractionSession::onRequestCompleteVoice(ref<android::service::voice::VoiceInteractionSession_CompleteVoiceRequest> request) { return call_method<SCAPIX_META_STRING("onRequestCompleteVoice"), void>(request); }
inline void VoiceInteractionSession::onRequestAbortVoice(ref<android::service::voice::VoiceInteractionSession_AbortVoiceRequest> request) { return call_method<SCAPIX_META_STRING("onRequestAbortVoice"), void>(request); }
inline void VoiceInteractionSession::onRequestCommand(ref<android::service::voice::VoiceInteractionSession_CommandRequest> request) { return call_method<SCAPIX_META_STRING("onRequestCommand"), void>(request); }
inline void VoiceInteractionSession::onCancelRequest(ref<android::service::voice::VoiceInteractionSession_Request> request) { return call_method<SCAPIX_META_STRING("onCancelRequest"), void>(request); }
inline void VoiceInteractionSession::dump(ref<java::lang::String> prefix, ref<java::io::FileDescriptor> fd, ref<java::io::PrintWriter> writer, ref<link::java::array<java::lang::String>> args) { return call_method<SCAPIX_META_STRING("dump"), void>(prefix, fd, writer, args); }

} // namespace android::service::voice
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_SERVICE_VOICE_VOICEINTERACTIONSESSION_H
