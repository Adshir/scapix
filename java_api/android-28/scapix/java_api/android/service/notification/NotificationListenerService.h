// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/app/Service.h>

#ifndef SCAPIX_ANDROID_SERVICE_NOTIFICATION_NOTIFICATIONLISTENERSERVICE_H
#define SCAPIX_ANDROID_SERVICE_NOTIFICATION_NOTIFICATIONLISTENERSERVICE_H

namespace scapix::java_api {

namespace android::app { class NotificationChannel; }
namespace android::app { class NotificationChannelGroup; }
namespace android::content { class ComponentName; }
namespace android::content { class Intent; }
namespace android::os { class IBinder; }
namespace android::os { class UserHandle; }
namespace android::service::notification { class NotificationListenerService_RankingMap; }
namespace android::service::notification { class StatusBarNotification; }
namespace java::lang { class String; }
namespace java::util { class List; }
namespace android::service::notification { class NotificationListenerService_Ranking; }

namespace android::service::notification {

class NotificationListenerService : public object_base<SCAPIX_META_STRING("android/service/notification/NotificationListenerService"),
	android::app::Service>
{
public:

	using RankingMap = NotificationListenerService_RankingMap;
	using Ranking = NotificationListenerService_Ranking;

	static jint HINT_HOST_DISABLE_CALL_EFFECTS_();
	static jint HINT_HOST_DISABLE_EFFECTS_();
	static jint HINT_HOST_DISABLE_NOTIFICATION_EFFECTS_();
	static jint INTERRUPTION_FILTER_ALARMS_();
	static jint INTERRUPTION_FILTER_ALL_();
	static jint INTERRUPTION_FILTER_NONE_();
	static jint INTERRUPTION_FILTER_PRIORITY_();
	static jint INTERRUPTION_FILTER_UNKNOWN_();
	static jint NOTIFICATION_CHANNEL_OR_GROUP_ADDED_();
	static jint NOTIFICATION_CHANNEL_OR_GROUP_DELETED_();
	static jint NOTIFICATION_CHANNEL_OR_GROUP_UPDATED_();
	static jint REASON_APP_CANCEL_();
	static jint REASON_APP_CANCEL_ALL_();
	static jint REASON_CANCEL_();
	static jint REASON_CANCEL_ALL_();
	static jint REASON_CHANNEL_BANNED_();
	static jint REASON_CLICK_();
	static jint REASON_ERROR_();
	static jint REASON_GROUP_OPTIMIZATION_();
	static jint REASON_GROUP_SUMMARY_CANCELED_();
	static jint REASON_LISTENER_CANCEL_();
	static jint REASON_LISTENER_CANCEL_ALL_();
	static jint REASON_PACKAGE_BANNED_();
	static jint REASON_PACKAGE_CHANGED_();
	static jint REASON_PACKAGE_SUSPENDED_();
	static jint REASON_PROFILE_TURNED_OFF_();
	static jint REASON_SNOOZED_();
	static jint REASON_TIMEOUT_();
	static jint REASON_UNAUTOBUNDLED_();
	static jint REASON_USER_STOPPED_();
	static ref<java::lang::String> SERVICE_INTERFACE_();
	static jint SUPPRESSED_EFFECT_SCREEN_OFF_();
	static jint SUPPRESSED_EFFECT_SCREEN_ON_();

	static ref<NotificationListenerService> new_object();
	void onNotificationPosted(ref<android::service::notification::StatusBarNotification> sbn);
	void onNotificationPosted(ref<android::service::notification::StatusBarNotification> sbn, ref<android::service::notification::NotificationListenerService_RankingMap> rankingMap);
	void onNotificationRemoved(ref<android::service::notification::StatusBarNotification> sbn);
	void onNotificationRemoved(ref<android::service::notification::StatusBarNotification> sbn, ref<android::service::notification::NotificationListenerService_RankingMap> rankingMap);
	void onNotificationRemoved(ref<android::service::notification::StatusBarNotification> sbn, ref<android::service::notification::NotificationListenerService_RankingMap> rankingMap, jint reason);
	void onListenerConnected();
	void onListenerDisconnected();
	void onNotificationRankingUpdate(ref<android::service::notification::NotificationListenerService_RankingMap> rankingMap);
	void onListenerHintsChanged(jint hints);
	void onNotificationChannelModified(ref<java::lang::String> pkg, ref<android::os::UserHandle> user, ref<android::app::NotificationChannel> channel, jint modificationType);
	void onNotificationChannelGroupModified(ref<java::lang::String> pkg, ref<android::os::UserHandle> user, ref<android::app::NotificationChannelGroup> group, jint modificationType);
	void onInterruptionFilterChanged(jint interruptionFilter);
	void cancelNotification(ref<java::lang::String> pkg, ref<java::lang::String> tag, jint id);
	void cancelNotification(ref<java::lang::String> key);
	void cancelAllNotifications();
	void cancelNotifications(ref<link::java::array<java::lang::String>> keys);
	void snoozeNotification(ref<java::lang::String> key, jlong durationMs);
	void setNotificationsShown(ref<link::java::array<java::lang::String>> keys);
	void updateNotificationChannel(ref<java::lang::String> pkg, ref<android::os::UserHandle> user, ref<android::app::NotificationChannel> channel);
	ref<java::util::List> getNotificationChannels(ref<java::lang::String> pkg, ref<android::os::UserHandle> user);
	ref<java::util::List> getNotificationChannelGroups(ref<java::lang::String> pkg, ref<android::os::UserHandle> user);
	ref<link::java::array<android::service::notification::StatusBarNotification>> getActiveNotifications();
	ref<link::java::array<android::service::notification::StatusBarNotification>> getSnoozedNotifications();
	ref<link::java::array<android::service::notification::StatusBarNotification>> getActiveNotifications(ref<link::java::array<java::lang::String>> keys);
	jint getCurrentListenerHints();
	jint getCurrentInterruptionFilter();
	void requestListenerHints(jint hints);
	void requestInterruptionFilter(jint interruptionFilter);
	ref<android::service::notification::NotificationListenerService_RankingMap> getCurrentRanking();
	ref<android::os::IBinder> onBind(ref<android::content::Intent> intent);
	void onDestroy();
	static void requestRebind(ref<android::content::ComponentName> componentName);
	void requestUnbind();

protected:

	NotificationListenerService(handle_type h) : base_(h) {}

};

} // namespace android::service::notification
} // namespace scapix::java_api

#include <scapix/java_api/android/app/NotificationChannel.h>
#include <scapix/java_api/android/app/NotificationChannelGroup.h>
#include <scapix/java_api/android/content/ComponentName.h>
#include <scapix/java_api/android/content/Intent.h>
#include <scapix/java_api/android/os/IBinder.h>
#include <scapix/java_api/android/os/UserHandle.h>
#include <scapix/java_api/android/service/notification/NotificationListenerService_RankingMap.h>
#include <scapix/java_api/android/service/notification/StatusBarNotification.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/List.h>

namespace scapix::java_api {
namespace android::service::notification {

inline jint NotificationListenerService::HINT_HOST_DISABLE_CALL_EFFECTS_() { return get_static_field<SCAPIX_META_STRING("HINT_HOST_DISABLE_CALL_EFFECTS"), jint>(); }
inline jint NotificationListenerService::HINT_HOST_DISABLE_EFFECTS_() { return get_static_field<SCAPIX_META_STRING("HINT_HOST_DISABLE_EFFECTS"), jint>(); }
inline jint NotificationListenerService::HINT_HOST_DISABLE_NOTIFICATION_EFFECTS_() { return get_static_field<SCAPIX_META_STRING("HINT_HOST_DISABLE_NOTIFICATION_EFFECTS"), jint>(); }
inline jint NotificationListenerService::INTERRUPTION_FILTER_ALARMS_() { return get_static_field<SCAPIX_META_STRING("INTERRUPTION_FILTER_ALARMS"), jint>(); }
inline jint NotificationListenerService::INTERRUPTION_FILTER_ALL_() { return get_static_field<SCAPIX_META_STRING("INTERRUPTION_FILTER_ALL"), jint>(); }
inline jint NotificationListenerService::INTERRUPTION_FILTER_NONE_() { return get_static_field<SCAPIX_META_STRING("INTERRUPTION_FILTER_NONE"), jint>(); }
inline jint NotificationListenerService::INTERRUPTION_FILTER_PRIORITY_() { return get_static_field<SCAPIX_META_STRING("INTERRUPTION_FILTER_PRIORITY"), jint>(); }
inline jint NotificationListenerService::INTERRUPTION_FILTER_UNKNOWN_() { return get_static_field<SCAPIX_META_STRING("INTERRUPTION_FILTER_UNKNOWN"), jint>(); }
inline jint NotificationListenerService::NOTIFICATION_CHANNEL_OR_GROUP_ADDED_() { return get_static_field<SCAPIX_META_STRING("NOTIFICATION_CHANNEL_OR_GROUP_ADDED"), jint>(); }
inline jint NotificationListenerService::NOTIFICATION_CHANNEL_OR_GROUP_DELETED_() { return get_static_field<SCAPIX_META_STRING("NOTIFICATION_CHANNEL_OR_GROUP_DELETED"), jint>(); }
inline jint NotificationListenerService::NOTIFICATION_CHANNEL_OR_GROUP_UPDATED_() { return get_static_field<SCAPIX_META_STRING("NOTIFICATION_CHANNEL_OR_GROUP_UPDATED"), jint>(); }
inline jint NotificationListenerService::REASON_APP_CANCEL_() { return get_static_field<SCAPIX_META_STRING("REASON_APP_CANCEL"), jint>(); }
inline jint NotificationListenerService::REASON_APP_CANCEL_ALL_() { return get_static_field<SCAPIX_META_STRING("REASON_APP_CANCEL_ALL"), jint>(); }
inline jint NotificationListenerService::REASON_CANCEL_() { return get_static_field<SCAPIX_META_STRING("REASON_CANCEL"), jint>(); }
inline jint NotificationListenerService::REASON_CANCEL_ALL_() { return get_static_field<SCAPIX_META_STRING("REASON_CANCEL_ALL"), jint>(); }
inline jint NotificationListenerService::REASON_CHANNEL_BANNED_() { return get_static_field<SCAPIX_META_STRING("REASON_CHANNEL_BANNED"), jint>(); }
inline jint NotificationListenerService::REASON_CLICK_() { return get_static_field<SCAPIX_META_STRING("REASON_CLICK"), jint>(); }
inline jint NotificationListenerService::REASON_ERROR_() { return get_static_field<SCAPIX_META_STRING("REASON_ERROR"), jint>(); }
inline jint NotificationListenerService::REASON_GROUP_OPTIMIZATION_() { return get_static_field<SCAPIX_META_STRING("REASON_GROUP_OPTIMIZATION"), jint>(); }
inline jint NotificationListenerService::REASON_GROUP_SUMMARY_CANCELED_() { return get_static_field<SCAPIX_META_STRING("REASON_GROUP_SUMMARY_CANCELED"), jint>(); }
inline jint NotificationListenerService::REASON_LISTENER_CANCEL_() { return get_static_field<SCAPIX_META_STRING("REASON_LISTENER_CANCEL"), jint>(); }
inline jint NotificationListenerService::REASON_LISTENER_CANCEL_ALL_() { return get_static_field<SCAPIX_META_STRING("REASON_LISTENER_CANCEL_ALL"), jint>(); }
inline jint NotificationListenerService::REASON_PACKAGE_BANNED_() { return get_static_field<SCAPIX_META_STRING("REASON_PACKAGE_BANNED"), jint>(); }
inline jint NotificationListenerService::REASON_PACKAGE_CHANGED_() { return get_static_field<SCAPIX_META_STRING("REASON_PACKAGE_CHANGED"), jint>(); }
inline jint NotificationListenerService::REASON_PACKAGE_SUSPENDED_() { return get_static_field<SCAPIX_META_STRING("REASON_PACKAGE_SUSPENDED"), jint>(); }
inline jint NotificationListenerService::REASON_PROFILE_TURNED_OFF_() { return get_static_field<SCAPIX_META_STRING("REASON_PROFILE_TURNED_OFF"), jint>(); }
inline jint NotificationListenerService::REASON_SNOOZED_() { return get_static_field<SCAPIX_META_STRING("REASON_SNOOZED"), jint>(); }
inline jint NotificationListenerService::REASON_TIMEOUT_() { return get_static_field<SCAPIX_META_STRING("REASON_TIMEOUT"), jint>(); }
inline jint NotificationListenerService::REASON_UNAUTOBUNDLED_() { return get_static_field<SCAPIX_META_STRING("REASON_UNAUTOBUNDLED"), jint>(); }
inline jint NotificationListenerService::REASON_USER_STOPPED_() { return get_static_field<SCAPIX_META_STRING("REASON_USER_STOPPED"), jint>(); }
inline ref<java::lang::String> NotificationListenerService::SERVICE_INTERFACE_() { return get_static_field<SCAPIX_META_STRING("SERVICE_INTERFACE"), ref<java::lang::String>>(); }
inline jint NotificationListenerService::SUPPRESSED_EFFECT_SCREEN_OFF_() { return get_static_field<SCAPIX_META_STRING("SUPPRESSED_EFFECT_SCREEN_OFF"), jint>(); }
inline jint NotificationListenerService::SUPPRESSED_EFFECT_SCREEN_ON_() { return get_static_field<SCAPIX_META_STRING("SUPPRESSED_EFFECT_SCREEN_ON"), jint>(); }
inline ref<NotificationListenerService> NotificationListenerService::new_object() { return base_::new_object(); }
inline void NotificationListenerService::onNotificationPosted(ref<android::service::notification::StatusBarNotification> sbn) { return call_method<SCAPIX_META_STRING("onNotificationPosted"), void>(sbn); }
inline void NotificationListenerService::onNotificationPosted(ref<android::service::notification::StatusBarNotification> sbn, ref<android::service::notification::NotificationListenerService_RankingMap> rankingMap) { return call_method<SCAPIX_META_STRING("onNotificationPosted"), void>(sbn, rankingMap); }
inline void NotificationListenerService::onNotificationRemoved(ref<android::service::notification::StatusBarNotification> sbn) { return call_method<SCAPIX_META_STRING("onNotificationRemoved"), void>(sbn); }
inline void NotificationListenerService::onNotificationRemoved(ref<android::service::notification::StatusBarNotification> sbn, ref<android::service::notification::NotificationListenerService_RankingMap> rankingMap) { return call_method<SCAPIX_META_STRING("onNotificationRemoved"), void>(sbn, rankingMap); }
inline void NotificationListenerService::onNotificationRemoved(ref<android::service::notification::StatusBarNotification> sbn, ref<android::service::notification::NotificationListenerService_RankingMap> rankingMap, jint reason) { return call_method<SCAPIX_META_STRING("onNotificationRemoved"), void>(sbn, rankingMap, reason); }
inline void NotificationListenerService::onListenerConnected() { return call_method<SCAPIX_META_STRING("onListenerConnected"), void>(); }
inline void NotificationListenerService::onListenerDisconnected() { return call_method<SCAPIX_META_STRING("onListenerDisconnected"), void>(); }
inline void NotificationListenerService::onNotificationRankingUpdate(ref<android::service::notification::NotificationListenerService_RankingMap> rankingMap) { return call_method<SCAPIX_META_STRING("onNotificationRankingUpdate"), void>(rankingMap); }
inline void NotificationListenerService::onListenerHintsChanged(jint hints) { return call_method<SCAPIX_META_STRING("onListenerHintsChanged"), void>(hints); }
inline void NotificationListenerService::onNotificationChannelModified(ref<java::lang::String> pkg, ref<android::os::UserHandle> user, ref<android::app::NotificationChannel> channel, jint modificationType) { return call_method<SCAPIX_META_STRING("onNotificationChannelModified"), void>(pkg, user, channel, modificationType); }
inline void NotificationListenerService::onNotificationChannelGroupModified(ref<java::lang::String> pkg, ref<android::os::UserHandle> user, ref<android::app::NotificationChannelGroup> group, jint modificationType) { return call_method<SCAPIX_META_STRING("onNotificationChannelGroupModified"), void>(pkg, user, group, modificationType); }
inline void NotificationListenerService::onInterruptionFilterChanged(jint interruptionFilter) { return call_method<SCAPIX_META_STRING("onInterruptionFilterChanged"), void>(interruptionFilter); }
inline void NotificationListenerService::cancelNotification(ref<java::lang::String> pkg, ref<java::lang::String> tag, jint id) { return call_method<SCAPIX_META_STRING("cancelNotification"), void>(pkg, tag, id); }
inline void NotificationListenerService::cancelNotification(ref<java::lang::String> key) { return call_method<SCAPIX_META_STRING("cancelNotification"), void>(key); }
inline void NotificationListenerService::cancelAllNotifications() { return call_method<SCAPIX_META_STRING("cancelAllNotifications"), void>(); }
inline void NotificationListenerService::cancelNotifications(ref<link::java::array<java::lang::String>> keys) { return call_method<SCAPIX_META_STRING("cancelNotifications"), void>(keys); }
inline void NotificationListenerService::snoozeNotification(ref<java::lang::String> key, jlong durationMs) { return call_method<SCAPIX_META_STRING("snoozeNotification"), void>(key, durationMs); }
inline void NotificationListenerService::setNotificationsShown(ref<link::java::array<java::lang::String>> keys) { return call_method<SCAPIX_META_STRING("setNotificationsShown"), void>(keys); }
inline void NotificationListenerService::updateNotificationChannel(ref<java::lang::String> pkg, ref<android::os::UserHandle> user, ref<android::app::NotificationChannel> channel) { return call_method<SCAPIX_META_STRING("updateNotificationChannel"), void>(pkg, user, channel); }
inline ref<java::util::List> NotificationListenerService::getNotificationChannels(ref<java::lang::String> pkg, ref<android::os::UserHandle> user) { return call_method<SCAPIX_META_STRING("getNotificationChannels"), ref<java::util::List>>(pkg, user); }
inline ref<java::util::List> NotificationListenerService::getNotificationChannelGroups(ref<java::lang::String> pkg, ref<android::os::UserHandle> user) { return call_method<SCAPIX_META_STRING("getNotificationChannelGroups"), ref<java::util::List>>(pkg, user); }
inline ref<link::java::array<android::service::notification::StatusBarNotification>> NotificationListenerService::getActiveNotifications() { return call_method<SCAPIX_META_STRING("getActiveNotifications"), ref<link::java::array<android::service::notification::StatusBarNotification>>>(); }
inline ref<link::java::array<android::service::notification::StatusBarNotification>> NotificationListenerService::getSnoozedNotifications() { return call_method<SCAPIX_META_STRING("getSnoozedNotifications"), ref<link::java::array<android::service::notification::StatusBarNotification>>>(); }
inline ref<link::java::array<android::service::notification::StatusBarNotification>> NotificationListenerService::getActiveNotifications(ref<link::java::array<java::lang::String>> keys) { return call_method<SCAPIX_META_STRING("getActiveNotifications"), ref<link::java::array<android::service::notification::StatusBarNotification>>>(keys); }
inline jint NotificationListenerService::getCurrentListenerHints() { return call_method<SCAPIX_META_STRING("getCurrentListenerHints"), jint>(); }
inline jint NotificationListenerService::getCurrentInterruptionFilter() { return call_method<SCAPIX_META_STRING("getCurrentInterruptionFilter"), jint>(); }
inline void NotificationListenerService::requestListenerHints(jint hints) { return call_method<SCAPIX_META_STRING("requestListenerHints"), void>(hints); }
inline void NotificationListenerService::requestInterruptionFilter(jint interruptionFilter) { return call_method<SCAPIX_META_STRING("requestInterruptionFilter"), void>(interruptionFilter); }
inline ref<android::service::notification::NotificationListenerService_RankingMap> NotificationListenerService::getCurrentRanking() { return call_method<SCAPIX_META_STRING("getCurrentRanking"), ref<android::service::notification::NotificationListenerService_RankingMap>>(); }
inline ref<android::os::IBinder> NotificationListenerService::onBind(ref<android::content::Intent> intent) { return call_method<SCAPIX_META_STRING("onBind"), ref<android::os::IBinder>>(intent); }
inline void NotificationListenerService::onDestroy() { return call_method<SCAPIX_META_STRING("onDestroy"), void>(); }
inline void NotificationListenerService::requestRebind(ref<android::content::ComponentName> componentName) { return call_static_method<SCAPIX_META_STRING("requestRebind"), void>(componentName); }
inline void NotificationListenerService::requestUnbind() { return call_method<SCAPIX_META_STRING("requestUnbind"), void>(); }

} // namespace android::service::notification
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_SERVICE_NOTIFICATION_NOTIFICATIONLISTENERSERVICE_H
