// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/app/Service.h>

#ifndef SCAPIX_ANDROID_SERVICE_NOTIFICATION_CONDITIONPROVIDERSERVICE_H
#define SCAPIX_ANDROID_SERVICE_NOTIFICATION_CONDITIONPROVIDERSERVICE_H

namespace scapix::java_api {

namespace android::content { class ComponentName; }
namespace android::content { class Intent; }
namespace android::net { class Uri; }
namespace android::os { class IBinder; }
namespace android::service::notification { class Condition; }
namespace java::lang { class String; }

namespace android::service::notification {

class ConditionProviderService : public object_base<SCAPIX_META_STRING("android/service/notification/ConditionProviderService"),
	android::app::Service>
{
public:

	static ref<java::lang::String> EXTRA_RULE_ID_();
	static ref<java::lang::String> META_DATA_CONFIGURATION_ACTIVITY_();
	static ref<java::lang::String> META_DATA_RULE_INSTANCE_LIMIT_();
	static ref<java::lang::String> META_DATA_RULE_TYPE_();
	static ref<java::lang::String> SERVICE_INTERFACE_();

	static ref<ConditionProviderService> new_object();
	void onConnected();
	void onRequestConditions(jint relevance);
	void onSubscribe(ref<android::net::Uri> p1);
	void onUnsubscribe(ref<android::net::Uri> p1);
	static void requestRebind(ref<android::content::ComponentName> componentName);
	void requestUnbind();
	void notifyCondition(ref<android::service::notification::Condition> condition);
	void notifyConditions(ref<link::java::array<android::service::notification::Condition>> conditions);
	ref<android::os::IBinder> onBind(ref<android::content::Intent> intent);

protected:

	ConditionProviderService(handle_type h) : base_(h) {}

};

} // namespace android::service::notification
} // namespace scapix::java_api

#include <scapix/java_api/android/content/ComponentName.h>
#include <scapix/java_api/android/content/Intent.h>
#include <scapix/java_api/android/net/Uri.h>
#include <scapix/java_api/android/os/IBinder.h>
#include <scapix/java_api/android/service/notification/Condition.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::service::notification {

inline ref<java::lang::String> ConditionProviderService::EXTRA_RULE_ID_() { return get_static_field<SCAPIX_META_STRING("EXTRA_RULE_ID"), ref<java::lang::String>>(); }
inline ref<java::lang::String> ConditionProviderService::META_DATA_CONFIGURATION_ACTIVITY_() { return get_static_field<SCAPIX_META_STRING("META_DATA_CONFIGURATION_ACTIVITY"), ref<java::lang::String>>(); }
inline ref<java::lang::String> ConditionProviderService::META_DATA_RULE_INSTANCE_LIMIT_() { return get_static_field<SCAPIX_META_STRING("META_DATA_RULE_INSTANCE_LIMIT"), ref<java::lang::String>>(); }
inline ref<java::lang::String> ConditionProviderService::META_DATA_RULE_TYPE_() { return get_static_field<SCAPIX_META_STRING("META_DATA_RULE_TYPE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> ConditionProviderService::SERVICE_INTERFACE_() { return get_static_field<SCAPIX_META_STRING("SERVICE_INTERFACE"), ref<java::lang::String>>(); }
inline ref<ConditionProviderService> ConditionProviderService::new_object() { return base_::new_object(); }
inline void ConditionProviderService::onConnected() { return call_method<SCAPIX_META_STRING("onConnected"), void>(); }
inline void ConditionProviderService::onRequestConditions(jint relevance) { return call_method<SCAPIX_META_STRING("onRequestConditions"), void>(relevance); }
inline void ConditionProviderService::onSubscribe(ref<android::net::Uri> p1) { return call_method<SCAPIX_META_STRING("onSubscribe"), void>(p1); }
inline void ConditionProviderService::onUnsubscribe(ref<android::net::Uri> p1) { return call_method<SCAPIX_META_STRING("onUnsubscribe"), void>(p1); }
inline void ConditionProviderService::requestRebind(ref<android::content::ComponentName> componentName) { return call_static_method<SCAPIX_META_STRING("requestRebind"), void>(componentName); }
inline void ConditionProviderService::requestUnbind() { return call_method<SCAPIX_META_STRING("requestUnbind"), void>(); }
inline void ConditionProviderService::notifyCondition(ref<android::service::notification::Condition> condition) { return call_method<SCAPIX_META_STRING("notifyCondition"), void>(condition); }
inline void ConditionProviderService::notifyConditions(ref<link::java::array<android::service::notification::Condition>> conditions) { return call_method<SCAPIX_META_STRING("notifyConditions"), void>(conditions); }
inline ref<android::os::IBinder> ConditionProviderService::onBind(ref<android::content::Intent> intent) { return call_method<SCAPIX_META_STRING("onBind"), ref<android::os::IBinder>>(intent); }

} // namespace android::service::notification
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_SERVICE_NOTIFICATION_CONDITIONPROVIDERSERVICE_H
