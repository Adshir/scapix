// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/app/Service.h>
#include <scapix/java_api/android/view/Window_Callback.h>

#ifndef SCAPIX_ANDROID_SERVICE_DREAMS_DREAMSERVICE_H
#define SCAPIX_ANDROID_SERVICE_DREAMS_DREAMSERVICE_H

namespace scapix::java_api {

namespace android::content { class Intent; }
namespace android::os { class IBinder; }
namespace android::view { class ActionMode; }
namespace android::view { class ActionMode_Callback; }
namespace android::view { class KeyEvent; }
namespace android::view { class Menu; }
namespace android::view { class MenuItem; }
namespace android::view { class MotionEvent; }
namespace android::view { class SearchEvent; }
namespace android::view { class View; }
namespace android::view { class ViewGroup_LayoutParams; }
namespace android::view { class Window; }
namespace android::view { class WindowManager; }
namespace android::view { class WindowManager_LayoutParams; }
namespace android::view::accessibility { class AccessibilityEvent; }
namespace java::lang { class String; }

namespace android::service::dreams {

class DreamService : public object_base<SCAPIX_META_STRING("android/service/dreams/DreamService"),
	android::app::Service,
	android::view::Window_Callback>
{
public:

	static ref<java::lang::String> DREAM_META_DATA_();
	static ref<java::lang::String> SERVICE_INTERFACE_();

	static ref<DreamService> new_object();
	jboolean dispatchKeyEvent(ref<android::view::KeyEvent> event);
	jboolean dispatchKeyShortcutEvent(ref<android::view::KeyEvent> event);
	jboolean dispatchTouchEvent(ref<android::view::MotionEvent> event);
	jboolean dispatchTrackballEvent(ref<android::view::MotionEvent> event);
	jboolean dispatchGenericMotionEvent(ref<android::view::MotionEvent> event);
	jboolean dispatchPopulateAccessibilityEvent(ref<android::view::accessibility::AccessibilityEvent> event);
	ref<android::view::View> onCreatePanelView(jint featureId);
	jboolean onCreatePanelMenu(jint featureId, ref<android::view::Menu> menu);
	jboolean onPreparePanel(jint featureId, ref<android::view::View> view, ref<android::view::Menu> menu);
	jboolean onMenuOpened(jint featureId, ref<android::view::Menu> menu);
	jboolean onMenuItemSelected(jint featureId, ref<android::view::MenuItem> item);
	void onWindowAttributesChanged(ref<android::view::WindowManager_LayoutParams> attrs);
	void onContentChanged();
	void onWindowFocusChanged(jboolean hasFocus);
	void onAttachedToWindow();
	void onDetachedFromWindow();
	void onPanelClosed(jint featureId, ref<android::view::Menu> menu);
	jboolean onSearchRequested(ref<android::view::SearchEvent> event);
	jboolean onSearchRequested();
	ref<android::view::ActionMode> onWindowStartingActionMode(ref<android::view::ActionMode_Callback> callback);
	ref<android::view::ActionMode> onWindowStartingActionMode(ref<android::view::ActionMode_Callback> callback, jint type);
	void onActionModeStarted(ref<android::view::ActionMode> mode);
	void onActionModeFinished(ref<android::view::ActionMode> mode);
	ref<android::view::WindowManager> getWindowManager();
	ref<android::view::Window> getWindow();
	void setContentView(jint layoutResID);
	void setContentView(ref<android::view::View> view);
	void setContentView(ref<android::view::View> view, ref<android::view::ViewGroup_LayoutParams> params);
	void addContentView(ref<android::view::View> view, ref<android::view::ViewGroup_LayoutParams> params);
	ref<android::view::View> findViewById(jint id);
	ref<android::view::View> requireViewById(jint id);
	void setInteractive(jboolean interactive);
	jboolean isInteractive();
	void setFullscreen(jboolean fullscreen);
	jboolean isFullscreen();
	void setScreenBright(jboolean screenBright);
	jboolean isScreenBright();
	void onCreate();
	void onDreamingStarted();
	void onDreamingStopped();
	void onWakeUp();
	ref<android::os::IBinder> onBind(ref<android::content::Intent> intent);
	void finish();
	void wakeUp();
	void onDestroy();

protected:

	DreamService(handle_type h) : base_(h) {}

};

} // namespace android::service::dreams
} // namespace scapix::java_api

#include <scapix/java_api/android/content/Intent.h>
#include <scapix/java_api/android/os/IBinder.h>
#include <scapix/java_api/android/view/ActionMode.h>
#include <scapix/java_api/android/view/ActionMode_Callback.h>
#include <scapix/java_api/android/view/KeyEvent.h>
#include <scapix/java_api/android/view/Menu.h>
#include <scapix/java_api/android/view/MenuItem.h>
#include <scapix/java_api/android/view/MotionEvent.h>
#include <scapix/java_api/android/view/SearchEvent.h>
#include <scapix/java_api/android/view/View.h>
#include <scapix/java_api/android/view/ViewGroup_LayoutParams.h>
#include <scapix/java_api/android/view/Window.h>
#include <scapix/java_api/android/view/WindowManager.h>
#include <scapix/java_api/android/view/WindowManager_LayoutParams.h>
#include <scapix/java_api/android/view/accessibility/AccessibilityEvent.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::service::dreams {

inline ref<java::lang::String> DreamService::DREAM_META_DATA_() { return get_static_field<SCAPIX_META_STRING("DREAM_META_DATA"), ref<java::lang::String>>(); }
inline ref<java::lang::String> DreamService::SERVICE_INTERFACE_() { return get_static_field<SCAPIX_META_STRING("SERVICE_INTERFACE"), ref<java::lang::String>>(); }
inline ref<DreamService> DreamService::new_object() { return base_::new_object(); }
inline jboolean DreamService::dispatchKeyEvent(ref<android::view::KeyEvent> event) { return call_method<SCAPIX_META_STRING("dispatchKeyEvent"), jboolean>(event); }
inline jboolean DreamService::dispatchKeyShortcutEvent(ref<android::view::KeyEvent> event) { return call_method<SCAPIX_META_STRING("dispatchKeyShortcutEvent"), jboolean>(event); }
inline jboolean DreamService::dispatchTouchEvent(ref<android::view::MotionEvent> event) { return call_method<SCAPIX_META_STRING("dispatchTouchEvent"), jboolean>(event); }
inline jboolean DreamService::dispatchTrackballEvent(ref<android::view::MotionEvent> event) { return call_method<SCAPIX_META_STRING("dispatchTrackballEvent"), jboolean>(event); }
inline jboolean DreamService::dispatchGenericMotionEvent(ref<android::view::MotionEvent> event) { return call_method<SCAPIX_META_STRING("dispatchGenericMotionEvent"), jboolean>(event); }
inline jboolean DreamService::dispatchPopulateAccessibilityEvent(ref<android::view::accessibility::AccessibilityEvent> event) { return call_method<SCAPIX_META_STRING("dispatchPopulateAccessibilityEvent"), jboolean>(event); }
inline ref<android::view::View> DreamService::onCreatePanelView(jint featureId) { return call_method<SCAPIX_META_STRING("onCreatePanelView"), ref<android::view::View>>(featureId); }
inline jboolean DreamService::onCreatePanelMenu(jint featureId, ref<android::view::Menu> menu) { return call_method<SCAPIX_META_STRING("onCreatePanelMenu"), jboolean>(featureId, menu); }
inline jboolean DreamService::onPreparePanel(jint featureId, ref<android::view::View> view, ref<android::view::Menu> menu) { return call_method<SCAPIX_META_STRING("onPreparePanel"), jboolean>(featureId, view, menu); }
inline jboolean DreamService::onMenuOpened(jint featureId, ref<android::view::Menu> menu) { return call_method<SCAPIX_META_STRING("onMenuOpened"), jboolean>(featureId, menu); }
inline jboolean DreamService::onMenuItemSelected(jint featureId, ref<android::view::MenuItem> item) { return call_method<SCAPIX_META_STRING("onMenuItemSelected"), jboolean>(featureId, item); }
inline void DreamService::onWindowAttributesChanged(ref<android::view::WindowManager_LayoutParams> attrs) { return call_method<SCAPIX_META_STRING("onWindowAttributesChanged"), void>(attrs); }
inline void DreamService::onContentChanged() { return call_method<SCAPIX_META_STRING("onContentChanged"), void>(); }
inline void DreamService::onWindowFocusChanged(jboolean hasFocus) { return call_method<SCAPIX_META_STRING("onWindowFocusChanged"), void>(hasFocus); }
inline void DreamService::onAttachedToWindow() { return call_method<SCAPIX_META_STRING("onAttachedToWindow"), void>(); }
inline void DreamService::onDetachedFromWindow() { return call_method<SCAPIX_META_STRING("onDetachedFromWindow"), void>(); }
inline void DreamService::onPanelClosed(jint featureId, ref<android::view::Menu> menu) { return call_method<SCAPIX_META_STRING("onPanelClosed"), void>(featureId, menu); }
inline jboolean DreamService::onSearchRequested(ref<android::view::SearchEvent> event) { return call_method<SCAPIX_META_STRING("onSearchRequested"), jboolean>(event); }
inline jboolean DreamService::onSearchRequested() { return call_method<SCAPIX_META_STRING("onSearchRequested"), jboolean>(); }
inline ref<android::view::ActionMode> DreamService::onWindowStartingActionMode(ref<android::view::ActionMode_Callback> callback) { return call_method<SCAPIX_META_STRING("onWindowStartingActionMode"), ref<android::view::ActionMode>>(callback); }
inline ref<android::view::ActionMode> DreamService::onWindowStartingActionMode(ref<android::view::ActionMode_Callback> callback, jint type) { return call_method<SCAPIX_META_STRING("onWindowStartingActionMode"), ref<android::view::ActionMode>>(callback, type); }
inline void DreamService::onActionModeStarted(ref<android::view::ActionMode> mode) { return call_method<SCAPIX_META_STRING("onActionModeStarted"), void>(mode); }
inline void DreamService::onActionModeFinished(ref<android::view::ActionMode> mode) { return call_method<SCAPIX_META_STRING("onActionModeFinished"), void>(mode); }
inline ref<android::view::WindowManager> DreamService::getWindowManager() { return call_method<SCAPIX_META_STRING("getWindowManager"), ref<android::view::WindowManager>>(); }
inline ref<android::view::Window> DreamService::getWindow() { return call_method<SCAPIX_META_STRING("getWindow"), ref<android::view::Window>>(); }
inline void DreamService::setContentView(jint layoutResID) { return call_method<SCAPIX_META_STRING("setContentView"), void>(layoutResID); }
inline void DreamService::setContentView(ref<android::view::View> view) { return call_method<SCAPIX_META_STRING("setContentView"), void>(view); }
inline void DreamService::setContentView(ref<android::view::View> view, ref<android::view::ViewGroup_LayoutParams> params) { return call_method<SCAPIX_META_STRING("setContentView"), void>(view, params); }
inline void DreamService::addContentView(ref<android::view::View> view, ref<android::view::ViewGroup_LayoutParams> params) { return call_method<SCAPIX_META_STRING("addContentView"), void>(view, params); }
inline ref<android::view::View> DreamService::findViewById(jint id) { return call_method<SCAPIX_META_STRING("findViewById"), ref<android::view::View>>(id); }
inline ref<android::view::View> DreamService::requireViewById(jint id) { return call_method<SCAPIX_META_STRING("requireViewById"), ref<android::view::View>>(id); }
inline void DreamService::setInteractive(jboolean interactive) { return call_method<SCAPIX_META_STRING("setInteractive"), void>(interactive); }
inline jboolean DreamService::isInteractive() { return call_method<SCAPIX_META_STRING("isInteractive"), jboolean>(); }
inline void DreamService::setFullscreen(jboolean fullscreen) { return call_method<SCAPIX_META_STRING("setFullscreen"), void>(fullscreen); }
inline jboolean DreamService::isFullscreen() { return call_method<SCAPIX_META_STRING("isFullscreen"), jboolean>(); }
inline void DreamService::setScreenBright(jboolean screenBright) { return call_method<SCAPIX_META_STRING("setScreenBright"), void>(screenBright); }
inline jboolean DreamService::isScreenBright() { return call_method<SCAPIX_META_STRING("isScreenBright"), jboolean>(); }
inline void DreamService::onCreate() { return call_method<SCAPIX_META_STRING("onCreate"), void>(); }
inline void DreamService::onDreamingStarted() { return call_method<SCAPIX_META_STRING("onDreamingStarted"), void>(); }
inline void DreamService::onDreamingStopped() { return call_method<SCAPIX_META_STRING("onDreamingStopped"), void>(); }
inline void DreamService::onWakeUp() { return call_method<SCAPIX_META_STRING("onWakeUp"), void>(); }
inline ref<android::os::IBinder> DreamService::onBind(ref<android::content::Intent> intent) { return call_method<SCAPIX_META_STRING("onBind"), ref<android::os::IBinder>>(intent); }
inline void DreamService::finish() { return call_method<SCAPIX_META_STRING("finish"), void>(); }
inline void DreamService::wakeUp() { return call_method<SCAPIX_META_STRING("wakeUp"), void>(); }
inline void DreamService::onDestroy() { return call_method<SCAPIX_META_STRING("onDestroy"), void>(); }

} // namespace android::service::dreams
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_SERVICE_DREAMS_DREAMSERVICE_H
