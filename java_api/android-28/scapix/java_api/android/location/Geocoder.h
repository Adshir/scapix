// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_LOCATION_GEOCODER_H
#define SCAPIX_ANDROID_LOCATION_GEOCODER_H

namespace scapix::java_api {

namespace android::content { class Context; }
namespace java::lang { class String; }
namespace java::util { class List; }
namespace java::util { class Locale; }

namespace android::location {

class Geocoder : public object_base<SCAPIX_META_STRING("android/location/Geocoder"),
	java::lang::Object>
{
public:

	static ref<Geocoder> new_object(ref<android::content::Context> context, ref<java::util::Locale> locale);
	static ref<Geocoder> new_object(ref<android::content::Context> context);
	static jboolean isPresent();
	ref<java::util::List> getFromLocation(jdouble latitude, jdouble p2, jint longitude);
	ref<java::util::List> getFromLocationName(ref<java::lang::String> locationName, jint maxResults);
	ref<java::util::List> getFromLocationName(ref<java::lang::String> locationName, jint maxResults, jdouble lowerLeftLatitude, jdouble p4, jdouble lowerLeftLongitude, jdouble p6);

protected:

	Geocoder(handle_type h) : base_(h) {}

};

} // namespace android::location
} // namespace scapix::java_api

#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/List.h>
#include <scapix/java_api/java/util/Locale.h>

namespace scapix::java_api {
namespace android::location {

inline ref<Geocoder> Geocoder::new_object(ref<android::content::Context> context, ref<java::util::Locale> locale) { return base_::new_object(context, locale); }
inline ref<Geocoder> Geocoder::new_object(ref<android::content::Context> context) { return base_::new_object(context); }
inline jboolean Geocoder::isPresent() { return call_static_method<SCAPIX_META_STRING("isPresent"), jboolean>(); }
inline ref<java::util::List> Geocoder::getFromLocation(jdouble latitude, jdouble p2, jint longitude) { return call_method<SCAPIX_META_STRING("getFromLocation"), ref<java::util::List>>(latitude, p2, longitude); }
inline ref<java::util::List> Geocoder::getFromLocationName(ref<java::lang::String> locationName, jint maxResults) { return call_method<SCAPIX_META_STRING("getFromLocationName"), ref<java::util::List>>(locationName, maxResults); }
inline ref<java::util::List> Geocoder::getFromLocationName(ref<java::lang::String> locationName, jint maxResults, jdouble lowerLeftLatitude, jdouble p4, jdouble lowerLeftLongitude, jdouble p6) { return call_method<SCAPIX_META_STRING("getFromLocationName"), ref<java::util::List>>(locationName, maxResults, lowerLeftLatitude, p4, lowerLeftLongitude, p6); }

} // namespace android::location
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_LOCATION_GEOCODER_H
