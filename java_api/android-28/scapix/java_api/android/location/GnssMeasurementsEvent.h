// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_ANDROID_LOCATION_GNSSMEASUREMENTSEVENT_H
#define SCAPIX_ANDROID_LOCATION_GNSSMEASUREMENTSEVENT_H

namespace scapix::java_api {

namespace android::location { class GnssClock; }
namespace android::os { class Parcel; }
namespace android::os { class Parcelable_Creator; }
namespace java::lang { class String; }
namespace java::util { class Collection; }
namespace android::location { class GnssMeasurementsEvent_Callback; }

namespace android::location {

class GnssMeasurementsEvent : public object_base<SCAPIX_META_STRING("android/location/GnssMeasurementsEvent"),
	java::lang::Object,
	android::os::Parcelable>
{
public:

	using Callback = GnssMeasurementsEvent_Callback;

	static ref<android::os::Parcelable_Creator> CREATOR_();

	ref<android::location::GnssClock> getClock();
	ref<java::util::Collection> getMeasurements();
	jint describeContents();
	void writeToParcel(ref<android::os::Parcel> parcel, jint flags);
	ref<java::lang::String> toString();

protected:

	GnssMeasurementsEvent(handle_type h) : base_(h) {}

};

} // namespace android::location
} // namespace scapix::java_api

#include <scapix/java_api/android/location/GnssClock.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Collection.h>

namespace scapix::java_api {
namespace android::location {

inline ref<android::os::Parcelable_Creator> GnssMeasurementsEvent::CREATOR_() { return get_static_field<SCAPIX_META_STRING("CREATOR"), ref<android::os::Parcelable_Creator>>(); }
inline ref<android::location::GnssClock> GnssMeasurementsEvent::getClock() { return call_method<SCAPIX_META_STRING("getClock"), ref<android::location::GnssClock>>(); }
inline ref<java::util::Collection> GnssMeasurementsEvent::getMeasurements() { return call_method<SCAPIX_META_STRING("getMeasurements"), ref<java::util::Collection>>(); }
inline jint GnssMeasurementsEvent::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }
inline void GnssMeasurementsEvent::writeToParcel(ref<android::os::Parcel> parcel, jint flags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(parcel, flags); }
inline ref<java::lang::String> GnssMeasurementsEvent::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }

} // namespace android::location
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_LOCATION_GNSSMEASUREMENTSEVENT_H
