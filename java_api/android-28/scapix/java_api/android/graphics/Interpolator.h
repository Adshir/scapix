// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_GRAPHICS_INTERPOLATOR_H
#define SCAPIX_ANDROID_GRAPHICS_INTERPOLATOR_H

namespace scapix::java_api {

namespace android::graphics { class Interpolator_Result; }

namespace android::graphics {

class Interpolator : public object_base<SCAPIX_META_STRING("android/graphics/Interpolator"),
	java::lang::Object>
{
public:

	using Result = Interpolator_Result;

	static ref<Interpolator> new_object(jint valueCount);
	static ref<Interpolator> new_object(jint valueCount, jint frameCount);
	void reset(jint valueCount);
	void reset(jint valueCount, jint frameCount);
	jint getKeyFrameCount();
	jint getValueCount();
	void setKeyFrame(jint index, jint msec, ref<link::java::array<jfloat>> values);
	void setKeyFrame(jint index, jint msec, ref<link::java::array<jfloat>> values, ref<link::java::array<jfloat>> blend);
	void setRepeatMirror(jfloat repeatCount, jboolean mirror);
	ref<android::graphics::Interpolator_Result> timeToValues(ref<link::java::array<jfloat>> values);
	ref<android::graphics::Interpolator_Result> timeToValues(jint msec, ref<link::java::array<jfloat>> values);

protected:

	Interpolator(handle_type h) : base_(h) {}

};

} // namespace android::graphics
} // namespace scapix::java_api

#include <scapix/java_api/android/graphics/Interpolator_Result.h>

namespace scapix::java_api {
namespace android::graphics {

inline ref<Interpolator> Interpolator::new_object(jint valueCount) { return base_::new_object(valueCount); }
inline ref<Interpolator> Interpolator::new_object(jint valueCount, jint frameCount) { return base_::new_object(valueCount, frameCount); }
inline void Interpolator::reset(jint valueCount) { return call_method<SCAPIX_META_STRING("reset"), void>(valueCount); }
inline void Interpolator::reset(jint valueCount, jint frameCount) { return call_method<SCAPIX_META_STRING("reset"), void>(valueCount, frameCount); }
inline jint Interpolator::getKeyFrameCount() { return call_method<SCAPIX_META_STRING("getKeyFrameCount"), jint>(); }
inline jint Interpolator::getValueCount() { return call_method<SCAPIX_META_STRING("getValueCount"), jint>(); }
inline void Interpolator::setKeyFrame(jint index, jint msec, ref<link::java::array<jfloat>> values) { return call_method<SCAPIX_META_STRING("setKeyFrame"), void>(index, msec, values); }
inline void Interpolator::setKeyFrame(jint index, jint msec, ref<link::java::array<jfloat>> values, ref<link::java::array<jfloat>> blend) { return call_method<SCAPIX_META_STRING("setKeyFrame"), void>(index, msec, values, blend); }
inline void Interpolator::setRepeatMirror(jfloat repeatCount, jboolean mirror) { return call_method<SCAPIX_META_STRING("setRepeatMirror"), void>(repeatCount, mirror); }
inline ref<android::graphics::Interpolator_Result> Interpolator::timeToValues(ref<link::java::array<jfloat>> values) { return call_method<SCAPIX_META_STRING("timeToValues"), ref<android::graphics::Interpolator_Result>>(values); }
inline ref<android::graphics::Interpolator_Result> Interpolator::timeToValues(jint msec, ref<link::java::array<jfloat>> values) { return call_method<SCAPIX_META_STRING("timeToValues"), ref<android::graphics::Interpolator_Result>>(msec, values); }

} // namespace android::graphics
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_GRAPHICS_INTERPOLATOR_H
