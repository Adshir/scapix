// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_GRAPHICS_OUTLINE_H
#define SCAPIX_ANDROID_GRAPHICS_OUTLINE_H

namespace scapix::java_api {

namespace android::graphics { class Path; }
namespace android::graphics { class Rect; }

namespace android::graphics {

class Outline : public object_base<SCAPIX_META_STRING("android/graphics/Outline"),
	java::lang::Object>
{
public:

	static ref<Outline> new_object();
	static ref<Outline> new_object(ref<android::graphics::Outline> src);
	void setEmpty();
	jboolean isEmpty();
	jboolean canClip();
	void setAlpha(jfloat alpha);
	jfloat getAlpha();
	void set(ref<android::graphics::Outline> src);
	void setRect(jint left, jint top, jint right, jint bottom);
	void setRect(ref<android::graphics::Rect> rect);
	void setRoundRect(jint left, jint top, jint right, jint bottom, jfloat radius);
	void setRoundRect(ref<android::graphics::Rect> rect, jfloat radius);
	jboolean getRect(ref<android::graphics::Rect> outRect);
	jfloat getRadius();
	void setOval(jint left, jint top, jint right, jint bottom);
	void setOval(ref<android::graphics::Rect> rect);
	void setConvexPath(ref<android::graphics::Path> convexPath);
	void offset(jint dx, jint dy);

protected:

	Outline(handle_type h) : base_(h) {}

};

} // namespace android::graphics
} // namespace scapix::java_api

#include <scapix/java_api/android/graphics/Path.h>
#include <scapix/java_api/android/graphics/Rect.h>

namespace scapix::java_api {
namespace android::graphics {

inline ref<Outline> Outline::new_object() { return base_::new_object(); }
inline ref<Outline> Outline::new_object(ref<android::graphics::Outline> src) { return base_::new_object(src); }
inline void Outline::setEmpty() { return call_method<SCAPIX_META_STRING("setEmpty"), void>(); }
inline jboolean Outline::isEmpty() { return call_method<SCAPIX_META_STRING("isEmpty"), jboolean>(); }
inline jboolean Outline::canClip() { return call_method<SCAPIX_META_STRING("canClip"), jboolean>(); }
inline void Outline::setAlpha(jfloat alpha) { return call_method<SCAPIX_META_STRING("setAlpha"), void>(alpha); }
inline jfloat Outline::getAlpha() { return call_method<SCAPIX_META_STRING("getAlpha"), jfloat>(); }
inline void Outline::set(ref<android::graphics::Outline> src) { return call_method<SCAPIX_META_STRING("set"), void>(src); }
inline void Outline::setRect(jint left, jint top, jint right, jint bottom) { return call_method<SCAPIX_META_STRING("setRect"), void>(left, top, right, bottom); }
inline void Outline::setRect(ref<android::graphics::Rect> rect) { return call_method<SCAPIX_META_STRING("setRect"), void>(rect); }
inline void Outline::setRoundRect(jint left, jint top, jint right, jint bottom, jfloat radius) { return call_method<SCAPIX_META_STRING("setRoundRect"), void>(left, top, right, bottom, radius); }
inline void Outline::setRoundRect(ref<android::graphics::Rect> rect, jfloat radius) { return call_method<SCAPIX_META_STRING("setRoundRect"), void>(rect, radius); }
inline jboolean Outline::getRect(ref<android::graphics::Rect> outRect) { return call_method<SCAPIX_META_STRING("getRect"), jboolean>(outRect); }
inline jfloat Outline::getRadius() { return call_method<SCAPIX_META_STRING("getRadius"), jfloat>(); }
inline void Outline::setOval(jint left, jint top, jint right, jint bottom) { return call_method<SCAPIX_META_STRING("setOval"), void>(left, top, right, bottom); }
inline void Outline::setOval(ref<android::graphics::Rect> rect) { return call_method<SCAPIX_META_STRING("setOval"), void>(rect); }
inline void Outline::setConvexPath(ref<android::graphics::Path> convexPath) { return call_method<SCAPIX_META_STRING("setConvexPath"), void>(convexPath); }
inline void Outline::offset(jint dx, jint dy) { return call_method<SCAPIX_META_STRING("offset"), void>(dx, dy); }

} // namespace android::graphics
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_GRAPHICS_OUTLINE_H
