// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_GRAPHICS_DRAWABLE_DRAWABLE_CALLBACK_H
#define SCAPIX_ANDROID_GRAPHICS_DRAWABLE_DRAWABLE_CALLBACK_H

namespace scapix::java_api {

namespace android::graphics::drawable { class Drawable; }
namespace java::lang { class Runnable; }

namespace android::graphics::drawable {

class Drawable_Callback : public object_base<SCAPIX_META_STRING("android/graphics/drawable/Drawable$Callback"),
	java::lang::Object>
{
public:

	void invalidateDrawable(ref<android::graphics::drawable::Drawable> p1);
	void scheduleDrawable(ref<android::graphics::drawable::Drawable> p1, ref<java::lang::Runnable> p2, jlong p3);
	void unscheduleDrawable(ref<android::graphics::drawable::Drawable> p1, ref<java::lang::Runnable> p2);

protected:

	Drawable_Callback(handle_type h) : base_(h) {}

};

} // namespace android::graphics::drawable
} // namespace scapix::java_api

#include <scapix/java_api/android/graphics/drawable/Drawable.h>
#include <scapix/java_api/java/lang/Runnable.h>

namespace scapix::java_api {
namespace android::graphics::drawable {

inline void Drawable_Callback::invalidateDrawable(ref<android::graphics::drawable::Drawable> p1) { return call_method<SCAPIX_META_STRING("invalidateDrawable"), void>(p1); }
inline void Drawable_Callback::scheduleDrawable(ref<android::graphics::drawable::Drawable> p1, ref<java::lang::Runnable> p2, jlong p3) { return call_method<SCAPIX_META_STRING("scheduleDrawable"), void>(p1, p2, p3); }
inline void Drawable_Callback::unscheduleDrawable(ref<android::graphics::drawable::Drawable> p1, ref<java::lang::Runnable> p2) { return call_method<SCAPIX_META_STRING("unscheduleDrawable"), void>(p1, p2); }

} // namespace android::graphics::drawable
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_GRAPHICS_DRAWABLE_DRAWABLE_CALLBACK_H
