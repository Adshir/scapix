// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/graphics/drawable/DrawableContainer.h>

#ifndef SCAPIX_ANDROID_GRAPHICS_DRAWABLE_STATELISTDRAWABLE_H
#define SCAPIX_ANDROID_GRAPHICS_DRAWABLE_STATELISTDRAWABLE_H

namespace scapix::java_api {

namespace android::content::res { class Resources; }
namespace android::content::res { class Resources_Theme; }
namespace android::graphics::drawable { class Drawable; }
namespace android::util { class AttributeSet; }
namespace org::xmlpull::v1 { class XmlPullParser; }

namespace android::graphics::drawable {

class StateListDrawable : public object_base<SCAPIX_META_STRING("android/graphics/drawable/StateListDrawable"),
	android::graphics::drawable::DrawableContainer>
{
public:

	static ref<StateListDrawable> new_object();
	void addState(ref<link::java::array<jint>> stateSet, ref<android::graphics::drawable::Drawable> drawable);
	jboolean isStateful();
	void inflate(ref<android::content::res::Resources> r, ref<org::xmlpull::v1::XmlPullParser> parser, ref<android::util::AttributeSet> attrs, ref<android::content::res::Resources_Theme> theme);
	ref<android::graphics::drawable::Drawable> mutate();
	void applyTheme(ref<android::content::res::Resources_Theme> theme);

protected:

	StateListDrawable(handle_type h) : base_(h) {}

};

} // namespace android::graphics::drawable
} // namespace scapix::java_api

#include <scapix/java_api/android/content/res/Resources.h>
#include <scapix/java_api/android/content/res/Resources_Theme.h>
#include <scapix/java_api/android/graphics/drawable/Drawable.h>
#include <scapix/java_api/android/util/AttributeSet.h>
#include <scapix/java_api/org/xmlpull/v1/XmlPullParser.h>

namespace scapix::java_api {
namespace android::graphics::drawable {

inline ref<StateListDrawable> StateListDrawable::new_object() { return base_::new_object(); }
inline void StateListDrawable::addState(ref<link::java::array<jint>> stateSet, ref<android::graphics::drawable::Drawable> drawable) { return call_method<SCAPIX_META_STRING("addState"), void>(stateSet, drawable); }
inline jboolean StateListDrawable::isStateful() { return call_method<SCAPIX_META_STRING("isStateful"), jboolean>(); }
inline void StateListDrawable::inflate(ref<android::content::res::Resources> r, ref<org::xmlpull::v1::XmlPullParser> parser, ref<android::util::AttributeSet> attrs, ref<android::content::res::Resources_Theme> theme) { return call_method<SCAPIX_META_STRING("inflate"), void>(r, parser, attrs, theme); }
inline ref<android::graphics::drawable::Drawable> StateListDrawable::mutate() { return call_method<SCAPIX_META_STRING("mutate"), ref<android::graphics::drawable::Drawable>>(); }
inline void StateListDrawable::applyTheme(ref<android::content::res::Resources_Theme> theme) { return call_method<SCAPIX_META_STRING("applyTheme"), void>(theme); }

} // namespace android::graphics::drawable
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_GRAPHICS_DRAWABLE_STATELISTDRAWABLE_H
