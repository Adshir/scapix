// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/Cloneable.h>

#ifndef SCAPIX_ANDROID_GRAPHICS_DRAWABLE_SHAPES_SHAPE_H
#define SCAPIX_ANDROID_GRAPHICS_DRAWABLE_SHAPES_SHAPE_H

namespace scapix::java_api {

namespace android::graphics { class Canvas; }
namespace android::graphics { class Outline; }
namespace android::graphics { class Paint; }

namespace android::graphics::drawable::shapes {

class Shape : public object_base<SCAPIX_META_STRING("android/graphics/drawable/shapes/Shape"),
	java::lang::Object,
	java::lang::Cloneable>
{
public:

	static ref<Shape> new_object();
	jfloat getWidth();
	jfloat getHeight();
	void draw(ref<android::graphics::Canvas> p1, ref<android::graphics::Paint> p2);
	void resize(jfloat width, jfloat height);
	jboolean hasAlpha();
	void getOutline(ref<android::graphics::Outline> outline);
	ref<android::graphics::drawable::shapes::Shape> clone();

protected:

	Shape(handle_type h) : base_(h) {}

};

} // namespace android::graphics::drawable::shapes
} // namespace scapix::java_api

#include <scapix/java_api/android/graphics/Canvas.h>
#include <scapix/java_api/android/graphics/Outline.h>
#include <scapix/java_api/android/graphics/Paint.h>

namespace scapix::java_api {
namespace android::graphics::drawable::shapes {

inline ref<Shape> Shape::new_object() { return base_::new_object(); }
inline jfloat Shape::getWidth() { return call_method<SCAPIX_META_STRING("getWidth"), jfloat>(); }
inline jfloat Shape::getHeight() { return call_method<SCAPIX_META_STRING("getHeight"), jfloat>(); }
inline void Shape::draw(ref<android::graphics::Canvas> p1, ref<android::graphics::Paint> p2) { return call_method<SCAPIX_META_STRING("draw"), void>(p1, p2); }
inline void Shape::resize(jfloat width, jfloat height) { return call_method<SCAPIX_META_STRING("resize"), void>(width, height); }
inline jboolean Shape::hasAlpha() { return call_method<SCAPIX_META_STRING("hasAlpha"), jboolean>(); }
inline void Shape::getOutline(ref<android::graphics::Outline> outline) { return call_method<SCAPIX_META_STRING("getOutline"), void>(outline); }
inline ref<android::graphics::drawable::shapes::Shape> Shape::clone() { return call_method<SCAPIX_META_STRING("clone"), ref<android::graphics::drawable::shapes::Shape>>(); }

} // namespace android::graphics::drawable::shapes
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_GRAPHICS_DRAWABLE_SHAPES_SHAPE_H
