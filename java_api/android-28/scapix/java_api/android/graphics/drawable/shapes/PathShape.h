// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/graphics/drawable/shapes/Shape.h>

#ifndef SCAPIX_ANDROID_GRAPHICS_DRAWABLE_SHAPES_PATHSHAPE_H
#define SCAPIX_ANDROID_GRAPHICS_DRAWABLE_SHAPES_PATHSHAPE_H

namespace scapix::java_api {

namespace android::graphics { class Canvas; }
namespace android::graphics { class Paint; }
namespace android::graphics { class Path; }

namespace android::graphics::drawable::shapes {

class PathShape : public object_base<SCAPIX_META_STRING("android/graphics/drawable/shapes/PathShape"),
	android::graphics::drawable::shapes::Shape>
{
public:

	static ref<PathShape> new_object(ref<android::graphics::Path> path, jfloat stdWidth, jfloat stdHeight);
	void draw(ref<android::graphics::Canvas> canvas, ref<android::graphics::Paint> paint);
	ref<android::graphics::drawable::shapes::PathShape> clone();

protected:

	PathShape(handle_type h) : base_(h) {}

};

} // namespace android::graphics::drawable::shapes
} // namespace scapix::java_api

#include <scapix/java_api/android/graphics/Canvas.h>
#include <scapix/java_api/android/graphics/Paint.h>
#include <scapix/java_api/android/graphics/Path.h>

namespace scapix::java_api {
namespace android::graphics::drawable::shapes {

inline ref<PathShape> PathShape::new_object(ref<android::graphics::Path> path, jfloat stdWidth, jfloat stdHeight) { return base_::new_object(path, stdWidth, stdHeight); }
inline void PathShape::draw(ref<android::graphics::Canvas> canvas, ref<android::graphics::Paint> paint) { return call_method<SCAPIX_META_STRING("draw"), void>(canvas, paint); }
inline ref<android::graphics::drawable::shapes::PathShape> PathShape::clone() { return call_method<SCAPIX_META_STRING("clone"), ref<android::graphics::drawable::shapes::PathShape>>(); }

} // namespace android::graphics::drawable::shapes
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_GRAPHICS_DRAWABLE_SHAPES_PATHSHAPE_H
