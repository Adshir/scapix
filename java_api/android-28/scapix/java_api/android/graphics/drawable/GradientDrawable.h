// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/graphics/drawable/Drawable.h>

#ifndef SCAPIX_ANDROID_GRAPHICS_DRAWABLE_GRADIENTDRAWABLE_H
#define SCAPIX_ANDROID_GRAPHICS_DRAWABLE_GRADIENTDRAWABLE_H

namespace scapix::java_api {

namespace android::content::res { class ColorStateList; }
namespace android::content::res { class Resources; }
namespace android::content::res { class Resources_Theme; }
namespace android::graphics { class Canvas; }
namespace android::graphics { class ColorFilter; }
namespace android::graphics { class Outline; }
namespace android::graphics { class PorterDuff_Mode; }
namespace android::graphics { class Rect; }
namespace android::graphics::drawable { class Drawable_ConstantState; }
namespace android::graphics::drawable { class GradientDrawable_Orientation; }
namespace android::util { class AttributeSet; }
namespace org::xmlpull::v1 { class XmlPullParser; }

namespace android::graphics::drawable {

class GradientDrawable : public object_base<SCAPIX_META_STRING("android/graphics/drawable/GradientDrawable"),
	android::graphics::drawable::Drawable>
{
public:

	using Orientation = GradientDrawable_Orientation;

	static jint LINE_();
	static jint LINEAR_GRADIENT_();
	static jint OVAL_();
	static jint RADIAL_GRADIENT_();
	static jint RECTANGLE_();
	static jint RING_();
	static jint SWEEP_GRADIENT_();

	static ref<GradientDrawable> new_object();
	static ref<GradientDrawable> new_object(ref<android::graphics::drawable::GradientDrawable_Orientation> orientation, ref<link::java::array<jint>> colors);
	jboolean getPadding(ref<android::graphics::Rect> padding);
	void setCornerRadii(ref<link::java::array<jfloat>> radii);
	ref<link::java::array<jfloat>> getCornerRadii();
	void setCornerRadius(jfloat radius);
	jfloat getCornerRadius();
	void setStroke(jint width, jint color);
	void setStroke(jint width, ref<android::content::res::ColorStateList> colorStateList);
	void setStroke(jint width, jint color, jfloat dashWidth, jfloat dashGap);
	void setStroke(jint width, ref<android::content::res::ColorStateList> colorStateList, jfloat dashWidth, jfloat dashGap);
	void setSize(jint width, jint height);
	void setShape(jint shape);
	jint getShape();
	void setGradientType(jint gradient);
	jint getGradientType();
	void setGradientCenter(jfloat x, jfloat y);
	jfloat getGradientCenterX();
	jfloat getGradientCenterY();
	void setGradientRadius(jfloat gradientRadius);
	jfloat getGradientRadius();
	void setUseLevel(jboolean useLevel);
	jboolean getUseLevel();
	ref<android::graphics::drawable::GradientDrawable_Orientation> getOrientation();
	void setOrientation(ref<android::graphics::drawable::GradientDrawable_Orientation> orientation);
	void setColors(ref<link::java::array<jint>> colors);
	ref<link::java::array<jint>> getColors();
	void draw(ref<android::graphics::Canvas> canvas);
	void setColor(jint argb);
	void setColor(ref<android::content::res::ColorStateList> colorStateList);
	ref<android::content::res::ColorStateList> getColor();
	jboolean isStateful();
	jint getChangingConfigurations();
	void setAlpha(jint alpha);
	jint getAlpha();
	void setDither(jboolean dither);
	ref<android::graphics::ColorFilter> getColorFilter();
	void setColorFilter(ref<android::graphics::ColorFilter> colorFilter);
	void setTintList(ref<android::content::res::ColorStateList> tint);
	void setTintMode(ref<android::graphics::PorterDuff_Mode> tintMode);
	jint getOpacity();
	void inflate(ref<android::content::res::Resources> r, ref<org::xmlpull::v1::XmlPullParser> parser, ref<android::util::AttributeSet> attrs, ref<android::content::res::Resources_Theme> theme);
	void applyTheme(ref<android::content::res::Resources_Theme> t);
	jboolean canApplyTheme();
	jint getIntrinsicWidth();
	jint getIntrinsicHeight();
	ref<android::graphics::drawable::Drawable_ConstantState> getConstantState();
	void getOutline(ref<android::graphics::Outline> outline);
	ref<android::graphics::drawable::Drawable> mutate();

protected:

	GradientDrawable(handle_type h) : base_(h) {}

};

} // namespace android::graphics::drawable
} // namespace scapix::java_api

#include <scapix/java_api/android/content/res/ColorStateList.h>
#include <scapix/java_api/android/content/res/Resources.h>
#include <scapix/java_api/android/content/res/Resources_Theme.h>
#include <scapix/java_api/android/graphics/Canvas.h>
#include <scapix/java_api/android/graphics/ColorFilter.h>
#include <scapix/java_api/android/graphics/Outline.h>
#include <scapix/java_api/android/graphics/PorterDuff_Mode.h>
#include <scapix/java_api/android/graphics/Rect.h>
#include <scapix/java_api/android/graphics/drawable/Drawable_ConstantState.h>
#include <scapix/java_api/android/graphics/drawable/GradientDrawable_Orientation.h>
#include <scapix/java_api/android/util/AttributeSet.h>
#include <scapix/java_api/org/xmlpull/v1/XmlPullParser.h>

namespace scapix::java_api {
namespace android::graphics::drawable {

inline jint GradientDrawable::LINE_() { return get_static_field<SCAPIX_META_STRING("LINE"), jint>(); }
inline jint GradientDrawable::LINEAR_GRADIENT_() { return get_static_field<SCAPIX_META_STRING("LINEAR_GRADIENT"), jint>(); }
inline jint GradientDrawable::OVAL_() { return get_static_field<SCAPIX_META_STRING("OVAL"), jint>(); }
inline jint GradientDrawable::RADIAL_GRADIENT_() { return get_static_field<SCAPIX_META_STRING("RADIAL_GRADIENT"), jint>(); }
inline jint GradientDrawable::RECTANGLE_() { return get_static_field<SCAPIX_META_STRING("RECTANGLE"), jint>(); }
inline jint GradientDrawable::RING_() { return get_static_field<SCAPIX_META_STRING("RING"), jint>(); }
inline jint GradientDrawable::SWEEP_GRADIENT_() { return get_static_field<SCAPIX_META_STRING("SWEEP_GRADIENT"), jint>(); }
inline ref<GradientDrawable> GradientDrawable::new_object() { return base_::new_object(); }
inline ref<GradientDrawable> GradientDrawable::new_object(ref<android::graphics::drawable::GradientDrawable_Orientation> orientation, ref<link::java::array<jint>> colors) { return base_::new_object(orientation, colors); }
inline jboolean GradientDrawable::getPadding(ref<android::graphics::Rect> padding) { return call_method<SCAPIX_META_STRING("getPadding"), jboolean>(padding); }
inline void GradientDrawable::setCornerRadii(ref<link::java::array<jfloat>> radii) { return call_method<SCAPIX_META_STRING("setCornerRadii"), void>(radii); }
inline ref<link::java::array<jfloat>> GradientDrawable::getCornerRadii() { return call_method<SCAPIX_META_STRING("getCornerRadii"), ref<link::java::array<jfloat>>>(); }
inline void GradientDrawable::setCornerRadius(jfloat radius) { return call_method<SCAPIX_META_STRING("setCornerRadius"), void>(radius); }
inline jfloat GradientDrawable::getCornerRadius() { return call_method<SCAPIX_META_STRING("getCornerRadius"), jfloat>(); }
inline void GradientDrawable::setStroke(jint width, jint color) { return call_method<SCAPIX_META_STRING("setStroke"), void>(width, color); }
inline void GradientDrawable::setStroke(jint width, ref<android::content::res::ColorStateList> colorStateList) { return call_method<SCAPIX_META_STRING("setStroke"), void>(width, colorStateList); }
inline void GradientDrawable::setStroke(jint width, jint color, jfloat dashWidth, jfloat dashGap) { return call_method<SCAPIX_META_STRING("setStroke"), void>(width, color, dashWidth, dashGap); }
inline void GradientDrawable::setStroke(jint width, ref<android::content::res::ColorStateList> colorStateList, jfloat dashWidth, jfloat dashGap) { return call_method<SCAPIX_META_STRING("setStroke"), void>(width, colorStateList, dashWidth, dashGap); }
inline void GradientDrawable::setSize(jint width, jint height) { return call_method<SCAPIX_META_STRING("setSize"), void>(width, height); }
inline void GradientDrawable::setShape(jint shape) { return call_method<SCAPIX_META_STRING("setShape"), void>(shape); }
inline jint GradientDrawable::getShape() { return call_method<SCAPIX_META_STRING("getShape"), jint>(); }
inline void GradientDrawable::setGradientType(jint gradient) { return call_method<SCAPIX_META_STRING("setGradientType"), void>(gradient); }
inline jint GradientDrawable::getGradientType() { return call_method<SCAPIX_META_STRING("getGradientType"), jint>(); }
inline void GradientDrawable::setGradientCenter(jfloat x, jfloat y) { return call_method<SCAPIX_META_STRING("setGradientCenter"), void>(x, y); }
inline jfloat GradientDrawable::getGradientCenterX() { return call_method<SCAPIX_META_STRING("getGradientCenterX"), jfloat>(); }
inline jfloat GradientDrawable::getGradientCenterY() { return call_method<SCAPIX_META_STRING("getGradientCenterY"), jfloat>(); }
inline void GradientDrawable::setGradientRadius(jfloat gradientRadius) { return call_method<SCAPIX_META_STRING("setGradientRadius"), void>(gradientRadius); }
inline jfloat GradientDrawable::getGradientRadius() { return call_method<SCAPIX_META_STRING("getGradientRadius"), jfloat>(); }
inline void GradientDrawable::setUseLevel(jboolean useLevel) { return call_method<SCAPIX_META_STRING("setUseLevel"), void>(useLevel); }
inline jboolean GradientDrawable::getUseLevel() { return call_method<SCAPIX_META_STRING("getUseLevel"), jboolean>(); }
inline ref<android::graphics::drawable::GradientDrawable_Orientation> GradientDrawable::getOrientation() { return call_method<SCAPIX_META_STRING("getOrientation"), ref<android::graphics::drawable::GradientDrawable_Orientation>>(); }
inline void GradientDrawable::setOrientation(ref<android::graphics::drawable::GradientDrawable_Orientation> orientation) { return call_method<SCAPIX_META_STRING("setOrientation"), void>(orientation); }
inline void GradientDrawable::setColors(ref<link::java::array<jint>> colors) { return call_method<SCAPIX_META_STRING("setColors"), void>(colors); }
inline ref<link::java::array<jint>> GradientDrawable::getColors() { return call_method<SCAPIX_META_STRING("getColors"), ref<link::java::array<jint>>>(); }
inline void GradientDrawable::draw(ref<android::graphics::Canvas> canvas) { return call_method<SCAPIX_META_STRING("draw"), void>(canvas); }
inline void GradientDrawable::setColor(jint argb) { return call_method<SCAPIX_META_STRING("setColor"), void>(argb); }
inline void GradientDrawable::setColor(ref<android::content::res::ColorStateList> colorStateList) { return call_method<SCAPIX_META_STRING("setColor"), void>(colorStateList); }
inline ref<android::content::res::ColorStateList> GradientDrawable::getColor() { return call_method<SCAPIX_META_STRING("getColor"), ref<android::content::res::ColorStateList>>(); }
inline jboolean GradientDrawable::isStateful() { return call_method<SCAPIX_META_STRING("isStateful"), jboolean>(); }
inline jint GradientDrawable::getChangingConfigurations() { return call_method<SCAPIX_META_STRING("getChangingConfigurations"), jint>(); }
inline void GradientDrawable::setAlpha(jint alpha) { return call_method<SCAPIX_META_STRING("setAlpha"), void>(alpha); }
inline jint GradientDrawable::getAlpha() { return call_method<SCAPIX_META_STRING("getAlpha"), jint>(); }
inline void GradientDrawable::setDither(jboolean dither) { return call_method<SCAPIX_META_STRING("setDither"), void>(dither); }
inline ref<android::graphics::ColorFilter> GradientDrawable::getColorFilter() { return call_method<SCAPIX_META_STRING("getColorFilter"), ref<android::graphics::ColorFilter>>(); }
inline void GradientDrawable::setColorFilter(ref<android::graphics::ColorFilter> colorFilter) { return call_method<SCAPIX_META_STRING("setColorFilter"), void>(colorFilter); }
inline void GradientDrawable::setTintList(ref<android::content::res::ColorStateList> tint) { return call_method<SCAPIX_META_STRING("setTintList"), void>(tint); }
inline void GradientDrawable::setTintMode(ref<android::graphics::PorterDuff_Mode> tintMode) { return call_method<SCAPIX_META_STRING("setTintMode"), void>(tintMode); }
inline jint GradientDrawable::getOpacity() { return call_method<SCAPIX_META_STRING("getOpacity"), jint>(); }
inline void GradientDrawable::inflate(ref<android::content::res::Resources> r, ref<org::xmlpull::v1::XmlPullParser> parser, ref<android::util::AttributeSet> attrs, ref<android::content::res::Resources_Theme> theme) { return call_method<SCAPIX_META_STRING("inflate"), void>(r, parser, attrs, theme); }
inline void GradientDrawable::applyTheme(ref<android::content::res::Resources_Theme> t) { return call_method<SCAPIX_META_STRING("applyTheme"), void>(t); }
inline jboolean GradientDrawable::canApplyTheme() { return call_method<SCAPIX_META_STRING("canApplyTheme"), jboolean>(); }
inline jint GradientDrawable::getIntrinsicWidth() { return call_method<SCAPIX_META_STRING("getIntrinsicWidth"), jint>(); }
inline jint GradientDrawable::getIntrinsicHeight() { return call_method<SCAPIX_META_STRING("getIntrinsicHeight"), jint>(); }
inline ref<android::graphics::drawable::Drawable_ConstantState> GradientDrawable::getConstantState() { return call_method<SCAPIX_META_STRING("getConstantState"), ref<android::graphics::drawable::Drawable_ConstantState>>(); }
inline void GradientDrawable::getOutline(ref<android::graphics::Outline> outline) { return call_method<SCAPIX_META_STRING("getOutline"), void>(outline); }
inline ref<android::graphics::drawable::Drawable> GradientDrawable::mutate() { return call_method<SCAPIX_META_STRING("mutate"), ref<android::graphics::drawable::Drawable>>(); }

} // namespace android::graphics::drawable
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_GRAPHICS_DRAWABLE_GRADIENTDRAWABLE_H
