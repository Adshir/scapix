// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_ANDROID_GRAPHICS_REGION_H
#define SCAPIX_ANDROID_GRAPHICS_REGION_H

namespace scapix::java_api {

namespace android::graphics { class Path; }
namespace android::graphics { class Rect; }
namespace android::graphics { class Region_Op; }
namespace android::os { class Parcel; }
namespace android::os { class Parcelable_Creator; }
namespace java::lang { class String; }

namespace android::graphics {

class Region : public object_base<SCAPIX_META_STRING("android/graphics/Region"),
	java::lang::Object,
	android::os::Parcelable>
{
public:

	using Op = Region_Op;

	static ref<android::os::Parcelable_Creator> CREATOR_();

	static ref<Region> new_object();
	static ref<Region> new_object(ref<android::graphics::Region> region);
	static ref<Region> new_object(ref<android::graphics::Rect> r);
	static ref<Region> new_object(jint left, jint top, jint right, jint bottom);
	void setEmpty();
	jboolean set(ref<android::graphics::Region> region);
	jboolean set(ref<android::graphics::Rect> r);
	jboolean set(jint left, jint top, jint right, jint bottom);
	jboolean setPath(ref<android::graphics::Path> path, ref<android::graphics::Region> clip);
	jboolean isEmpty();
	jboolean isRect();
	jboolean isComplex();
	ref<android::graphics::Rect> getBounds();
	jboolean getBounds(ref<android::graphics::Rect> r);
	ref<android::graphics::Path> getBoundaryPath();
	jboolean getBoundaryPath(ref<android::graphics::Path> path);
	jboolean contains(jint p1, jint p2);
	jboolean quickContains(ref<android::graphics::Rect> r);
	jboolean quickContains(jint p1, jint p2, jint p3, jint p4);
	jboolean quickReject(ref<android::graphics::Rect> r);
	jboolean quickReject(jint p1, jint p2, jint p3, jint p4);
	jboolean quickReject(ref<android::graphics::Region> p1);
	void translate(jint dx, jint dy);
	void translate(jint p1, jint p2, ref<android::graphics::Region> p3);
	jboolean union_(ref<android::graphics::Rect> r);
	jboolean op(ref<android::graphics::Rect> r, ref<android::graphics::Region_Op> op);
	jboolean op(jint left, jint top, jint right, jint bottom, ref<android::graphics::Region_Op> op);
	jboolean op(ref<android::graphics::Region> region, ref<android::graphics::Region_Op> op);
	jboolean op(ref<android::graphics::Rect> rect, ref<android::graphics::Region> region, ref<android::graphics::Region_Op> op);
	jboolean op(ref<android::graphics::Region> region1, ref<android::graphics::Region> region2, ref<android::graphics::Region_Op> op);
	ref<java::lang::String> toString();
	jint describeContents();
	void writeToParcel(ref<android::os::Parcel> p, jint flags);
	jboolean equals(ref<java::lang::Object> obj);

protected:

	Region(handle_type h) : base_(h) {}

};

} // namespace android::graphics
} // namespace scapix::java_api

#include <scapix/java_api/android/graphics/Path.h>
#include <scapix/java_api/android/graphics/Rect.h>
#include <scapix/java_api/android/graphics/Region_Op.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::graphics {

inline ref<android::os::Parcelable_Creator> Region::CREATOR_() { return get_static_field<SCAPIX_META_STRING("CREATOR"), ref<android::os::Parcelable_Creator>>(); }
inline ref<Region> Region::new_object() { return base_::new_object(); }
inline ref<Region> Region::new_object(ref<android::graphics::Region> region) { return base_::new_object(region); }
inline ref<Region> Region::new_object(ref<android::graphics::Rect> r) { return base_::new_object(r); }
inline ref<Region> Region::new_object(jint left, jint top, jint right, jint bottom) { return base_::new_object(left, top, right, bottom); }
inline void Region::setEmpty() { return call_method<SCAPIX_META_STRING("setEmpty"), void>(); }
inline jboolean Region::set(ref<android::graphics::Region> region) { return call_method<SCAPIX_META_STRING("set"), jboolean>(region); }
inline jboolean Region::set(ref<android::graphics::Rect> r) { return call_method<SCAPIX_META_STRING("set"), jboolean>(r); }
inline jboolean Region::set(jint left, jint top, jint right, jint bottom) { return call_method<SCAPIX_META_STRING("set"), jboolean>(left, top, right, bottom); }
inline jboolean Region::setPath(ref<android::graphics::Path> path, ref<android::graphics::Region> clip) { return call_method<SCAPIX_META_STRING("setPath"), jboolean>(path, clip); }
inline jboolean Region::isEmpty() { return call_method<SCAPIX_META_STRING("isEmpty"), jboolean>(); }
inline jboolean Region::isRect() { return call_method<SCAPIX_META_STRING("isRect"), jboolean>(); }
inline jboolean Region::isComplex() { return call_method<SCAPIX_META_STRING("isComplex"), jboolean>(); }
inline ref<android::graphics::Rect> Region::getBounds() { return call_method<SCAPIX_META_STRING("getBounds"), ref<android::graphics::Rect>>(); }
inline jboolean Region::getBounds(ref<android::graphics::Rect> r) { return call_method<SCAPIX_META_STRING("getBounds"), jboolean>(r); }
inline ref<android::graphics::Path> Region::getBoundaryPath() { return call_method<SCAPIX_META_STRING("getBoundaryPath"), ref<android::graphics::Path>>(); }
inline jboolean Region::getBoundaryPath(ref<android::graphics::Path> path) { return call_method<SCAPIX_META_STRING("getBoundaryPath"), jboolean>(path); }
inline jboolean Region::contains(jint p1, jint p2) { return call_method<SCAPIX_META_STRING("contains"), jboolean>(p1, p2); }
inline jboolean Region::quickContains(ref<android::graphics::Rect> r) { return call_method<SCAPIX_META_STRING("quickContains"), jboolean>(r); }
inline jboolean Region::quickContains(jint p1, jint p2, jint p3, jint p4) { return call_method<SCAPIX_META_STRING("quickContains"), jboolean>(p1, p2, p3, p4); }
inline jboolean Region::quickReject(ref<android::graphics::Rect> r) { return call_method<SCAPIX_META_STRING("quickReject"), jboolean>(r); }
inline jboolean Region::quickReject(jint p1, jint p2, jint p3, jint p4) { return call_method<SCAPIX_META_STRING("quickReject"), jboolean>(p1, p2, p3, p4); }
inline jboolean Region::quickReject(ref<android::graphics::Region> p1) { return call_method<SCAPIX_META_STRING("quickReject"), jboolean>(p1); }
inline void Region::translate(jint dx, jint dy) { return call_method<SCAPIX_META_STRING("translate"), void>(dx, dy); }
inline void Region::translate(jint p1, jint p2, ref<android::graphics::Region> p3) { return call_method<SCAPIX_META_STRING("translate"), void>(p1, p2, p3); }
inline jboolean Region::union_(ref<android::graphics::Rect> r) { return call_method<SCAPIX_META_STRING("union"), jboolean>(r); }
inline jboolean Region::op(ref<android::graphics::Rect> r, ref<android::graphics::Region_Op> op) { return call_method<SCAPIX_META_STRING("op"), jboolean>(r, op); }
inline jboolean Region::op(jint left, jint top, jint right, jint bottom, ref<android::graphics::Region_Op> op) { return call_method<SCAPIX_META_STRING("op"), jboolean>(left, top, right, bottom, op); }
inline jboolean Region::op(ref<android::graphics::Region> region, ref<android::graphics::Region_Op> op) { return call_method<SCAPIX_META_STRING("op"), jboolean>(region, op); }
inline jboolean Region::op(ref<android::graphics::Rect> rect, ref<android::graphics::Region> region, ref<android::graphics::Region_Op> op) { return call_method<SCAPIX_META_STRING("op"), jboolean>(rect, region, op); }
inline jboolean Region::op(ref<android::graphics::Region> region1, ref<android::graphics::Region> region2, ref<android::graphics::Region_Op> op) { return call_method<SCAPIX_META_STRING("op"), jboolean>(region1, region2, op); }
inline ref<java::lang::String> Region::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }
inline jint Region::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }
inline void Region::writeToParcel(ref<android::os::Parcel> p, jint flags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(p, flags); }
inline jboolean Region::equals(ref<java::lang::Object> obj) { return call_method<SCAPIX_META_STRING("equals"), jboolean>(obj); }

} // namespace android::graphics
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_GRAPHICS_REGION_H
