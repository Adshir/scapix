// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_GRAPHICS_COLORSPACE_H
#define SCAPIX_ANDROID_GRAPHICS_COLORSPACE_H

namespace scapix::java_api {

namespace android::graphics { class ColorSpace_Adaptation; }
namespace android::graphics { class ColorSpace_Connector; }
namespace android::graphics { class ColorSpace_Model; }
namespace android::graphics { class ColorSpace_Named; }
namespace android::graphics { class ColorSpace_RenderIntent; }
namespace android::graphics { class ColorSpace_Rgb_TransferParameters; }
namespace java::lang { class String; }
namespace android::graphics { class ColorSpace_Rgb; }

namespace android::graphics {

class ColorSpace : public object_base<SCAPIX_META_STRING("android/graphics/ColorSpace"),
	java::lang::Object>
{
public:

	using Rgb = ColorSpace_Rgb;
	using RenderIntent = ColorSpace_RenderIntent;
	using Named = ColorSpace_Named;
	using Model = ColorSpace_Model;
	using Connector = ColorSpace_Connector;
	using Adaptation = ColorSpace_Adaptation;

	static ref<link::java::array<jfloat>> ILLUMINANT_A_();
	static ref<link::java::array<jfloat>> ILLUMINANT_B_();
	static ref<link::java::array<jfloat>> ILLUMINANT_C_();
	static ref<link::java::array<jfloat>> ILLUMINANT_D50_();
	static ref<link::java::array<jfloat>> ILLUMINANT_D55_();
	static ref<link::java::array<jfloat>> ILLUMINANT_D60_();
	static ref<link::java::array<jfloat>> ILLUMINANT_D65_();
	static ref<link::java::array<jfloat>> ILLUMINANT_D75_();
	static ref<link::java::array<jfloat>> ILLUMINANT_E_();
	static jint MAX_ID_();
	static jint MIN_ID_();

	ref<java::lang::String> getName();
	jint getId();
	ref<android::graphics::ColorSpace_Model> getModel();
	jint getComponentCount();
	jboolean isWideGamut();
	jboolean isSrgb();
	jfloat getMinValue(jint p1);
	jfloat getMaxValue(jint p1);
	ref<link::java::array<jfloat>> toXyz(jfloat r, jfloat g, jfloat b);
	ref<link::java::array<jfloat>> toXyz(ref<link::java::array<jfloat>> p1);
	ref<link::java::array<jfloat>> fromXyz(jfloat x, jfloat y, jfloat z);
	ref<link::java::array<jfloat>> fromXyz(ref<link::java::array<jfloat>> p1);
	ref<java::lang::String> toString();
	jboolean equals(ref<java::lang::Object> o);
	jint hashCode();
	static ref<android::graphics::ColorSpace_Connector> connect(ref<android::graphics::ColorSpace> source, ref<android::graphics::ColorSpace> destination);
	static ref<android::graphics::ColorSpace_Connector> connect(ref<android::graphics::ColorSpace> source, ref<android::graphics::ColorSpace> destination, ref<android::graphics::ColorSpace_RenderIntent> intent);
	static ref<android::graphics::ColorSpace_Connector> connect(ref<android::graphics::ColorSpace> source);
	static ref<android::graphics::ColorSpace_Connector> connect(ref<android::graphics::ColorSpace> source, ref<android::graphics::ColorSpace_RenderIntent> intent);
	static ref<android::graphics::ColorSpace> adapt(ref<android::graphics::ColorSpace> colorSpace, ref<link::java::array<jfloat>> whitePoint);
	static ref<android::graphics::ColorSpace> adapt(ref<android::graphics::ColorSpace> colorSpace, ref<link::java::array<jfloat>> whitePoint, ref<android::graphics::ColorSpace_Adaptation> adaptation);
	static ref<android::graphics::ColorSpace> get(ref<android::graphics::ColorSpace_Named> name);
	static ref<android::graphics::ColorSpace> match(ref<link::java::array<jfloat>> toXYZD50, ref<android::graphics::ColorSpace_Rgb_TransferParameters> function);

protected:

	ColorSpace(handle_type h) : base_(h) {}

};

} // namespace android::graphics
} // namespace scapix::java_api

#include <scapix/java_api/android/graphics/ColorSpace_Adaptation.h>
#include <scapix/java_api/android/graphics/ColorSpace_Connector.h>
#include <scapix/java_api/android/graphics/ColorSpace_Model.h>
#include <scapix/java_api/android/graphics/ColorSpace_Named.h>
#include <scapix/java_api/android/graphics/ColorSpace_RenderIntent.h>
#include <scapix/java_api/android/graphics/ColorSpace_Rgb_TransferParameters.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::graphics {

inline ref<link::java::array<jfloat>> ColorSpace::ILLUMINANT_A_() { return get_static_field<SCAPIX_META_STRING("ILLUMINANT_A"), ref<link::java::array<jfloat>>>(); }
inline ref<link::java::array<jfloat>> ColorSpace::ILLUMINANT_B_() { return get_static_field<SCAPIX_META_STRING("ILLUMINANT_B"), ref<link::java::array<jfloat>>>(); }
inline ref<link::java::array<jfloat>> ColorSpace::ILLUMINANT_C_() { return get_static_field<SCAPIX_META_STRING("ILLUMINANT_C"), ref<link::java::array<jfloat>>>(); }
inline ref<link::java::array<jfloat>> ColorSpace::ILLUMINANT_D50_() { return get_static_field<SCAPIX_META_STRING("ILLUMINANT_D50"), ref<link::java::array<jfloat>>>(); }
inline ref<link::java::array<jfloat>> ColorSpace::ILLUMINANT_D55_() { return get_static_field<SCAPIX_META_STRING("ILLUMINANT_D55"), ref<link::java::array<jfloat>>>(); }
inline ref<link::java::array<jfloat>> ColorSpace::ILLUMINANT_D60_() { return get_static_field<SCAPIX_META_STRING("ILLUMINANT_D60"), ref<link::java::array<jfloat>>>(); }
inline ref<link::java::array<jfloat>> ColorSpace::ILLUMINANT_D65_() { return get_static_field<SCAPIX_META_STRING("ILLUMINANT_D65"), ref<link::java::array<jfloat>>>(); }
inline ref<link::java::array<jfloat>> ColorSpace::ILLUMINANT_D75_() { return get_static_field<SCAPIX_META_STRING("ILLUMINANT_D75"), ref<link::java::array<jfloat>>>(); }
inline ref<link::java::array<jfloat>> ColorSpace::ILLUMINANT_E_() { return get_static_field<SCAPIX_META_STRING("ILLUMINANT_E"), ref<link::java::array<jfloat>>>(); }
inline jint ColorSpace::MAX_ID_() { return get_static_field<SCAPIX_META_STRING("MAX_ID"), jint>(); }
inline jint ColorSpace::MIN_ID_() { return get_static_field<SCAPIX_META_STRING("MIN_ID"), jint>(); }
inline ref<java::lang::String> ColorSpace::getName() { return call_method<SCAPIX_META_STRING("getName"), ref<java::lang::String>>(); }
inline jint ColorSpace::getId() { return call_method<SCAPIX_META_STRING("getId"), jint>(); }
inline ref<android::graphics::ColorSpace_Model> ColorSpace::getModel() { return call_method<SCAPIX_META_STRING("getModel"), ref<android::graphics::ColorSpace_Model>>(); }
inline jint ColorSpace::getComponentCount() { return call_method<SCAPIX_META_STRING("getComponentCount"), jint>(); }
inline jboolean ColorSpace::isWideGamut() { return call_method<SCAPIX_META_STRING("isWideGamut"), jboolean>(); }
inline jboolean ColorSpace::isSrgb() { return call_method<SCAPIX_META_STRING("isSrgb"), jboolean>(); }
inline jfloat ColorSpace::getMinValue(jint p1) { return call_method<SCAPIX_META_STRING("getMinValue"), jfloat>(p1); }
inline jfloat ColorSpace::getMaxValue(jint p1) { return call_method<SCAPIX_META_STRING("getMaxValue"), jfloat>(p1); }
inline ref<link::java::array<jfloat>> ColorSpace::toXyz(jfloat r, jfloat g, jfloat b) { return call_method<SCAPIX_META_STRING("toXyz"), ref<link::java::array<jfloat>>>(r, g, b); }
inline ref<link::java::array<jfloat>> ColorSpace::toXyz(ref<link::java::array<jfloat>> p1) { return call_method<SCAPIX_META_STRING("toXyz"), ref<link::java::array<jfloat>>>(p1); }
inline ref<link::java::array<jfloat>> ColorSpace::fromXyz(jfloat x, jfloat y, jfloat z) { return call_method<SCAPIX_META_STRING("fromXyz"), ref<link::java::array<jfloat>>>(x, y, z); }
inline ref<link::java::array<jfloat>> ColorSpace::fromXyz(ref<link::java::array<jfloat>> p1) { return call_method<SCAPIX_META_STRING("fromXyz"), ref<link::java::array<jfloat>>>(p1); }
inline ref<java::lang::String> ColorSpace::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }
inline jboolean ColorSpace::equals(ref<java::lang::Object> o) { return call_method<SCAPIX_META_STRING("equals"), jboolean>(o); }
inline jint ColorSpace::hashCode() { return call_method<SCAPIX_META_STRING("hashCode"), jint>(); }
inline ref<android::graphics::ColorSpace_Connector> ColorSpace::connect(ref<android::graphics::ColorSpace> source, ref<android::graphics::ColorSpace> destination) { return call_static_method<SCAPIX_META_STRING("connect"), ref<android::graphics::ColorSpace_Connector>>(source, destination); }
inline ref<android::graphics::ColorSpace_Connector> ColorSpace::connect(ref<android::graphics::ColorSpace> source, ref<android::graphics::ColorSpace> destination, ref<android::graphics::ColorSpace_RenderIntent> intent) { return call_static_method<SCAPIX_META_STRING("connect"), ref<android::graphics::ColorSpace_Connector>>(source, destination, intent); }
inline ref<android::graphics::ColorSpace_Connector> ColorSpace::connect(ref<android::graphics::ColorSpace> source) { return call_static_method<SCAPIX_META_STRING("connect"), ref<android::graphics::ColorSpace_Connector>>(source); }
inline ref<android::graphics::ColorSpace_Connector> ColorSpace::connect(ref<android::graphics::ColorSpace> source, ref<android::graphics::ColorSpace_RenderIntent> intent) { return call_static_method<SCAPIX_META_STRING("connect"), ref<android::graphics::ColorSpace_Connector>>(source, intent); }
inline ref<android::graphics::ColorSpace> ColorSpace::adapt(ref<android::graphics::ColorSpace> colorSpace, ref<link::java::array<jfloat>> whitePoint) { return call_static_method<SCAPIX_META_STRING("adapt"), ref<android::graphics::ColorSpace>>(colorSpace, whitePoint); }
inline ref<android::graphics::ColorSpace> ColorSpace::adapt(ref<android::graphics::ColorSpace> colorSpace, ref<link::java::array<jfloat>> whitePoint, ref<android::graphics::ColorSpace_Adaptation> adaptation) { return call_static_method<SCAPIX_META_STRING("adapt"), ref<android::graphics::ColorSpace>>(colorSpace, whitePoint, adaptation); }
inline ref<android::graphics::ColorSpace> ColorSpace::get(ref<android::graphics::ColorSpace_Named> name) { return call_static_method<SCAPIX_META_STRING("get"), ref<android::graphics::ColorSpace>>(name); }
inline ref<android::graphics::ColorSpace> ColorSpace::match(ref<link::java::array<jfloat>> toXYZD50, ref<android::graphics::ColorSpace_Rgb_TransferParameters> function) { return call_static_method<SCAPIX_META_STRING("match"), ref<android::graphics::ColorSpace>>(toXYZD50, function); }

} // namespace android::graphics
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_GRAPHICS_COLORSPACE_H
