// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_GRAPHICS_MOVIE_H
#define SCAPIX_ANDROID_GRAPHICS_MOVIE_H

namespace scapix::java_api {

namespace android::graphics { class Canvas; }
namespace android::graphics { class Paint; }
namespace java::io { class InputStream; }
namespace java::lang { class String; }

namespace android::graphics {

class Movie : public object_base<SCAPIX_META_STRING("android/graphics/Movie"),
	java::lang::Object>
{
public:

	jint width();
	jint height();
	jboolean isOpaque();
	jint duration();
	jboolean setTime(jint p1);
	void draw(ref<android::graphics::Canvas> canvas, jfloat x, jfloat y, ref<android::graphics::Paint> paint);
	void draw(ref<android::graphics::Canvas> canvas, jfloat x, jfloat y);
	static ref<android::graphics::Movie> decodeStream(ref<java::io::InputStream> is);
	static ref<android::graphics::Movie> decodeByteArray(ref<link::java::array<jbyte>> p1, jint p2, jint p3);
	static ref<android::graphics::Movie> decodeFile(ref<java::lang::String> pathName);

protected:

	Movie(handle_type h) : base_(h) {}

};

} // namespace android::graphics
} // namespace scapix::java_api

#include <scapix/java_api/android/graphics/Canvas.h>
#include <scapix/java_api/android/graphics/Paint.h>
#include <scapix/java_api/java/io/InputStream.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::graphics {

inline jint Movie::width() { return call_method<SCAPIX_META_STRING("width"), jint>(); }
inline jint Movie::height() { return call_method<SCAPIX_META_STRING("height"), jint>(); }
inline jboolean Movie::isOpaque() { return call_method<SCAPIX_META_STRING("isOpaque"), jboolean>(); }
inline jint Movie::duration() { return call_method<SCAPIX_META_STRING("duration"), jint>(); }
inline jboolean Movie::setTime(jint p1) { return call_method<SCAPIX_META_STRING("setTime"), jboolean>(p1); }
inline void Movie::draw(ref<android::graphics::Canvas> canvas, jfloat x, jfloat y, ref<android::graphics::Paint> paint) { return call_method<SCAPIX_META_STRING("draw"), void>(canvas, x, y, paint); }
inline void Movie::draw(ref<android::graphics::Canvas> canvas, jfloat x, jfloat y) { return call_method<SCAPIX_META_STRING("draw"), void>(canvas, x, y); }
inline ref<android::graphics::Movie> Movie::decodeStream(ref<java::io::InputStream> is) { return call_static_method<SCAPIX_META_STRING("decodeStream"), ref<android::graphics::Movie>>(is); }
inline ref<android::graphics::Movie> Movie::decodeByteArray(ref<link::java::array<jbyte>> p1, jint p2, jint p3) { return call_static_method<SCAPIX_META_STRING("decodeByteArray"), ref<android::graphics::Movie>>(p1, p2, p3); }
inline ref<android::graphics::Movie> Movie::decodeFile(ref<java::lang::String> pathName) { return call_static_method<SCAPIX_META_STRING("decodeFile"), ref<android::graphics::Movie>>(pathName); }

} // namespace android::graphics
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_GRAPHICS_MOVIE_H
