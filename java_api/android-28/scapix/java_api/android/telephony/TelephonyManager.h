// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_TELEPHONY_TELEPHONYMANAGER_H
#define SCAPIX_ANDROID_TELEPHONY_TELEPHONYMANAGER_H

namespace scapix::java_api {

namespace android::app { class PendingIntent; }
namespace android::net { class Uri; }
namespace android::os { class Handler; }
namespace android::os { class PersistableBundle; }
namespace android::telecom { class PhoneAccountHandle; }
namespace android::telephony { class CellLocation; }
namespace android::telephony { class IccOpenLogicalChannelResponse; }
namespace android::telephony { class NetworkScan; }
namespace android::telephony { class NetworkScanRequest; }
namespace android::telephony { class PhoneStateListener; }
namespace android::telephony { class ServiceState; }
namespace android::telephony { class SignalStrength; }
namespace android::telephony { class TelephonyManager_UssdResponseCallback; }
namespace android::telephony { class TelephonyScanManager_NetworkScanCallback; }
namespace android::telephony { class VisualVoicemailSmsFilterSettings; }
namespace java::lang { class CharSequence; }
namespace java::lang { class String; }
namespace java::util { class List; }
namespace java::util::concurrent { class Executor; }

namespace android::telephony {

class TelephonyManager : public object_base<SCAPIX_META_STRING("android/telephony/TelephonyManager"),
	java::lang::Object>
{
public:

	using UssdResponseCallback = TelephonyManager_UssdResponseCallback;

	static ref<java::lang::String> ACTION_CONFIGURE_VOICEMAIL_();
	static ref<java::lang::String> ACTION_PHONE_STATE_CHANGED_();
	static ref<java::lang::String> ACTION_RESPOND_VIA_MESSAGE_();
	static ref<java::lang::String> ACTION_SHOW_VOICEMAIL_NOTIFICATION_();
	static ref<java::lang::String> ACTION_SUBSCRIPTION_CARRIER_IDENTITY_CHANGED_();
	static jint APPTYPE_CSIM_();
	static jint APPTYPE_ISIM_();
	static jint APPTYPE_RUIM_();
	static jint APPTYPE_SIM_();
	static jint APPTYPE_USIM_();
	static jint AUTHTYPE_EAP_AKA_();
	static jint AUTHTYPE_EAP_SIM_();
	static jint CALL_STATE_IDLE_();
	static jint CALL_STATE_OFFHOOK_();
	static jint CALL_STATE_RINGING_();
	static jint CDMA_ROAMING_MODE_AFFILIATED_();
	static jint CDMA_ROAMING_MODE_ANY_();
	static jint CDMA_ROAMING_MODE_HOME_();
	static jint CDMA_ROAMING_MODE_RADIO_DEFAULT_();
	static jint DATA_ACTIVITY_DORMANT_();
	static jint DATA_ACTIVITY_IN_();
	static jint DATA_ACTIVITY_INOUT_();
	static jint DATA_ACTIVITY_NONE_();
	static jint DATA_ACTIVITY_OUT_();
	static jint DATA_CONNECTED_();
	static jint DATA_CONNECTING_();
	static jint DATA_DISCONNECTED_();
	static jint DATA_SUSPENDED_();
	static ref<java::lang::String> EXTRA_CALL_VOICEMAIL_INTENT_();
	static ref<java::lang::String> EXTRA_CARRIER_ID_();
	static ref<java::lang::String> EXTRA_CARRIER_NAME_();
	static ref<java::lang::String> EXTRA_HIDE_PUBLIC_SETTINGS_();
	static ref<java::lang::String> EXTRA_INCOMING_NUMBER_();
	static ref<java::lang::String> EXTRA_IS_REFRESH_();
	static ref<java::lang::String> EXTRA_LAUNCH_VOICEMAIL_SETTINGS_INTENT_();
	static ref<java::lang::String> EXTRA_NOTIFICATION_COUNT_();
	static ref<java::lang::String> EXTRA_PHONE_ACCOUNT_HANDLE_();
	static ref<java::lang::String> EXTRA_STATE_();
	static ref<java::lang::String> EXTRA_STATE_IDLE_();
	static ref<java::lang::String> EXTRA_STATE_OFFHOOK_();
	static ref<java::lang::String> EXTRA_STATE_RINGING_();
	static ref<java::lang::String> EXTRA_SUBSCRIPTION_ID_();
	static ref<java::lang::String> EXTRA_VOICEMAIL_NUMBER_();
	static ref<java::lang::String> METADATA_HIDE_VOICEMAIL_SETTINGS_MENU_();
	static jint NETWORK_TYPE_1xRTT();
	static jint NETWORK_TYPE_CDMA_();
	static jint NETWORK_TYPE_EDGE_();
	static jint NETWORK_TYPE_EHRPD_();
	static jint NETWORK_TYPE_EVDO_0_();
	static jint NETWORK_TYPE_EVDO_A_();
	static jint NETWORK_TYPE_EVDO_B_();
	static jint NETWORK_TYPE_GPRS_();
	static jint NETWORK_TYPE_GSM_();
	static jint NETWORK_TYPE_HSDPA_();
	static jint NETWORK_TYPE_HSPA_();
	static jint NETWORK_TYPE_HSPAP_();
	static jint NETWORK_TYPE_HSUPA_();
	static jint NETWORK_TYPE_IDEN_();
	static jint NETWORK_TYPE_IWLAN_();
	static jint NETWORK_TYPE_LTE_();
	static jint NETWORK_TYPE_TD_SCDMA_();
	static jint NETWORK_TYPE_UMTS_();
	static jint NETWORK_TYPE_UNKNOWN_();
	static jint PHONE_TYPE_CDMA_();
	static jint PHONE_TYPE_GSM_();
	static jint PHONE_TYPE_NONE_();
	static jint PHONE_TYPE_SIP_();
	static jint SIM_STATE_ABSENT_();
	static jint SIM_STATE_CARD_IO_ERROR_();
	static jint SIM_STATE_CARD_RESTRICTED_();
	static jint SIM_STATE_NETWORK_LOCKED_();
	static jint SIM_STATE_NOT_READY_();
	static jint SIM_STATE_PERM_DISABLED_();
	static jint SIM_STATE_PIN_REQUIRED_();
	static jint SIM_STATE_PUK_REQUIRED_();
	static jint SIM_STATE_READY_();
	static jint SIM_STATE_UNKNOWN_();
	static jint UNKNOWN_CARRIER_ID_();
	static jint USSD_ERROR_SERVICE_UNAVAIL_();
	static jint USSD_RETURN_FAILURE_();
	static ref<java::lang::String> VVM_TYPE_CVVM_();
	static ref<java::lang::String> VVM_TYPE_OMTP_();

	jint getPhoneCount();
	ref<android::telephony::TelephonyManager> createForSubscriptionId(jint subId);
	ref<android::telephony::TelephonyManager> createForPhoneAccountHandle(ref<android::telecom::PhoneAccountHandle> phoneAccountHandle);
	ref<java::lang::String> getDeviceSoftwareVersion();
	ref<java::lang::String> getDeviceId();
	ref<java::lang::String> getDeviceId(jint slotIndex);
	ref<java::lang::String> getImei();
	ref<java::lang::String> getImei(jint slotIndex);
	ref<java::lang::String> getMeid();
	ref<java::lang::String> getMeid(jint slotIndex);
	ref<java::lang::String> getNai();
	ref<android::telephony::CellLocation> getCellLocation();
	ref<java::util::List> getNeighboringCellInfo();
	jint getPhoneType();
	ref<java::lang::String> getNetworkOperatorName();
	ref<java::lang::String> getNetworkOperator();
	ref<java::lang::String> getNetworkSpecifier();
	ref<android::os::PersistableBundle> getCarrierConfig();
	jboolean isNetworkRoaming();
	ref<java::lang::String> getNetworkCountryIso();
	jint getNetworkType();
	jint getDataNetworkType();
	jint getVoiceNetworkType();
	jboolean hasIccCard();
	jint getSimState();
	jint getSimState(jint slotIndex);
	ref<java::lang::String> getSimOperator();
	ref<java::lang::String> getSimOperatorName();
	ref<java::lang::String> getSimCountryIso();
	ref<java::lang::String> getSimSerialNumber();
	ref<java::lang::String> getSubscriberId();
	ref<java::lang::String> getGroupIdLevel1();
	ref<java::lang::String> getLine1Number();
	jboolean setLine1NumberForDisplay(ref<java::lang::String> alphaTag, ref<java::lang::String> number);
	ref<java::lang::String> getVoiceMailNumber();
	jboolean setVoiceMailNumber(ref<java::lang::String> alphaTag, ref<java::lang::String> number);
	ref<java::lang::String> getVisualVoicemailPackageName();
	void setVisualVoicemailSmsFilterSettings(ref<android::telephony::VisualVoicemailSmsFilterSettings> settings);
	void sendVisualVoicemailSms(ref<java::lang::String> number, jint port, ref<java::lang::String> text, ref<android::app::PendingIntent> sentIntent);
	ref<java::lang::String> getVoiceMailAlphaTag();
	void sendDialerSpecialCode(ref<java::lang::String> inputCode);
	jint getCallState();
	jint getDataActivity();
	jint getDataState();
	void listen(ref<android::telephony::PhoneStateListener> listener, jint events);
	jboolean isVoiceCapable();
	jboolean isSmsCapable();
	ref<java::util::List> getAllCellInfo();
	ref<java::lang::String> getMmsUserAgent();
	ref<java::lang::String> getMmsUAProfUrl();
	ref<android::telephony::IccOpenLogicalChannelResponse> iccOpenLogicalChannel(ref<java::lang::String> AID_);
	ref<android::telephony::IccOpenLogicalChannelResponse> iccOpenLogicalChannel(ref<java::lang::String> AID_, jint p2);
	jboolean iccCloseLogicalChannel(jint channel);
	ref<java::lang::String> iccTransmitApduLogicalChannel(jint channel, jint cla, jint instruction, jint p1, jint p2, jint p3, ref<java::lang::String> data);
	ref<java::lang::String> iccTransmitApduBasicChannel(jint cla, jint instruction, jint p1, jint p2, jint p3, ref<java::lang::String> data);
	ref<link::java::array<jbyte>> iccExchangeSimIO(jint fileID, jint command, jint p1, jint p2, jint p3, ref<java::lang::String> filePath);
	ref<java::lang::String> sendEnvelopeWithStatus(ref<java::lang::String> content);
	ref<java::lang::String> getIccAuthentication(jint appType, jint authType, ref<java::lang::String> data);
	ref<link::java::array<java::lang::String>> getForbiddenPlmns();
	void setNetworkSelectionModeAutomatic();
	ref<android::telephony::NetworkScan> requestNetworkScan(ref<android::telephony::NetworkScanRequest> request, ref<java::util::concurrent::Executor> executor, ref<android::telephony::TelephonyScanManager_NetworkScanCallback> callback);
	jboolean setNetworkSelectionModeManual(ref<java::lang::String> operatorNumeric, jboolean persistSelection);
	jboolean setPreferredNetworkTypeToGlobal();
	jboolean hasCarrierPrivileges();
	jboolean setOperatorBrandOverride(ref<java::lang::String> brand);
	void sendUssdRequest(ref<java::lang::String> ussdRequest, ref<android::telephony::TelephonyManager_UssdResponseCallback> callback, ref<android::os::Handler> handler);
	jboolean isConcurrentVoiceAndDataSupported();
	void setDataEnabled(jboolean enable);
	jboolean isDataEnabled();
	jboolean canChangeDtmfToneLength();
	jboolean isWorldPhone();
	jboolean isTtyModeSupported();
	jboolean isHearingAidCompatibilitySupported();
	ref<android::telephony::ServiceState> getServiceState();
	ref<android::net::Uri> getVoicemailRingtoneUri(ref<android::telecom::PhoneAccountHandle> accountHandle);
	void setVoicemailRingtoneUri(ref<android::telecom::PhoneAccountHandle> phoneAccountHandle, ref<android::net::Uri> uri);
	jboolean isVoicemailVibrationEnabled(ref<android::telecom::PhoneAccountHandle> accountHandle);
	void setVoicemailVibrationEnabled(ref<android::telecom::PhoneAccountHandle> phoneAccountHandle, jboolean enabled);
	jint getSimCarrierId();
	ref<java::lang::CharSequence> getSimCarrierIdName();
	ref<android::telephony::SignalStrength> getSignalStrength();

protected:

	TelephonyManager(handle_type h) : base_(h) {}

};

} // namespace android::telephony
} // namespace scapix::java_api

#include <scapix/java_api/android/app/PendingIntent.h>
#include <scapix/java_api/android/net/Uri.h>
#include <scapix/java_api/android/os/Handler.h>
#include <scapix/java_api/android/os/PersistableBundle.h>
#include <scapix/java_api/android/telecom/PhoneAccountHandle.h>
#include <scapix/java_api/android/telephony/CellLocation.h>
#include <scapix/java_api/android/telephony/IccOpenLogicalChannelResponse.h>
#include <scapix/java_api/android/telephony/NetworkScan.h>
#include <scapix/java_api/android/telephony/NetworkScanRequest.h>
#include <scapix/java_api/android/telephony/PhoneStateListener.h>
#include <scapix/java_api/android/telephony/ServiceState.h>
#include <scapix/java_api/android/telephony/SignalStrength.h>
#include <scapix/java_api/android/telephony/TelephonyManager_UssdResponseCallback.h>
#include <scapix/java_api/android/telephony/TelephonyScanManager_NetworkScanCallback.h>
#include <scapix/java_api/android/telephony/VisualVoicemailSmsFilterSettings.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/List.h>
#include <scapix/java_api/java/util/concurrent/Executor.h>

namespace scapix::java_api {
namespace android::telephony {

inline ref<java::lang::String> TelephonyManager::ACTION_CONFIGURE_VOICEMAIL_() { return get_static_field<SCAPIX_META_STRING("ACTION_CONFIGURE_VOICEMAIL"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TelephonyManager::ACTION_PHONE_STATE_CHANGED_() { return get_static_field<SCAPIX_META_STRING("ACTION_PHONE_STATE_CHANGED"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TelephonyManager::ACTION_RESPOND_VIA_MESSAGE_() { return get_static_field<SCAPIX_META_STRING("ACTION_RESPOND_VIA_MESSAGE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TelephonyManager::ACTION_SHOW_VOICEMAIL_NOTIFICATION_() { return get_static_field<SCAPIX_META_STRING("ACTION_SHOW_VOICEMAIL_NOTIFICATION"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TelephonyManager::ACTION_SUBSCRIPTION_CARRIER_IDENTITY_CHANGED_() { return get_static_field<SCAPIX_META_STRING("ACTION_SUBSCRIPTION_CARRIER_IDENTITY_CHANGED"), ref<java::lang::String>>(); }
inline jint TelephonyManager::APPTYPE_CSIM_() { return get_static_field<SCAPIX_META_STRING("APPTYPE_CSIM"), jint>(); }
inline jint TelephonyManager::APPTYPE_ISIM_() { return get_static_field<SCAPIX_META_STRING("APPTYPE_ISIM"), jint>(); }
inline jint TelephonyManager::APPTYPE_RUIM_() { return get_static_field<SCAPIX_META_STRING("APPTYPE_RUIM"), jint>(); }
inline jint TelephonyManager::APPTYPE_SIM_() { return get_static_field<SCAPIX_META_STRING("APPTYPE_SIM"), jint>(); }
inline jint TelephonyManager::APPTYPE_USIM_() { return get_static_field<SCAPIX_META_STRING("APPTYPE_USIM"), jint>(); }
inline jint TelephonyManager::AUTHTYPE_EAP_AKA_() { return get_static_field<SCAPIX_META_STRING("AUTHTYPE_EAP_AKA"), jint>(); }
inline jint TelephonyManager::AUTHTYPE_EAP_SIM_() { return get_static_field<SCAPIX_META_STRING("AUTHTYPE_EAP_SIM"), jint>(); }
inline jint TelephonyManager::CALL_STATE_IDLE_() { return get_static_field<SCAPIX_META_STRING("CALL_STATE_IDLE"), jint>(); }
inline jint TelephonyManager::CALL_STATE_OFFHOOK_() { return get_static_field<SCAPIX_META_STRING("CALL_STATE_OFFHOOK"), jint>(); }
inline jint TelephonyManager::CALL_STATE_RINGING_() { return get_static_field<SCAPIX_META_STRING("CALL_STATE_RINGING"), jint>(); }
inline jint TelephonyManager::CDMA_ROAMING_MODE_AFFILIATED_() { return get_static_field<SCAPIX_META_STRING("CDMA_ROAMING_MODE_AFFILIATED"), jint>(); }
inline jint TelephonyManager::CDMA_ROAMING_MODE_ANY_() { return get_static_field<SCAPIX_META_STRING("CDMA_ROAMING_MODE_ANY"), jint>(); }
inline jint TelephonyManager::CDMA_ROAMING_MODE_HOME_() { return get_static_field<SCAPIX_META_STRING("CDMA_ROAMING_MODE_HOME"), jint>(); }
inline jint TelephonyManager::CDMA_ROAMING_MODE_RADIO_DEFAULT_() { return get_static_field<SCAPIX_META_STRING("CDMA_ROAMING_MODE_RADIO_DEFAULT"), jint>(); }
inline jint TelephonyManager::DATA_ACTIVITY_DORMANT_() { return get_static_field<SCAPIX_META_STRING("DATA_ACTIVITY_DORMANT"), jint>(); }
inline jint TelephonyManager::DATA_ACTIVITY_IN_() { return get_static_field<SCAPIX_META_STRING("DATA_ACTIVITY_IN"), jint>(); }
inline jint TelephonyManager::DATA_ACTIVITY_INOUT_() { return get_static_field<SCAPIX_META_STRING("DATA_ACTIVITY_INOUT"), jint>(); }
inline jint TelephonyManager::DATA_ACTIVITY_NONE_() { return get_static_field<SCAPIX_META_STRING("DATA_ACTIVITY_NONE"), jint>(); }
inline jint TelephonyManager::DATA_ACTIVITY_OUT_() { return get_static_field<SCAPIX_META_STRING("DATA_ACTIVITY_OUT"), jint>(); }
inline jint TelephonyManager::DATA_CONNECTED_() { return get_static_field<SCAPIX_META_STRING("DATA_CONNECTED"), jint>(); }
inline jint TelephonyManager::DATA_CONNECTING_() { return get_static_field<SCAPIX_META_STRING("DATA_CONNECTING"), jint>(); }
inline jint TelephonyManager::DATA_DISCONNECTED_() { return get_static_field<SCAPIX_META_STRING("DATA_DISCONNECTED"), jint>(); }
inline jint TelephonyManager::DATA_SUSPENDED_() { return get_static_field<SCAPIX_META_STRING("DATA_SUSPENDED"), jint>(); }
inline ref<java::lang::String> TelephonyManager::EXTRA_CALL_VOICEMAIL_INTENT_() { return get_static_field<SCAPIX_META_STRING("EXTRA_CALL_VOICEMAIL_INTENT"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TelephonyManager::EXTRA_CARRIER_ID_() { return get_static_field<SCAPIX_META_STRING("EXTRA_CARRIER_ID"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TelephonyManager::EXTRA_CARRIER_NAME_() { return get_static_field<SCAPIX_META_STRING("EXTRA_CARRIER_NAME"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TelephonyManager::EXTRA_HIDE_PUBLIC_SETTINGS_() { return get_static_field<SCAPIX_META_STRING("EXTRA_HIDE_PUBLIC_SETTINGS"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TelephonyManager::EXTRA_INCOMING_NUMBER_() { return get_static_field<SCAPIX_META_STRING("EXTRA_INCOMING_NUMBER"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TelephonyManager::EXTRA_IS_REFRESH_() { return get_static_field<SCAPIX_META_STRING("EXTRA_IS_REFRESH"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TelephonyManager::EXTRA_LAUNCH_VOICEMAIL_SETTINGS_INTENT_() { return get_static_field<SCAPIX_META_STRING("EXTRA_LAUNCH_VOICEMAIL_SETTINGS_INTENT"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TelephonyManager::EXTRA_NOTIFICATION_COUNT_() { return get_static_field<SCAPIX_META_STRING("EXTRA_NOTIFICATION_COUNT"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TelephonyManager::EXTRA_PHONE_ACCOUNT_HANDLE_() { return get_static_field<SCAPIX_META_STRING("EXTRA_PHONE_ACCOUNT_HANDLE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TelephonyManager::EXTRA_STATE_() { return get_static_field<SCAPIX_META_STRING("EXTRA_STATE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TelephonyManager::EXTRA_STATE_IDLE_() { return get_static_field<SCAPIX_META_STRING("EXTRA_STATE_IDLE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TelephonyManager::EXTRA_STATE_OFFHOOK_() { return get_static_field<SCAPIX_META_STRING("EXTRA_STATE_OFFHOOK"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TelephonyManager::EXTRA_STATE_RINGING_() { return get_static_field<SCAPIX_META_STRING("EXTRA_STATE_RINGING"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TelephonyManager::EXTRA_SUBSCRIPTION_ID_() { return get_static_field<SCAPIX_META_STRING("EXTRA_SUBSCRIPTION_ID"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TelephonyManager::EXTRA_VOICEMAIL_NUMBER_() { return get_static_field<SCAPIX_META_STRING("EXTRA_VOICEMAIL_NUMBER"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TelephonyManager::METADATA_HIDE_VOICEMAIL_SETTINGS_MENU_() { return get_static_field<SCAPIX_META_STRING("METADATA_HIDE_VOICEMAIL_SETTINGS_MENU"), ref<java::lang::String>>(); }
inline jint TelephonyManager::NETWORK_TYPE_1xRTT() { return get_static_field<SCAPIX_META_STRING("NETWORK_TYPE_1xRTT"), jint>(); }
inline jint TelephonyManager::NETWORK_TYPE_CDMA_() { return get_static_field<SCAPIX_META_STRING("NETWORK_TYPE_CDMA"), jint>(); }
inline jint TelephonyManager::NETWORK_TYPE_EDGE_() { return get_static_field<SCAPIX_META_STRING("NETWORK_TYPE_EDGE"), jint>(); }
inline jint TelephonyManager::NETWORK_TYPE_EHRPD_() { return get_static_field<SCAPIX_META_STRING("NETWORK_TYPE_EHRPD"), jint>(); }
inline jint TelephonyManager::NETWORK_TYPE_EVDO_0_() { return get_static_field<SCAPIX_META_STRING("NETWORK_TYPE_EVDO_0"), jint>(); }
inline jint TelephonyManager::NETWORK_TYPE_EVDO_A_() { return get_static_field<SCAPIX_META_STRING("NETWORK_TYPE_EVDO_A"), jint>(); }
inline jint TelephonyManager::NETWORK_TYPE_EVDO_B_() { return get_static_field<SCAPIX_META_STRING("NETWORK_TYPE_EVDO_B"), jint>(); }
inline jint TelephonyManager::NETWORK_TYPE_GPRS_() { return get_static_field<SCAPIX_META_STRING("NETWORK_TYPE_GPRS"), jint>(); }
inline jint TelephonyManager::NETWORK_TYPE_GSM_() { return get_static_field<SCAPIX_META_STRING("NETWORK_TYPE_GSM"), jint>(); }
inline jint TelephonyManager::NETWORK_TYPE_HSDPA_() { return get_static_field<SCAPIX_META_STRING("NETWORK_TYPE_HSDPA"), jint>(); }
inline jint TelephonyManager::NETWORK_TYPE_HSPA_() { return get_static_field<SCAPIX_META_STRING("NETWORK_TYPE_HSPA"), jint>(); }
inline jint TelephonyManager::NETWORK_TYPE_HSPAP_() { return get_static_field<SCAPIX_META_STRING("NETWORK_TYPE_HSPAP"), jint>(); }
inline jint TelephonyManager::NETWORK_TYPE_HSUPA_() { return get_static_field<SCAPIX_META_STRING("NETWORK_TYPE_HSUPA"), jint>(); }
inline jint TelephonyManager::NETWORK_TYPE_IDEN_() { return get_static_field<SCAPIX_META_STRING("NETWORK_TYPE_IDEN"), jint>(); }
inline jint TelephonyManager::NETWORK_TYPE_IWLAN_() { return get_static_field<SCAPIX_META_STRING("NETWORK_TYPE_IWLAN"), jint>(); }
inline jint TelephonyManager::NETWORK_TYPE_LTE_() { return get_static_field<SCAPIX_META_STRING("NETWORK_TYPE_LTE"), jint>(); }
inline jint TelephonyManager::NETWORK_TYPE_TD_SCDMA_() { return get_static_field<SCAPIX_META_STRING("NETWORK_TYPE_TD_SCDMA"), jint>(); }
inline jint TelephonyManager::NETWORK_TYPE_UMTS_() { return get_static_field<SCAPIX_META_STRING("NETWORK_TYPE_UMTS"), jint>(); }
inline jint TelephonyManager::NETWORK_TYPE_UNKNOWN_() { return get_static_field<SCAPIX_META_STRING("NETWORK_TYPE_UNKNOWN"), jint>(); }
inline jint TelephonyManager::PHONE_TYPE_CDMA_() { return get_static_field<SCAPIX_META_STRING("PHONE_TYPE_CDMA"), jint>(); }
inline jint TelephonyManager::PHONE_TYPE_GSM_() { return get_static_field<SCAPIX_META_STRING("PHONE_TYPE_GSM"), jint>(); }
inline jint TelephonyManager::PHONE_TYPE_NONE_() { return get_static_field<SCAPIX_META_STRING("PHONE_TYPE_NONE"), jint>(); }
inline jint TelephonyManager::PHONE_TYPE_SIP_() { return get_static_field<SCAPIX_META_STRING("PHONE_TYPE_SIP"), jint>(); }
inline jint TelephonyManager::SIM_STATE_ABSENT_() { return get_static_field<SCAPIX_META_STRING("SIM_STATE_ABSENT"), jint>(); }
inline jint TelephonyManager::SIM_STATE_CARD_IO_ERROR_() { return get_static_field<SCAPIX_META_STRING("SIM_STATE_CARD_IO_ERROR"), jint>(); }
inline jint TelephonyManager::SIM_STATE_CARD_RESTRICTED_() { return get_static_field<SCAPIX_META_STRING("SIM_STATE_CARD_RESTRICTED"), jint>(); }
inline jint TelephonyManager::SIM_STATE_NETWORK_LOCKED_() { return get_static_field<SCAPIX_META_STRING("SIM_STATE_NETWORK_LOCKED"), jint>(); }
inline jint TelephonyManager::SIM_STATE_NOT_READY_() { return get_static_field<SCAPIX_META_STRING("SIM_STATE_NOT_READY"), jint>(); }
inline jint TelephonyManager::SIM_STATE_PERM_DISABLED_() { return get_static_field<SCAPIX_META_STRING("SIM_STATE_PERM_DISABLED"), jint>(); }
inline jint TelephonyManager::SIM_STATE_PIN_REQUIRED_() { return get_static_field<SCAPIX_META_STRING("SIM_STATE_PIN_REQUIRED"), jint>(); }
inline jint TelephonyManager::SIM_STATE_PUK_REQUIRED_() { return get_static_field<SCAPIX_META_STRING("SIM_STATE_PUK_REQUIRED"), jint>(); }
inline jint TelephonyManager::SIM_STATE_READY_() { return get_static_field<SCAPIX_META_STRING("SIM_STATE_READY"), jint>(); }
inline jint TelephonyManager::SIM_STATE_UNKNOWN_() { return get_static_field<SCAPIX_META_STRING("SIM_STATE_UNKNOWN"), jint>(); }
inline jint TelephonyManager::UNKNOWN_CARRIER_ID_() { return get_static_field<SCAPIX_META_STRING("UNKNOWN_CARRIER_ID"), jint>(); }
inline jint TelephonyManager::USSD_ERROR_SERVICE_UNAVAIL_() { return get_static_field<SCAPIX_META_STRING("USSD_ERROR_SERVICE_UNAVAIL"), jint>(); }
inline jint TelephonyManager::USSD_RETURN_FAILURE_() { return get_static_field<SCAPIX_META_STRING("USSD_RETURN_FAILURE"), jint>(); }
inline ref<java::lang::String> TelephonyManager::VVM_TYPE_CVVM_() { return get_static_field<SCAPIX_META_STRING("VVM_TYPE_CVVM"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TelephonyManager::VVM_TYPE_OMTP_() { return get_static_field<SCAPIX_META_STRING("VVM_TYPE_OMTP"), ref<java::lang::String>>(); }
inline jint TelephonyManager::getPhoneCount() { return call_method<SCAPIX_META_STRING("getPhoneCount"), jint>(); }
inline ref<android::telephony::TelephonyManager> TelephonyManager::createForSubscriptionId(jint subId) { return call_method<SCAPIX_META_STRING("createForSubscriptionId"), ref<android::telephony::TelephonyManager>>(subId); }
inline ref<android::telephony::TelephonyManager> TelephonyManager::createForPhoneAccountHandle(ref<android::telecom::PhoneAccountHandle> phoneAccountHandle) { return call_method<SCAPIX_META_STRING("createForPhoneAccountHandle"), ref<android::telephony::TelephonyManager>>(phoneAccountHandle); }
inline ref<java::lang::String> TelephonyManager::getDeviceSoftwareVersion() { return call_method<SCAPIX_META_STRING("getDeviceSoftwareVersion"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TelephonyManager::getDeviceId() { return call_method<SCAPIX_META_STRING("getDeviceId"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TelephonyManager::getDeviceId(jint slotIndex) { return call_method<SCAPIX_META_STRING("getDeviceId"), ref<java::lang::String>>(slotIndex); }
inline ref<java::lang::String> TelephonyManager::getImei() { return call_method<SCAPIX_META_STRING("getImei"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TelephonyManager::getImei(jint slotIndex) { return call_method<SCAPIX_META_STRING("getImei"), ref<java::lang::String>>(slotIndex); }
inline ref<java::lang::String> TelephonyManager::getMeid() { return call_method<SCAPIX_META_STRING("getMeid"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TelephonyManager::getMeid(jint slotIndex) { return call_method<SCAPIX_META_STRING("getMeid"), ref<java::lang::String>>(slotIndex); }
inline ref<java::lang::String> TelephonyManager::getNai() { return call_method<SCAPIX_META_STRING("getNai"), ref<java::lang::String>>(); }
inline ref<android::telephony::CellLocation> TelephonyManager::getCellLocation() { return call_method<SCAPIX_META_STRING("getCellLocation"), ref<android::telephony::CellLocation>>(); }
inline ref<java::util::List> TelephonyManager::getNeighboringCellInfo() { return call_method<SCAPIX_META_STRING("getNeighboringCellInfo"), ref<java::util::List>>(); }
inline jint TelephonyManager::getPhoneType() { return call_method<SCAPIX_META_STRING("getPhoneType"), jint>(); }
inline ref<java::lang::String> TelephonyManager::getNetworkOperatorName() { return call_method<SCAPIX_META_STRING("getNetworkOperatorName"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TelephonyManager::getNetworkOperator() { return call_method<SCAPIX_META_STRING("getNetworkOperator"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TelephonyManager::getNetworkSpecifier() { return call_method<SCAPIX_META_STRING("getNetworkSpecifier"), ref<java::lang::String>>(); }
inline ref<android::os::PersistableBundle> TelephonyManager::getCarrierConfig() { return call_method<SCAPIX_META_STRING("getCarrierConfig"), ref<android::os::PersistableBundle>>(); }
inline jboolean TelephonyManager::isNetworkRoaming() { return call_method<SCAPIX_META_STRING("isNetworkRoaming"), jboolean>(); }
inline ref<java::lang::String> TelephonyManager::getNetworkCountryIso() { return call_method<SCAPIX_META_STRING("getNetworkCountryIso"), ref<java::lang::String>>(); }
inline jint TelephonyManager::getNetworkType() { return call_method<SCAPIX_META_STRING("getNetworkType"), jint>(); }
inline jint TelephonyManager::getDataNetworkType() { return call_method<SCAPIX_META_STRING("getDataNetworkType"), jint>(); }
inline jint TelephonyManager::getVoiceNetworkType() { return call_method<SCAPIX_META_STRING("getVoiceNetworkType"), jint>(); }
inline jboolean TelephonyManager::hasIccCard() { return call_method<SCAPIX_META_STRING("hasIccCard"), jboolean>(); }
inline jint TelephonyManager::getSimState() { return call_method<SCAPIX_META_STRING("getSimState"), jint>(); }
inline jint TelephonyManager::getSimState(jint slotIndex) { return call_method<SCAPIX_META_STRING("getSimState"), jint>(slotIndex); }
inline ref<java::lang::String> TelephonyManager::getSimOperator() { return call_method<SCAPIX_META_STRING("getSimOperator"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TelephonyManager::getSimOperatorName() { return call_method<SCAPIX_META_STRING("getSimOperatorName"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TelephonyManager::getSimCountryIso() { return call_method<SCAPIX_META_STRING("getSimCountryIso"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TelephonyManager::getSimSerialNumber() { return call_method<SCAPIX_META_STRING("getSimSerialNumber"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TelephonyManager::getSubscriberId() { return call_method<SCAPIX_META_STRING("getSubscriberId"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TelephonyManager::getGroupIdLevel1() { return call_method<SCAPIX_META_STRING("getGroupIdLevel1"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TelephonyManager::getLine1Number() { return call_method<SCAPIX_META_STRING("getLine1Number"), ref<java::lang::String>>(); }
inline jboolean TelephonyManager::setLine1NumberForDisplay(ref<java::lang::String> alphaTag, ref<java::lang::String> number) { return call_method<SCAPIX_META_STRING("setLine1NumberForDisplay"), jboolean>(alphaTag, number); }
inline ref<java::lang::String> TelephonyManager::getVoiceMailNumber() { return call_method<SCAPIX_META_STRING("getVoiceMailNumber"), ref<java::lang::String>>(); }
inline jboolean TelephonyManager::setVoiceMailNumber(ref<java::lang::String> alphaTag, ref<java::lang::String> number) { return call_method<SCAPIX_META_STRING("setVoiceMailNumber"), jboolean>(alphaTag, number); }
inline ref<java::lang::String> TelephonyManager::getVisualVoicemailPackageName() { return call_method<SCAPIX_META_STRING("getVisualVoicemailPackageName"), ref<java::lang::String>>(); }
inline void TelephonyManager::setVisualVoicemailSmsFilterSettings(ref<android::telephony::VisualVoicemailSmsFilterSettings> settings) { return call_method<SCAPIX_META_STRING("setVisualVoicemailSmsFilterSettings"), void>(settings); }
inline void TelephonyManager::sendVisualVoicemailSms(ref<java::lang::String> number, jint port, ref<java::lang::String> text, ref<android::app::PendingIntent> sentIntent) { return call_method<SCAPIX_META_STRING("sendVisualVoicemailSms"), void>(number, port, text, sentIntent); }
inline ref<java::lang::String> TelephonyManager::getVoiceMailAlphaTag() { return call_method<SCAPIX_META_STRING("getVoiceMailAlphaTag"), ref<java::lang::String>>(); }
inline void TelephonyManager::sendDialerSpecialCode(ref<java::lang::String> inputCode) { return call_method<SCAPIX_META_STRING("sendDialerSpecialCode"), void>(inputCode); }
inline jint TelephonyManager::getCallState() { return call_method<SCAPIX_META_STRING("getCallState"), jint>(); }
inline jint TelephonyManager::getDataActivity() { return call_method<SCAPIX_META_STRING("getDataActivity"), jint>(); }
inline jint TelephonyManager::getDataState() { return call_method<SCAPIX_META_STRING("getDataState"), jint>(); }
inline void TelephonyManager::listen(ref<android::telephony::PhoneStateListener> listener, jint events) { return call_method<SCAPIX_META_STRING("listen"), void>(listener, events); }
inline jboolean TelephonyManager::isVoiceCapable() { return call_method<SCAPIX_META_STRING("isVoiceCapable"), jboolean>(); }
inline jboolean TelephonyManager::isSmsCapable() { return call_method<SCAPIX_META_STRING("isSmsCapable"), jboolean>(); }
inline ref<java::util::List> TelephonyManager::getAllCellInfo() { return call_method<SCAPIX_META_STRING("getAllCellInfo"), ref<java::util::List>>(); }
inline ref<java::lang::String> TelephonyManager::getMmsUserAgent() { return call_method<SCAPIX_META_STRING("getMmsUserAgent"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TelephonyManager::getMmsUAProfUrl() { return call_method<SCAPIX_META_STRING("getMmsUAProfUrl"), ref<java::lang::String>>(); }
inline ref<android::telephony::IccOpenLogicalChannelResponse> TelephonyManager::iccOpenLogicalChannel(ref<java::lang::String> AID_) { return call_method<SCAPIX_META_STRING("iccOpenLogicalChannel"), ref<android::telephony::IccOpenLogicalChannelResponse>>(AID_); }
inline ref<android::telephony::IccOpenLogicalChannelResponse> TelephonyManager::iccOpenLogicalChannel(ref<java::lang::String> AID_, jint p2) { return call_method<SCAPIX_META_STRING("iccOpenLogicalChannel"), ref<android::telephony::IccOpenLogicalChannelResponse>>(AID_, p2); }
inline jboolean TelephonyManager::iccCloseLogicalChannel(jint channel) { return call_method<SCAPIX_META_STRING("iccCloseLogicalChannel"), jboolean>(channel); }
inline ref<java::lang::String> TelephonyManager::iccTransmitApduLogicalChannel(jint channel, jint cla, jint instruction, jint p1, jint p2, jint p3, ref<java::lang::String> data) { return call_method<SCAPIX_META_STRING("iccTransmitApduLogicalChannel"), ref<java::lang::String>>(channel, cla, instruction, p1, p2, p3, data); }
inline ref<java::lang::String> TelephonyManager::iccTransmitApduBasicChannel(jint cla, jint instruction, jint p1, jint p2, jint p3, ref<java::lang::String> data) { return call_method<SCAPIX_META_STRING("iccTransmitApduBasicChannel"), ref<java::lang::String>>(cla, instruction, p1, p2, p3, data); }
inline ref<link::java::array<jbyte>> TelephonyManager::iccExchangeSimIO(jint fileID, jint command, jint p1, jint p2, jint p3, ref<java::lang::String> filePath) { return call_method<SCAPIX_META_STRING("iccExchangeSimIO"), ref<link::java::array<jbyte>>>(fileID, command, p1, p2, p3, filePath); }
inline ref<java::lang::String> TelephonyManager::sendEnvelopeWithStatus(ref<java::lang::String> content) { return call_method<SCAPIX_META_STRING("sendEnvelopeWithStatus"), ref<java::lang::String>>(content); }
inline ref<java::lang::String> TelephonyManager::getIccAuthentication(jint appType, jint authType, ref<java::lang::String> data) { return call_method<SCAPIX_META_STRING("getIccAuthentication"), ref<java::lang::String>>(appType, authType, data); }
inline ref<link::java::array<java::lang::String>> TelephonyManager::getForbiddenPlmns() { return call_method<SCAPIX_META_STRING("getForbiddenPlmns"), ref<link::java::array<java::lang::String>>>(); }
inline void TelephonyManager::setNetworkSelectionModeAutomatic() { return call_method<SCAPIX_META_STRING("setNetworkSelectionModeAutomatic"), void>(); }
inline ref<android::telephony::NetworkScan> TelephonyManager::requestNetworkScan(ref<android::telephony::NetworkScanRequest> request, ref<java::util::concurrent::Executor> executor, ref<android::telephony::TelephonyScanManager_NetworkScanCallback> callback) { return call_method<SCAPIX_META_STRING("requestNetworkScan"), ref<android::telephony::NetworkScan>>(request, executor, callback); }
inline jboolean TelephonyManager::setNetworkSelectionModeManual(ref<java::lang::String> operatorNumeric, jboolean persistSelection) { return call_method<SCAPIX_META_STRING("setNetworkSelectionModeManual"), jboolean>(operatorNumeric, persistSelection); }
inline jboolean TelephonyManager::setPreferredNetworkTypeToGlobal() { return call_method<SCAPIX_META_STRING("setPreferredNetworkTypeToGlobal"), jboolean>(); }
inline jboolean TelephonyManager::hasCarrierPrivileges() { return call_method<SCAPIX_META_STRING("hasCarrierPrivileges"), jboolean>(); }
inline jboolean TelephonyManager::setOperatorBrandOverride(ref<java::lang::String> brand) { return call_method<SCAPIX_META_STRING("setOperatorBrandOverride"), jboolean>(brand); }
inline void TelephonyManager::sendUssdRequest(ref<java::lang::String> ussdRequest, ref<android::telephony::TelephonyManager_UssdResponseCallback> callback, ref<android::os::Handler> handler) { return call_method<SCAPIX_META_STRING("sendUssdRequest"), void>(ussdRequest, callback, handler); }
inline jboolean TelephonyManager::isConcurrentVoiceAndDataSupported() { return call_method<SCAPIX_META_STRING("isConcurrentVoiceAndDataSupported"), jboolean>(); }
inline void TelephonyManager::setDataEnabled(jboolean enable) { return call_method<SCAPIX_META_STRING("setDataEnabled"), void>(enable); }
inline jboolean TelephonyManager::isDataEnabled() { return call_method<SCAPIX_META_STRING("isDataEnabled"), jboolean>(); }
inline jboolean TelephonyManager::canChangeDtmfToneLength() { return call_method<SCAPIX_META_STRING("canChangeDtmfToneLength"), jboolean>(); }
inline jboolean TelephonyManager::isWorldPhone() { return call_method<SCAPIX_META_STRING("isWorldPhone"), jboolean>(); }
inline jboolean TelephonyManager::isTtyModeSupported() { return call_method<SCAPIX_META_STRING("isTtyModeSupported"), jboolean>(); }
inline jboolean TelephonyManager::isHearingAidCompatibilitySupported() { return call_method<SCAPIX_META_STRING("isHearingAidCompatibilitySupported"), jboolean>(); }
inline ref<android::telephony::ServiceState> TelephonyManager::getServiceState() { return call_method<SCAPIX_META_STRING("getServiceState"), ref<android::telephony::ServiceState>>(); }
inline ref<android::net::Uri> TelephonyManager::getVoicemailRingtoneUri(ref<android::telecom::PhoneAccountHandle> accountHandle) { return call_method<SCAPIX_META_STRING("getVoicemailRingtoneUri"), ref<android::net::Uri>>(accountHandle); }
inline void TelephonyManager::setVoicemailRingtoneUri(ref<android::telecom::PhoneAccountHandle> phoneAccountHandle, ref<android::net::Uri> uri) { return call_method<SCAPIX_META_STRING("setVoicemailRingtoneUri"), void>(phoneAccountHandle, uri); }
inline jboolean TelephonyManager::isVoicemailVibrationEnabled(ref<android::telecom::PhoneAccountHandle> accountHandle) { return call_method<SCAPIX_META_STRING("isVoicemailVibrationEnabled"), jboolean>(accountHandle); }
inline void TelephonyManager::setVoicemailVibrationEnabled(ref<android::telecom::PhoneAccountHandle> phoneAccountHandle, jboolean enabled) { return call_method<SCAPIX_META_STRING("setVoicemailVibrationEnabled"), void>(phoneAccountHandle, enabled); }
inline jint TelephonyManager::getSimCarrierId() { return call_method<SCAPIX_META_STRING("getSimCarrierId"), jint>(); }
inline ref<java::lang::CharSequence> TelephonyManager::getSimCarrierIdName() { return call_method<SCAPIX_META_STRING("getSimCarrierIdName"), ref<java::lang::CharSequence>>(); }
inline ref<android::telephony::SignalStrength> TelephonyManager::getSignalStrength() { return call_method<SCAPIX_META_STRING("getSignalStrength"), ref<android::telephony::SignalStrength>>(); }

} // namespace android::telephony
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_TELEPHONY_TELEPHONYMANAGER_H
