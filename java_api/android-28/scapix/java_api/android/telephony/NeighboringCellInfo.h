// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_ANDROID_TELEPHONY_NEIGHBORINGCELLINFO_H
#define SCAPIX_ANDROID_TELEPHONY_NEIGHBORINGCELLINFO_H

namespace scapix::java_api {

namespace android::os { class Parcel; }
namespace android::os { class Parcelable_Creator; }
namespace java::lang { class String; }

namespace android::telephony {

class NeighboringCellInfo : public object_base<SCAPIX_META_STRING("android/telephony/NeighboringCellInfo"),
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static ref<android::os::Parcelable_Creator> CREATOR_();
	static jint UNKNOWN_CID_();
	static jint UNKNOWN_RSSI_();

	static ref<NeighboringCellInfo> new_object();
	static ref<NeighboringCellInfo> new_object(jint rssi, jint cid);
	static ref<NeighboringCellInfo> new_object(jint rssi, ref<java::lang::String> location, jint radioType);
	static ref<NeighboringCellInfo> new_object(ref<android::os::Parcel> in);
	jint getRssi();
	jint getLac();
	jint getCid();
	jint getPsc();
	jint getNetworkType();
	void setCid(jint cid);
	void setRssi(jint rssi);
	ref<java::lang::String> toString();
	jint describeContents();
	void writeToParcel(ref<android::os::Parcel> dest, jint flags);

protected:

	NeighboringCellInfo(handle_type h) : base_(h) {}

};

} // namespace android::telephony
} // namespace scapix::java_api

#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::telephony {

inline ref<android::os::Parcelable_Creator> NeighboringCellInfo::CREATOR_() { return get_static_field<SCAPIX_META_STRING("CREATOR"), ref<android::os::Parcelable_Creator>>(); }
inline jint NeighboringCellInfo::UNKNOWN_CID_() { return get_static_field<SCAPIX_META_STRING("UNKNOWN_CID"), jint>(); }
inline jint NeighboringCellInfo::UNKNOWN_RSSI_() { return get_static_field<SCAPIX_META_STRING("UNKNOWN_RSSI"), jint>(); }
inline ref<NeighboringCellInfo> NeighboringCellInfo::new_object() { return base_::new_object(); }
inline ref<NeighboringCellInfo> NeighboringCellInfo::new_object(jint rssi, jint cid) { return base_::new_object(rssi, cid); }
inline ref<NeighboringCellInfo> NeighboringCellInfo::new_object(jint rssi, ref<java::lang::String> location, jint radioType) { return base_::new_object(rssi, location, radioType); }
inline ref<NeighboringCellInfo> NeighboringCellInfo::new_object(ref<android::os::Parcel> in) { return base_::new_object(in); }
inline jint NeighboringCellInfo::getRssi() { return call_method<SCAPIX_META_STRING("getRssi"), jint>(); }
inline jint NeighboringCellInfo::getLac() { return call_method<SCAPIX_META_STRING("getLac"), jint>(); }
inline jint NeighboringCellInfo::getCid() { return call_method<SCAPIX_META_STRING("getCid"), jint>(); }
inline jint NeighboringCellInfo::getPsc() { return call_method<SCAPIX_META_STRING("getPsc"), jint>(); }
inline jint NeighboringCellInfo::getNetworkType() { return call_method<SCAPIX_META_STRING("getNetworkType"), jint>(); }
inline void NeighboringCellInfo::setCid(jint cid) { return call_method<SCAPIX_META_STRING("setCid"), void>(cid); }
inline void NeighboringCellInfo::setRssi(jint rssi) { return call_method<SCAPIX_META_STRING("setRssi"), void>(rssi); }
inline ref<java::lang::String> NeighboringCellInfo::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }
inline jint NeighboringCellInfo::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }
inline void NeighboringCellInfo::writeToParcel(ref<android::os::Parcel> dest, jint flags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(dest, flags); }

} // namespace android::telephony
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_TELEPHONY_NEIGHBORINGCELLINFO_H
