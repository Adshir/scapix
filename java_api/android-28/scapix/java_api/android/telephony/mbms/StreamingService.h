// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/AutoCloseable.h>

#ifndef SCAPIX_ANDROID_TELEPHONY_MBMS_STREAMINGSERVICE_H
#define SCAPIX_ANDROID_TELEPHONY_MBMS_STREAMINGSERVICE_H

namespace scapix::java_api {

namespace android::net { class Uri; }
namespace android::telephony::mbms { class StreamingServiceInfo; }

namespace android::telephony::mbms {

class StreamingService : public object_base<SCAPIX_META_STRING("android/telephony/mbms/StreamingService"),
	java::lang::Object,
	java::lang::AutoCloseable>
{
public:

	static jint BROADCAST_METHOD_();
	static jint REASON_BY_USER_REQUEST_();
	static jint REASON_END_OF_SESSION_();
	static jint REASON_FREQUENCY_CONFLICT_();
	static jint REASON_LEFT_MBMS_BROADCAST_AREA_();
	static jint REASON_NONE_();
	static jint REASON_NOT_CONNECTED_TO_HOMECARRIER_LTE_();
	static jint REASON_OUT_OF_MEMORY_();
	static jint STATE_STALLED_();
	static jint STATE_STARTED_();
	static jint STATE_STOPPED_();
	static jint UNICAST_METHOD_();

	ref<android::net::Uri> getPlaybackUri();
	ref<android::telephony::mbms::StreamingServiceInfo> getInfo();
	void close();

protected:

	StreamingService(handle_type h) : base_(h) {}

};

} // namespace android::telephony::mbms
} // namespace scapix::java_api

#include <scapix/java_api/android/net/Uri.h>
#include <scapix/java_api/android/telephony/mbms/StreamingServiceInfo.h>

namespace scapix::java_api {
namespace android::telephony::mbms {

inline jint StreamingService::BROADCAST_METHOD_() { return get_static_field<SCAPIX_META_STRING("BROADCAST_METHOD"), jint>(); }
inline jint StreamingService::REASON_BY_USER_REQUEST_() { return get_static_field<SCAPIX_META_STRING("REASON_BY_USER_REQUEST"), jint>(); }
inline jint StreamingService::REASON_END_OF_SESSION_() { return get_static_field<SCAPIX_META_STRING("REASON_END_OF_SESSION"), jint>(); }
inline jint StreamingService::REASON_FREQUENCY_CONFLICT_() { return get_static_field<SCAPIX_META_STRING("REASON_FREQUENCY_CONFLICT"), jint>(); }
inline jint StreamingService::REASON_LEFT_MBMS_BROADCAST_AREA_() { return get_static_field<SCAPIX_META_STRING("REASON_LEFT_MBMS_BROADCAST_AREA"), jint>(); }
inline jint StreamingService::REASON_NONE_() { return get_static_field<SCAPIX_META_STRING("REASON_NONE"), jint>(); }
inline jint StreamingService::REASON_NOT_CONNECTED_TO_HOMECARRIER_LTE_() { return get_static_field<SCAPIX_META_STRING("REASON_NOT_CONNECTED_TO_HOMECARRIER_LTE"), jint>(); }
inline jint StreamingService::REASON_OUT_OF_MEMORY_() { return get_static_field<SCAPIX_META_STRING("REASON_OUT_OF_MEMORY"), jint>(); }
inline jint StreamingService::STATE_STALLED_() { return get_static_field<SCAPIX_META_STRING("STATE_STALLED"), jint>(); }
inline jint StreamingService::STATE_STARTED_() { return get_static_field<SCAPIX_META_STRING("STATE_STARTED"), jint>(); }
inline jint StreamingService::STATE_STOPPED_() { return get_static_field<SCAPIX_META_STRING("STATE_STOPPED"), jint>(); }
inline jint StreamingService::UNICAST_METHOD_() { return get_static_field<SCAPIX_META_STRING("UNICAST_METHOD"), jint>(); }
inline ref<android::net::Uri> StreamingService::getPlaybackUri() { return call_method<SCAPIX_META_STRING("getPlaybackUri"), ref<android::net::Uri>>(); }
inline ref<android::telephony::mbms::StreamingServiceInfo> StreamingService::getInfo() { return call_method<SCAPIX_META_STRING("getInfo"), ref<android::telephony::mbms::StreamingServiceInfo>>(); }
inline void StreamingService::close() { return call_method<SCAPIX_META_STRING("close"), void>(); }

} // namespace android::telephony::mbms
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_TELEPHONY_MBMS_STREAMINGSERVICE_H
