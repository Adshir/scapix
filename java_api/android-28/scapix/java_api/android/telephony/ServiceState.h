// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_ANDROID_TELEPHONY_SERVICESTATE_H
#define SCAPIX_ANDROID_TELEPHONY_SERVICESTATE_H

namespace scapix::java_api {

namespace android::os { class Parcel; }
namespace android::os { class Parcelable_Creator; }
namespace java::lang { class String; }

namespace android::telephony {

class ServiceState : public object_base<SCAPIX_META_STRING("android/telephony/ServiceState"),
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static ref<android::os::Parcelable_Creator> CREATOR_();
	static jint DUPLEX_MODE_FDD_();
	static jint DUPLEX_MODE_TDD_();
	static jint DUPLEX_MODE_UNKNOWN_();
	static jint STATE_EMERGENCY_ONLY_();
	static jint STATE_IN_SERVICE_();
	static jint STATE_OUT_OF_SERVICE_();
	static jint STATE_POWER_OFF_();
	static jint UNKNOWN_ID_();

	static ref<ServiceState> new_object();
	static ref<ServiceState> new_object(ref<android::telephony::ServiceState> s);
	static ref<ServiceState> new_object(ref<android::os::Parcel> in);
	void writeToParcel(ref<android::os::Parcel> out, jint flags);
	jint describeContents();
	jint getState();
	jint getDuplexMode();
	jint getChannelNumber();
	ref<link::java::array<jint>> getCellBandwidths();
	jboolean getRoaming();
	ref<java::lang::String> getOperatorAlphaLong();
	ref<java::lang::String> getOperatorAlphaShort();
	ref<java::lang::String> getOperatorNumeric();
	jboolean getIsManualSelection();
	jint hashCode();
	jboolean equals(ref<java::lang::Object> o);
	ref<java::lang::String> toString();
	void setStateOutOfService();
	void setStateOff();
	void setState(jint state);
	void setRoaming(jboolean roaming);
	void setOperatorName(ref<java::lang::String> longName, ref<java::lang::String> shortName, ref<java::lang::String> numeric);
	void setIsManualSelection(jboolean isManual);
	jint getCdmaNetworkId();
	jint getCdmaSystemId();

protected:

	ServiceState(handle_type h) : base_(h) {}

};

} // namespace android::telephony
} // namespace scapix::java_api

#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::telephony {

inline ref<android::os::Parcelable_Creator> ServiceState::CREATOR_() { return get_static_field<SCAPIX_META_STRING("CREATOR"), ref<android::os::Parcelable_Creator>>(); }
inline jint ServiceState::DUPLEX_MODE_FDD_() { return get_static_field<SCAPIX_META_STRING("DUPLEX_MODE_FDD"), jint>(); }
inline jint ServiceState::DUPLEX_MODE_TDD_() { return get_static_field<SCAPIX_META_STRING("DUPLEX_MODE_TDD"), jint>(); }
inline jint ServiceState::DUPLEX_MODE_UNKNOWN_() { return get_static_field<SCAPIX_META_STRING("DUPLEX_MODE_UNKNOWN"), jint>(); }
inline jint ServiceState::STATE_EMERGENCY_ONLY_() { return get_static_field<SCAPIX_META_STRING("STATE_EMERGENCY_ONLY"), jint>(); }
inline jint ServiceState::STATE_IN_SERVICE_() { return get_static_field<SCAPIX_META_STRING("STATE_IN_SERVICE"), jint>(); }
inline jint ServiceState::STATE_OUT_OF_SERVICE_() { return get_static_field<SCAPIX_META_STRING("STATE_OUT_OF_SERVICE"), jint>(); }
inline jint ServiceState::STATE_POWER_OFF_() { return get_static_field<SCAPIX_META_STRING("STATE_POWER_OFF"), jint>(); }
inline jint ServiceState::UNKNOWN_ID_() { return get_static_field<SCAPIX_META_STRING("UNKNOWN_ID"), jint>(); }
inline ref<ServiceState> ServiceState::new_object() { return base_::new_object(); }
inline ref<ServiceState> ServiceState::new_object(ref<android::telephony::ServiceState> s) { return base_::new_object(s); }
inline ref<ServiceState> ServiceState::new_object(ref<android::os::Parcel> in) { return base_::new_object(in); }
inline void ServiceState::writeToParcel(ref<android::os::Parcel> out, jint flags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(out, flags); }
inline jint ServiceState::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }
inline jint ServiceState::getState() { return call_method<SCAPIX_META_STRING("getState"), jint>(); }
inline jint ServiceState::getDuplexMode() { return call_method<SCAPIX_META_STRING("getDuplexMode"), jint>(); }
inline jint ServiceState::getChannelNumber() { return call_method<SCAPIX_META_STRING("getChannelNumber"), jint>(); }
inline ref<link::java::array<jint>> ServiceState::getCellBandwidths() { return call_method<SCAPIX_META_STRING("getCellBandwidths"), ref<link::java::array<jint>>>(); }
inline jboolean ServiceState::getRoaming() { return call_method<SCAPIX_META_STRING("getRoaming"), jboolean>(); }
inline ref<java::lang::String> ServiceState::getOperatorAlphaLong() { return call_method<SCAPIX_META_STRING("getOperatorAlphaLong"), ref<java::lang::String>>(); }
inline ref<java::lang::String> ServiceState::getOperatorAlphaShort() { return call_method<SCAPIX_META_STRING("getOperatorAlphaShort"), ref<java::lang::String>>(); }
inline ref<java::lang::String> ServiceState::getOperatorNumeric() { return call_method<SCAPIX_META_STRING("getOperatorNumeric"), ref<java::lang::String>>(); }
inline jboolean ServiceState::getIsManualSelection() { return call_method<SCAPIX_META_STRING("getIsManualSelection"), jboolean>(); }
inline jint ServiceState::hashCode() { return call_method<SCAPIX_META_STRING("hashCode"), jint>(); }
inline jboolean ServiceState::equals(ref<java::lang::Object> o) { return call_method<SCAPIX_META_STRING("equals"), jboolean>(o); }
inline ref<java::lang::String> ServiceState::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }
inline void ServiceState::setStateOutOfService() { return call_method<SCAPIX_META_STRING("setStateOutOfService"), void>(); }
inline void ServiceState::setStateOff() { return call_method<SCAPIX_META_STRING("setStateOff"), void>(); }
inline void ServiceState::setState(jint state) { return call_method<SCAPIX_META_STRING("setState"), void>(state); }
inline void ServiceState::setRoaming(jboolean roaming) { return call_method<SCAPIX_META_STRING("setRoaming"), void>(roaming); }
inline void ServiceState::setOperatorName(ref<java::lang::String> longName, ref<java::lang::String> shortName, ref<java::lang::String> numeric) { return call_method<SCAPIX_META_STRING("setOperatorName"), void>(longName, shortName, numeric); }
inline void ServiceState::setIsManualSelection(jboolean isManual) { return call_method<SCAPIX_META_STRING("setIsManualSelection"), void>(isManual); }
inline jint ServiceState::getCdmaNetworkId() { return call_method<SCAPIX_META_STRING("getCdmaNetworkId"), jint>(); }
inline jint ServiceState::getCdmaSystemId() { return call_method<SCAPIX_META_STRING("getCdmaSystemId"), jint>(); }

} // namespace android::telephony
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_TELEPHONY_SERVICESTATE_H
