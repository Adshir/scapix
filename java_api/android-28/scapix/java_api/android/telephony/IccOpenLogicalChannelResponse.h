// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_ANDROID_TELEPHONY_ICCOPENLOGICALCHANNELRESPONSE_H
#define SCAPIX_ANDROID_TELEPHONY_ICCOPENLOGICALCHANNELRESPONSE_H

namespace scapix::java_api {

namespace android::os { class Parcel; }
namespace android::os { class Parcelable_Creator; }
namespace java::lang { class String; }

namespace android::telephony {

class IccOpenLogicalChannelResponse : public object_base<SCAPIX_META_STRING("android/telephony/IccOpenLogicalChannelResponse"),
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static ref<android::os::Parcelable_Creator> CREATOR_();
	static jint INVALID_CHANNEL_();
	static jint STATUS_MISSING_RESOURCE_();
	static jint STATUS_NO_ERROR_();
	static jint STATUS_NO_SUCH_ELEMENT_();
	static jint STATUS_UNKNOWN_ERROR_();

	jint getChannel();
	jint getStatus();
	ref<link::java::array<jbyte>> getSelectResponse();
	jint describeContents();
	void writeToParcel(ref<android::os::Parcel> out, jint flags);
	ref<java::lang::String> toString();

protected:

	IccOpenLogicalChannelResponse(handle_type h) : base_(h) {}

};

} // namespace android::telephony
} // namespace scapix::java_api

#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::telephony {

inline ref<android::os::Parcelable_Creator> IccOpenLogicalChannelResponse::CREATOR_() { return get_static_field<SCAPIX_META_STRING("CREATOR"), ref<android::os::Parcelable_Creator>>(); }
inline jint IccOpenLogicalChannelResponse::INVALID_CHANNEL_() { return get_static_field<SCAPIX_META_STRING("INVALID_CHANNEL"), jint>(); }
inline jint IccOpenLogicalChannelResponse::STATUS_MISSING_RESOURCE_() { return get_static_field<SCAPIX_META_STRING("STATUS_MISSING_RESOURCE"), jint>(); }
inline jint IccOpenLogicalChannelResponse::STATUS_NO_ERROR_() { return get_static_field<SCAPIX_META_STRING("STATUS_NO_ERROR"), jint>(); }
inline jint IccOpenLogicalChannelResponse::STATUS_NO_SUCH_ELEMENT_() { return get_static_field<SCAPIX_META_STRING("STATUS_NO_SUCH_ELEMENT"), jint>(); }
inline jint IccOpenLogicalChannelResponse::STATUS_UNKNOWN_ERROR_() { return get_static_field<SCAPIX_META_STRING("STATUS_UNKNOWN_ERROR"), jint>(); }
inline jint IccOpenLogicalChannelResponse::getChannel() { return call_method<SCAPIX_META_STRING("getChannel"), jint>(); }
inline jint IccOpenLogicalChannelResponse::getStatus() { return call_method<SCAPIX_META_STRING("getStatus"), jint>(); }
inline ref<link::java::array<jbyte>> IccOpenLogicalChannelResponse::getSelectResponse() { return call_method<SCAPIX_META_STRING("getSelectResponse"), ref<link::java::array<jbyte>>>(); }
inline jint IccOpenLogicalChannelResponse::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }
inline void IccOpenLogicalChannelResponse::writeToParcel(ref<android::os::Parcel> out, jint flags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(out, flags); }
inline ref<java::lang::String> IccOpenLogicalChannelResponse::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }

} // namespace android::telephony
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_TELEPHONY_ICCOPENLOGICALCHANNELRESPONSE_H
