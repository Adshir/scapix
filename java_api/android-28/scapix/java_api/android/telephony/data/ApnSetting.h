// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_ANDROID_TELEPHONY_DATA_APNSETTING_H
#define SCAPIX_ANDROID_TELEPHONY_DATA_APNSETTING_H

namespace scapix::java_api {

namespace android::net { class Uri; }
namespace android::os { class Parcel; }
namespace android::os { class Parcelable_Creator; }
namespace java::lang { class String; }
namespace java::net { class InetAddress; }
namespace android::telephony::data { class ApnSetting_Builder; }

namespace android::telephony::data {

class ApnSetting : public object_base<SCAPIX_META_STRING("android/telephony/data/ApnSetting"),
	java::lang::Object,
	android::os::Parcelable>
{
public:

	using Builder = ApnSetting_Builder;

	static jint AUTH_TYPE_CHAP_();
	static jint AUTH_TYPE_NONE_();
	static jint AUTH_TYPE_PAP_();
	static jint AUTH_TYPE_PAP_OR_CHAP_();
	static ref<android::os::Parcelable_Creator> CREATOR_();
	static jint MVNO_TYPE_GID_();
	static jint MVNO_TYPE_ICCID_();
	static jint MVNO_TYPE_IMSI_();
	static jint MVNO_TYPE_SPN_();
	static jint PROTOCOL_IP_();
	static jint PROTOCOL_IPV4V6_();
	static jint PROTOCOL_IPV6_();
	static jint PROTOCOL_PPP_();
	static jint TYPE_CBS_();
	static jint TYPE_DEFAULT_();
	static jint TYPE_DUN_();
	static jint TYPE_EMERGENCY_();
	static jint TYPE_FOTA_();
	static jint TYPE_HIPRI_();
	static jint TYPE_IA_();
	static jint TYPE_IMS_();
	static jint TYPE_MMS_();
	static jint TYPE_SUPL_();

	ref<java::lang::String> getEntryName();
	ref<java::lang::String> getApnName();
	ref<java::net::InetAddress> getProxyAddress();
	jint getProxyPort();
	ref<android::net::Uri> getMmsc();
	ref<java::net::InetAddress> getMmsProxyAddress();
	jint getMmsProxyPort();
	ref<java::lang::String> getUser();
	ref<java::lang::String> getPassword();
	jint getAuthType();
	jint getApnTypeBitmask();
	jint getId();
	ref<java::lang::String> getOperatorNumeric();
	jint getProtocol();
	jint getRoamingProtocol();
	jboolean isEnabled();
	jint getNetworkTypeBitmask();
	jint getMvnoType();
	ref<java::lang::String> toString();
	jboolean equals(ref<java::lang::Object> o);
	jint describeContents();
	void writeToParcel(ref<android::os::Parcel> dest, jint flags);

protected:

	ApnSetting(handle_type h) : base_(h) {}

};

} // namespace android::telephony::data
} // namespace scapix::java_api

#include <scapix/java_api/android/net/Uri.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/net/InetAddress.h>

namespace scapix::java_api {
namespace android::telephony::data {

inline jint ApnSetting::AUTH_TYPE_CHAP_() { return get_static_field<SCAPIX_META_STRING("AUTH_TYPE_CHAP"), jint>(); }
inline jint ApnSetting::AUTH_TYPE_NONE_() { return get_static_field<SCAPIX_META_STRING("AUTH_TYPE_NONE"), jint>(); }
inline jint ApnSetting::AUTH_TYPE_PAP_() { return get_static_field<SCAPIX_META_STRING("AUTH_TYPE_PAP"), jint>(); }
inline jint ApnSetting::AUTH_TYPE_PAP_OR_CHAP_() { return get_static_field<SCAPIX_META_STRING("AUTH_TYPE_PAP_OR_CHAP"), jint>(); }
inline ref<android::os::Parcelable_Creator> ApnSetting::CREATOR_() { return get_static_field<SCAPIX_META_STRING("CREATOR"), ref<android::os::Parcelable_Creator>>(); }
inline jint ApnSetting::MVNO_TYPE_GID_() { return get_static_field<SCAPIX_META_STRING("MVNO_TYPE_GID"), jint>(); }
inline jint ApnSetting::MVNO_TYPE_ICCID_() { return get_static_field<SCAPIX_META_STRING("MVNO_TYPE_ICCID"), jint>(); }
inline jint ApnSetting::MVNO_TYPE_IMSI_() { return get_static_field<SCAPIX_META_STRING("MVNO_TYPE_IMSI"), jint>(); }
inline jint ApnSetting::MVNO_TYPE_SPN_() { return get_static_field<SCAPIX_META_STRING("MVNO_TYPE_SPN"), jint>(); }
inline jint ApnSetting::PROTOCOL_IP_() { return get_static_field<SCAPIX_META_STRING("PROTOCOL_IP"), jint>(); }
inline jint ApnSetting::PROTOCOL_IPV4V6_() { return get_static_field<SCAPIX_META_STRING("PROTOCOL_IPV4V6"), jint>(); }
inline jint ApnSetting::PROTOCOL_IPV6_() { return get_static_field<SCAPIX_META_STRING("PROTOCOL_IPV6"), jint>(); }
inline jint ApnSetting::PROTOCOL_PPP_() { return get_static_field<SCAPIX_META_STRING("PROTOCOL_PPP"), jint>(); }
inline jint ApnSetting::TYPE_CBS_() { return get_static_field<SCAPIX_META_STRING("TYPE_CBS"), jint>(); }
inline jint ApnSetting::TYPE_DEFAULT_() { return get_static_field<SCAPIX_META_STRING("TYPE_DEFAULT"), jint>(); }
inline jint ApnSetting::TYPE_DUN_() { return get_static_field<SCAPIX_META_STRING("TYPE_DUN"), jint>(); }
inline jint ApnSetting::TYPE_EMERGENCY_() { return get_static_field<SCAPIX_META_STRING("TYPE_EMERGENCY"), jint>(); }
inline jint ApnSetting::TYPE_FOTA_() { return get_static_field<SCAPIX_META_STRING("TYPE_FOTA"), jint>(); }
inline jint ApnSetting::TYPE_HIPRI_() { return get_static_field<SCAPIX_META_STRING("TYPE_HIPRI"), jint>(); }
inline jint ApnSetting::TYPE_IA_() { return get_static_field<SCAPIX_META_STRING("TYPE_IA"), jint>(); }
inline jint ApnSetting::TYPE_IMS_() { return get_static_field<SCAPIX_META_STRING("TYPE_IMS"), jint>(); }
inline jint ApnSetting::TYPE_MMS_() { return get_static_field<SCAPIX_META_STRING("TYPE_MMS"), jint>(); }
inline jint ApnSetting::TYPE_SUPL_() { return get_static_field<SCAPIX_META_STRING("TYPE_SUPL"), jint>(); }
inline ref<java::lang::String> ApnSetting::getEntryName() { return call_method<SCAPIX_META_STRING("getEntryName"), ref<java::lang::String>>(); }
inline ref<java::lang::String> ApnSetting::getApnName() { return call_method<SCAPIX_META_STRING("getApnName"), ref<java::lang::String>>(); }
inline ref<java::net::InetAddress> ApnSetting::getProxyAddress() { return call_method<SCAPIX_META_STRING("getProxyAddress"), ref<java::net::InetAddress>>(); }
inline jint ApnSetting::getProxyPort() { return call_method<SCAPIX_META_STRING("getProxyPort"), jint>(); }
inline ref<android::net::Uri> ApnSetting::getMmsc() { return call_method<SCAPIX_META_STRING("getMmsc"), ref<android::net::Uri>>(); }
inline ref<java::net::InetAddress> ApnSetting::getMmsProxyAddress() { return call_method<SCAPIX_META_STRING("getMmsProxyAddress"), ref<java::net::InetAddress>>(); }
inline jint ApnSetting::getMmsProxyPort() { return call_method<SCAPIX_META_STRING("getMmsProxyPort"), jint>(); }
inline ref<java::lang::String> ApnSetting::getUser() { return call_method<SCAPIX_META_STRING("getUser"), ref<java::lang::String>>(); }
inline ref<java::lang::String> ApnSetting::getPassword() { return call_method<SCAPIX_META_STRING("getPassword"), ref<java::lang::String>>(); }
inline jint ApnSetting::getAuthType() { return call_method<SCAPIX_META_STRING("getAuthType"), jint>(); }
inline jint ApnSetting::getApnTypeBitmask() { return call_method<SCAPIX_META_STRING("getApnTypeBitmask"), jint>(); }
inline jint ApnSetting::getId() { return call_method<SCAPIX_META_STRING("getId"), jint>(); }
inline ref<java::lang::String> ApnSetting::getOperatorNumeric() { return call_method<SCAPIX_META_STRING("getOperatorNumeric"), ref<java::lang::String>>(); }
inline jint ApnSetting::getProtocol() { return call_method<SCAPIX_META_STRING("getProtocol"), jint>(); }
inline jint ApnSetting::getRoamingProtocol() { return call_method<SCAPIX_META_STRING("getRoamingProtocol"), jint>(); }
inline jboolean ApnSetting::isEnabled() { return call_method<SCAPIX_META_STRING("isEnabled"), jboolean>(); }
inline jint ApnSetting::getNetworkTypeBitmask() { return call_method<SCAPIX_META_STRING("getNetworkTypeBitmask"), jint>(); }
inline jint ApnSetting::getMvnoType() { return call_method<SCAPIX_META_STRING("getMvnoType"), jint>(); }
inline ref<java::lang::String> ApnSetting::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }
inline jboolean ApnSetting::equals(ref<java::lang::Object> o) { return call_method<SCAPIX_META_STRING("equals"), jboolean>(o); }
inline jint ApnSetting::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }
inline void ApnSetting::writeToParcel(ref<android::os::Parcel> dest, jint flags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(dest, flags); }

} // namespace android::telephony::data
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_TELEPHONY_DATA_APNSETTING_H
