// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_ANDROID_TELEPHONY_CELLIDENTITY_H
#define SCAPIX_ANDROID_TELEPHONY_CELLIDENTITY_H

namespace scapix::java_api {

namespace android::os { class Parcel; }
namespace android::os { class Parcelable_Creator; }
namespace java::lang { class CharSequence; }

namespace android::telephony {

class CellIdentity : public object_base<SCAPIX_META_STRING("android/telephony/CellIdentity"),
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static ref<android::os::Parcelable_Creator> CREATOR_();

	jint describeContents();
	ref<java::lang::CharSequence> getOperatorAlphaLong();
	ref<java::lang::CharSequence> getOperatorAlphaShort();
	jboolean equals(ref<java::lang::Object> other);
	jint hashCode();
	void writeToParcel(ref<android::os::Parcel> dest, jint type);

protected:

	CellIdentity(handle_type h) : base_(h) {}

};

} // namespace android::telephony
} // namespace scapix::java_api

#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/CharSequence.h>

namespace scapix::java_api {
namespace android::telephony {

inline ref<android::os::Parcelable_Creator> CellIdentity::CREATOR_() { return get_static_field<SCAPIX_META_STRING("CREATOR"), ref<android::os::Parcelable_Creator>>(); }
inline jint CellIdentity::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }
inline ref<java::lang::CharSequence> CellIdentity::getOperatorAlphaLong() { return call_method<SCAPIX_META_STRING("getOperatorAlphaLong"), ref<java::lang::CharSequence>>(); }
inline ref<java::lang::CharSequence> CellIdentity::getOperatorAlphaShort() { return call_method<SCAPIX_META_STRING("getOperatorAlphaShort"), ref<java::lang::CharSequence>>(); }
inline jboolean CellIdentity::equals(ref<java::lang::Object> other) { return call_method<SCAPIX_META_STRING("equals"), jboolean>(other); }
inline jint CellIdentity::hashCode() { return call_method<SCAPIX_META_STRING("hashCode"), jint>(); }
inline void CellIdentity::writeToParcel(ref<android::os::Parcel> dest, jint type) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(dest, type); }

} // namespace android::telephony
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_TELEPHONY_CELLIDENTITY_H
