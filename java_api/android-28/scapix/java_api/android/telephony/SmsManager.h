// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_TELEPHONY_SMSMANAGER_H
#define SCAPIX_ANDROID_TELEPHONY_SMSMANAGER_H

namespace scapix::java_api {

namespace android::app { class PendingIntent; }
namespace android::content { class Context; }
namespace android::net { class Uri; }
namespace android::os { class Bundle; }
namespace java::lang { class String; }
namespace java::util { class ArrayList; }

namespace android::telephony {

class SmsManager : public object_base<SCAPIX_META_STRING("android/telephony/SmsManager"),
	java::lang::Object>
{
public:

	static ref<java::lang::String> EXTRA_MMS_DATA_();
	static ref<java::lang::String> EXTRA_MMS_HTTP_STATUS_();
	static ref<java::lang::String> MMS_CONFIG_ALIAS_ENABLED_();
	static ref<java::lang::String> MMS_CONFIG_ALIAS_MAX_CHARS_();
	static ref<java::lang::String> MMS_CONFIG_ALIAS_MIN_CHARS_();
	static ref<java::lang::String> MMS_CONFIG_ALLOW_ATTACH_AUDIO_();
	static ref<java::lang::String> MMS_CONFIG_APPEND_TRANSACTION_ID_();
	static ref<java::lang::String> MMS_CONFIG_EMAIL_GATEWAY_NUMBER_();
	static ref<java::lang::String> MMS_CONFIG_GROUP_MMS_ENABLED_();
	static ref<java::lang::String> MMS_CONFIG_HTTP_PARAMS_();
	static ref<java::lang::String> MMS_CONFIG_HTTP_SOCKET_TIMEOUT_();
	static ref<java::lang::String> MMS_CONFIG_MAX_IMAGE_HEIGHT_();
	static ref<java::lang::String> MMS_CONFIG_MAX_IMAGE_WIDTH_();
	static ref<java::lang::String> MMS_CONFIG_MAX_MESSAGE_SIZE_();
	static ref<java::lang::String> MMS_CONFIG_MESSAGE_TEXT_MAX_SIZE_();
	static ref<java::lang::String> MMS_CONFIG_MMS_DELIVERY_REPORT_ENABLED_();
	static ref<java::lang::String> MMS_CONFIG_MMS_ENABLED_();
	static ref<java::lang::String> MMS_CONFIG_MMS_READ_REPORT_ENABLED_();
	static ref<java::lang::String> MMS_CONFIG_MULTIPART_SMS_ENABLED_();
	static ref<java::lang::String> MMS_CONFIG_NAI_SUFFIX_();
	static ref<java::lang::String> MMS_CONFIG_NOTIFY_WAP_MMSC_ENABLED_();
	static ref<java::lang::String> MMS_CONFIG_RECIPIENT_LIMIT_();
	static ref<java::lang::String> MMS_CONFIG_SEND_MULTIPART_SMS_AS_SEPARATE_MESSAGES_();
	static ref<java::lang::String> MMS_CONFIG_SHOW_CELL_BROADCAST_APP_LINKS_();
	static ref<java::lang::String> MMS_CONFIG_SMS_DELIVERY_REPORT_ENABLED_();
	static ref<java::lang::String> MMS_CONFIG_SMS_TO_MMS_TEXT_LENGTH_THRESHOLD_();
	static ref<java::lang::String> MMS_CONFIG_SMS_TO_MMS_TEXT_THRESHOLD_();
	static ref<java::lang::String> MMS_CONFIG_SUBJECT_MAX_LENGTH_();
	static ref<java::lang::String> MMS_CONFIG_SUPPORT_HTTP_CHARSET_HEADER_();
	static ref<java::lang::String> MMS_CONFIG_SUPPORT_MMS_CONTENT_DISPOSITION_();
	static ref<java::lang::String> MMS_CONFIG_UA_PROF_TAG_NAME_();
	static ref<java::lang::String> MMS_CONFIG_UA_PROF_URL_();
	static ref<java::lang::String> MMS_CONFIG_USER_AGENT_();
	static jint MMS_ERROR_CONFIGURATION_ERROR_();
	static jint MMS_ERROR_HTTP_FAILURE_();
	static jint MMS_ERROR_INVALID_APN_();
	static jint MMS_ERROR_IO_ERROR_();
	static jint MMS_ERROR_NO_DATA_NETWORK_();
	static jint MMS_ERROR_RETRY_();
	static jint MMS_ERROR_UNABLE_CONNECT_MMS_();
	static jint MMS_ERROR_UNSPECIFIED_();
	static jint RESULT_ERROR_GENERIC_FAILURE_();
	static jint RESULT_ERROR_LIMIT_EXCEEDED_();
	static jint RESULT_ERROR_NO_SERVICE_();
	static jint RESULT_ERROR_NULL_PDU_();
	static jint RESULT_ERROR_RADIO_OFF_();
	static jint RESULT_ERROR_SHORT_CODE_NEVER_ALLOWED_();
	static jint RESULT_ERROR_SHORT_CODE_NOT_ALLOWED_();
	static jint STATUS_ON_ICC_FREE_();
	static jint STATUS_ON_ICC_READ_();
	static jint STATUS_ON_ICC_SENT_();
	static jint STATUS_ON_ICC_UNREAD_();
	static jint STATUS_ON_ICC_UNSENT_();

	void sendTextMessage(ref<java::lang::String> destinationAddress, ref<java::lang::String> scAddress, ref<java::lang::String> text, ref<android::app::PendingIntent> sentIntent, ref<android::app::PendingIntent> deliveryIntent);
	void sendTextMessageWithoutPersisting(ref<java::lang::String> destinationAddress, ref<java::lang::String> scAddress, ref<java::lang::String> text, ref<android::app::PendingIntent> sentIntent, ref<android::app::PendingIntent> deliveryIntent);
	void injectSmsPdu(ref<link::java::array<jbyte>> pdu, ref<java::lang::String> format, ref<android::app::PendingIntent> receivedIntent);
	ref<java::util::ArrayList> divideMessage(ref<java::lang::String> text);
	void sendMultipartTextMessage(ref<java::lang::String> destinationAddress, ref<java::lang::String> scAddress, ref<java::util::ArrayList> parts, ref<java::util::ArrayList> sentIntents, ref<java::util::ArrayList> deliveryIntents);
	void sendDataMessage(ref<java::lang::String> destinationAddress, ref<java::lang::String> scAddress, jshort destinationPort, ref<link::java::array<jbyte>> data, ref<android::app::PendingIntent> sentIntent, ref<android::app::PendingIntent> deliveryIntent);
	static ref<android::telephony::SmsManager> getDefault();
	static ref<android::telephony::SmsManager> getSmsManagerForSubscriptionId(jint subId);
	jint getSubscriptionId();
	static jint getDefaultSmsSubscriptionId();
	void sendMultimediaMessage(ref<android::content::Context> context, ref<android::net::Uri> contentUri, ref<java::lang::String> locationUrl, ref<android::os::Bundle> configOverrides, ref<android::app::PendingIntent> sentIntent);
	void downloadMultimediaMessage(ref<android::content::Context> context, ref<java::lang::String> locationUrl, ref<android::net::Uri> contentUri, ref<android::os::Bundle> configOverrides, ref<android::app::PendingIntent> downloadedIntent);
	ref<android::os::Bundle> getCarrierConfigValues();
	ref<java::lang::String> createAppSpecificSmsToken(ref<android::app::PendingIntent> intent);

protected:

	SmsManager(handle_type h) : base_(h) {}

};

} // namespace android::telephony
} // namespace scapix::java_api

#include <scapix/java_api/android/app/PendingIntent.h>
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/net/Uri.h>
#include <scapix/java_api/android/os/Bundle.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/ArrayList.h>

namespace scapix::java_api {
namespace android::telephony {

inline ref<java::lang::String> SmsManager::EXTRA_MMS_DATA_() { return get_static_field<SCAPIX_META_STRING("EXTRA_MMS_DATA"), ref<java::lang::String>>(); }
inline ref<java::lang::String> SmsManager::EXTRA_MMS_HTTP_STATUS_() { return get_static_field<SCAPIX_META_STRING("EXTRA_MMS_HTTP_STATUS"), ref<java::lang::String>>(); }
inline ref<java::lang::String> SmsManager::MMS_CONFIG_ALIAS_ENABLED_() { return get_static_field<SCAPIX_META_STRING("MMS_CONFIG_ALIAS_ENABLED"), ref<java::lang::String>>(); }
inline ref<java::lang::String> SmsManager::MMS_CONFIG_ALIAS_MAX_CHARS_() { return get_static_field<SCAPIX_META_STRING("MMS_CONFIG_ALIAS_MAX_CHARS"), ref<java::lang::String>>(); }
inline ref<java::lang::String> SmsManager::MMS_CONFIG_ALIAS_MIN_CHARS_() { return get_static_field<SCAPIX_META_STRING("MMS_CONFIG_ALIAS_MIN_CHARS"), ref<java::lang::String>>(); }
inline ref<java::lang::String> SmsManager::MMS_CONFIG_ALLOW_ATTACH_AUDIO_() { return get_static_field<SCAPIX_META_STRING("MMS_CONFIG_ALLOW_ATTACH_AUDIO"), ref<java::lang::String>>(); }
inline ref<java::lang::String> SmsManager::MMS_CONFIG_APPEND_TRANSACTION_ID_() { return get_static_field<SCAPIX_META_STRING("MMS_CONFIG_APPEND_TRANSACTION_ID"), ref<java::lang::String>>(); }
inline ref<java::lang::String> SmsManager::MMS_CONFIG_EMAIL_GATEWAY_NUMBER_() { return get_static_field<SCAPIX_META_STRING("MMS_CONFIG_EMAIL_GATEWAY_NUMBER"), ref<java::lang::String>>(); }
inline ref<java::lang::String> SmsManager::MMS_CONFIG_GROUP_MMS_ENABLED_() { return get_static_field<SCAPIX_META_STRING("MMS_CONFIG_GROUP_MMS_ENABLED"), ref<java::lang::String>>(); }
inline ref<java::lang::String> SmsManager::MMS_CONFIG_HTTP_PARAMS_() { return get_static_field<SCAPIX_META_STRING("MMS_CONFIG_HTTP_PARAMS"), ref<java::lang::String>>(); }
inline ref<java::lang::String> SmsManager::MMS_CONFIG_HTTP_SOCKET_TIMEOUT_() { return get_static_field<SCAPIX_META_STRING("MMS_CONFIG_HTTP_SOCKET_TIMEOUT"), ref<java::lang::String>>(); }
inline ref<java::lang::String> SmsManager::MMS_CONFIG_MAX_IMAGE_HEIGHT_() { return get_static_field<SCAPIX_META_STRING("MMS_CONFIG_MAX_IMAGE_HEIGHT"), ref<java::lang::String>>(); }
inline ref<java::lang::String> SmsManager::MMS_CONFIG_MAX_IMAGE_WIDTH_() { return get_static_field<SCAPIX_META_STRING("MMS_CONFIG_MAX_IMAGE_WIDTH"), ref<java::lang::String>>(); }
inline ref<java::lang::String> SmsManager::MMS_CONFIG_MAX_MESSAGE_SIZE_() { return get_static_field<SCAPIX_META_STRING("MMS_CONFIG_MAX_MESSAGE_SIZE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> SmsManager::MMS_CONFIG_MESSAGE_TEXT_MAX_SIZE_() { return get_static_field<SCAPIX_META_STRING("MMS_CONFIG_MESSAGE_TEXT_MAX_SIZE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> SmsManager::MMS_CONFIG_MMS_DELIVERY_REPORT_ENABLED_() { return get_static_field<SCAPIX_META_STRING("MMS_CONFIG_MMS_DELIVERY_REPORT_ENABLED"), ref<java::lang::String>>(); }
inline ref<java::lang::String> SmsManager::MMS_CONFIG_MMS_ENABLED_() { return get_static_field<SCAPIX_META_STRING("MMS_CONFIG_MMS_ENABLED"), ref<java::lang::String>>(); }
inline ref<java::lang::String> SmsManager::MMS_CONFIG_MMS_READ_REPORT_ENABLED_() { return get_static_field<SCAPIX_META_STRING("MMS_CONFIG_MMS_READ_REPORT_ENABLED"), ref<java::lang::String>>(); }
inline ref<java::lang::String> SmsManager::MMS_CONFIG_MULTIPART_SMS_ENABLED_() { return get_static_field<SCAPIX_META_STRING("MMS_CONFIG_MULTIPART_SMS_ENABLED"), ref<java::lang::String>>(); }
inline ref<java::lang::String> SmsManager::MMS_CONFIG_NAI_SUFFIX_() { return get_static_field<SCAPIX_META_STRING("MMS_CONFIG_NAI_SUFFIX"), ref<java::lang::String>>(); }
inline ref<java::lang::String> SmsManager::MMS_CONFIG_NOTIFY_WAP_MMSC_ENABLED_() { return get_static_field<SCAPIX_META_STRING("MMS_CONFIG_NOTIFY_WAP_MMSC_ENABLED"), ref<java::lang::String>>(); }
inline ref<java::lang::String> SmsManager::MMS_CONFIG_RECIPIENT_LIMIT_() { return get_static_field<SCAPIX_META_STRING("MMS_CONFIG_RECIPIENT_LIMIT"), ref<java::lang::String>>(); }
inline ref<java::lang::String> SmsManager::MMS_CONFIG_SEND_MULTIPART_SMS_AS_SEPARATE_MESSAGES_() { return get_static_field<SCAPIX_META_STRING("MMS_CONFIG_SEND_MULTIPART_SMS_AS_SEPARATE_MESSAGES"), ref<java::lang::String>>(); }
inline ref<java::lang::String> SmsManager::MMS_CONFIG_SHOW_CELL_BROADCAST_APP_LINKS_() { return get_static_field<SCAPIX_META_STRING("MMS_CONFIG_SHOW_CELL_BROADCAST_APP_LINKS"), ref<java::lang::String>>(); }
inline ref<java::lang::String> SmsManager::MMS_CONFIG_SMS_DELIVERY_REPORT_ENABLED_() { return get_static_field<SCAPIX_META_STRING("MMS_CONFIG_SMS_DELIVERY_REPORT_ENABLED"), ref<java::lang::String>>(); }
inline ref<java::lang::String> SmsManager::MMS_CONFIG_SMS_TO_MMS_TEXT_LENGTH_THRESHOLD_() { return get_static_field<SCAPIX_META_STRING("MMS_CONFIG_SMS_TO_MMS_TEXT_LENGTH_THRESHOLD"), ref<java::lang::String>>(); }
inline ref<java::lang::String> SmsManager::MMS_CONFIG_SMS_TO_MMS_TEXT_THRESHOLD_() { return get_static_field<SCAPIX_META_STRING("MMS_CONFIG_SMS_TO_MMS_TEXT_THRESHOLD"), ref<java::lang::String>>(); }
inline ref<java::lang::String> SmsManager::MMS_CONFIG_SUBJECT_MAX_LENGTH_() { return get_static_field<SCAPIX_META_STRING("MMS_CONFIG_SUBJECT_MAX_LENGTH"), ref<java::lang::String>>(); }
inline ref<java::lang::String> SmsManager::MMS_CONFIG_SUPPORT_HTTP_CHARSET_HEADER_() { return get_static_field<SCAPIX_META_STRING("MMS_CONFIG_SUPPORT_HTTP_CHARSET_HEADER"), ref<java::lang::String>>(); }
inline ref<java::lang::String> SmsManager::MMS_CONFIG_SUPPORT_MMS_CONTENT_DISPOSITION_() { return get_static_field<SCAPIX_META_STRING("MMS_CONFIG_SUPPORT_MMS_CONTENT_DISPOSITION"), ref<java::lang::String>>(); }
inline ref<java::lang::String> SmsManager::MMS_CONFIG_UA_PROF_TAG_NAME_() { return get_static_field<SCAPIX_META_STRING("MMS_CONFIG_UA_PROF_TAG_NAME"), ref<java::lang::String>>(); }
inline ref<java::lang::String> SmsManager::MMS_CONFIG_UA_PROF_URL_() { return get_static_field<SCAPIX_META_STRING("MMS_CONFIG_UA_PROF_URL"), ref<java::lang::String>>(); }
inline ref<java::lang::String> SmsManager::MMS_CONFIG_USER_AGENT_() { return get_static_field<SCAPIX_META_STRING("MMS_CONFIG_USER_AGENT"), ref<java::lang::String>>(); }
inline jint SmsManager::MMS_ERROR_CONFIGURATION_ERROR_() { return get_static_field<SCAPIX_META_STRING("MMS_ERROR_CONFIGURATION_ERROR"), jint>(); }
inline jint SmsManager::MMS_ERROR_HTTP_FAILURE_() { return get_static_field<SCAPIX_META_STRING("MMS_ERROR_HTTP_FAILURE"), jint>(); }
inline jint SmsManager::MMS_ERROR_INVALID_APN_() { return get_static_field<SCAPIX_META_STRING("MMS_ERROR_INVALID_APN"), jint>(); }
inline jint SmsManager::MMS_ERROR_IO_ERROR_() { return get_static_field<SCAPIX_META_STRING("MMS_ERROR_IO_ERROR"), jint>(); }
inline jint SmsManager::MMS_ERROR_NO_DATA_NETWORK_() { return get_static_field<SCAPIX_META_STRING("MMS_ERROR_NO_DATA_NETWORK"), jint>(); }
inline jint SmsManager::MMS_ERROR_RETRY_() { return get_static_field<SCAPIX_META_STRING("MMS_ERROR_RETRY"), jint>(); }
inline jint SmsManager::MMS_ERROR_UNABLE_CONNECT_MMS_() { return get_static_field<SCAPIX_META_STRING("MMS_ERROR_UNABLE_CONNECT_MMS"), jint>(); }
inline jint SmsManager::MMS_ERROR_UNSPECIFIED_() { return get_static_field<SCAPIX_META_STRING("MMS_ERROR_UNSPECIFIED"), jint>(); }
inline jint SmsManager::RESULT_ERROR_GENERIC_FAILURE_() { return get_static_field<SCAPIX_META_STRING("RESULT_ERROR_GENERIC_FAILURE"), jint>(); }
inline jint SmsManager::RESULT_ERROR_LIMIT_EXCEEDED_() { return get_static_field<SCAPIX_META_STRING("RESULT_ERROR_LIMIT_EXCEEDED"), jint>(); }
inline jint SmsManager::RESULT_ERROR_NO_SERVICE_() { return get_static_field<SCAPIX_META_STRING("RESULT_ERROR_NO_SERVICE"), jint>(); }
inline jint SmsManager::RESULT_ERROR_NULL_PDU_() { return get_static_field<SCAPIX_META_STRING("RESULT_ERROR_NULL_PDU"), jint>(); }
inline jint SmsManager::RESULT_ERROR_RADIO_OFF_() { return get_static_field<SCAPIX_META_STRING("RESULT_ERROR_RADIO_OFF"), jint>(); }
inline jint SmsManager::RESULT_ERROR_SHORT_CODE_NEVER_ALLOWED_() { return get_static_field<SCAPIX_META_STRING("RESULT_ERROR_SHORT_CODE_NEVER_ALLOWED"), jint>(); }
inline jint SmsManager::RESULT_ERROR_SHORT_CODE_NOT_ALLOWED_() { return get_static_field<SCAPIX_META_STRING("RESULT_ERROR_SHORT_CODE_NOT_ALLOWED"), jint>(); }
inline jint SmsManager::STATUS_ON_ICC_FREE_() { return get_static_field<SCAPIX_META_STRING("STATUS_ON_ICC_FREE"), jint>(); }
inline jint SmsManager::STATUS_ON_ICC_READ_() { return get_static_field<SCAPIX_META_STRING("STATUS_ON_ICC_READ"), jint>(); }
inline jint SmsManager::STATUS_ON_ICC_SENT_() { return get_static_field<SCAPIX_META_STRING("STATUS_ON_ICC_SENT"), jint>(); }
inline jint SmsManager::STATUS_ON_ICC_UNREAD_() { return get_static_field<SCAPIX_META_STRING("STATUS_ON_ICC_UNREAD"), jint>(); }
inline jint SmsManager::STATUS_ON_ICC_UNSENT_() { return get_static_field<SCAPIX_META_STRING("STATUS_ON_ICC_UNSENT"), jint>(); }
inline void SmsManager::sendTextMessage(ref<java::lang::String> destinationAddress, ref<java::lang::String> scAddress, ref<java::lang::String> text, ref<android::app::PendingIntent> sentIntent, ref<android::app::PendingIntent> deliveryIntent) { return call_method<SCAPIX_META_STRING("sendTextMessage"), void>(destinationAddress, scAddress, text, sentIntent, deliveryIntent); }
inline void SmsManager::sendTextMessageWithoutPersisting(ref<java::lang::String> destinationAddress, ref<java::lang::String> scAddress, ref<java::lang::String> text, ref<android::app::PendingIntent> sentIntent, ref<android::app::PendingIntent> deliveryIntent) { return call_method<SCAPIX_META_STRING("sendTextMessageWithoutPersisting"), void>(destinationAddress, scAddress, text, sentIntent, deliveryIntent); }
inline void SmsManager::injectSmsPdu(ref<link::java::array<jbyte>> pdu, ref<java::lang::String> format, ref<android::app::PendingIntent> receivedIntent) { return call_method<SCAPIX_META_STRING("injectSmsPdu"), void>(pdu, format, receivedIntent); }
inline ref<java::util::ArrayList> SmsManager::divideMessage(ref<java::lang::String> text) { return call_method<SCAPIX_META_STRING("divideMessage"), ref<java::util::ArrayList>>(text); }
inline void SmsManager::sendMultipartTextMessage(ref<java::lang::String> destinationAddress, ref<java::lang::String> scAddress, ref<java::util::ArrayList> parts, ref<java::util::ArrayList> sentIntents, ref<java::util::ArrayList> deliveryIntents) { return call_method<SCAPIX_META_STRING("sendMultipartTextMessage"), void>(destinationAddress, scAddress, parts, sentIntents, deliveryIntents); }
inline void SmsManager::sendDataMessage(ref<java::lang::String> destinationAddress, ref<java::lang::String> scAddress, jshort destinationPort, ref<link::java::array<jbyte>> data, ref<android::app::PendingIntent> sentIntent, ref<android::app::PendingIntent> deliveryIntent) { return call_method<SCAPIX_META_STRING("sendDataMessage"), void>(destinationAddress, scAddress, destinationPort, data, sentIntent, deliveryIntent); }
inline ref<android::telephony::SmsManager> SmsManager::getDefault() { return call_static_method<SCAPIX_META_STRING("getDefault"), ref<android::telephony::SmsManager>>(); }
inline ref<android::telephony::SmsManager> SmsManager::getSmsManagerForSubscriptionId(jint subId) { return call_static_method<SCAPIX_META_STRING("getSmsManagerForSubscriptionId"), ref<android::telephony::SmsManager>>(subId); }
inline jint SmsManager::getSubscriptionId() { return call_method<SCAPIX_META_STRING("getSubscriptionId"), jint>(); }
inline jint SmsManager::getDefaultSmsSubscriptionId() { return call_static_method<SCAPIX_META_STRING("getDefaultSmsSubscriptionId"), jint>(); }
inline void SmsManager::sendMultimediaMessage(ref<android::content::Context> context, ref<android::net::Uri> contentUri, ref<java::lang::String> locationUrl, ref<android::os::Bundle> configOverrides, ref<android::app::PendingIntent> sentIntent) { return call_method<SCAPIX_META_STRING("sendMultimediaMessage"), void>(context, contentUri, locationUrl, configOverrides, sentIntent); }
inline void SmsManager::downloadMultimediaMessage(ref<android::content::Context> context, ref<java::lang::String> locationUrl, ref<android::net::Uri> contentUri, ref<android::os::Bundle> configOverrides, ref<android::app::PendingIntent> downloadedIntent) { return call_method<SCAPIX_META_STRING("downloadMultimediaMessage"), void>(context, locationUrl, contentUri, configOverrides, downloadedIntent); }
inline ref<android::os::Bundle> SmsManager::getCarrierConfigValues() { return call_method<SCAPIX_META_STRING("getCarrierConfigValues"), ref<android::os::Bundle>>(); }
inline ref<java::lang::String> SmsManager::createAppSpecificSmsToken(ref<android::app::PendingIntent> intent) { return call_method<SCAPIX_META_STRING("createAppSpecificSmsToken"), ref<java::lang::String>>(intent); }

} // namespace android::telephony
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_TELEPHONY_SMSMANAGER_H
