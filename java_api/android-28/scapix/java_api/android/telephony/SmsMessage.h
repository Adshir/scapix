// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_TELEPHONY_SMSMESSAGE_H
#define SCAPIX_ANDROID_TELEPHONY_SMSMESSAGE_H

namespace scapix::java_api {

namespace android::telephony { class SmsMessage_MessageClass; }
namespace android::telephony { class SmsMessage_SubmitPdu; }
namespace java::lang { class CharSequence; }
namespace java::lang { class String; }

namespace android::telephony {

class SmsMessage : public object_base<SCAPIX_META_STRING("android/telephony/SmsMessage"),
	java::lang::Object>
{
public:

	using SubmitPdu = SmsMessage_SubmitPdu;
	using MessageClass = SmsMessage_MessageClass;

	static jint ENCODING_16BIT_();
	static jint ENCODING_7BIT_();
	static jint ENCODING_8BIT_();
	static jint ENCODING_UNKNOWN_();
	static ref<java::lang::String> FORMAT_3GPP_();
	static ref<java::lang::String> FORMAT_3GPP2_();
	static jint MAX_USER_DATA_BYTES_();
	static jint MAX_USER_DATA_BYTES_WITH_HEADER_();
	static jint MAX_USER_DATA_SEPTETS_();
	static jint MAX_USER_DATA_SEPTETS_WITH_HEADER_();

	static ref<android::telephony::SmsMessage> createFromPdu(ref<link::java::array<jbyte>> pdu);
	static ref<android::telephony::SmsMessage> createFromPdu(ref<link::java::array<jbyte>> pdu, ref<java::lang::String> format);
	static jint getTPLayerLengthForPDU(ref<java::lang::String> pdu);
	static ref<link::java::array<jint>> calculateLength(ref<java::lang::CharSequence> msgBody, jboolean use7bitOnly);
	static ref<link::java::array<jint>> calculateLength(ref<java::lang::String> messageBody, jboolean use7bitOnly);
	static ref<android::telephony::SmsMessage_SubmitPdu> getSubmitPdu(ref<java::lang::String> scAddress, ref<java::lang::String> destinationAddress, ref<java::lang::String> message, jboolean statusReportRequested);
	static ref<android::telephony::SmsMessage_SubmitPdu> getSubmitPdu(ref<java::lang::String> scAddress, ref<java::lang::String> destinationAddress, jshort destinationPort, ref<link::java::array<jbyte>> data, jboolean statusReportRequested);
	ref<java::lang::String> getServiceCenterAddress();
	ref<java::lang::String> getOriginatingAddress();
	ref<java::lang::String> getDisplayOriginatingAddress();
	ref<java::lang::String> getMessageBody();
	ref<android::telephony::SmsMessage_MessageClass> getMessageClass();
	ref<java::lang::String> getDisplayMessageBody();
	ref<java::lang::String> getPseudoSubject();
	jlong getTimestampMillis();
	jboolean isEmail();
	ref<java::lang::String> getEmailBody();
	ref<java::lang::String> getEmailFrom();
	jint getProtocolIdentifier();
	jboolean isReplace();
	jboolean isCphsMwiMessage();
	jboolean isMWIClearMessage();
	jboolean isMWISetMessage();
	jboolean isMwiDontStore();
	ref<link::java::array<jbyte>> getUserData();
	ref<link::java::array<jbyte>> getPdu();
	jint getStatusOnSim();
	jint getStatusOnIcc();
	jint getIndexOnSim();
	jint getIndexOnIcc();
	jint getStatus();
	jboolean isStatusReportMessage();
	jboolean isReplyPathPresent();

protected:

	SmsMessage(handle_type h) : base_(h) {}

};

} // namespace android::telephony
} // namespace scapix::java_api

#include <scapix/java_api/android/telephony/SmsMessage_MessageClass.h>
#include <scapix/java_api/android/telephony/SmsMessage_SubmitPdu.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::telephony {

inline jint SmsMessage::ENCODING_16BIT_() { return get_static_field<SCAPIX_META_STRING("ENCODING_16BIT"), jint>(); }
inline jint SmsMessage::ENCODING_7BIT_() { return get_static_field<SCAPIX_META_STRING("ENCODING_7BIT"), jint>(); }
inline jint SmsMessage::ENCODING_8BIT_() { return get_static_field<SCAPIX_META_STRING("ENCODING_8BIT"), jint>(); }
inline jint SmsMessage::ENCODING_UNKNOWN_() { return get_static_field<SCAPIX_META_STRING("ENCODING_UNKNOWN"), jint>(); }
inline ref<java::lang::String> SmsMessage::FORMAT_3GPP_() { return get_static_field<SCAPIX_META_STRING("FORMAT_3GPP"), ref<java::lang::String>>(); }
inline ref<java::lang::String> SmsMessage::FORMAT_3GPP2_() { return get_static_field<SCAPIX_META_STRING("FORMAT_3GPP2"), ref<java::lang::String>>(); }
inline jint SmsMessage::MAX_USER_DATA_BYTES_() { return get_static_field<SCAPIX_META_STRING("MAX_USER_DATA_BYTES"), jint>(); }
inline jint SmsMessage::MAX_USER_DATA_BYTES_WITH_HEADER_() { return get_static_field<SCAPIX_META_STRING("MAX_USER_DATA_BYTES_WITH_HEADER"), jint>(); }
inline jint SmsMessage::MAX_USER_DATA_SEPTETS_() { return get_static_field<SCAPIX_META_STRING("MAX_USER_DATA_SEPTETS"), jint>(); }
inline jint SmsMessage::MAX_USER_DATA_SEPTETS_WITH_HEADER_() { return get_static_field<SCAPIX_META_STRING("MAX_USER_DATA_SEPTETS_WITH_HEADER"), jint>(); }
inline ref<android::telephony::SmsMessage> SmsMessage::createFromPdu(ref<link::java::array<jbyte>> pdu) { return call_static_method<SCAPIX_META_STRING("createFromPdu"), ref<android::telephony::SmsMessage>>(pdu); }
inline ref<android::telephony::SmsMessage> SmsMessage::createFromPdu(ref<link::java::array<jbyte>> pdu, ref<java::lang::String> format) { return call_static_method<SCAPIX_META_STRING("createFromPdu"), ref<android::telephony::SmsMessage>>(pdu, format); }
inline jint SmsMessage::getTPLayerLengthForPDU(ref<java::lang::String> pdu) { return call_static_method<SCAPIX_META_STRING("getTPLayerLengthForPDU"), jint>(pdu); }
inline ref<link::java::array<jint>> SmsMessage::calculateLength(ref<java::lang::CharSequence> msgBody, jboolean use7bitOnly) { return call_static_method<SCAPIX_META_STRING("calculateLength"), ref<link::java::array<jint>>>(msgBody, use7bitOnly); }
inline ref<link::java::array<jint>> SmsMessage::calculateLength(ref<java::lang::String> messageBody, jboolean use7bitOnly) { return call_static_method<SCAPIX_META_STRING("calculateLength"), ref<link::java::array<jint>>>(messageBody, use7bitOnly); }
inline ref<android::telephony::SmsMessage_SubmitPdu> SmsMessage::getSubmitPdu(ref<java::lang::String> scAddress, ref<java::lang::String> destinationAddress, ref<java::lang::String> message, jboolean statusReportRequested) { return call_static_method<SCAPIX_META_STRING("getSubmitPdu"), ref<android::telephony::SmsMessage_SubmitPdu>>(scAddress, destinationAddress, message, statusReportRequested); }
inline ref<android::telephony::SmsMessage_SubmitPdu> SmsMessage::getSubmitPdu(ref<java::lang::String> scAddress, ref<java::lang::String> destinationAddress, jshort destinationPort, ref<link::java::array<jbyte>> data, jboolean statusReportRequested) { return call_static_method<SCAPIX_META_STRING("getSubmitPdu"), ref<android::telephony::SmsMessage_SubmitPdu>>(scAddress, destinationAddress, destinationPort, data, statusReportRequested); }
inline ref<java::lang::String> SmsMessage::getServiceCenterAddress() { return call_method<SCAPIX_META_STRING("getServiceCenterAddress"), ref<java::lang::String>>(); }
inline ref<java::lang::String> SmsMessage::getOriginatingAddress() { return call_method<SCAPIX_META_STRING("getOriginatingAddress"), ref<java::lang::String>>(); }
inline ref<java::lang::String> SmsMessage::getDisplayOriginatingAddress() { return call_method<SCAPIX_META_STRING("getDisplayOriginatingAddress"), ref<java::lang::String>>(); }
inline ref<java::lang::String> SmsMessage::getMessageBody() { return call_method<SCAPIX_META_STRING("getMessageBody"), ref<java::lang::String>>(); }
inline ref<android::telephony::SmsMessage_MessageClass> SmsMessage::getMessageClass() { return call_method<SCAPIX_META_STRING("getMessageClass"), ref<android::telephony::SmsMessage_MessageClass>>(); }
inline ref<java::lang::String> SmsMessage::getDisplayMessageBody() { return call_method<SCAPIX_META_STRING("getDisplayMessageBody"), ref<java::lang::String>>(); }
inline ref<java::lang::String> SmsMessage::getPseudoSubject() { return call_method<SCAPIX_META_STRING("getPseudoSubject"), ref<java::lang::String>>(); }
inline jlong SmsMessage::getTimestampMillis() { return call_method<SCAPIX_META_STRING("getTimestampMillis"), jlong>(); }
inline jboolean SmsMessage::isEmail() { return call_method<SCAPIX_META_STRING("isEmail"), jboolean>(); }
inline ref<java::lang::String> SmsMessage::getEmailBody() { return call_method<SCAPIX_META_STRING("getEmailBody"), ref<java::lang::String>>(); }
inline ref<java::lang::String> SmsMessage::getEmailFrom() { return call_method<SCAPIX_META_STRING("getEmailFrom"), ref<java::lang::String>>(); }
inline jint SmsMessage::getProtocolIdentifier() { return call_method<SCAPIX_META_STRING("getProtocolIdentifier"), jint>(); }
inline jboolean SmsMessage::isReplace() { return call_method<SCAPIX_META_STRING("isReplace"), jboolean>(); }
inline jboolean SmsMessage::isCphsMwiMessage() { return call_method<SCAPIX_META_STRING("isCphsMwiMessage"), jboolean>(); }
inline jboolean SmsMessage::isMWIClearMessage() { return call_method<SCAPIX_META_STRING("isMWIClearMessage"), jboolean>(); }
inline jboolean SmsMessage::isMWISetMessage() { return call_method<SCAPIX_META_STRING("isMWISetMessage"), jboolean>(); }
inline jboolean SmsMessage::isMwiDontStore() { return call_method<SCAPIX_META_STRING("isMwiDontStore"), jboolean>(); }
inline ref<link::java::array<jbyte>> SmsMessage::getUserData() { return call_method<SCAPIX_META_STRING("getUserData"), ref<link::java::array<jbyte>>>(); }
inline ref<link::java::array<jbyte>> SmsMessage::getPdu() { return call_method<SCAPIX_META_STRING("getPdu"), ref<link::java::array<jbyte>>>(); }
inline jint SmsMessage::getStatusOnSim() { return call_method<SCAPIX_META_STRING("getStatusOnSim"), jint>(); }
inline jint SmsMessage::getStatusOnIcc() { return call_method<SCAPIX_META_STRING("getStatusOnIcc"), jint>(); }
inline jint SmsMessage::getIndexOnSim() { return call_method<SCAPIX_META_STRING("getIndexOnSim"), jint>(); }
inline jint SmsMessage::getIndexOnIcc() { return call_method<SCAPIX_META_STRING("getIndexOnIcc"), jint>(); }
inline jint SmsMessage::getStatus() { return call_method<SCAPIX_META_STRING("getStatus"), jint>(); }
inline jboolean SmsMessage::isStatusReportMessage() { return call_method<SCAPIX_META_STRING("isStatusReportMessage"), jboolean>(); }
inline jboolean SmsMessage::isReplyPathPresent() { return call_method<SCAPIX_META_STRING("isReplyPathPresent"), jboolean>(); }

} // namespace android::telephony
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_TELEPHONY_SMSMESSAGE_H
