// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/AutoCloseable.h>

#ifndef SCAPIX_ANDROID_TELEPHONY_MBMSSTREAMINGSESSION_H
#define SCAPIX_ANDROID_TELEPHONY_MBMSSTREAMINGSESSION_H

namespace scapix::java_api {

namespace android::content { class Context; }
namespace android::telephony::mbms { class MbmsStreamingSessionCallback; }
namespace android::telephony::mbms { class StreamingService; }
namespace android::telephony::mbms { class StreamingServiceCallback; }
namespace android::telephony::mbms { class StreamingServiceInfo; }
namespace java::util { class List; }
namespace java::util::concurrent { class Executor; }

namespace android::telephony {

class MbmsStreamingSession : public object_base<SCAPIX_META_STRING("android/telephony/MbmsStreamingSession"),
	java::lang::Object,
	java::lang::AutoCloseable>
{
public:

	static ref<android::telephony::MbmsStreamingSession> create(ref<android::content::Context> context, ref<java::util::concurrent::Executor> executor, jint subscriptionId, ref<android::telephony::mbms::MbmsStreamingSessionCallback> callback);
	static ref<android::telephony::MbmsStreamingSession> create(ref<android::content::Context> context, ref<java::util::concurrent::Executor> executor, ref<android::telephony::mbms::MbmsStreamingSessionCallback> callback);
	void close();
	void requestUpdateStreamingServices(ref<java::util::List> serviceClassList);
	ref<android::telephony::mbms::StreamingService> startStreaming(ref<android::telephony::mbms::StreamingServiceInfo> serviceInfo, ref<java::util::concurrent::Executor> executor, ref<android::telephony::mbms::StreamingServiceCallback> callback);

protected:

	MbmsStreamingSession(handle_type h) : base_(h) {}

};

} // namespace android::telephony
} // namespace scapix::java_api

#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/telephony/mbms/MbmsStreamingSessionCallback.h>
#include <scapix/java_api/android/telephony/mbms/StreamingService.h>
#include <scapix/java_api/android/telephony/mbms/StreamingServiceCallback.h>
#include <scapix/java_api/android/telephony/mbms/StreamingServiceInfo.h>
#include <scapix/java_api/java/util/List.h>
#include <scapix/java_api/java/util/concurrent/Executor.h>

namespace scapix::java_api {
namespace android::telephony {

inline ref<android::telephony::MbmsStreamingSession> MbmsStreamingSession::create(ref<android::content::Context> context, ref<java::util::concurrent::Executor> executor, jint subscriptionId, ref<android::telephony::mbms::MbmsStreamingSessionCallback> callback) { return call_static_method<SCAPIX_META_STRING("create"), ref<android::telephony::MbmsStreamingSession>>(context, executor, subscriptionId, callback); }
inline ref<android::telephony::MbmsStreamingSession> MbmsStreamingSession::create(ref<android::content::Context> context, ref<java::util::concurrent::Executor> executor, ref<android::telephony::mbms::MbmsStreamingSessionCallback> callback) { return call_static_method<SCAPIX_META_STRING("create"), ref<android::telephony::MbmsStreamingSession>>(context, executor, callback); }
inline void MbmsStreamingSession::close() { return call_method<SCAPIX_META_STRING("close"), void>(); }
inline void MbmsStreamingSession::requestUpdateStreamingServices(ref<java::util::List> serviceClassList) { return call_method<SCAPIX_META_STRING("requestUpdateStreamingServices"), void>(serviceClassList); }
inline ref<android::telephony::mbms::StreamingService> MbmsStreamingSession::startStreaming(ref<android::telephony::mbms::StreamingServiceInfo> serviceInfo, ref<java::util::concurrent::Executor> executor, ref<android::telephony::mbms::StreamingServiceCallback> callback) { return call_method<SCAPIX_META_STRING("startStreaming"), ref<android::telephony::mbms::StreamingService>>(serviceInfo, executor, callback); }

} // namespace android::telephony
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_TELEPHONY_MBMSSTREAMINGSESSION_H
