// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_WEBKIT_SERVICEWORKERWEBSETTINGS_H
#define SCAPIX_ANDROID_WEBKIT_SERVICEWORKERWEBSETTINGS_H

namespace scapix::java_api {
namespace android::webkit {

class ServiceWorkerWebSettings : public object_base<SCAPIX_META_STRING("android/webkit/ServiceWorkerWebSettings"),
	java::lang::Object>
{
public:

	static ref<ServiceWorkerWebSettings> new_object();
	void setCacheMode(jint p1);
	jint getCacheMode();
	void setAllowContentAccess(jboolean p1);
	jboolean getAllowContentAccess();
	void setAllowFileAccess(jboolean p1);
	jboolean getAllowFileAccess();
	void setBlockNetworkLoads(jboolean p1);
	jboolean getBlockNetworkLoads();

protected:

	ServiceWorkerWebSettings(handle_type h) : base_(h) {}

};

} // namespace android::webkit
} // namespace scapix::java_api


namespace scapix::java_api {
namespace android::webkit {

inline ref<ServiceWorkerWebSettings> ServiceWorkerWebSettings::new_object() { return base_::new_object(); }
inline void ServiceWorkerWebSettings::setCacheMode(jint p1) { return call_method<SCAPIX_META_STRING("setCacheMode"), void>(p1); }
inline jint ServiceWorkerWebSettings::getCacheMode() { return call_method<SCAPIX_META_STRING("getCacheMode"), jint>(); }
inline void ServiceWorkerWebSettings::setAllowContentAccess(jboolean p1) { return call_method<SCAPIX_META_STRING("setAllowContentAccess"), void>(p1); }
inline jboolean ServiceWorkerWebSettings::getAllowContentAccess() { return call_method<SCAPIX_META_STRING("getAllowContentAccess"), jboolean>(); }
inline void ServiceWorkerWebSettings::setAllowFileAccess(jboolean p1) { return call_method<SCAPIX_META_STRING("setAllowFileAccess"), void>(p1); }
inline jboolean ServiceWorkerWebSettings::getAllowFileAccess() { return call_method<SCAPIX_META_STRING("getAllowFileAccess"), jboolean>(); }
inline void ServiceWorkerWebSettings::setBlockNetworkLoads(jboolean p1) { return call_method<SCAPIX_META_STRING("setBlockNetworkLoads"), void>(p1); }
inline jboolean ServiceWorkerWebSettings::getBlockNetworkLoads() { return call_method<SCAPIX_META_STRING("getBlockNetworkLoads"), jboolean>(); }

} // namespace android::webkit
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_WEBKIT_SERVICEWORKERWEBSETTINGS_H
