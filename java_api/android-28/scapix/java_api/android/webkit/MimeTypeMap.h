// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_WEBKIT_MIMETYPEMAP_H
#define SCAPIX_ANDROID_WEBKIT_MIMETYPEMAP_H

namespace scapix::java_api {

namespace java::lang { class String; }

namespace android::webkit {

class MimeTypeMap : public object_base<SCAPIX_META_STRING("android/webkit/MimeTypeMap"),
	java::lang::Object>
{
public:

	static ref<java::lang::String> getFileExtensionFromUrl(ref<java::lang::String> url);
	jboolean hasMimeType(ref<java::lang::String> mimeType);
	ref<java::lang::String> getMimeTypeFromExtension(ref<java::lang::String> extension);
	jboolean hasExtension(ref<java::lang::String> extension);
	ref<java::lang::String> getExtensionFromMimeType(ref<java::lang::String> mimeType);
	static ref<android::webkit::MimeTypeMap> getSingleton();

protected:

	MimeTypeMap(handle_type h) : base_(h) {}

};

} // namespace android::webkit
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::webkit {

inline ref<java::lang::String> MimeTypeMap::getFileExtensionFromUrl(ref<java::lang::String> url) { return call_static_method<SCAPIX_META_STRING("getFileExtensionFromUrl"), ref<java::lang::String>>(url); }
inline jboolean MimeTypeMap::hasMimeType(ref<java::lang::String> mimeType) { return call_method<SCAPIX_META_STRING("hasMimeType"), jboolean>(mimeType); }
inline ref<java::lang::String> MimeTypeMap::getMimeTypeFromExtension(ref<java::lang::String> extension) { return call_method<SCAPIX_META_STRING("getMimeTypeFromExtension"), ref<java::lang::String>>(extension); }
inline jboolean MimeTypeMap::hasExtension(ref<java::lang::String> extension) { return call_method<SCAPIX_META_STRING("hasExtension"), jboolean>(extension); }
inline ref<java::lang::String> MimeTypeMap::getExtensionFromMimeType(ref<java::lang::String> mimeType) { return call_method<SCAPIX_META_STRING("getExtensionFromMimeType"), ref<java::lang::String>>(mimeType); }
inline ref<android::webkit::MimeTypeMap> MimeTypeMap::getSingleton() { return call_static_method<SCAPIX_META_STRING("getSingleton"), ref<android::webkit::MimeTypeMap>>(); }

} // namespace android::webkit
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_WEBKIT_MIMETYPEMAP_H
