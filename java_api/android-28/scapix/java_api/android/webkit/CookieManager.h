// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_WEBKIT_COOKIEMANAGER_H
#define SCAPIX_ANDROID_WEBKIT_COOKIEMANAGER_H

namespace scapix::java_api {

namespace android::webkit { class ValueCallback; }
namespace android::webkit { class WebView; }
namespace java::lang { class String; }

namespace android::webkit {

class CookieManager : public object_base<SCAPIX_META_STRING("android/webkit/CookieManager"),
	java::lang::Object>
{
public:

	static ref<CookieManager> new_object();
	static ref<android::webkit::CookieManager> getInstance();
	void setAcceptCookie(jboolean p1);
	jboolean acceptCookie();
	void setAcceptThirdPartyCookies(ref<android::webkit::WebView> p1, jboolean p2);
	jboolean acceptThirdPartyCookies(ref<android::webkit::WebView> p1);
	void setCookie(ref<java::lang::String> p1, ref<java::lang::String> p2);
	void setCookie(ref<java::lang::String> p1, ref<java::lang::String> p2, ref<android::webkit::ValueCallback> p3);
	ref<java::lang::String> getCookie(ref<java::lang::String> p1);
	void removeSessionCookie();
	void removeSessionCookies(ref<android::webkit::ValueCallback> p1);
	void removeAllCookie();
	void removeAllCookies(ref<android::webkit::ValueCallback> p1);
	jboolean hasCookies();
	void removeExpiredCookie();
	void flush();
	static jboolean allowFileSchemeCookies();
	static void setAcceptFileSchemeCookies(jboolean accept);

protected:

	CookieManager(handle_type h) : base_(h) {}

};

} // namespace android::webkit
} // namespace scapix::java_api

#include <scapix/java_api/android/webkit/ValueCallback.h>
#include <scapix/java_api/android/webkit/WebView.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::webkit {

inline ref<CookieManager> CookieManager::new_object() { return base_::new_object(); }
inline ref<android::webkit::CookieManager> CookieManager::getInstance() { return call_static_method<SCAPIX_META_STRING("getInstance"), ref<android::webkit::CookieManager>>(); }
inline void CookieManager::setAcceptCookie(jboolean p1) { return call_method<SCAPIX_META_STRING("setAcceptCookie"), void>(p1); }
inline jboolean CookieManager::acceptCookie() { return call_method<SCAPIX_META_STRING("acceptCookie"), jboolean>(); }
inline void CookieManager::setAcceptThirdPartyCookies(ref<android::webkit::WebView> p1, jboolean p2) { return call_method<SCAPIX_META_STRING("setAcceptThirdPartyCookies"), void>(p1, p2); }
inline jboolean CookieManager::acceptThirdPartyCookies(ref<android::webkit::WebView> p1) { return call_method<SCAPIX_META_STRING("acceptThirdPartyCookies"), jboolean>(p1); }
inline void CookieManager::setCookie(ref<java::lang::String> p1, ref<java::lang::String> p2) { return call_method<SCAPIX_META_STRING("setCookie"), void>(p1, p2); }
inline void CookieManager::setCookie(ref<java::lang::String> p1, ref<java::lang::String> p2, ref<android::webkit::ValueCallback> p3) { return call_method<SCAPIX_META_STRING("setCookie"), void>(p1, p2, p3); }
inline ref<java::lang::String> CookieManager::getCookie(ref<java::lang::String> p1) { return call_method<SCAPIX_META_STRING("getCookie"), ref<java::lang::String>>(p1); }
inline void CookieManager::removeSessionCookie() { return call_method<SCAPIX_META_STRING("removeSessionCookie"), void>(); }
inline void CookieManager::removeSessionCookies(ref<android::webkit::ValueCallback> p1) { return call_method<SCAPIX_META_STRING("removeSessionCookies"), void>(p1); }
inline void CookieManager::removeAllCookie() { return call_method<SCAPIX_META_STRING("removeAllCookie"), void>(); }
inline void CookieManager::removeAllCookies(ref<android::webkit::ValueCallback> p1) { return call_method<SCAPIX_META_STRING("removeAllCookies"), void>(p1); }
inline jboolean CookieManager::hasCookies() { return call_method<SCAPIX_META_STRING("hasCookies"), jboolean>(); }
inline void CookieManager::removeExpiredCookie() { return call_method<SCAPIX_META_STRING("removeExpiredCookie"), void>(); }
inline void CookieManager::flush() { return call_method<SCAPIX_META_STRING("flush"), void>(); }
inline jboolean CookieManager::allowFileSchemeCookies() { return call_static_method<SCAPIX_META_STRING("allowFileSchemeCookies"), jboolean>(); }
inline void CookieManager::setAcceptFileSchemeCookies(jboolean accept) { return call_static_method<SCAPIX_META_STRING("setAcceptFileSchemeCookies"), void>(accept); }

} // namespace android::webkit
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_WEBKIT_COOKIEMANAGER_H
