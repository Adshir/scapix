// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_WEBKIT_WEBRESOURCERESPONSE_H
#define SCAPIX_ANDROID_WEBKIT_WEBRESOURCERESPONSE_H

namespace scapix::java_api {

namespace java::io { class InputStream; }
namespace java::lang { class String; }
namespace java::util { class Map; }

namespace android::webkit {

class WebResourceResponse : public object_base<SCAPIX_META_STRING("android/webkit/WebResourceResponse"),
	java::lang::Object>
{
public:

	static ref<WebResourceResponse> new_object(ref<java::lang::String> mimeType, ref<java::lang::String> encoding, ref<java::io::InputStream> data);
	static ref<WebResourceResponse> new_object(ref<java::lang::String> mimeType, ref<java::lang::String> encoding, jint statusCode, ref<java::lang::String> reasonPhrase, ref<java::util::Map> responseHeaders, ref<java::io::InputStream> data);
	void setMimeType(ref<java::lang::String> mimeType);
	ref<java::lang::String> getMimeType();
	void setEncoding(ref<java::lang::String> encoding);
	ref<java::lang::String> getEncoding();
	void setStatusCodeAndReasonPhrase(jint statusCode, ref<java::lang::String> reasonPhrase);
	jint getStatusCode();
	ref<java::lang::String> getReasonPhrase();
	void setResponseHeaders(ref<java::util::Map> headers);
	ref<java::util::Map> getResponseHeaders();
	void setData(ref<java::io::InputStream> data);
	ref<java::io::InputStream> getData();

protected:

	WebResourceResponse(handle_type h) : base_(h) {}

};

} // namespace android::webkit
} // namespace scapix::java_api

#include <scapix/java_api/java/io/InputStream.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Map.h>

namespace scapix::java_api {
namespace android::webkit {

inline ref<WebResourceResponse> WebResourceResponse::new_object(ref<java::lang::String> mimeType, ref<java::lang::String> encoding, ref<java::io::InputStream> data) { return base_::new_object(mimeType, encoding, data); }
inline ref<WebResourceResponse> WebResourceResponse::new_object(ref<java::lang::String> mimeType, ref<java::lang::String> encoding, jint statusCode, ref<java::lang::String> reasonPhrase, ref<java::util::Map> responseHeaders, ref<java::io::InputStream> data) { return base_::new_object(mimeType, encoding, statusCode, reasonPhrase, responseHeaders, data); }
inline void WebResourceResponse::setMimeType(ref<java::lang::String> mimeType) { return call_method<SCAPIX_META_STRING("setMimeType"), void>(mimeType); }
inline ref<java::lang::String> WebResourceResponse::getMimeType() { return call_method<SCAPIX_META_STRING("getMimeType"), ref<java::lang::String>>(); }
inline void WebResourceResponse::setEncoding(ref<java::lang::String> encoding) { return call_method<SCAPIX_META_STRING("setEncoding"), void>(encoding); }
inline ref<java::lang::String> WebResourceResponse::getEncoding() { return call_method<SCAPIX_META_STRING("getEncoding"), ref<java::lang::String>>(); }
inline void WebResourceResponse::setStatusCodeAndReasonPhrase(jint statusCode, ref<java::lang::String> reasonPhrase) { return call_method<SCAPIX_META_STRING("setStatusCodeAndReasonPhrase"), void>(statusCode, reasonPhrase); }
inline jint WebResourceResponse::getStatusCode() { return call_method<SCAPIX_META_STRING("getStatusCode"), jint>(); }
inline ref<java::lang::String> WebResourceResponse::getReasonPhrase() { return call_method<SCAPIX_META_STRING("getReasonPhrase"), ref<java::lang::String>>(); }
inline void WebResourceResponse::setResponseHeaders(ref<java::util::Map> headers) { return call_method<SCAPIX_META_STRING("setResponseHeaders"), void>(headers); }
inline ref<java::util::Map> WebResourceResponse::getResponseHeaders() { return call_method<SCAPIX_META_STRING("getResponseHeaders"), ref<java::util::Map>>(); }
inline void WebResourceResponse::setData(ref<java::io::InputStream> data) { return call_method<SCAPIX_META_STRING("setData"), void>(data); }
inline ref<java::io::InputStream> WebResourceResponse::getData() { return call_method<SCAPIX_META_STRING("getData"), ref<java::io::InputStream>>(); }

} // namespace android::webkit
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_WEBKIT_WEBRESOURCERESPONSE_H
