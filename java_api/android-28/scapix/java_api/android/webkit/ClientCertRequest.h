// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_WEBKIT_CLIENTCERTREQUEST_H
#define SCAPIX_ANDROID_WEBKIT_CLIENTCERTREQUEST_H

namespace scapix::java_api {

namespace java::lang { class String; }
namespace java::security { class Principal; }
namespace java::security { class PrivateKey; }
namespace java::security::cert { class X509Certificate; }

namespace android::webkit {

class ClientCertRequest : public object_base<SCAPIX_META_STRING("android/webkit/ClientCertRequest"),
	java::lang::Object>
{
public:

	static ref<ClientCertRequest> new_object();
	ref<link::java::array<java::lang::String>> getKeyTypes();
	ref<link::java::array<java::security::Principal>> getPrincipals();
	ref<java::lang::String> getHost();
	jint getPort();
	void proceed(ref<java::security::PrivateKey> p1, ref<link::java::array<java::security::cert::X509Certificate>> p2);
	void ignore();
	void cancel();

protected:

	ClientCertRequest(handle_type h) : base_(h) {}

};

} // namespace android::webkit
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/security/Principal.h>
#include <scapix/java_api/java/security/PrivateKey.h>
#include <scapix/java_api/java/security/cert/X509Certificate.h>

namespace scapix::java_api {
namespace android::webkit {

inline ref<ClientCertRequest> ClientCertRequest::new_object() { return base_::new_object(); }
inline ref<link::java::array<java::lang::String>> ClientCertRequest::getKeyTypes() { return call_method<SCAPIX_META_STRING("getKeyTypes"), ref<link::java::array<java::lang::String>>>(); }
inline ref<link::java::array<java::security::Principal>> ClientCertRequest::getPrincipals() { return call_method<SCAPIX_META_STRING("getPrincipals"), ref<link::java::array<java::security::Principal>>>(); }
inline ref<java::lang::String> ClientCertRequest::getHost() { return call_method<SCAPIX_META_STRING("getHost"), ref<java::lang::String>>(); }
inline jint ClientCertRequest::getPort() { return call_method<SCAPIX_META_STRING("getPort"), jint>(); }
inline void ClientCertRequest::proceed(ref<java::security::PrivateKey> p1, ref<link::java::array<java::security::cert::X509Certificate>> p2) { return call_method<SCAPIX_META_STRING("proceed"), void>(p1, p2); }
inline void ClientCertRequest::ignore() { return call_method<SCAPIX_META_STRING("ignore"), void>(); }
inline void ClientCertRequest::cancel() { return call_method<SCAPIX_META_STRING("cancel"), void>(); }

} // namespace android::webkit
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_WEBKIT_CLIENTCERTREQUEST_H
