// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_HARDWARE_CONSUMERIRMANAGER_H
#define SCAPIX_ANDROID_HARDWARE_CONSUMERIRMANAGER_H

namespace scapix::java_api {

namespace android::hardware { class ConsumerIrManager_CarrierFrequencyRange; }

namespace android::hardware {

class ConsumerIrManager : public object_base<SCAPIX_META_STRING("android/hardware/ConsumerIrManager"),
	java::lang::Object>
{
public:

	using CarrierFrequencyRange = ConsumerIrManager_CarrierFrequencyRange;

	jboolean hasIrEmitter();
	void transmit(jint carrierFrequency, ref<link::java::array<jint>> pattern);
	ref<link::java::array<android::hardware::ConsumerIrManager_CarrierFrequencyRange>> getCarrierFrequencies();

protected:

	ConsumerIrManager(handle_type h) : base_(h) {}

};

} // namespace android::hardware
} // namespace scapix::java_api

#include <scapix/java_api/android/hardware/ConsumerIrManager_CarrierFrequencyRange.h>

namespace scapix::java_api {
namespace android::hardware {

inline jboolean ConsumerIrManager::hasIrEmitter() { return call_method<SCAPIX_META_STRING("hasIrEmitter"), jboolean>(); }
inline void ConsumerIrManager::transmit(jint carrierFrequency, ref<link::java::array<jint>> pattern) { return call_method<SCAPIX_META_STRING("transmit"), void>(carrierFrequency, pattern); }
inline ref<link::java::array<android::hardware::ConsumerIrManager_CarrierFrequencyRange>> ConsumerIrManager::getCarrierFrequencies() { return call_method<SCAPIX_META_STRING("getCarrierFrequencies"), ref<link::java::array<android::hardware::ConsumerIrManager_CarrierFrequencyRange>>>(); }

} // namespace android::hardware
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_HARDWARE_CONSUMERIRMANAGER_H
