// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/hardware/SensorEventListener2.h>

#ifndef SCAPIX_ANDROID_HARDWARE_SENSOREVENTCALLBACK_H
#define SCAPIX_ANDROID_HARDWARE_SENSOREVENTCALLBACK_H

namespace scapix::java_api {

namespace android::hardware { class Sensor; }
namespace android::hardware { class SensorAdditionalInfo; }
namespace android::hardware { class SensorEvent; }

namespace android::hardware {

class SensorEventCallback : public object_base<SCAPIX_META_STRING("android/hardware/SensorEventCallback"),
	java::lang::Object,
	android::hardware::SensorEventListener2>
{
public:

	static ref<SensorEventCallback> new_object();
	void onSensorChanged(ref<android::hardware::SensorEvent> event);
	void onAccuracyChanged(ref<android::hardware::Sensor> sensor, jint accuracy);
	void onFlushCompleted(ref<android::hardware::Sensor> sensor);
	void onSensorAdditionalInfo(ref<android::hardware::SensorAdditionalInfo> info);

protected:

	SensorEventCallback(handle_type h) : base_(h) {}

};

} // namespace android::hardware
} // namespace scapix::java_api

#include <scapix/java_api/android/hardware/Sensor.h>
#include <scapix/java_api/android/hardware/SensorAdditionalInfo.h>
#include <scapix/java_api/android/hardware/SensorEvent.h>

namespace scapix::java_api {
namespace android::hardware {

inline ref<SensorEventCallback> SensorEventCallback::new_object() { return base_::new_object(); }
inline void SensorEventCallback::onSensorChanged(ref<android::hardware::SensorEvent> event) { return call_method<SCAPIX_META_STRING("onSensorChanged"), void>(event); }
inline void SensorEventCallback::onAccuracyChanged(ref<android::hardware::Sensor> sensor, jint accuracy) { return call_method<SCAPIX_META_STRING("onAccuracyChanged"), void>(sensor, accuracy); }
inline void SensorEventCallback::onFlushCompleted(ref<android::hardware::Sensor> sensor) { return call_method<SCAPIX_META_STRING("onFlushCompleted"), void>(sensor); }
inline void SensorEventCallback::onSensorAdditionalInfo(ref<android::hardware::SensorAdditionalInfo> info) { return call_method<SCAPIX_META_STRING("onSensorAdditionalInfo"), void>(info); }

} // namespace android::hardware
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_HARDWARE_SENSOREVENTCALLBACK_H
