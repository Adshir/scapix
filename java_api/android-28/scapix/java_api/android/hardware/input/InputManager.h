// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_HARDWARE_INPUT_INPUTMANAGER_H
#define SCAPIX_ANDROID_HARDWARE_INPUT_INPUTMANAGER_H

namespace scapix::java_api {

namespace android::hardware::input { class InputManager_InputDeviceListener; }
namespace android::os { class Handler; }
namespace android::view { class InputDevice; }
namespace java::lang { class String; }

namespace android::hardware::input {

class InputManager : public object_base<SCAPIX_META_STRING("android/hardware/input/InputManager"),
	java::lang::Object>
{
public:

	using InputDeviceListener = InputManager_InputDeviceListener;

	static ref<java::lang::String> ACTION_QUERY_KEYBOARD_LAYOUTS_();
	static ref<java::lang::String> META_DATA_KEYBOARD_LAYOUTS_();

	ref<android::view::InputDevice> getInputDevice(jint id);
	ref<link::java::array<jint>> getInputDeviceIds();
	void registerInputDeviceListener(ref<android::hardware::input::InputManager_InputDeviceListener> listener, ref<android::os::Handler> handler);
	void unregisterInputDeviceListener(ref<android::hardware::input::InputManager_InputDeviceListener> listener);

protected:

	InputManager(handle_type h) : base_(h) {}

};

} // namespace android::hardware::input
} // namespace scapix::java_api

#include <scapix/java_api/android/hardware/input/InputManager_InputDeviceListener.h>
#include <scapix/java_api/android/os/Handler.h>
#include <scapix/java_api/android/view/InputDevice.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::hardware::input {

inline ref<java::lang::String> InputManager::ACTION_QUERY_KEYBOARD_LAYOUTS_() { return get_static_field<SCAPIX_META_STRING("ACTION_QUERY_KEYBOARD_LAYOUTS"), ref<java::lang::String>>(); }
inline ref<java::lang::String> InputManager::META_DATA_KEYBOARD_LAYOUTS_() { return get_static_field<SCAPIX_META_STRING("META_DATA_KEYBOARD_LAYOUTS"), ref<java::lang::String>>(); }
inline ref<android::view::InputDevice> InputManager::getInputDevice(jint id) { return call_method<SCAPIX_META_STRING("getInputDevice"), ref<android::view::InputDevice>>(id); }
inline ref<link::java::array<jint>> InputManager::getInputDeviceIds() { return call_method<SCAPIX_META_STRING("getInputDeviceIds"), ref<link::java::array<jint>>>(); }
inline void InputManager::registerInputDeviceListener(ref<android::hardware::input::InputManager_InputDeviceListener> listener, ref<android::os::Handler> handler) { return call_method<SCAPIX_META_STRING("registerInputDeviceListener"), void>(listener, handler); }
inline void InputManager::unregisterInputDeviceListener(ref<android::hardware::input::InputManager_InputDeviceListener> listener) { return call_method<SCAPIX_META_STRING("unregisterInputDeviceListener"), void>(listener); }

} // namespace android::hardware::input
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_HARDWARE_INPUT_INPUTMANAGER_H
