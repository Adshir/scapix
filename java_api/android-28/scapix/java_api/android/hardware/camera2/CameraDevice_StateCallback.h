// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_HARDWARE_CAMERA2_CAMERADEVICE_STATECALLBACK_H
#define SCAPIX_ANDROID_HARDWARE_CAMERA2_CAMERADEVICE_STATECALLBACK_H

namespace scapix::java_api {

namespace android::hardware::camera2 { class CameraDevice; }

namespace android::hardware::camera2 {

class CameraDevice_StateCallback : public object_base<SCAPIX_META_STRING("android/hardware/camera2/CameraDevice$StateCallback"),
	java::lang::Object>
{
public:

	static jint ERROR_CAMERA_DEVICE_();
	static jint ERROR_CAMERA_DISABLED_();
	static jint ERROR_CAMERA_IN_USE_();
	static jint ERROR_CAMERA_SERVICE_();
	static jint ERROR_MAX_CAMERAS_IN_USE_();

	static ref<CameraDevice_StateCallback> new_object();
	void onOpened(ref<android::hardware::camera2::CameraDevice> p1);
	void onClosed(ref<android::hardware::camera2::CameraDevice> camera);
	void onDisconnected(ref<android::hardware::camera2::CameraDevice> p1);
	void onError(ref<android::hardware::camera2::CameraDevice> p1, jint p2);

protected:

	CameraDevice_StateCallback(handle_type h) : base_(h) {}

};

} // namespace android::hardware::camera2
} // namespace scapix::java_api

#include <scapix/java_api/android/hardware/camera2/CameraDevice.h>

namespace scapix::java_api {
namespace android::hardware::camera2 {

inline jint CameraDevice_StateCallback::ERROR_CAMERA_DEVICE_() { return get_static_field<SCAPIX_META_STRING("ERROR_CAMERA_DEVICE"), jint>(); }
inline jint CameraDevice_StateCallback::ERROR_CAMERA_DISABLED_() { return get_static_field<SCAPIX_META_STRING("ERROR_CAMERA_DISABLED"), jint>(); }
inline jint CameraDevice_StateCallback::ERROR_CAMERA_IN_USE_() { return get_static_field<SCAPIX_META_STRING("ERROR_CAMERA_IN_USE"), jint>(); }
inline jint CameraDevice_StateCallback::ERROR_CAMERA_SERVICE_() { return get_static_field<SCAPIX_META_STRING("ERROR_CAMERA_SERVICE"), jint>(); }
inline jint CameraDevice_StateCallback::ERROR_MAX_CAMERAS_IN_USE_() { return get_static_field<SCAPIX_META_STRING("ERROR_MAX_CAMERAS_IN_USE"), jint>(); }
inline ref<CameraDevice_StateCallback> CameraDevice_StateCallback::new_object() { return base_::new_object(); }
inline void CameraDevice_StateCallback::onOpened(ref<android::hardware::camera2::CameraDevice> p1) { return call_method<SCAPIX_META_STRING("onOpened"), void>(p1); }
inline void CameraDevice_StateCallback::onClosed(ref<android::hardware::camera2::CameraDevice> camera) { return call_method<SCAPIX_META_STRING("onClosed"), void>(camera); }
inline void CameraDevice_StateCallback::onDisconnected(ref<android::hardware::camera2::CameraDevice> p1) { return call_method<SCAPIX_META_STRING("onDisconnected"), void>(p1); }
inline void CameraDevice_StateCallback::onError(ref<android::hardware::camera2::CameraDevice> p1, jint p2) { return call_method<SCAPIX_META_STRING("onError"), void>(p1, p2); }

} // namespace android::hardware::camera2
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_HARDWARE_CAMERA2_CAMERADEVICE_STATECALLBACK_H
