// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_HARDWARE_CAMERA2_PARAMS_INPUTCONFIGURATION_H
#define SCAPIX_ANDROID_HARDWARE_CAMERA2_PARAMS_INPUTCONFIGURATION_H

namespace scapix::java_api {

namespace java::lang { class String; }

namespace android::hardware::camera2::params {

class InputConfiguration : public object_base<SCAPIX_META_STRING("android/hardware/camera2/params/InputConfiguration"),
	java::lang::Object>
{
public:

	static ref<InputConfiguration> new_object(jint width, jint height, jint format);
	jint getWidth();
	jint getHeight();
	jint getFormat();
	jboolean equals(ref<java::lang::Object> obj);
	jint hashCode();
	ref<java::lang::String> toString();

protected:

	InputConfiguration(handle_type h) : base_(h) {}

};

} // namespace android::hardware::camera2::params
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::hardware::camera2::params {

inline ref<InputConfiguration> InputConfiguration::new_object(jint width, jint height, jint format) { return base_::new_object(width, height, format); }
inline jint InputConfiguration::getWidth() { return call_method<SCAPIX_META_STRING("getWidth"), jint>(); }
inline jint InputConfiguration::getHeight() { return call_method<SCAPIX_META_STRING("getHeight"), jint>(); }
inline jint InputConfiguration::getFormat() { return call_method<SCAPIX_META_STRING("getFormat"), jint>(); }
inline jboolean InputConfiguration::equals(ref<java::lang::Object> obj) { return call_method<SCAPIX_META_STRING("equals"), jboolean>(obj); }
inline jint InputConfiguration::hashCode() { return call_method<SCAPIX_META_STRING("hashCode"), jint>(); }
inline ref<java::lang::String> InputConfiguration::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }

} // namespace android::hardware::camera2::params
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_HARDWARE_CAMERA2_PARAMS_INPUTCONFIGURATION_H
