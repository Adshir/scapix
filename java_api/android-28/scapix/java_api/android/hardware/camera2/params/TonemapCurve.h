// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_HARDWARE_CAMERA2_PARAMS_TONEMAPCURVE_H
#define SCAPIX_ANDROID_HARDWARE_CAMERA2_PARAMS_TONEMAPCURVE_H

namespace scapix::java_api {

namespace android::graphics { class PointF; }
namespace java::lang { class String; }

namespace android::hardware::camera2::params {

class TonemapCurve : public object_base<SCAPIX_META_STRING("android/hardware/camera2/params/TonemapCurve"),
	java::lang::Object>
{
public:

	static jint CHANNEL_BLUE_();
	static jint CHANNEL_GREEN_();
	static jint CHANNEL_RED_();
	static jfloat LEVEL_BLACK_();
	static jfloat LEVEL_WHITE_();
	static jint POINT_SIZE_();

	static ref<TonemapCurve> new_object(ref<link::java::array<jfloat>> red, ref<link::java::array<jfloat>> green, ref<link::java::array<jfloat>> blue);
	jint getPointCount(jint colorChannel);
	ref<android::graphics::PointF> getPoint(jint colorChannel, jint index);
	void copyColorCurve(jint colorChannel, ref<link::java::array<jfloat>> destination, jint offset);
	jboolean equals(ref<java::lang::Object> obj);
	jint hashCode();
	ref<java::lang::String> toString();

protected:

	TonemapCurve(handle_type h) : base_(h) {}

};

} // namespace android::hardware::camera2::params
} // namespace scapix::java_api

#include <scapix/java_api/android/graphics/PointF.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::hardware::camera2::params {

inline jint TonemapCurve::CHANNEL_BLUE_() { return get_static_field<SCAPIX_META_STRING("CHANNEL_BLUE"), jint>(); }
inline jint TonemapCurve::CHANNEL_GREEN_() { return get_static_field<SCAPIX_META_STRING("CHANNEL_GREEN"), jint>(); }
inline jint TonemapCurve::CHANNEL_RED_() { return get_static_field<SCAPIX_META_STRING("CHANNEL_RED"), jint>(); }
inline jfloat TonemapCurve::LEVEL_BLACK_() { return get_static_field<SCAPIX_META_STRING("LEVEL_BLACK"), jfloat>(); }
inline jfloat TonemapCurve::LEVEL_WHITE_() { return get_static_field<SCAPIX_META_STRING("LEVEL_WHITE"), jfloat>(); }
inline jint TonemapCurve::POINT_SIZE_() { return get_static_field<SCAPIX_META_STRING("POINT_SIZE"), jint>(); }
inline ref<TonemapCurve> TonemapCurve::new_object(ref<link::java::array<jfloat>> red, ref<link::java::array<jfloat>> green, ref<link::java::array<jfloat>> blue) { return base_::new_object(red, green, blue); }
inline jint TonemapCurve::getPointCount(jint colorChannel) { return call_method<SCAPIX_META_STRING("getPointCount"), jint>(colorChannel); }
inline ref<android::graphics::PointF> TonemapCurve::getPoint(jint colorChannel, jint index) { return call_method<SCAPIX_META_STRING("getPoint"), ref<android::graphics::PointF>>(colorChannel, index); }
inline void TonemapCurve::copyColorCurve(jint colorChannel, ref<link::java::array<jfloat>> destination, jint offset) { return call_method<SCAPIX_META_STRING("copyColorCurve"), void>(colorChannel, destination, offset); }
inline jboolean TonemapCurve::equals(ref<java::lang::Object> obj) { return call_method<SCAPIX_META_STRING("equals"), jboolean>(obj); }
inline jint TonemapCurve::hashCode() { return call_method<SCAPIX_META_STRING("hashCode"), jint>(); }
inline ref<java::lang::String> TonemapCurve::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }

} // namespace android::hardware::camera2::params
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_HARDWARE_CAMERA2_PARAMS_TONEMAPCURVE_H
