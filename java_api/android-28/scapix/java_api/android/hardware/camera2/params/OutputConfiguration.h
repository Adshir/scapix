// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_ANDROID_HARDWARE_CAMERA2_PARAMS_OUTPUTCONFIGURATION_H
#define SCAPIX_ANDROID_HARDWARE_CAMERA2_PARAMS_OUTPUTCONFIGURATION_H

namespace scapix::java_api {

namespace android::os { class Parcel; }
namespace android::os { class Parcelable_Creator; }
namespace android::util { class Size; }
namespace android::view { class Surface; }
namespace java::lang { class Class; }
namespace java::lang { class String; }
namespace java::util { class List; }

namespace android::hardware::camera2::params {

class OutputConfiguration : public object_base<SCAPIX_META_STRING("android/hardware/camera2/params/OutputConfiguration"),
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static ref<android::os::Parcelable_Creator> CREATOR_();
	static jint SURFACE_GROUP_ID_NONE_();

	static ref<OutputConfiguration> new_object(ref<android::view::Surface> surface);
	static ref<OutputConfiguration> new_object(jint surfaceGroupId, ref<android::view::Surface> surface);
	static ref<OutputConfiguration> new_object(ref<android::util::Size> surfaceSize, ref<java::lang::Class> klass);
	void enableSurfaceSharing();
	void setPhysicalCameraId(ref<java::lang::String> physicalCameraId);
	void addSurface(ref<android::view::Surface> surface);
	void removeSurface(ref<android::view::Surface> surface);
	jint getMaxSharedSurfaceCount();
	ref<android::view::Surface> getSurface();
	ref<java::util::List> getSurfaces();
	jint getSurfaceGroupId();
	jint describeContents();
	void writeToParcel(ref<android::os::Parcel> dest, jint flags);
	jboolean equals(ref<java::lang::Object> obj);
	jint hashCode();

protected:

	OutputConfiguration(handle_type h) : base_(h) {}

};

} // namespace android::hardware::camera2::params
} // namespace scapix::java_api

#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/android/util/Size.h>
#include <scapix/java_api/android/view/Surface.h>
#include <scapix/java_api/java/lang/Class.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/List.h>

namespace scapix::java_api {
namespace android::hardware::camera2::params {

inline ref<android::os::Parcelable_Creator> OutputConfiguration::CREATOR_() { return get_static_field<SCAPIX_META_STRING("CREATOR"), ref<android::os::Parcelable_Creator>>(); }
inline jint OutputConfiguration::SURFACE_GROUP_ID_NONE_() { return get_static_field<SCAPIX_META_STRING("SURFACE_GROUP_ID_NONE"), jint>(); }
inline ref<OutputConfiguration> OutputConfiguration::new_object(ref<android::view::Surface> surface) { return base_::new_object(surface); }
inline ref<OutputConfiguration> OutputConfiguration::new_object(jint surfaceGroupId, ref<android::view::Surface> surface) { return base_::new_object(surfaceGroupId, surface); }
inline ref<OutputConfiguration> OutputConfiguration::new_object(ref<android::util::Size> surfaceSize, ref<java::lang::Class> klass) { return base_::new_object(surfaceSize, klass); }
inline void OutputConfiguration::enableSurfaceSharing() { return call_method<SCAPIX_META_STRING("enableSurfaceSharing"), void>(); }
inline void OutputConfiguration::setPhysicalCameraId(ref<java::lang::String> physicalCameraId) { return call_method<SCAPIX_META_STRING("setPhysicalCameraId"), void>(physicalCameraId); }
inline void OutputConfiguration::addSurface(ref<android::view::Surface> surface) { return call_method<SCAPIX_META_STRING("addSurface"), void>(surface); }
inline void OutputConfiguration::removeSurface(ref<android::view::Surface> surface) { return call_method<SCAPIX_META_STRING("removeSurface"), void>(surface); }
inline jint OutputConfiguration::getMaxSharedSurfaceCount() { return call_method<SCAPIX_META_STRING("getMaxSharedSurfaceCount"), jint>(); }
inline ref<android::view::Surface> OutputConfiguration::getSurface() { return call_method<SCAPIX_META_STRING("getSurface"), ref<android::view::Surface>>(); }
inline ref<java::util::List> OutputConfiguration::getSurfaces() { return call_method<SCAPIX_META_STRING("getSurfaces"), ref<java::util::List>>(); }
inline jint OutputConfiguration::getSurfaceGroupId() { return call_method<SCAPIX_META_STRING("getSurfaceGroupId"), jint>(); }
inline jint OutputConfiguration::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }
inline void OutputConfiguration::writeToParcel(ref<android::os::Parcel> dest, jint flags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(dest, flags); }
inline jboolean OutputConfiguration::equals(ref<java::lang::Object> obj) { return call_method<SCAPIX_META_STRING("equals"), jboolean>(obj); }
inline jint OutputConfiguration::hashCode() { return call_method<SCAPIX_META_STRING("hashCode"), jint>(); }

} // namespace android::hardware::camera2::params
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_HARDWARE_CAMERA2_PARAMS_OUTPUTCONFIGURATION_H
