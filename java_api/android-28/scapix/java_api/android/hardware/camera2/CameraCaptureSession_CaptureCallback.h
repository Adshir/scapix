// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_HARDWARE_CAMERA2_CAMERACAPTURESESSION_CAPTURECALLBACK_H
#define SCAPIX_ANDROID_HARDWARE_CAMERA2_CAMERACAPTURESESSION_CAPTURECALLBACK_H

namespace scapix::java_api {

namespace android::hardware::camera2 { class CameraCaptureSession; }
namespace android::hardware::camera2 { class CaptureFailure; }
namespace android::hardware::camera2 { class CaptureRequest; }
namespace android::hardware::camera2 { class CaptureResult; }
namespace android::hardware::camera2 { class TotalCaptureResult; }
namespace android::view { class Surface; }

namespace android::hardware::camera2 {

class CameraCaptureSession_CaptureCallback : public object_base<SCAPIX_META_STRING("android/hardware/camera2/CameraCaptureSession$CaptureCallback"),
	java::lang::Object>
{
public:

	static ref<CameraCaptureSession_CaptureCallback> new_object();
	void onCaptureStarted(ref<android::hardware::camera2::CameraCaptureSession> session, ref<android::hardware::camera2::CaptureRequest> request, jlong timestamp, jlong p4);
	void onCaptureProgressed(ref<android::hardware::camera2::CameraCaptureSession> session, ref<android::hardware::camera2::CaptureRequest> request, ref<android::hardware::camera2::CaptureResult> partialResult);
	void onCaptureCompleted(ref<android::hardware::camera2::CameraCaptureSession> session, ref<android::hardware::camera2::CaptureRequest> request, ref<android::hardware::camera2::TotalCaptureResult> result);
	void onCaptureFailed(ref<android::hardware::camera2::CameraCaptureSession> session, ref<android::hardware::camera2::CaptureRequest> request, ref<android::hardware::camera2::CaptureFailure> failure);
	void onCaptureSequenceCompleted(ref<android::hardware::camera2::CameraCaptureSession> session, jint sequenceId, jlong frameNumber);
	void onCaptureSequenceAborted(ref<android::hardware::camera2::CameraCaptureSession> session, jint sequenceId);
	void onCaptureBufferLost(ref<android::hardware::camera2::CameraCaptureSession> session, ref<android::hardware::camera2::CaptureRequest> request, ref<android::view::Surface> target, jlong frameNumber);

protected:

	CameraCaptureSession_CaptureCallback(handle_type h) : base_(h) {}

};

} // namespace android::hardware::camera2
} // namespace scapix::java_api

#include <scapix/java_api/android/hardware/camera2/CameraCaptureSession.h>
#include <scapix/java_api/android/hardware/camera2/CaptureFailure.h>
#include <scapix/java_api/android/hardware/camera2/CaptureRequest.h>
#include <scapix/java_api/android/hardware/camera2/CaptureResult.h>
#include <scapix/java_api/android/hardware/camera2/TotalCaptureResult.h>
#include <scapix/java_api/android/view/Surface.h>

namespace scapix::java_api {
namespace android::hardware::camera2 {

inline ref<CameraCaptureSession_CaptureCallback> CameraCaptureSession_CaptureCallback::new_object() { return base_::new_object(); }
inline void CameraCaptureSession_CaptureCallback::onCaptureStarted(ref<android::hardware::camera2::CameraCaptureSession> session, ref<android::hardware::camera2::CaptureRequest> request, jlong timestamp, jlong p4) { return call_method<SCAPIX_META_STRING("onCaptureStarted"), void>(session, request, timestamp, p4); }
inline void CameraCaptureSession_CaptureCallback::onCaptureProgressed(ref<android::hardware::camera2::CameraCaptureSession> session, ref<android::hardware::camera2::CaptureRequest> request, ref<android::hardware::camera2::CaptureResult> partialResult) { return call_method<SCAPIX_META_STRING("onCaptureProgressed"), void>(session, request, partialResult); }
inline void CameraCaptureSession_CaptureCallback::onCaptureCompleted(ref<android::hardware::camera2::CameraCaptureSession> session, ref<android::hardware::camera2::CaptureRequest> request, ref<android::hardware::camera2::TotalCaptureResult> result) { return call_method<SCAPIX_META_STRING("onCaptureCompleted"), void>(session, request, result); }
inline void CameraCaptureSession_CaptureCallback::onCaptureFailed(ref<android::hardware::camera2::CameraCaptureSession> session, ref<android::hardware::camera2::CaptureRequest> request, ref<android::hardware::camera2::CaptureFailure> failure) { return call_method<SCAPIX_META_STRING("onCaptureFailed"), void>(session, request, failure); }
inline void CameraCaptureSession_CaptureCallback::onCaptureSequenceCompleted(ref<android::hardware::camera2::CameraCaptureSession> session, jint sequenceId, jlong frameNumber) { return call_method<SCAPIX_META_STRING("onCaptureSequenceCompleted"), void>(session, sequenceId, frameNumber); }
inline void CameraCaptureSession_CaptureCallback::onCaptureSequenceAborted(ref<android::hardware::camera2::CameraCaptureSession> session, jint sequenceId) { return call_method<SCAPIX_META_STRING("onCaptureSequenceAborted"), void>(session, sequenceId); }
inline void CameraCaptureSession_CaptureCallback::onCaptureBufferLost(ref<android::hardware::camera2::CameraCaptureSession> session, ref<android::hardware::camera2::CaptureRequest> request, ref<android::view::Surface> target, jlong frameNumber) { return call_method<SCAPIX_META_STRING("onCaptureBufferLost"), void>(session, request, target, frameNumber); }

} // namespace android::hardware::camera2
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_HARDWARE_CAMERA2_CAMERACAPTURESESSION_CAPTURECALLBACK_H
