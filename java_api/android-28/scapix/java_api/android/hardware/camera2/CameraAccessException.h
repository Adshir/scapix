// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/util/AndroidException.h>

#ifndef SCAPIX_ANDROID_HARDWARE_CAMERA2_CAMERAACCESSEXCEPTION_H
#define SCAPIX_ANDROID_HARDWARE_CAMERA2_CAMERAACCESSEXCEPTION_H

namespace scapix::java_api {

namespace java::lang { class String; }
namespace java::lang { class Throwable; }

namespace android::hardware::camera2 {

class CameraAccessException : public object_base<SCAPIX_META_STRING("android/hardware/camera2/CameraAccessException"),
	android::util::AndroidException>
{
public:

	static jint CAMERA_DISABLED_();
	static jint CAMERA_DISCONNECTED_();
	static jint CAMERA_ERROR_();
	static jint CAMERA_IN_USE_();
	static jint MAX_CAMERAS_IN_USE_();

	static ref<CameraAccessException> new_object(jint problem);
	static ref<CameraAccessException> new_object(jint problem, ref<java::lang::String> message);
	static ref<CameraAccessException> new_object(jint problem, ref<java::lang::String> message, ref<java::lang::Throwable> cause);
	static ref<CameraAccessException> new_object(jint problem, ref<java::lang::Throwable> cause);
	jint getReason();

protected:

	CameraAccessException(handle_type h) : base_(h) {}

};

} // namespace android::hardware::camera2
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/lang/Throwable.h>

namespace scapix::java_api {
namespace android::hardware::camera2 {

inline jint CameraAccessException::CAMERA_DISABLED_() { return get_static_field<SCAPIX_META_STRING("CAMERA_DISABLED"), jint>(); }
inline jint CameraAccessException::CAMERA_DISCONNECTED_() { return get_static_field<SCAPIX_META_STRING("CAMERA_DISCONNECTED"), jint>(); }
inline jint CameraAccessException::CAMERA_ERROR_() { return get_static_field<SCAPIX_META_STRING("CAMERA_ERROR"), jint>(); }
inline jint CameraAccessException::CAMERA_IN_USE_() { return get_static_field<SCAPIX_META_STRING("CAMERA_IN_USE"), jint>(); }
inline jint CameraAccessException::MAX_CAMERAS_IN_USE_() { return get_static_field<SCAPIX_META_STRING("MAX_CAMERAS_IN_USE"), jint>(); }
inline ref<CameraAccessException> CameraAccessException::new_object(jint problem) { return base_::new_object(problem); }
inline ref<CameraAccessException> CameraAccessException::new_object(jint problem, ref<java::lang::String> message) { return base_::new_object(problem, message); }
inline ref<CameraAccessException> CameraAccessException::new_object(jint problem, ref<java::lang::String> message, ref<java::lang::Throwable> cause) { return base_::new_object(problem, message, cause); }
inline ref<CameraAccessException> CameraAccessException::new_object(jint problem, ref<java::lang::Throwable> cause) { return base_::new_object(problem, cause); }
inline jint CameraAccessException::getReason() { return call_method<SCAPIX_META_STRING("getReason"), jint>(); }

} // namespace android::hardware::camera2
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_HARDWARE_CAMERA2_CAMERAACCESSEXCEPTION_H
