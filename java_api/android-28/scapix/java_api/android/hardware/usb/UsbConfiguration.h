// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_ANDROID_HARDWARE_USB_USBCONFIGURATION_H
#define SCAPIX_ANDROID_HARDWARE_USB_USBCONFIGURATION_H

namespace scapix::java_api {

namespace android::hardware::usb { class UsbInterface; }
namespace android::os { class Parcel; }
namespace android::os { class Parcelable_Creator; }
namespace java::lang { class String; }

namespace android::hardware::usb {

class UsbConfiguration : public object_base<SCAPIX_META_STRING("android/hardware/usb/UsbConfiguration"),
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static ref<android::os::Parcelable_Creator> CREATOR_();

	jint getId();
	ref<java::lang::String> getName();
	jboolean isSelfPowered();
	jboolean isRemoteWakeup();
	jint getMaxPower();
	jint getInterfaceCount();
	ref<android::hardware::usb::UsbInterface> getInterface(jint index);
	ref<java::lang::String> toString();
	jint describeContents();
	void writeToParcel(ref<android::os::Parcel> parcel, jint flags);

protected:

	UsbConfiguration(handle_type h) : base_(h) {}

};

} // namespace android::hardware::usb
} // namespace scapix::java_api

#include <scapix/java_api/android/hardware/usb/UsbInterface.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::hardware::usb {

inline ref<android::os::Parcelable_Creator> UsbConfiguration::CREATOR_() { return get_static_field<SCAPIX_META_STRING("CREATOR"), ref<android::os::Parcelable_Creator>>(); }
inline jint UsbConfiguration::getId() { return call_method<SCAPIX_META_STRING("getId"), jint>(); }
inline ref<java::lang::String> UsbConfiguration::getName() { return call_method<SCAPIX_META_STRING("getName"), ref<java::lang::String>>(); }
inline jboolean UsbConfiguration::isSelfPowered() { return call_method<SCAPIX_META_STRING("isSelfPowered"), jboolean>(); }
inline jboolean UsbConfiguration::isRemoteWakeup() { return call_method<SCAPIX_META_STRING("isRemoteWakeup"), jboolean>(); }
inline jint UsbConfiguration::getMaxPower() { return call_method<SCAPIX_META_STRING("getMaxPower"), jint>(); }
inline jint UsbConfiguration::getInterfaceCount() { return call_method<SCAPIX_META_STRING("getInterfaceCount"), jint>(); }
inline ref<android::hardware::usb::UsbInterface> UsbConfiguration::getInterface(jint index) { return call_method<SCAPIX_META_STRING("getInterface"), ref<android::hardware::usb::UsbInterface>>(index); }
inline ref<java::lang::String> UsbConfiguration::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }
inline jint UsbConfiguration::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }
inline void UsbConfiguration::writeToParcel(ref<android::os::Parcel> parcel, jint flags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(parcel, flags); }

} // namespace android::hardware::usb
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_HARDWARE_USB_USBCONFIGURATION_H
