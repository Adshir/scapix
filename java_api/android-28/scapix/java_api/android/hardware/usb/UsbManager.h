// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_HARDWARE_USB_USBMANAGER_H
#define SCAPIX_ANDROID_HARDWARE_USB_USBMANAGER_H

namespace scapix::java_api {

namespace android::app { class PendingIntent; }
namespace android::hardware::usb { class UsbAccessory; }
namespace android::hardware::usb { class UsbDevice; }
namespace android::hardware::usb { class UsbDeviceConnection; }
namespace android::os { class ParcelFileDescriptor; }
namespace java::lang { class String; }
namespace java::util { class HashMap; }

namespace android::hardware::usb {

class UsbManager : public object_base<SCAPIX_META_STRING("android/hardware/usb/UsbManager"),
	java::lang::Object>
{
public:

	static ref<java::lang::String> ACTION_USB_ACCESSORY_ATTACHED_();
	static ref<java::lang::String> ACTION_USB_ACCESSORY_DETACHED_();
	static ref<java::lang::String> ACTION_USB_DEVICE_ATTACHED_();
	static ref<java::lang::String> ACTION_USB_DEVICE_DETACHED_();
	static ref<java::lang::String> EXTRA_ACCESSORY_();
	static ref<java::lang::String> EXTRA_DEVICE_();
	static ref<java::lang::String> EXTRA_PERMISSION_GRANTED_();

	ref<java::util::HashMap> getDeviceList();
	ref<android::hardware::usb::UsbDeviceConnection> openDevice(ref<android::hardware::usb::UsbDevice> device);
	ref<link::java::array<android::hardware::usb::UsbAccessory>> getAccessoryList();
	ref<android::os::ParcelFileDescriptor> openAccessory(ref<android::hardware::usb::UsbAccessory> accessory);
	jboolean hasPermission(ref<android::hardware::usb::UsbDevice> device);
	jboolean hasPermission(ref<android::hardware::usb::UsbAccessory> accessory);
	void requestPermission(ref<android::hardware::usb::UsbDevice> device, ref<android::app::PendingIntent> pi);
	void requestPermission(ref<android::hardware::usb::UsbAccessory> accessory, ref<android::app::PendingIntent> pi);

protected:

	UsbManager(handle_type h) : base_(h) {}

};

} // namespace android::hardware::usb
} // namespace scapix::java_api

#include <scapix/java_api/android/app/PendingIntent.h>
#include <scapix/java_api/android/hardware/usb/UsbAccessory.h>
#include <scapix/java_api/android/hardware/usb/UsbDevice.h>
#include <scapix/java_api/android/hardware/usb/UsbDeviceConnection.h>
#include <scapix/java_api/android/os/ParcelFileDescriptor.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/HashMap.h>

namespace scapix::java_api {
namespace android::hardware::usb {

inline ref<java::lang::String> UsbManager::ACTION_USB_ACCESSORY_ATTACHED_() { return get_static_field<SCAPIX_META_STRING("ACTION_USB_ACCESSORY_ATTACHED"), ref<java::lang::String>>(); }
inline ref<java::lang::String> UsbManager::ACTION_USB_ACCESSORY_DETACHED_() { return get_static_field<SCAPIX_META_STRING("ACTION_USB_ACCESSORY_DETACHED"), ref<java::lang::String>>(); }
inline ref<java::lang::String> UsbManager::ACTION_USB_DEVICE_ATTACHED_() { return get_static_field<SCAPIX_META_STRING("ACTION_USB_DEVICE_ATTACHED"), ref<java::lang::String>>(); }
inline ref<java::lang::String> UsbManager::ACTION_USB_DEVICE_DETACHED_() { return get_static_field<SCAPIX_META_STRING("ACTION_USB_DEVICE_DETACHED"), ref<java::lang::String>>(); }
inline ref<java::lang::String> UsbManager::EXTRA_ACCESSORY_() { return get_static_field<SCAPIX_META_STRING("EXTRA_ACCESSORY"), ref<java::lang::String>>(); }
inline ref<java::lang::String> UsbManager::EXTRA_DEVICE_() { return get_static_field<SCAPIX_META_STRING("EXTRA_DEVICE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> UsbManager::EXTRA_PERMISSION_GRANTED_() { return get_static_field<SCAPIX_META_STRING("EXTRA_PERMISSION_GRANTED"), ref<java::lang::String>>(); }
inline ref<java::util::HashMap> UsbManager::getDeviceList() { return call_method<SCAPIX_META_STRING("getDeviceList"), ref<java::util::HashMap>>(); }
inline ref<android::hardware::usb::UsbDeviceConnection> UsbManager::openDevice(ref<android::hardware::usb::UsbDevice> device) { return call_method<SCAPIX_META_STRING("openDevice"), ref<android::hardware::usb::UsbDeviceConnection>>(device); }
inline ref<link::java::array<android::hardware::usb::UsbAccessory>> UsbManager::getAccessoryList() { return call_method<SCAPIX_META_STRING("getAccessoryList"), ref<link::java::array<android::hardware::usb::UsbAccessory>>>(); }
inline ref<android::os::ParcelFileDescriptor> UsbManager::openAccessory(ref<android::hardware::usb::UsbAccessory> accessory) { return call_method<SCAPIX_META_STRING("openAccessory"), ref<android::os::ParcelFileDescriptor>>(accessory); }
inline jboolean UsbManager::hasPermission(ref<android::hardware::usb::UsbDevice> device) { return call_method<SCAPIX_META_STRING("hasPermission"), jboolean>(device); }
inline jboolean UsbManager::hasPermission(ref<android::hardware::usb::UsbAccessory> accessory) { return call_method<SCAPIX_META_STRING("hasPermission"), jboolean>(accessory); }
inline void UsbManager::requestPermission(ref<android::hardware::usb::UsbDevice> device, ref<android::app::PendingIntent> pi) { return call_method<SCAPIX_META_STRING("requestPermission"), void>(device, pi); }
inline void UsbManager::requestPermission(ref<android::hardware::usb::UsbAccessory> accessory, ref<android::app::PendingIntent> pi) { return call_method<SCAPIX_META_STRING("requestPermission"), void>(accessory, pi); }

} // namespace android::hardware::usb
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_HARDWARE_USB_USBMANAGER_H
