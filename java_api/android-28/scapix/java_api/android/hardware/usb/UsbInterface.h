// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_ANDROID_HARDWARE_USB_USBINTERFACE_H
#define SCAPIX_ANDROID_HARDWARE_USB_USBINTERFACE_H

namespace scapix::java_api {

namespace android::hardware::usb { class UsbEndpoint; }
namespace android::os { class Parcel; }
namespace android::os { class Parcelable_Creator; }
namespace java::lang { class String; }

namespace android::hardware::usb {

class UsbInterface : public object_base<SCAPIX_META_STRING("android/hardware/usb/UsbInterface"),
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static ref<android::os::Parcelable_Creator> CREATOR_();

	jint getId();
	jint getAlternateSetting();
	ref<java::lang::String> getName();
	jint getInterfaceClass();
	jint getInterfaceSubclass();
	jint getInterfaceProtocol();
	jint getEndpointCount();
	ref<android::hardware::usb::UsbEndpoint> getEndpoint(jint index);
	ref<java::lang::String> toString();
	jint describeContents();
	void writeToParcel(ref<android::os::Parcel> parcel, jint flags);

protected:

	UsbInterface(handle_type h) : base_(h) {}

};

} // namespace android::hardware::usb
} // namespace scapix::java_api

#include <scapix/java_api/android/hardware/usb/UsbEndpoint.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::hardware::usb {

inline ref<android::os::Parcelable_Creator> UsbInterface::CREATOR_() { return get_static_field<SCAPIX_META_STRING("CREATOR"), ref<android::os::Parcelable_Creator>>(); }
inline jint UsbInterface::getId() { return call_method<SCAPIX_META_STRING("getId"), jint>(); }
inline jint UsbInterface::getAlternateSetting() { return call_method<SCAPIX_META_STRING("getAlternateSetting"), jint>(); }
inline ref<java::lang::String> UsbInterface::getName() { return call_method<SCAPIX_META_STRING("getName"), ref<java::lang::String>>(); }
inline jint UsbInterface::getInterfaceClass() { return call_method<SCAPIX_META_STRING("getInterfaceClass"), jint>(); }
inline jint UsbInterface::getInterfaceSubclass() { return call_method<SCAPIX_META_STRING("getInterfaceSubclass"), jint>(); }
inline jint UsbInterface::getInterfaceProtocol() { return call_method<SCAPIX_META_STRING("getInterfaceProtocol"), jint>(); }
inline jint UsbInterface::getEndpointCount() { return call_method<SCAPIX_META_STRING("getEndpointCount"), jint>(); }
inline ref<android::hardware::usb::UsbEndpoint> UsbInterface::getEndpoint(jint index) { return call_method<SCAPIX_META_STRING("getEndpoint"), ref<android::hardware::usb::UsbEndpoint>>(index); }
inline ref<java::lang::String> UsbInterface::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }
inline jint UsbInterface::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }
inline void UsbInterface::writeToParcel(ref<android::os::Parcel> parcel, jint flags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(parcel, flags); }

} // namespace android::hardware::usb
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_HARDWARE_USB_USBINTERFACE_H
