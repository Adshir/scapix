// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_ANDROID_HARDWARE_USB_USBDEVICE_H
#define SCAPIX_ANDROID_HARDWARE_USB_USBDEVICE_H

namespace scapix::java_api {

namespace android::hardware::usb { class UsbConfiguration; }
namespace android::hardware::usb { class UsbInterface; }
namespace android::os { class Parcel; }
namespace android::os { class Parcelable_Creator; }
namespace java::lang { class String; }

namespace android::hardware::usb {

class UsbDevice : public object_base<SCAPIX_META_STRING("android/hardware/usb/UsbDevice"),
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static ref<android::os::Parcelable_Creator> CREATOR_();

	ref<java::lang::String> getDeviceName();
	ref<java::lang::String> getManufacturerName();
	ref<java::lang::String> getProductName();
	ref<java::lang::String> getVersion();
	ref<java::lang::String> getSerialNumber();
	jint getDeviceId();
	jint getVendorId();
	jint getProductId();
	jint getDeviceClass();
	jint getDeviceSubclass();
	jint getDeviceProtocol();
	jint getConfigurationCount();
	ref<android::hardware::usb::UsbConfiguration> getConfiguration(jint index);
	jint getInterfaceCount();
	ref<android::hardware::usb::UsbInterface> getInterface(jint index);
	jboolean equals(ref<java::lang::Object> o);
	jint hashCode();
	ref<java::lang::String> toString();
	jint describeContents();
	void writeToParcel(ref<android::os::Parcel> parcel, jint flags);
	static jint getDeviceId(ref<java::lang::String> name);
	static ref<java::lang::String> getDeviceName(jint id);

protected:

	UsbDevice(handle_type h) : base_(h) {}

};

} // namespace android::hardware::usb
} // namespace scapix::java_api

#include <scapix/java_api/android/hardware/usb/UsbConfiguration.h>
#include <scapix/java_api/android/hardware/usb/UsbInterface.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::hardware::usb {

inline ref<android::os::Parcelable_Creator> UsbDevice::CREATOR_() { return get_static_field<SCAPIX_META_STRING("CREATOR"), ref<android::os::Parcelable_Creator>>(); }
inline ref<java::lang::String> UsbDevice::getDeviceName() { return call_method<SCAPIX_META_STRING("getDeviceName"), ref<java::lang::String>>(); }
inline ref<java::lang::String> UsbDevice::getManufacturerName() { return call_method<SCAPIX_META_STRING("getManufacturerName"), ref<java::lang::String>>(); }
inline ref<java::lang::String> UsbDevice::getProductName() { return call_method<SCAPIX_META_STRING("getProductName"), ref<java::lang::String>>(); }
inline ref<java::lang::String> UsbDevice::getVersion() { return call_method<SCAPIX_META_STRING("getVersion"), ref<java::lang::String>>(); }
inline ref<java::lang::String> UsbDevice::getSerialNumber() { return call_method<SCAPIX_META_STRING("getSerialNumber"), ref<java::lang::String>>(); }
inline jint UsbDevice::getDeviceId() { return call_method<SCAPIX_META_STRING("getDeviceId"), jint>(); }
inline jint UsbDevice::getVendorId() { return call_method<SCAPIX_META_STRING("getVendorId"), jint>(); }
inline jint UsbDevice::getProductId() { return call_method<SCAPIX_META_STRING("getProductId"), jint>(); }
inline jint UsbDevice::getDeviceClass() { return call_method<SCAPIX_META_STRING("getDeviceClass"), jint>(); }
inline jint UsbDevice::getDeviceSubclass() { return call_method<SCAPIX_META_STRING("getDeviceSubclass"), jint>(); }
inline jint UsbDevice::getDeviceProtocol() { return call_method<SCAPIX_META_STRING("getDeviceProtocol"), jint>(); }
inline jint UsbDevice::getConfigurationCount() { return call_method<SCAPIX_META_STRING("getConfigurationCount"), jint>(); }
inline ref<android::hardware::usb::UsbConfiguration> UsbDevice::getConfiguration(jint index) { return call_method<SCAPIX_META_STRING("getConfiguration"), ref<android::hardware::usb::UsbConfiguration>>(index); }
inline jint UsbDevice::getInterfaceCount() { return call_method<SCAPIX_META_STRING("getInterfaceCount"), jint>(); }
inline ref<android::hardware::usb::UsbInterface> UsbDevice::getInterface(jint index) { return call_method<SCAPIX_META_STRING("getInterface"), ref<android::hardware::usb::UsbInterface>>(index); }
inline jboolean UsbDevice::equals(ref<java::lang::Object> o) { return call_method<SCAPIX_META_STRING("equals"), jboolean>(o); }
inline jint UsbDevice::hashCode() { return call_method<SCAPIX_META_STRING("hashCode"), jint>(); }
inline ref<java::lang::String> UsbDevice::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }
inline jint UsbDevice::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }
inline void UsbDevice::writeToParcel(ref<android::os::Parcel> parcel, jint flags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(parcel, flags); }
inline jint UsbDevice::getDeviceId(ref<java::lang::String> name) { return call_static_method<SCAPIX_META_STRING("getDeviceId"), jint>(name); }
inline ref<java::lang::String> UsbDevice::getDeviceName(jint id) { return call_static_method<SCAPIX_META_STRING("getDeviceName"), ref<java::lang::String>>(id); }

} // namespace android::hardware::usb
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_HARDWARE_USB_USBDEVICE_H
