// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/Comparable.h>

#ifndef SCAPIX_ANDROID_PREFERENCE_PREFERENCE_H
#define SCAPIX_ANDROID_PREFERENCE_PREFERENCE_H

namespace scapix::java_api {

namespace android::content { class Context; }
namespace android::content { class Intent; }
namespace android::content { class SharedPreferences; }
namespace android::content { class SharedPreferences_Editor; }
namespace android::graphics::drawable { class Drawable; }
namespace android::os { class Bundle; }
namespace android::preference { class Preference_OnPreferenceChangeListener; }
namespace android::preference { class Preference_OnPreferenceClickListener; }
namespace android::preference { class PreferenceDataStore; }
namespace android::preference { class PreferenceGroup; }
namespace android::preference { class PreferenceManager; }
namespace android::util { class AttributeSet; }
namespace android::view { class View; }
namespace android::view { class ViewGroup; }
namespace java::lang { class CharSequence; }
namespace java::lang { class String; }
namespace java::util { class Set; }
namespace android::preference { class Preference_BaseSavedState; }

namespace android::preference {

class Preference : public object_base<SCAPIX_META_STRING("android/preference/Preference"),
	java::lang::Object,
	java::lang::Comparable>
{
public:

	using OnPreferenceClickListener = Preference_OnPreferenceClickListener;
	using OnPreferenceChangeListener = Preference_OnPreferenceChangeListener;
	using BaseSavedState = Preference_BaseSavedState;

	static jint DEFAULT_ORDER_();

	static ref<Preference> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr, jint defStyleRes);
	static ref<Preference> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr);
	static ref<Preference> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs);
	static ref<Preference> new_object(ref<android::content::Context> context);
	void setIntent(ref<android::content::Intent> intent);
	ref<android::content::Intent> getIntent();
	void setFragment(ref<java::lang::String> fragment);
	ref<java::lang::String> getFragment();
	void setPreferenceDataStore(ref<android::preference::PreferenceDataStore> dataStore);
	ref<android::preference::PreferenceDataStore> getPreferenceDataStore();
	ref<android::os::Bundle> getExtras();
	ref<android::os::Bundle> peekExtras();
	void setLayoutResource(jint layoutResId);
	jint getLayoutResource();
	void setWidgetLayoutResource(jint widgetLayoutResId);
	jint getWidgetLayoutResource();
	ref<android::view::View> getView(ref<android::view::View> convertView, ref<android::view::ViewGroup> parent);
	void setOrder(jint order);
	jint getOrder();
	void setTitle(ref<java::lang::CharSequence> title);
	void setTitle(jint titleResId);
	jint getTitleRes();
	ref<java::lang::CharSequence> getTitle();
	void setIcon(ref<android::graphics::drawable::Drawable> icon);
	void setIcon(jint iconResId);
	ref<android::graphics::drawable::Drawable> getIcon();
	ref<java::lang::CharSequence> getSummary();
	void setSummary(ref<java::lang::CharSequence> summary);
	void setSummary(jint summaryResId);
	void setEnabled(jboolean enabled);
	jboolean isEnabled();
	void setSelectable(jboolean selectable);
	jboolean isSelectable();
	void setShouldDisableView(jboolean shouldDisableView);
	jboolean getShouldDisableView();
	void setRecycleEnabled(jboolean enabled);
	jboolean isRecycleEnabled();
	void setSingleLineTitle(jboolean singleLineTitle);
	jboolean isSingleLineTitle();
	void setIconSpaceReserved(jboolean iconSpaceReserved);
	jboolean isIconSpaceReserved();
	void setKey(ref<java::lang::String> key);
	ref<java::lang::String> getKey();
	jboolean hasKey();
	jboolean isPersistent();
	void setPersistent(jboolean persistent);
	void setOnPreferenceChangeListener(ref<android::preference::Preference_OnPreferenceChangeListener> onPreferenceChangeListener);
	ref<android::preference::Preference_OnPreferenceChangeListener> getOnPreferenceChangeListener();
	void setOnPreferenceClickListener(ref<android::preference::Preference_OnPreferenceClickListener> onPreferenceClickListener);
	ref<android::preference::Preference_OnPreferenceClickListener> getOnPreferenceClickListener();
	ref<android::content::Context> getContext();
	ref<android::content::SharedPreferences> getSharedPreferences();
	ref<android::content::SharedPreferences_Editor> getEditor();
	jboolean shouldCommit();
	jint compareTo(ref<android::preference::Preference> another);
	ref<android::preference::PreferenceManager> getPreferenceManager();
	void notifyDependencyChange(jboolean disableDependents);
	void onDependencyChanged(ref<android::preference::Preference> dependency, jboolean disableDependent);
	void onParentChanged(ref<android::preference::Preference> parent, jboolean disableChild);
	jboolean shouldDisableDependents();
	void setDependency(ref<java::lang::String> dependencyKey);
	ref<java::lang::String> getDependency();
	ref<android::preference::PreferenceGroup> getParent();
	void setDefaultValue(ref<java::lang::Object> defaultValue);
	jboolean persistStringSet(ref<java::util::Set> values);
	ref<java::util::Set> getPersistedStringSet(ref<java::util::Set> defaultReturnValue);
	ref<java::lang::String> toString();
	void saveHierarchyState(ref<android::os::Bundle> container);
	void restoreHierarchyState(ref<android::os::Bundle> container);

protected:

	Preference(handle_type h) : base_(h) {}

};

} // namespace android::preference
} // namespace scapix::java_api

#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/content/Intent.h>
#include <scapix/java_api/android/content/SharedPreferences.h>
#include <scapix/java_api/android/content/SharedPreferences_Editor.h>
#include <scapix/java_api/android/graphics/drawable/Drawable.h>
#include <scapix/java_api/android/os/Bundle.h>
#include <scapix/java_api/android/preference/Preference_OnPreferenceChangeListener.h>
#include <scapix/java_api/android/preference/Preference_OnPreferenceClickListener.h>
#include <scapix/java_api/android/preference/PreferenceDataStore.h>
#include <scapix/java_api/android/preference/PreferenceGroup.h>
#include <scapix/java_api/android/preference/PreferenceManager.h>
#include <scapix/java_api/android/util/AttributeSet.h>
#include <scapix/java_api/android/view/View.h>
#include <scapix/java_api/android/view/ViewGroup.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Set.h>

namespace scapix::java_api {
namespace android::preference {

inline jint Preference::DEFAULT_ORDER_() { return get_static_field<SCAPIX_META_STRING("DEFAULT_ORDER"), jint>(); }
inline ref<Preference> Preference::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr, jint defStyleRes) { return base_::new_object(context, attrs, defStyleAttr, defStyleRes); }
inline ref<Preference> Preference::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr) { return base_::new_object(context, attrs, defStyleAttr); }
inline ref<Preference> Preference::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs) { return base_::new_object(context, attrs); }
inline ref<Preference> Preference::new_object(ref<android::content::Context> context) { return base_::new_object(context); }
inline void Preference::setIntent(ref<android::content::Intent> intent) { return call_method<SCAPIX_META_STRING("setIntent"), void>(intent); }
inline ref<android::content::Intent> Preference::getIntent() { return call_method<SCAPIX_META_STRING("getIntent"), ref<android::content::Intent>>(); }
inline void Preference::setFragment(ref<java::lang::String> fragment) { return call_method<SCAPIX_META_STRING("setFragment"), void>(fragment); }
inline ref<java::lang::String> Preference::getFragment() { return call_method<SCAPIX_META_STRING("getFragment"), ref<java::lang::String>>(); }
inline void Preference::setPreferenceDataStore(ref<android::preference::PreferenceDataStore> dataStore) { return call_method<SCAPIX_META_STRING("setPreferenceDataStore"), void>(dataStore); }
inline ref<android::preference::PreferenceDataStore> Preference::getPreferenceDataStore() { return call_method<SCAPIX_META_STRING("getPreferenceDataStore"), ref<android::preference::PreferenceDataStore>>(); }
inline ref<android::os::Bundle> Preference::getExtras() { return call_method<SCAPIX_META_STRING("getExtras"), ref<android::os::Bundle>>(); }
inline ref<android::os::Bundle> Preference::peekExtras() { return call_method<SCAPIX_META_STRING("peekExtras"), ref<android::os::Bundle>>(); }
inline void Preference::setLayoutResource(jint layoutResId) { return call_method<SCAPIX_META_STRING("setLayoutResource"), void>(layoutResId); }
inline jint Preference::getLayoutResource() { return call_method<SCAPIX_META_STRING("getLayoutResource"), jint>(); }
inline void Preference::setWidgetLayoutResource(jint widgetLayoutResId) { return call_method<SCAPIX_META_STRING("setWidgetLayoutResource"), void>(widgetLayoutResId); }
inline jint Preference::getWidgetLayoutResource() { return call_method<SCAPIX_META_STRING("getWidgetLayoutResource"), jint>(); }
inline ref<android::view::View> Preference::getView(ref<android::view::View> convertView, ref<android::view::ViewGroup> parent) { return call_method<SCAPIX_META_STRING("getView"), ref<android::view::View>>(convertView, parent); }
inline void Preference::setOrder(jint order) { return call_method<SCAPIX_META_STRING("setOrder"), void>(order); }
inline jint Preference::getOrder() { return call_method<SCAPIX_META_STRING("getOrder"), jint>(); }
inline void Preference::setTitle(ref<java::lang::CharSequence> title) { return call_method<SCAPIX_META_STRING("setTitle"), void>(title); }
inline void Preference::setTitle(jint titleResId) { return call_method<SCAPIX_META_STRING("setTitle"), void>(titleResId); }
inline jint Preference::getTitleRes() { return call_method<SCAPIX_META_STRING("getTitleRes"), jint>(); }
inline ref<java::lang::CharSequence> Preference::getTitle() { return call_method<SCAPIX_META_STRING("getTitle"), ref<java::lang::CharSequence>>(); }
inline void Preference::setIcon(ref<android::graphics::drawable::Drawable> icon) { return call_method<SCAPIX_META_STRING("setIcon"), void>(icon); }
inline void Preference::setIcon(jint iconResId) { return call_method<SCAPIX_META_STRING("setIcon"), void>(iconResId); }
inline ref<android::graphics::drawable::Drawable> Preference::getIcon() { return call_method<SCAPIX_META_STRING("getIcon"), ref<android::graphics::drawable::Drawable>>(); }
inline ref<java::lang::CharSequence> Preference::getSummary() { return call_method<SCAPIX_META_STRING("getSummary"), ref<java::lang::CharSequence>>(); }
inline void Preference::setSummary(ref<java::lang::CharSequence> summary) { return call_method<SCAPIX_META_STRING("setSummary"), void>(summary); }
inline void Preference::setSummary(jint summaryResId) { return call_method<SCAPIX_META_STRING("setSummary"), void>(summaryResId); }
inline void Preference::setEnabled(jboolean enabled) { return call_method<SCAPIX_META_STRING("setEnabled"), void>(enabled); }
inline jboolean Preference::isEnabled() { return call_method<SCAPIX_META_STRING("isEnabled"), jboolean>(); }
inline void Preference::setSelectable(jboolean selectable) { return call_method<SCAPIX_META_STRING("setSelectable"), void>(selectable); }
inline jboolean Preference::isSelectable() { return call_method<SCAPIX_META_STRING("isSelectable"), jboolean>(); }
inline void Preference::setShouldDisableView(jboolean shouldDisableView) { return call_method<SCAPIX_META_STRING("setShouldDisableView"), void>(shouldDisableView); }
inline jboolean Preference::getShouldDisableView() { return call_method<SCAPIX_META_STRING("getShouldDisableView"), jboolean>(); }
inline void Preference::setRecycleEnabled(jboolean enabled) { return call_method<SCAPIX_META_STRING("setRecycleEnabled"), void>(enabled); }
inline jboolean Preference::isRecycleEnabled() { return call_method<SCAPIX_META_STRING("isRecycleEnabled"), jboolean>(); }
inline void Preference::setSingleLineTitle(jboolean singleLineTitle) { return call_method<SCAPIX_META_STRING("setSingleLineTitle"), void>(singleLineTitle); }
inline jboolean Preference::isSingleLineTitle() { return call_method<SCAPIX_META_STRING("isSingleLineTitle"), jboolean>(); }
inline void Preference::setIconSpaceReserved(jboolean iconSpaceReserved) { return call_method<SCAPIX_META_STRING("setIconSpaceReserved"), void>(iconSpaceReserved); }
inline jboolean Preference::isIconSpaceReserved() { return call_method<SCAPIX_META_STRING("isIconSpaceReserved"), jboolean>(); }
inline void Preference::setKey(ref<java::lang::String> key) { return call_method<SCAPIX_META_STRING("setKey"), void>(key); }
inline ref<java::lang::String> Preference::getKey() { return call_method<SCAPIX_META_STRING("getKey"), ref<java::lang::String>>(); }
inline jboolean Preference::hasKey() { return call_method<SCAPIX_META_STRING("hasKey"), jboolean>(); }
inline jboolean Preference::isPersistent() { return call_method<SCAPIX_META_STRING("isPersistent"), jboolean>(); }
inline void Preference::setPersistent(jboolean persistent) { return call_method<SCAPIX_META_STRING("setPersistent"), void>(persistent); }
inline void Preference::setOnPreferenceChangeListener(ref<android::preference::Preference_OnPreferenceChangeListener> onPreferenceChangeListener) { return call_method<SCAPIX_META_STRING("setOnPreferenceChangeListener"), void>(onPreferenceChangeListener); }
inline ref<android::preference::Preference_OnPreferenceChangeListener> Preference::getOnPreferenceChangeListener() { return call_method<SCAPIX_META_STRING("getOnPreferenceChangeListener"), ref<android::preference::Preference_OnPreferenceChangeListener>>(); }
inline void Preference::setOnPreferenceClickListener(ref<android::preference::Preference_OnPreferenceClickListener> onPreferenceClickListener) { return call_method<SCAPIX_META_STRING("setOnPreferenceClickListener"), void>(onPreferenceClickListener); }
inline ref<android::preference::Preference_OnPreferenceClickListener> Preference::getOnPreferenceClickListener() { return call_method<SCAPIX_META_STRING("getOnPreferenceClickListener"), ref<android::preference::Preference_OnPreferenceClickListener>>(); }
inline ref<android::content::Context> Preference::getContext() { return call_method<SCAPIX_META_STRING("getContext"), ref<android::content::Context>>(); }
inline ref<android::content::SharedPreferences> Preference::getSharedPreferences() { return call_method<SCAPIX_META_STRING("getSharedPreferences"), ref<android::content::SharedPreferences>>(); }
inline ref<android::content::SharedPreferences_Editor> Preference::getEditor() { return call_method<SCAPIX_META_STRING("getEditor"), ref<android::content::SharedPreferences_Editor>>(); }
inline jboolean Preference::shouldCommit() { return call_method<SCAPIX_META_STRING("shouldCommit"), jboolean>(); }
inline jint Preference::compareTo(ref<android::preference::Preference> another) { return call_method<SCAPIX_META_STRING("compareTo"), jint>(another); }
inline ref<android::preference::PreferenceManager> Preference::getPreferenceManager() { return call_method<SCAPIX_META_STRING("getPreferenceManager"), ref<android::preference::PreferenceManager>>(); }
inline void Preference::notifyDependencyChange(jboolean disableDependents) { return call_method<SCAPIX_META_STRING("notifyDependencyChange"), void>(disableDependents); }
inline void Preference::onDependencyChanged(ref<android::preference::Preference> dependency, jboolean disableDependent) { return call_method<SCAPIX_META_STRING("onDependencyChanged"), void>(dependency, disableDependent); }
inline void Preference::onParentChanged(ref<android::preference::Preference> parent, jboolean disableChild) { return call_method<SCAPIX_META_STRING("onParentChanged"), void>(parent, disableChild); }
inline jboolean Preference::shouldDisableDependents() { return call_method<SCAPIX_META_STRING("shouldDisableDependents"), jboolean>(); }
inline void Preference::setDependency(ref<java::lang::String> dependencyKey) { return call_method<SCAPIX_META_STRING("setDependency"), void>(dependencyKey); }
inline ref<java::lang::String> Preference::getDependency() { return call_method<SCAPIX_META_STRING("getDependency"), ref<java::lang::String>>(); }
inline ref<android::preference::PreferenceGroup> Preference::getParent() { return call_method<SCAPIX_META_STRING("getParent"), ref<android::preference::PreferenceGroup>>(); }
inline void Preference::setDefaultValue(ref<java::lang::Object> defaultValue) { return call_method<SCAPIX_META_STRING("setDefaultValue"), void>(defaultValue); }
inline jboolean Preference::persistStringSet(ref<java::util::Set> values) { return call_method<SCAPIX_META_STRING("persistStringSet"), jboolean>(values); }
inline ref<java::util::Set> Preference::getPersistedStringSet(ref<java::util::Set> defaultReturnValue) { return call_method<SCAPIX_META_STRING("getPersistedStringSet"), ref<java::util::Set>>(defaultReturnValue); }
inline ref<java::lang::String> Preference::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }
inline void Preference::saveHierarchyState(ref<android::os::Bundle> container) { return call_method<SCAPIX_META_STRING("saveHierarchyState"), void>(container); }
inline void Preference::restoreHierarchyState(ref<android::os::Bundle> container) { return call_method<SCAPIX_META_STRING("restoreHierarchyState"), void>(container); }

} // namespace android::preference
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_PREFERENCE_PREFERENCE_H
