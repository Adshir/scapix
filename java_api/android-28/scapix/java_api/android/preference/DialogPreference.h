// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/preference/Preference.h>
#include <scapix/java_api/android/content/DialogInterface_OnClickListener.h>
#include <scapix/java_api/android/content/DialogInterface_OnDismissListener.h>
#include <scapix/java_api/android/preference/PreferenceManager_OnActivityDestroyListener.h>

#ifndef SCAPIX_ANDROID_PREFERENCE_DIALOGPREFERENCE_H
#define SCAPIX_ANDROID_PREFERENCE_DIALOGPREFERENCE_H

namespace scapix::java_api {

namespace android::app { class Dialog; }
namespace android::content { class Context; }
namespace android::content { class DialogInterface; }
namespace android::graphics::drawable { class Drawable; }
namespace android::util { class AttributeSet; }
namespace java::lang { class CharSequence; }

namespace android::preference {

class DialogPreference : public object_base<SCAPIX_META_STRING("android/preference/DialogPreference"),
	android::preference::Preference,
	android::content::DialogInterface_OnClickListener,
	android::content::DialogInterface_OnDismissListener,
	android::preference::PreferenceManager_OnActivityDestroyListener>
{
public:

	static ref<DialogPreference> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr, jint defStyleRes);
	static ref<DialogPreference> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr);
	static ref<DialogPreference> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs);
	static ref<DialogPreference> new_object(ref<android::content::Context> context);
	void setDialogTitle(ref<java::lang::CharSequence> dialogTitle);
	void setDialogTitle(jint dialogTitleResId);
	ref<java::lang::CharSequence> getDialogTitle();
	void setDialogMessage(ref<java::lang::CharSequence> dialogMessage);
	void setDialogMessage(jint dialogMessageResId);
	ref<java::lang::CharSequence> getDialogMessage();
	void setDialogIcon(ref<android::graphics::drawable::Drawable> dialogIcon);
	void setDialogIcon(jint dialogIconRes);
	ref<android::graphics::drawable::Drawable> getDialogIcon();
	void setPositiveButtonText(ref<java::lang::CharSequence> positiveButtonText);
	void setPositiveButtonText(jint positiveButtonTextResId);
	ref<java::lang::CharSequence> getPositiveButtonText();
	void setNegativeButtonText(ref<java::lang::CharSequence> negativeButtonText);
	void setNegativeButtonText(jint negativeButtonTextResId);
	ref<java::lang::CharSequence> getNegativeButtonText();
	void setDialogLayoutResource(jint dialogLayoutResId);
	jint getDialogLayoutResource();
	void onClick(ref<android::content::DialogInterface> dialog, jint which);
	void onDismiss(ref<android::content::DialogInterface> dialog);
	ref<android::app::Dialog> getDialog();
	void onActivityDestroy();

protected:

	DialogPreference(handle_type h) : base_(h) {}

};

} // namespace android::preference
} // namespace scapix::java_api

#include <scapix/java_api/android/app/Dialog.h>
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/content/DialogInterface.h>
#include <scapix/java_api/android/graphics/drawable/Drawable.h>
#include <scapix/java_api/android/util/AttributeSet.h>
#include <scapix/java_api/java/lang/CharSequence.h>

namespace scapix::java_api {
namespace android::preference {

inline ref<DialogPreference> DialogPreference::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr, jint defStyleRes) { return base_::new_object(context, attrs, defStyleAttr, defStyleRes); }
inline ref<DialogPreference> DialogPreference::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr) { return base_::new_object(context, attrs, defStyleAttr); }
inline ref<DialogPreference> DialogPreference::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs) { return base_::new_object(context, attrs); }
inline ref<DialogPreference> DialogPreference::new_object(ref<android::content::Context> context) { return base_::new_object(context); }
inline void DialogPreference::setDialogTitle(ref<java::lang::CharSequence> dialogTitle) { return call_method<SCAPIX_META_STRING("setDialogTitle"), void>(dialogTitle); }
inline void DialogPreference::setDialogTitle(jint dialogTitleResId) { return call_method<SCAPIX_META_STRING("setDialogTitle"), void>(dialogTitleResId); }
inline ref<java::lang::CharSequence> DialogPreference::getDialogTitle() { return call_method<SCAPIX_META_STRING("getDialogTitle"), ref<java::lang::CharSequence>>(); }
inline void DialogPreference::setDialogMessage(ref<java::lang::CharSequence> dialogMessage) { return call_method<SCAPIX_META_STRING("setDialogMessage"), void>(dialogMessage); }
inline void DialogPreference::setDialogMessage(jint dialogMessageResId) { return call_method<SCAPIX_META_STRING("setDialogMessage"), void>(dialogMessageResId); }
inline ref<java::lang::CharSequence> DialogPreference::getDialogMessage() { return call_method<SCAPIX_META_STRING("getDialogMessage"), ref<java::lang::CharSequence>>(); }
inline void DialogPreference::setDialogIcon(ref<android::graphics::drawable::Drawable> dialogIcon) { return call_method<SCAPIX_META_STRING("setDialogIcon"), void>(dialogIcon); }
inline void DialogPreference::setDialogIcon(jint dialogIconRes) { return call_method<SCAPIX_META_STRING("setDialogIcon"), void>(dialogIconRes); }
inline ref<android::graphics::drawable::Drawable> DialogPreference::getDialogIcon() { return call_method<SCAPIX_META_STRING("getDialogIcon"), ref<android::graphics::drawable::Drawable>>(); }
inline void DialogPreference::setPositiveButtonText(ref<java::lang::CharSequence> positiveButtonText) { return call_method<SCAPIX_META_STRING("setPositiveButtonText"), void>(positiveButtonText); }
inline void DialogPreference::setPositiveButtonText(jint positiveButtonTextResId) { return call_method<SCAPIX_META_STRING("setPositiveButtonText"), void>(positiveButtonTextResId); }
inline ref<java::lang::CharSequence> DialogPreference::getPositiveButtonText() { return call_method<SCAPIX_META_STRING("getPositiveButtonText"), ref<java::lang::CharSequence>>(); }
inline void DialogPreference::setNegativeButtonText(ref<java::lang::CharSequence> negativeButtonText) { return call_method<SCAPIX_META_STRING("setNegativeButtonText"), void>(negativeButtonText); }
inline void DialogPreference::setNegativeButtonText(jint negativeButtonTextResId) { return call_method<SCAPIX_META_STRING("setNegativeButtonText"), void>(negativeButtonTextResId); }
inline ref<java::lang::CharSequence> DialogPreference::getNegativeButtonText() { return call_method<SCAPIX_META_STRING("getNegativeButtonText"), ref<java::lang::CharSequence>>(); }
inline void DialogPreference::setDialogLayoutResource(jint dialogLayoutResId) { return call_method<SCAPIX_META_STRING("setDialogLayoutResource"), void>(dialogLayoutResId); }
inline jint DialogPreference::getDialogLayoutResource() { return call_method<SCAPIX_META_STRING("getDialogLayoutResource"), jint>(); }
inline void DialogPreference::onClick(ref<android::content::DialogInterface> dialog, jint which) { return call_method<SCAPIX_META_STRING("onClick"), void>(dialog, which); }
inline void DialogPreference::onDismiss(ref<android::content::DialogInterface> dialog) { return call_method<SCAPIX_META_STRING("onDismiss"), void>(dialog); }
inline ref<android::app::Dialog> DialogPreference::getDialog() { return call_method<SCAPIX_META_STRING("getDialog"), ref<android::app::Dialog>>(); }
inline void DialogPreference::onActivityDestroy() { return call_method<SCAPIX_META_STRING("onActivityDestroy"), void>(); }

} // namespace android::preference
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_PREFERENCE_DIALOGPREFERENCE_H
