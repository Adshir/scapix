// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_OS_HARDWAREPROPERTIESMANAGER_H
#define SCAPIX_ANDROID_OS_HARDWAREPROPERTIESMANAGER_H

namespace scapix::java_api {

namespace android::os { class CpuUsageInfo; }

namespace android::os {

class HardwarePropertiesManager : public object_base<SCAPIX_META_STRING("android/os/HardwarePropertiesManager"),
	java::lang::Object>
{
public:

	static jint DEVICE_TEMPERATURE_BATTERY_();
	static jint DEVICE_TEMPERATURE_CPU_();
	static jint DEVICE_TEMPERATURE_GPU_();
	static jint DEVICE_TEMPERATURE_SKIN_();
	static jint TEMPERATURE_CURRENT_();
	static jint TEMPERATURE_SHUTDOWN_();
	static jint TEMPERATURE_THROTTLING_();
	static jint TEMPERATURE_THROTTLING_BELOW_VR_MIN_();
	static jfloat UNDEFINED_TEMPERATURE_();

	ref<link::java::array<jfloat>> getDeviceTemperatures(jint type, jint source);
	ref<link::java::array<android::os::CpuUsageInfo>> getCpuUsages();
	ref<link::java::array<jfloat>> getFanSpeeds();

protected:

	HardwarePropertiesManager(handle_type h) : base_(h) {}

};

} // namespace android::os
} // namespace scapix::java_api

#include <scapix/java_api/android/os/CpuUsageInfo.h>

namespace scapix::java_api {
namespace android::os {

inline jint HardwarePropertiesManager::DEVICE_TEMPERATURE_BATTERY_() { return get_static_field<SCAPIX_META_STRING("DEVICE_TEMPERATURE_BATTERY"), jint>(); }
inline jint HardwarePropertiesManager::DEVICE_TEMPERATURE_CPU_() { return get_static_field<SCAPIX_META_STRING("DEVICE_TEMPERATURE_CPU"), jint>(); }
inline jint HardwarePropertiesManager::DEVICE_TEMPERATURE_GPU_() { return get_static_field<SCAPIX_META_STRING("DEVICE_TEMPERATURE_GPU"), jint>(); }
inline jint HardwarePropertiesManager::DEVICE_TEMPERATURE_SKIN_() { return get_static_field<SCAPIX_META_STRING("DEVICE_TEMPERATURE_SKIN"), jint>(); }
inline jint HardwarePropertiesManager::TEMPERATURE_CURRENT_() { return get_static_field<SCAPIX_META_STRING("TEMPERATURE_CURRENT"), jint>(); }
inline jint HardwarePropertiesManager::TEMPERATURE_SHUTDOWN_() { return get_static_field<SCAPIX_META_STRING("TEMPERATURE_SHUTDOWN"), jint>(); }
inline jint HardwarePropertiesManager::TEMPERATURE_THROTTLING_() { return get_static_field<SCAPIX_META_STRING("TEMPERATURE_THROTTLING"), jint>(); }
inline jint HardwarePropertiesManager::TEMPERATURE_THROTTLING_BELOW_VR_MIN_() { return get_static_field<SCAPIX_META_STRING("TEMPERATURE_THROTTLING_BELOW_VR_MIN"), jint>(); }
inline jfloat HardwarePropertiesManager::UNDEFINED_TEMPERATURE_() { return get_static_field<SCAPIX_META_STRING("UNDEFINED_TEMPERATURE"), jfloat>(); }
inline ref<link::java::array<jfloat>> HardwarePropertiesManager::getDeviceTemperatures(jint type, jint source) { return call_method<SCAPIX_META_STRING("getDeviceTemperatures"), ref<link::java::array<jfloat>>>(type, source); }
inline ref<link::java::array<android::os::CpuUsageInfo>> HardwarePropertiesManager::getCpuUsages() { return call_method<SCAPIX_META_STRING("getCpuUsages"), ref<link::java::array<android::os::CpuUsageInfo>>>(); }
inline ref<link::java::array<jfloat>> HardwarePropertiesManager::getFanSpeeds() { return call_method<SCAPIX_META_STRING("getFanSpeeds"), ref<link::java::array<jfloat>>>(); }

} // namespace android::os
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_OS_HARDWAREPROPERTIESMANAGER_H
