// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_OS_USERMANAGER_H
#define SCAPIX_ANDROID_OS_USERMANAGER_H

namespace scapix::java_api {

namespace android::content { class Intent; }
namespace android::os { class Bundle; }
namespace android::os { class PersistableBundle; }
namespace android::os { class UserHandle; }
namespace java::lang { class String; }
namespace java::util { class List; }
namespace android::os { class UserManager_UserOperationException; }

namespace android::os {

class UserManager : public object_base<SCAPIX_META_STRING("android/os/UserManager"),
	java::lang::Object>
{
public:

	using UserOperationException = UserManager_UserOperationException;

	static ref<java::lang::String> ALLOW_PARENT_PROFILE_APP_LINKING_();
	static ref<java::lang::String> DISALLOW_ADD_MANAGED_PROFILE_();
	static ref<java::lang::String> DISALLOW_ADD_USER_();
	static ref<java::lang::String> DISALLOW_ADJUST_VOLUME_();
	static ref<java::lang::String> DISALLOW_AIRPLANE_MODE_();
	static ref<java::lang::String> DISALLOW_AMBIENT_DISPLAY_();
	static ref<java::lang::String> DISALLOW_APPS_CONTROL_();
	static ref<java::lang::String> DISALLOW_AUTOFILL_();
	static ref<java::lang::String> DISALLOW_BLUETOOTH_();
	static ref<java::lang::String> DISALLOW_BLUETOOTH_SHARING_();
	static ref<java::lang::String> DISALLOW_CONFIG_BLUETOOTH_();
	static ref<java::lang::String> DISALLOW_CONFIG_BRIGHTNESS_();
	static ref<java::lang::String> DISALLOW_CONFIG_CELL_BROADCASTS_();
	static ref<java::lang::String> DISALLOW_CONFIG_CREDENTIALS_();
	static ref<java::lang::String> DISALLOW_CONFIG_DATE_TIME_();
	static ref<java::lang::String> DISALLOW_CONFIG_LOCALE_();
	static ref<java::lang::String> DISALLOW_CONFIG_LOCATION_();
	static ref<java::lang::String> DISALLOW_CONFIG_MOBILE_NETWORKS_();
	static ref<java::lang::String> DISALLOW_CONFIG_SCREEN_TIMEOUT_();
	static ref<java::lang::String> DISALLOW_CONFIG_TETHERING_();
	static ref<java::lang::String> DISALLOW_CONFIG_VPN_();
	static ref<java::lang::String> DISALLOW_CONFIG_WIFI_();
	static ref<java::lang::String> DISALLOW_CREATE_WINDOWS_();
	static ref<java::lang::String> DISALLOW_CROSS_PROFILE_COPY_PASTE_();
	static ref<java::lang::String> DISALLOW_DATA_ROAMING_();
	static ref<java::lang::String> DISALLOW_DEBUGGING_FEATURES_();
	static ref<java::lang::String> DISALLOW_FACTORY_RESET_();
	static ref<java::lang::String> DISALLOW_FUN_();
	static ref<java::lang::String> DISALLOW_INSTALL_APPS_();
	static ref<java::lang::String> DISALLOW_INSTALL_UNKNOWN_SOURCES_();
	static ref<java::lang::String> DISALLOW_MODIFY_ACCOUNTS_();
	static ref<java::lang::String> DISALLOW_MOUNT_PHYSICAL_MEDIA_();
	static ref<java::lang::String> DISALLOW_NETWORK_RESET_();
	static ref<java::lang::String> DISALLOW_OUTGOING_BEAM_();
	static ref<java::lang::String> DISALLOW_OUTGOING_CALLS_();
	static ref<java::lang::String> DISALLOW_PRINTING_();
	static ref<java::lang::String> DISALLOW_REMOVE_MANAGED_PROFILE_();
	static ref<java::lang::String> DISALLOW_REMOVE_USER_();
	static ref<java::lang::String> DISALLOW_SAFE_BOOT_();
	static ref<java::lang::String> DISALLOW_SET_USER_ICON_();
	static ref<java::lang::String> DISALLOW_SET_WALLPAPER_();
	static ref<java::lang::String> DISALLOW_SHARE_INTO_MANAGED_PROFILE_();
	static ref<java::lang::String> DISALLOW_SHARE_LOCATION_();
	static ref<java::lang::String> DISALLOW_SMS_();
	static ref<java::lang::String> DISALLOW_SYSTEM_ERROR_DIALOGS_();
	static ref<java::lang::String> DISALLOW_UNIFIED_PASSWORD_();
	static ref<java::lang::String> DISALLOW_UNINSTALL_APPS_();
	static ref<java::lang::String> DISALLOW_UNMUTE_MICROPHONE_();
	static ref<java::lang::String> DISALLOW_USB_FILE_TRANSFER_();
	static ref<java::lang::String> DISALLOW_USER_SWITCH_();
	static ref<java::lang::String> ENSURE_VERIFY_APPS_();
	static ref<java::lang::String> KEY_RESTRICTIONS_PENDING_();
	static jint USER_CREATION_FAILED_NOT_PERMITTED_();
	static jint USER_CREATION_FAILED_NO_MORE_USERS_();
	static jint USER_OPERATION_ERROR_CURRENT_USER_();
	static jint USER_OPERATION_ERROR_LOW_STORAGE_();
	static jint USER_OPERATION_ERROR_MANAGED_PROFILE_();
	static jint USER_OPERATION_ERROR_MAX_RUNNING_USERS_();
	static jint USER_OPERATION_ERROR_MAX_USERS_();
	static jint USER_OPERATION_ERROR_UNKNOWN_();
	static jint USER_OPERATION_SUCCESS_();

	static jboolean supportsMultipleUsers();
	ref<java::lang::String> getUserName();
	jboolean isUserAGoat();
	jboolean isSystemUser();
	jboolean isDemoUser();
	jboolean isUserRunning(ref<android::os::UserHandle> user);
	jboolean isUserRunningOrStopping(ref<android::os::UserHandle> user);
	jboolean isUserUnlocked();
	jboolean isUserUnlocked(ref<android::os::UserHandle> user);
	ref<android::os::Bundle> getUserRestrictions();
	ref<android::os::Bundle> getUserRestrictions(ref<android::os::UserHandle> userHandle);
	void setUserRestrictions(ref<android::os::Bundle> restrictions);
	void setUserRestrictions(ref<android::os::Bundle> restrictions, ref<android::os::UserHandle> userHandle);
	void setUserRestriction(ref<java::lang::String> key, jboolean value);
	jboolean hasUserRestriction(ref<java::lang::String> restrictionKey);
	jlong getSerialNumberForUser(ref<android::os::UserHandle> user);
	ref<android::os::UserHandle> getUserForSerialNumber(jlong serialNumber);
	static ref<android::content::Intent> createUserCreationIntent(ref<java::lang::String> userName, ref<java::lang::String> accountName, ref<java::lang::String> accountType, ref<android::os::PersistableBundle> accountOptions);
	jint getUserCount();
	ref<java::util::List> getUserProfiles();
	jboolean requestQuietModeEnabled(jboolean enableQuietMode, ref<android::os::UserHandle> userHandle);
	jboolean isQuietModeEnabled(ref<android::os::UserHandle> userHandle);
	ref<android::os::Bundle> getApplicationRestrictions(ref<java::lang::String> packageName);
	jboolean setRestrictionsChallenge(ref<java::lang::String> newPin);
	jlong getUserCreationTime(ref<android::os::UserHandle> userHandle);

protected:

	UserManager(handle_type h) : base_(h) {}

};

} // namespace android::os
} // namespace scapix::java_api

#include <scapix/java_api/android/content/Intent.h>
#include <scapix/java_api/android/os/Bundle.h>
#include <scapix/java_api/android/os/PersistableBundle.h>
#include <scapix/java_api/android/os/UserHandle.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/List.h>

namespace scapix::java_api {
namespace android::os {

inline ref<java::lang::String> UserManager::ALLOW_PARENT_PROFILE_APP_LINKING_() { return get_static_field<SCAPIX_META_STRING("ALLOW_PARENT_PROFILE_APP_LINKING"), ref<java::lang::String>>(); }
inline ref<java::lang::String> UserManager::DISALLOW_ADD_MANAGED_PROFILE_() { return get_static_field<SCAPIX_META_STRING("DISALLOW_ADD_MANAGED_PROFILE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> UserManager::DISALLOW_ADD_USER_() { return get_static_field<SCAPIX_META_STRING("DISALLOW_ADD_USER"), ref<java::lang::String>>(); }
inline ref<java::lang::String> UserManager::DISALLOW_ADJUST_VOLUME_() { return get_static_field<SCAPIX_META_STRING("DISALLOW_ADJUST_VOLUME"), ref<java::lang::String>>(); }
inline ref<java::lang::String> UserManager::DISALLOW_AIRPLANE_MODE_() { return get_static_field<SCAPIX_META_STRING("DISALLOW_AIRPLANE_MODE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> UserManager::DISALLOW_AMBIENT_DISPLAY_() { return get_static_field<SCAPIX_META_STRING("DISALLOW_AMBIENT_DISPLAY"), ref<java::lang::String>>(); }
inline ref<java::lang::String> UserManager::DISALLOW_APPS_CONTROL_() { return get_static_field<SCAPIX_META_STRING("DISALLOW_APPS_CONTROL"), ref<java::lang::String>>(); }
inline ref<java::lang::String> UserManager::DISALLOW_AUTOFILL_() { return get_static_field<SCAPIX_META_STRING("DISALLOW_AUTOFILL"), ref<java::lang::String>>(); }
inline ref<java::lang::String> UserManager::DISALLOW_BLUETOOTH_() { return get_static_field<SCAPIX_META_STRING("DISALLOW_BLUETOOTH"), ref<java::lang::String>>(); }
inline ref<java::lang::String> UserManager::DISALLOW_BLUETOOTH_SHARING_() { return get_static_field<SCAPIX_META_STRING("DISALLOW_BLUETOOTH_SHARING"), ref<java::lang::String>>(); }
inline ref<java::lang::String> UserManager::DISALLOW_CONFIG_BLUETOOTH_() { return get_static_field<SCAPIX_META_STRING("DISALLOW_CONFIG_BLUETOOTH"), ref<java::lang::String>>(); }
inline ref<java::lang::String> UserManager::DISALLOW_CONFIG_BRIGHTNESS_() { return get_static_field<SCAPIX_META_STRING("DISALLOW_CONFIG_BRIGHTNESS"), ref<java::lang::String>>(); }
inline ref<java::lang::String> UserManager::DISALLOW_CONFIG_CELL_BROADCASTS_() { return get_static_field<SCAPIX_META_STRING("DISALLOW_CONFIG_CELL_BROADCASTS"), ref<java::lang::String>>(); }
inline ref<java::lang::String> UserManager::DISALLOW_CONFIG_CREDENTIALS_() { return get_static_field<SCAPIX_META_STRING("DISALLOW_CONFIG_CREDENTIALS"), ref<java::lang::String>>(); }
inline ref<java::lang::String> UserManager::DISALLOW_CONFIG_DATE_TIME_() { return get_static_field<SCAPIX_META_STRING("DISALLOW_CONFIG_DATE_TIME"), ref<java::lang::String>>(); }
inline ref<java::lang::String> UserManager::DISALLOW_CONFIG_LOCALE_() { return get_static_field<SCAPIX_META_STRING("DISALLOW_CONFIG_LOCALE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> UserManager::DISALLOW_CONFIG_LOCATION_() { return get_static_field<SCAPIX_META_STRING("DISALLOW_CONFIG_LOCATION"), ref<java::lang::String>>(); }
inline ref<java::lang::String> UserManager::DISALLOW_CONFIG_MOBILE_NETWORKS_() { return get_static_field<SCAPIX_META_STRING("DISALLOW_CONFIG_MOBILE_NETWORKS"), ref<java::lang::String>>(); }
inline ref<java::lang::String> UserManager::DISALLOW_CONFIG_SCREEN_TIMEOUT_() { return get_static_field<SCAPIX_META_STRING("DISALLOW_CONFIG_SCREEN_TIMEOUT"), ref<java::lang::String>>(); }
inline ref<java::lang::String> UserManager::DISALLOW_CONFIG_TETHERING_() { return get_static_field<SCAPIX_META_STRING("DISALLOW_CONFIG_TETHERING"), ref<java::lang::String>>(); }
inline ref<java::lang::String> UserManager::DISALLOW_CONFIG_VPN_() { return get_static_field<SCAPIX_META_STRING("DISALLOW_CONFIG_VPN"), ref<java::lang::String>>(); }
inline ref<java::lang::String> UserManager::DISALLOW_CONFIG_WIFI_() { return get_static_field<SCAPIX_META_STRING("DISALLOW_CONFIG_WIFI"), ref<java::lang::String>>(); }
inline ref<java::lang::String> UserManager::DISALLOW_CREATE_WINDOWS_() { return get_static_field<SCAPIX_META_STRING("DISALLOW_CREATE_WINDOWS"), ref<java::lang::String>>(); }
inline ref<java::lang::String> UserManager::DISALLOW_CROSS_PROFILE_COPY_PASTE_() { return get_static_field<SCAPIX_META_STRING("DISALLOW_CROSS_PROFILE_COPY_PASTE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> UserManager::DISALLOW_DATA_ROAMING_() { return get_static_field<SCAPIX_META_STRING("DISALLOW_DATA_ROAMING"), ref<java::lang::String>>(); }
inline ref<java::lang::String> UserManager::DISALLOW_DEBUGGING_FEATURES_() { return get_static_field<SCAPIX_META_STRING("DISALLOW_DEBUGGING_FEATURES"), ref<java::lang::String>>(); }
inline ref<java::lang::String> UserManager::DISALLOW_FACTORY_RESET_() { return get_static_field<SCAPIX_META_STRING("DISALLOW_FACTORY_RESET"), ref<java::lang::String>>(); }
inline ref<java::lang::String> UserManager::DISALLOW_FUN_() { return get_static_field<SCAPIX_META_STRING("DISALLOW_FUN"), ref<java::lang::String>>(); }
inline ref<java::lang::String> UserManager::DISALLOW_INSTALL_APPS_() { return get_static_field<SCAPIX_META_STRING("DISALLOW_INSTALL_APPS"), ref<java::lang::String>>(); }
inline ref<java::lang::String> UserManager::DISALLOW_INSTALL_UNKNOWN_SOURCES_() { return get_static_field<SCAPIX_META_STRING("DISALLOW_INSTALL_UNKNOWN_SOURCES"), ref<java::lang::String>>(); }
inline ref<java::lang::String> UserManager::DISALLOW_MODIFY_ACCOUNTS_() { return get_static_field<SCAPIX_META_STRING("DISALLOW_MODIFY_ACCOUNTS"), ref<java::lang::String>>(); }
inline ref<java::lang::String> UserManager::DISALLOW_MOUNT_PHYSICAL_MEDIA_() { return get_static_field<SCAPIX_META_STRING("DISALLOW_MOUNT_PHYSICAL_MEDIA"), ref<java::lang::String>>(); }
inline ref<java::lang::String> UserManager::DISALLOW_NETWORK_RESET_() { return get_static_field<SCAPIX_META_STRING("DISALLOW_NETWORK_RESET"), ref<java::lang::String>>(); }
inline ref<java::lang::String> UserManager::DISALLOW_OUTGOING_BEAM_() { return get_static_field<SCAPIX_META_STRING("DISALLOW_OUTGOING_BEAM"), ref<java::lang::String>>(); }
inline ref<java::lang::String> UserManager::DISALLOW_OUTGOING_CALLS_() { return get_static_field<SCAPIX_META_STRING("DISALLOW_OUTGOING_CALLS"), ref<java::lang::String>>(); }
inline ref<java::lang::String> UserManager::DISALLOW_PRINTING_() { return get_static_field<SCAPIX_META_STRING("DISALLOW_PRINTING"), ref<java::lang::String>>(); }
inline ref<java::lang::String> UserManager::DISALLOW_REMOVE_MANAGED_PROFILE_() { return get_static_field<SCAPIX_META_STRING("DISALLOW_REMOVE_MANAGED_PROFILE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> UserManager::DISALLOW_REMOVE_USER_() { return get_static_field<SCAPIX_META_STRING("DISALLOW_REMOVE_USER"), ref<java::lang::String>>(); }
inline ref<java::lang::String> UserManager::DISALLOW_SAFE_BOOT_() { return get_static_field<SCAPIX_META_STRING("DISALLOW_SAFE_BOOT"), ref<java::lang::String>>(); }
inline ref<java::lang::String> UserManager::DISALLOW_SET_USER_ICON_() { return get_static_field<SCAPIX_META_STRING("DISALLOW_SET_USER_ICON"), ref<java::lang::String>>(); }
inline ref<java::lang::String> UserManager::DISALLOW_SET_WALLPAPER_() { return get_static_field<SCAPIX_META_STRING("DISALLOW_SET_WALLPAPER"), ref<java::lang::String>>(); }
inline ref<java::lang::String> UserManager::DISALLOW_SHARE_INTO_MANAGED_PROFILE_() { return get_static_field<SCAPIX_META_STRING("DISALLOW_SHARE_INTO_MANAGED_PROFILE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> UserManager::DISALLOW_SHARE_LOCATION_() { return get_static_field<SCAPIX_META_STRING("DISALLOW_SHARE_LOCATION"), ref<java::lang::String>>(); }
inline ref<java::lang::String> UserManager::DISALLOW_SMS_() { return get_static_field<SCAPIX_META_STRING("DISALLOW_SMS"), ref<java::lang::String>>(); }
inline ref<java::lang::String> UserManager::DISALLOW_SYSTEM_ERROR_DIALOGS_() { return get_static_field<SCAPIX_META_STRING("DISALLOW_SYSTEM_ERROR_DIALOGS"), ref<java::lang::String>>(); }
inline ref<java::lang::String> UserManager::DISALLOW_UNIFIED_PASSWORD_() { return get_static_field<SCAPIX_META_STRING("DISALLOW_UNIFIED_PASSWORD"), ref<java::lang::String>>(); }
inline ref<java::lang::String> UserManager::DISALLOW_UNINSTALL_APPS_() { return get_static_field<SCAPIX_META_STRING("DISALLOW_UNINSTALL_APPS"), ref<java::lang::String>>(); }
inline ref<java::lang::String> UserManager::DISALLOW_UNMUTE_MICROPHONE_() { return get_static_field<SCAPIX_META_STRING("DISALLOW_UNMUTE_MICROPHONE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> UserManager::DISALLOW_USB_FILE_TRANSFER_() { return get_static_field<SCAPIX_META_STRING("DISALLOW_USB_FILE_TRANSFER"), ref<java::lang::String>>(); }
inline ref<java::lang::String> UserManager::DISALLOW_USER_SWITCH_() { return get_static_field<SCAPIX_META_STRING("DISALLOW_USER_SWITCH"), ref<java::lang::String>>(); }
inline ref<java::lang::String> UserManager::ENSURE_VERIFY_APPS_() { return get_static_field<SCAPIX_META_STRING("ENSURE_VERIFY_APPS"), ref<java::lang::String>>(); }
inline ref<java::lang::String> UserManager::KEY_RESTRICTIONS_PENDING_() { return get_static_field<SCAPIX_META_STRING("KEY_RESTRICTIONS_PENDING"), ref<java::lang::String>>(); }
inline jint UserManager::USER_CREATION_FAILED_NOT_PERMITTED_() { return get_static_field<SCAPIX_META_STRING("USER_CREATION_FAILED_NOT_PERMITTED"), jint>(); }
inline jint UserManager::USER_CREATION_FAILED_NO_MORE_USERS_() { return get_static_field<SCAPIX_META_STRING("USER_CREATION_FAILED_NO_MORE_USERS"), jint>(); }
inline jint UserManager::USER_OPERATION_ERROR_CURRENT_USER_() { return get_static_field<SCAPIX_META_STRING("USER_OPERATION_ERROR_CURRENT_USER"), jint>(); }
inline jint UserManager::USER_OPERATION_ERROR_LOW_STORAGE_() { return get_static_field<SCAPIX_META_STRING("USER_OPERATION_ERROR_LOW_STORAGE"), jint>(); }
inline jint UserManager::USER_OPERATION_ERROR_MANAGED_PROFILE_() { return get_static_field<SCAPIX_META_STRING("USER_OPERATION_ERROR_MANAGED_PROFILE"), jint>(); }
inline jint UserManager::USER_OPERATION_ERROR_MAX_RUNNING_USERS_() { return get_static_field<SCAPIX_META_STRING("USER_OPERATION_ERROR_MAX_RUNNING_USERS"), jint>(); }
inline jint UserManager::USER_OPERATION_ERROR_MAX_USERS_() { return get_static_field<SCAPIX_META_STRING("USER_OPERATION_ERROR_MAX_USERS"), jint>(); }
inline jint UserManager::USER_OPERATION_ERROR_UNKNOWN_() { return get_static_field<SCAPIX_META_STRING("USER_OPERATION_ERROR_UNKNOWN"), jint>(); }
inline jint UserManager::USER_OPERATION_SUCCESS_() { return get_static_field<SCAPIX_META_STRING("USER_OPERATION_SUCCESS"), jint>(); }
inline jboolean UserManager::supportsMultipleUsers() { return call_static_method<SCAPIX_META_STRING("supportsMultipleUsers"), jboolean>(); }
inline ref<java::lang::String> UserManager::getUserName() { return call_method<SCAPIX_META_STRING("getUserName"), ref<java::lang::String>>(); }
inline jboolean UserManager::isUserAGoat() { return call_method<SCAPIX_META_STRING("isUserAGoat"), jboolean>(); }
inline jboolean UserManager::isSystemUser() { return call_method<SCAPIX_META_STRING("isSystemUser"), jboolean>(); }
inline jboolean UserManager::isDemoUser() { return call_method<SCAPIX_META_STRING("isDemoUser"), jboolean>(); }
inline jboolean UserManager::isUserRunning(ref<android::os::UserHandle> user) { return call_method<SCAPIX_META_STRING("isUserRunning"), jboolean>(user); }
inline jboolean UserManager::isUserRunningOrStopping(ref<android::os::UserHandle> user) { return call_method<SCAPIX_META_STRING("isUserRunningOrStopping"), jboolean>(user); }
inline jboolean UserManager::isUserUnlocked() { return call_method<SCAPIX_META_STRING("isUserUnlocked"), jboolean>(); }
inline jboolean UserManager::isUserUnlocked(ref<android::os::UserHandle> user) { return call_method<SCAPIX_META_STRING("isUserUnlocked"), jboolean>(user); }
inline ref<android::os::Bundle> UserManager::getUserRestrictions() { return call_method<SCAPIX_META_STRING("getUserRestrictions"), ref<android::os::Bundle>>(); }
inline ref<android::os::Bundle> UserManager::getUserRestrictions(ref<android::os::UserHandle> userHandle) { return call_method<SCAPIX_META_STRING("getUserRestrictions"), ref<android::os::Bundle>>(userHandle); }
inline void UserManager::setUserRestrictions(ref<android::os::Bundle> restrictions) { return call_method<SCAPIX_META_STRING("setUserRestrictions"), void>(restrictions); }
inline void UserManager::setUserRestrictions(ref<android::os::Bundle> restrictions, ref<android::os::UserHandle> userHandle) { return call_method<SCAPIX_META_STRING("setUserRestrictions"), void>(restrictions, userHandle); }
inline void UserManager::setUserRestriction(ref<java::lang::String> key, jboolean value) { return call_method<SCAPIX_META_STRING("setUserRestriction"), void>(key, value); }
inline jboolean UserManager::hasUserRestriction(ref<java::lang::String> restrictionKey) { return call_method<SCAPIX_META_STRING("hasUserRestriction"), jboolean>(restrictionKey); }
inline jlong UserManager::getSerialNumberForUser(ref<android::os::UserHandle> user) { return call_method<SCAPIX_META_STRING("getSerialNumberForUser"), jlong>(user); }
inline ref<android::os::UserHandle> UserManager::getUserForSerialNumber(jlong serialNumber) { return call_method<SCAPIX_META_STRING("getUserForSerialNumber"), ref<android::os::UserHandle>>(serialNumber); }
inline ref<android::content::Intent> UserManager::createUserCreationIntent(ref<java::lang::String> userName, ref<java::lang::String> accountName, ref<java::lang::String> accountType, ref<android::os::PersistableBundle> accountOptions) { return call_static_method<SCAPIX_META_STRING("createUserCreationIntent"), ref<android::content::Intent>>(userName, accountName, accountType, accountOptions); }
inline jint UserManager::getUserCount() { return call_method<SCAPIX_META_STRING("getUserCount"), jint>(); }
inline ref<java::util::List> UserManager::getUserProfiles() { return call_method<SCAPIX_META_STRING("getUserProfiles"), ref<java::util::List>>(); }
inline jboolean UserManager::requestQuietModeEnabled(jboolean enableQuietMode, ref<android::os::UserHandle> userHandle) { return call_method<SCAPIX_META_STRING("requestQuietModeEnabled"), jboolean>(enableQuietMode, userHandle); }
inline jboolean UserManager::isQuietModeEnabled(ref<android::os::UserHandle> userHandle) { return call_method<SCAPIX_META_STRING("isQuietModeEnabled"), jboolean>(userHandle); }
inline ref<android::os::Bundle> UserManager::getApplicationRestrictions(ref<java::lang::String> packageName) { return call_method<SCAPIX_META_STRING("getApplicationRestrictions"), ref<android::os::Bundle>>(packageName); }
inline jboolean UserManager::setRestrictionsChallenge(ref<java::lang::String> newPin) { return call_method<SCAPIX_META_STRING("setRestrictionsChallenge"), jboolean>(newPin); }
inline jlong UserManager::getUserCreationTime(ref<android::os::UserHandle> userHandle) { return call_method<SCAPIX_META_STRING("getUserCreationTime"), jlong>(userHandle); }

} // namespace android::os
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_OS_USERMANAGER_H
