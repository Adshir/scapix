// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_ANDROID_OS_PARCELUUID_H
#define SCAPIX_ANDROID_OS_PARCELUUID_H

namespace scapix::java_api {

namespace android::os { class Parcel; }
namespace android::os { class Parcelable_Creator; }
namespace java::lang { class String; }
namespace java::util { class UUID; }

namespace android::os {

class ParcelUuid : public object_base<SCAPIX_META_STRING("android/os/ParcelUuid"),
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static ref<android::os::Parcelable_Creator> CREATOR_();

	static ref<ParcelUuid> new_object(ref<java::util::UUID> uuid);
	static ref<android::os::ParcelUuid> fromString(ref<java::lang::String> uuid);
	ref<java::util::UUID> getUuid();
	ref<java::lang::String> toString();
	jint hashCode();
	jboolean equals(ref<java::lang::Object> object);
	jint describeContents();
	void writeToParcel(ref<android::os::Parcel> dest, jint flags);

protected:

	ParcelUuid(handle_type h) : base_(h) {}

};

} // namespace android::os
} // namespace scapix::java_api

#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/UUID.h>

namespace scapix::java_api {
namespace android::os {

inline ref<android::os::Parcelable_Creator> ParcelUuid::CREATOR_() { return get_static_field<SCAPIX_META_STRING("CREATOR"), ref<android::os::Parcelable_Creator>>(); }
inline ref<ParcelUuid> ParcelUuid::new_object(ref<java::util::UUID> uuid) { return base_::new_object(uuid); }
inline ref<android::os::ParcelUuid> ParcelUuid::fromString(ref<java::lang::String> uuid) { return call_static_method<SCAPIX_META_STRING("fromString"), ref<android::os::ParcelUuid>>(uuid); }
inline ref<java::util::UUID> ParcelUuid::getUuid() { return call_method<SCAPIX_META_STRING("getUuid"), ref<java::util::UUID>>(); }
inline ref<java::lang::String> ParcelUuid::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }
inline jint ParcelUuid::hashCode() { return call_method<SCAPIX_META_STRING("hashCode"), jint>(); }
inline jboolean ParcelUuid::equals(ref<java::lang::Object> object) { return call_method<SCAPIX_META_STRING("equals"), jboolean>(object); }
inline jint ParcelUuid::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }
inline void ParcelUuid::writeToParcel(ref<android::os::Parcel> dest, jint flags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(dest, flags); }

} // namespace android::os
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_OS_PARCELUUID_H
