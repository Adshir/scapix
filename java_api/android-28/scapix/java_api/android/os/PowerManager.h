// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_OS_POWERMANAGER_H
#define SCAPIX_ANDROID_OS_POWERMANAGER_H

namespace scapix::java_api {

namespace android::os { class PowerManager_WakeLock; }
namespace java::lang { class String; }

namespace android::os {

class PowerManager : public object_base<SCAPIX_META_STRING("android/os/PowerManager"),
	java::lang::Object>
{
public:

	using WakeLock = PowerManager_WakeLock;

	static jint ACQUIRE_CAUSES_WAKEUP_();
	static ref<java::lang::String> ACTION_DEVICE_IDLE_MODE_CHANGED_();
	static ref<java::lang::String> ACTION_POWER_SAVE_MODE_CHANGED_();
	static jint FULL_WAKE_LOCK_();
	static jint LOCATION_MODE_ALL_DISABLED_WHEN_SCREEN_OFF_();
	static jint LOCATION_MODE_FOREGROUND_ONLY_();
	static jint LOCATION_MODE_GPS_DISABLED_WHEN_SCREEN_OFF_();
	static jint LOCATION_MODE_NO_CHANGE_();
	static jint ON_AFTER_RELEASE_();
	static jint PARTIAL_WAKE_LOCK_();
	static jint PROXIMITY_SCREEN_OFF_WAKE_LOCK_();
	static jint RELEASE_FLAG_WAIT_FOR_NO_PROXIMITY_();
	static jint SCREEN_BRIGHT_WAKE_LOCK_();
	static jint SCREEN_DIM_WAKE_LOCK_();

	ref<android::os::PowerManager_WakeLock> newWakeLock(jint levelAndFlags, ref<java::lang::String> tag);
	jboolean isWakeLockLevelSupported(jint level);
	jboolean isScreenOn();
	jboolean isInteractive();
	void reboot(ref<java::lang::String> reason);
	jboolean isPowerSaveMode();
	jint getLocationPowerSaveMode();
	jboolean isDeviceIdleMode();
	jboolean isIgnoringBatteryOptimizations(ref<java::lang::String> packageName);
	jboolean isSustainedPerformanceModeSupported();

protected:

	PowerManager(handle_type h) : base_(h) {}

};

} // namespace android::os
} // namespace scapix::java_api

#include <scapix/java_api/android/os/PowerManager_WakeLock.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::os {

inline jint PowerManager::ACQUIRE_CAUSES_WAKEUP_() { return get_static_field<SCAPIX_META_STRING("ACQUIRE_CAUSES_WAKEUP"), jint>(); }
inline ref<java::lang::String> PowerManager::ACTION_DEVICE_IDLE_MODE_CHANGED_() { return get_static_field<SCAPIX_META_STRING("ACTION_DEVICE_IDLE_MODE_CHANGED"), ref<java::lang::String>>(); }
inline ref<java::lang::String> PowerManager::ACTION_POWER_SAVE_MODE_CHANGED_() { return get_static_field<SCAPIX_META_STRING("ACTION_POWER_SAVE_MODE_CHANGED"), ref<java::lang::String>>(); }
inline jint PowerManager::FULL_WAKE_LOCK_() { return get_static_field<SCAPIX_META_STRING("FULL_WAKE_LOCK"), jint>(); }
inline jint PowerManager::LOCATION_MODE_ALL_DISABLED_WHEN_SCREEN_OFF_() { return get_static_field<SCAPIX_META_STRING("LOCATION_MODE_ALL_DISABLED_WHEN_SCREEN_OFF"), jint>(); }
inline jint PowerManager::LOCATION_MODE_FOREGROUND_ONLY_() { return get_static_field<SCAPIX_META_STRING("LOCATION_MODE_FOREGROUND_ONLY"), jint>(); }
inline jint PowerManager::LOCATION_MODE_GPS_DISABLED_WHEN_SCREEN_OFF_() { return get_static_field<SCAPIX_META_STRING("LOCATION_MODE_GPS_DISABLED_WHEN_SCREEN_OFF"), jint>(); }
inline jint PowerManager::LOCATION_MODE_NO_CHANGE_() { return get_static_field<SCAPIX_META_STRING("LOCATION_MODE_NO_CHANGE"), jint>(); }
inline jint PowerManager::ON_AFTER_RELEASE_() { return get_static_field<SCAPIX_META_STRING("ON_AFTER_RELEASE"), jint>(); }
inline jint PowerManager::PARTIAL_WAKE_LOCK_() { return get_static_field<SCAPIX_META_STRING("PARTIAL_WAKE_LOCK"), jint>(); }
inline jint PowerManager::PROXIMITY_SCREEN_OFF_WAKE_LOCK_() { return get_static_field<SCAPIX_META_STRING("PROXIMITY_SCREEN_OFF_WAKE_LOCK"), jint>(); }
inline jint PowerManager::RELEASE_FLAG_WAIT_FOR_NO_PROXIMITY_() { return get_static_field<SCAPIX_META_STRING("RELEASE_FLAG_WAIT_FOR_NO_PROXIMITY"), jint>(); }
inline jint PowerManager::SCREEN_BRIGHT_WAKE_LOCK_() { return get_static_field<SCAPIX_META_STRING("SCREEN_BRIGHT_WAKE_LOCK"), jint>(); }
inline jint PowerManager::SCREEN_DIM_WAKE_LOCK_() { return get_static_field<SCAPIX_META_STRING("SCREEN_DIM_WAKE_LOCK"), jint>(); }
inline ref<android::os::PowerManager_WakeLock> PowerManager::newWakeLock(jint levelAndFlags, ref<java::lang::String> tag) { return call_method<SCAPIX_META_STRING("newWakeLock"), ref<android::os::PowerManager_WakeLock>>(levelAndFlags, tag); }
inline jboolean PowerManager::isWakeLockLevelSupported(jint level) { return call_method<SCAPIX_META_STRING("isWakeLockLevelSupported"), jboolean>(level); }
inline jboolean PowerManager::isScreenOn() { return call_method<SCAPIX_META_STRING("isScreenOn"), jboolean>(); }
inline jboolean PowerManager::isInteractive() { return call_method<SCAPIX_META_STRING("isInteractive"), jboolean>(); }
inline void PowerManager::reboot(ref<java::lang::String> reason) { return call_method<SCAPIX_META_STRING("reboot"), void>(reason); }
inline jboolean PowerManager::isPowerSaveMode() { return call_method<SCAPIX_META_STRING("isPowerSaveMode"), jboolean>(); }
inline jint PowerManager::getLocationPowerSaveMode() { return call_method<SCAPIX_META_STRING("getLocationPowerSaveMode"), jint>(); }
inline jboolean PowerManager::isDeviceIdleMode() { return call_method<SCAPIX_META_STRING("isDeviceIdleMode"), jboolean>(); }
inline jboolean PowerManager::isIgnoringBatteryOptimizations(ref<java::lang::String> packageName) { return call_method<SCAPIX_META_STRING("isIgnoringBatteryOptimizations"), jboolean>(packageName); }
inline jboolean PowerManager::isSustainedPerformanceModeSupported() { return call_method<SCAPIX_META_STRING("isSustainedPerformanceModeSupported"), jboolean>(); }

} // namespace android::os
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_OS_POWERMANAGER_H
