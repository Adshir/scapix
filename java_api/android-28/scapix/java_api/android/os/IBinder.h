// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_OS_IBINDER_H
#define SCAPIX_ANDROID_OS_IBINDER_H

namespace scapix::java_api {

namespace android::os { class IBinder_DeathRecipient; }
namespace android::os { class IInterface; }
namespace android::os { class Parcel; }
namespace java::io { class FileDescriptor; }
namespace java::lang { class String; }

namespace android::os {

class IBinder : public object_base<SCAPIX_META_STRING("android/os/IBinder"),
	java::lang::Object>
{
public:

	using DeathRecipient = IBinder_DeathRecipient;

	static jint DUMP_TRANSACTION_();
	static jint FIRST_CALL_TRANSACTION_();
	static jint FLAG_ONEWAY_();
	static jint INTERFACE_TRANSACTION_();
	static jint LAST_CALL_TRANSACTION_();
	static jint LIKE_TRANSACTION_();
	static jint PING_TRANSACTION_();
	static jint TWEET_TRANSACTION_();

	ref<java::lang::String> getInterfaceDescriptor();
	jboolean pingBinder();
	jboolean isBinderAlive();
	ref<android::os::IInterface> queryLocalInterface(ref<java::lang::String> p1);
	void dump(ref<java::io::FileDescriptor> p1, ref<link::java::array<java::lang::String>> p2);
	void dumpAsync(ref<java::io::FileDescriptor> p1, ref<link::java::array<java::lang::String>> p2);
	jboolean transact(jint p1, ref<android::os::Parcel> p2, ref<android::os::Parcel> p3, jint p4);
	void linkToDeath(ref<android::os::IBinder_DeathRecipient> p1, jint p2);
	jboolean unlinkToDeath(ref<android::os::IBinder_DeathRecipient> p1, jint p2);

protected:

	IBinder(handle_type h) : base_(h) {}

};

} // namespace android::os
} // namespace scapix::java_api

#include <scapix/java_api/android/os/IBinder_DeathRecipient.h>
#include <scapix/java_api/android/os/IInterface.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/java/io/FileDescriptor.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::os {

inline jint IBinder::DUMP_TRANSACTION_() { return get_static_field<SCAPIX_META_STRING("DUMP_TRANSACTION"), jint>(); }
inline jint IBinder::FIRST_CALL_TRANSACTION_() { return get_static_field<SCAPIX_META_STRING("FIRST_CALL_TRANSACTION"), jint>(); }
inline jint IBinder::FLAG_ONEWAY_() { return get_static_field<SCAPIX_META_STRING("FLAG_ONEWAY"), jint>(); }
inline jint IBinder::INTERFACE_TRANSACTION_() { return get_static_field<SCAPIX_META_STRING("INTERFACE_TRANSACTION"), jint>(); }
inline jint IBinder::LAST_CALL_TRANSACTION_() { return get_static_field<SCAPIX_META_STRING("LAST_CALL_TRANSACTION"), jint>(); }
inline jint IBinder::LIKE_TRANSACTION_() { return get_static_field<SCAPIX_META_STRING("LIKE_TRANSACTION"), jint>(); }
inline jint IBinder::PING_TRANSACTION_() { return get_static_field<SCAPIX_META_STRING("PING_TRANSACTION"), jint>(); }
inline jint IBinder::TWEET_TRANSACTION_() { return get_static_field<SCAPIX_META_STRING("TWEET_TRANSACTION"), jint>(); }
inline ref<java::lang::String> IBinder::getInterfaceDescriptor() { return call_method<SCAPIX_META_STRING("getInterfaceDescriptor"), ref<java::lang::String>>(); }
inline jboolean IBinder::pingBinder() { return call_method<SCAPIX_META_STRING("pingBinder"), jboolean>(); }
inline jboolean IBinder::isBinderAlive() { return call_method<SCAPIX_META_STRING("isBinderAlive"), jboolean>(); }
inline ref<android::os::IInterface> IBinder::queryLocalInterface(ref<java::lang::String> p1) { return call_method<SCAPIX_META_STRING("queryLocalInterface"), ref<android::os::IInterface>>(p1); }
inline void IBinder::dump(ref<java::io::FileDescriptor> p1, ref<link::java::array<java::lang::String>> p2) { return call_method<SCAPIX_META_STRING("dump"), void>(p1, p2); }
inline void IBinder::dumpAsync(ref<java::io::FileDescriptor> p1, ref<link::java::array<java::lang::String>> p2) { return call_method<SCAPIX_META_STRING("dumpAsync"), void>(p1, p2); }
inline jboolean IBinder::transact(jint p1, ref<android::os::Parcel> p2, ref<android::os::Parcel> p3, jint p4) { return call_method<SCAPIX_META_STRING("transact"), jboolean>(p1, p2, p3, p4); }
inline void IBinder::linkToDeath(ref<android::os::IBinder_DeathRecipient> p1, jint p2) { return call_method<SCAPIX_META_STRING("linkToDeath"), void>(p1, p2); }
inline jboolean IBinder::unlinkToDeath(ref<android::os::IBinder_DeathRecipient> p1, jint p2) { return call_method<SCAPIX_META_STRING("unlinkToDeath"), jboolean>(p1, p2); }

} // namespace android::os
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_OS_IBINDER_H
