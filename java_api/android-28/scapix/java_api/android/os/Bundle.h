// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/os/BaseBundle.h>
#include <scapix/java_api/java/lang/Cloneable.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_ANDROID_OS_BUNDLE_H
#define SCAPIX_ANDROID_OS_BUNDLE_H

namespace scapix::java_api {

namespace android::os { class IBinder; }
namespace android::os { class Parcel; }
namespace android::os { class Parcelable_Creator; }
namespace android::os { class PersistableBundle; }
namespace android::util { class Size; }
namespace android::util { class SizeF; }
namespace android::util { class SparseArray; }
namespace java::io { class Serializable; }
namespace java::lang { class Byte; }
namespace java::lang { class CharSequence; }
namespace java::lang { class ClassLoader; }
namespace java::lang { class Object; }
namespace java::lang { class String; }
namespace java::util { class ArrayList; }

namespace android::os {

class Bundle : public object_base<SCAPIX_META_STRING("android/os/Bundle"),
	android::os::BaseBundle,
	java::lang::Cloneable,
	android::os::Parcelable>
{
public:

	static ref<android::os::Parcelable_Creator> CREATOR_();
	static ref<android::os::Bundle> EMPTY_();

	static ref<Bundle> new_object();
	static ref<Bundle> new_object(ref<java::lang::ClassLoader> loader);
	static ref<Bundle> new_object(jint capacity);
	static ref<Bundle> new_object(ref<android::os::Bundle> b);
	static ref<Bundle> new_object(ref<android::os::PersistableBundle> b);
	void setClassLoader(ref<java::lang::ClassLoader> loader);
	ref<java::lang::ClassLoader> getClassLoader();
	ref<java::lang::Object> clone();
	ref<android::os::Bundle> deepCopy();
	void clear();
	void remove(ref<java::lang::String> key);
	void putAll(ref<android::os::Bundle> bundle);
	jboolean hasFileDescriptors();
	void putByte(ref<java::lang::String> key, jbyte value);
	void putChar(ref<java::lang::String> key, jchar value);
	void putShort(ref<java::lang::String> key, jshort value);
	void putFloat(ref<java::lang::String> key, jfloat value);
	void putCharSequence(ref<java::lang::String> key, ref<java::lang::CharSequence> value);
	void putParcelable(ref<java::lang::String> key, ref<android::os::Parcelable> value);
	void putSize(ref<java::lang::String> key, ref<android::util::Size> value);
	void putSizeF(ref<java::lang::String> key, ref<android::util::SizeF> value);
	void putParcelableArray(ref<java::lang::String> key, ref<link::java::array<android::os::Parcelable>> value);
	void putParcelableArrayList(ref<java::lang::String> key, ref<java::util::ArrayList> value);
	void putSparseParcelableArray(ref<java::lang::String> key, ref<android::util::SparseArray> value);
	void putIntegerArrayList(ref<java::lang::String> key, ref<java::util::ArrayList> value);
	void putStringArrayList(ref<java::lang::String> key, ref<java::util::ArrayList> value);
	void putCharSequenceArrayList(ref<java::lang::String> key, ref<java::util::ArrayList> value);
	void putSerializable(ref<java::lang::String> key, ref<java::io::Serializable> value);
	void putByteArray(ref<java::lang::String> key, ref<link::java::array<jbyte>> value);
	void putShortArray(ref<java::lang::String> key, ref<link::java::array<jshort>> value);
	void putCharArray(ref<java::lang::String> key, ref<link::java::array<jchar>> value);
	void putFloatArray(ref<java::lang::String> key, ref<link::java::array<jfloat>> value);
	void putCharSequenceArray(ref<java::lang::String> key, ref<link::java::array<java::lang::CharSequence>> value);
	void putBundle(ref<java::lang::String> key, ref<android::os::Bundle> value);
	void putBinder(ref<java::lang::String> key, ref<android::os::IBinder> value);
	jbyte getByte(ref<java::lang::String> key);
	ref<java::lang::Byte> getByte(ref<java::lang::String> key, jbyte defaultValue);
	jchar getChar(ref<java::lang::String> key);
	jchar getChar(ref<java::lang::String> key, jchar defaultValue);
	jshort getShort(ref<java::lang::String> key);
	jshort getShort(ref<java::lang::String> key, jshort defaultValue);
	jfloat getFloat(ref<java::lang::String> key);
	jfloat getFloat(ref<java::lang::String> key, jfloat defaultValue);
	ref<java::lang::CharSequence> getCharSequence(ref<java::lang::String> key);
	ref<java::lang::CharSequence> getCharSequence(ref<java::lang::String> key, ref<java::lang::CharSequence> defaultValue);
	ref<android::util::Size> getSize(ref<java::lang::String> key);
	ref<android::util::SizeF> getSizeF(ref<java::lang::String> key);
	ref<android::os::Bundle> getBundle(ref<java::lang::String> key);
	ref<android::os::Parcelable> getParcelable(ref<java::lang::String> key);
	ref<link::java::array<android::os::Parcelable>> getParcelableArray(ref<java::lang::String> key);
	ref<java::util::ArrayList> getParcelableArrayList(ref<java::lang::String> key);
	ref<android::util::SparseArray> getSparseParcelableArray(ref<java::lang::String> key);
	ref<java::io::Serializable> getSerializable(ref<java::lang::String> key);
	ref<java::util::ArrayList> getIntegerArrayList(ref<java::lang::String> key);
	ref<java::util::ArrayList> getStringArrayList(ref<java::lang::String> key);
	ref<java::util::ArrayList> getCharSequenceArrayList(ref<java::lang::String> key);
	ref<link::java::array<jbyte>> getByteArray(ref<java::lang::String> key);
	ref<link::java::array<jshort>> getShortArray(ref<java::lang::String> key);
	ref<link::java::array<jchar>> getCharArray(ref<java::lang::String> key);
	ref<link::java::array<jfloat>> getFloatArray(ref<java::lang::String> key);
	ref<link::java::array<java::lang::CharSequence>> getCharSequenceArray(ref<java::lang::String> key);
	ref<android::os::IBinder> getBinder(ref<java::lang::String> key);
	jint describeContents();
	void writeToParcel(ref<android::os::Parcel> parcel, jint flags);
	void readFromParcel(ref<android::os::Parcel> parcel);
	ref<java::lang::String> toString();

protected:

	Bundle(handle_type h) : base_(h) {}

};

} // namespace android::os
} // namespace scapix::java_api

#include <scapix/java_api/android/os/IBinder.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/android/os/PersistableBundle.h>
#include <scapix/java_api/android/util/Size.h>
#include <scapix/java_api/android/util/SizeF.h>
#include <scapix/java_api/android/util/SparseArray.h>
#include <scapix/java_api/java/io/Serializable.h>
#include <scapix/java_api/java/lang/Byte.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/java/lang/ClassLoader.h>
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/ArrayList.h>

namespace scapix::java_api {
namespace android::os {

inline ref<android::os::Parcelable_Creator> Bundle::CREATOR_() { return get_static_field<SCAPIX_META_STRING("CREATOR"), ref<android::os::Parcelable_Creator>>(); }
inline ref<android::os::Bundle> Bundle::EMPTY_() { return get_static_field<SCAPIX_META_STRING("EMPTY"), ref<android::os::Bundle>>(); }
inline ref<Bundle> Bundle::new_object() { return base_::new_object(); }
inline ref<Bundle> Bundle::new_object(ref<java::lang::ClassLoader> loader) { return base_::new_object(loader); }
inline ref<Bundle> Bundle::new_object(jint capacity) { return base_::new_object(capacity); }
inline ref<Bundle> Bundle::new_object(ref<android::os::Bundle> b) { return base_::new_object(b); }
inline ref<Bundle> Bundle::new_object(ref<android::os::PersistableBundle> b) { return base_::new_object(b); }
inline void Bundle::setClassLoader(ref<java::lang::ClassLoader> loader) { return call_method<SCAPIX_META_STRING("setClassLoader"), void>(loader); }
inline ref<java::lang::ClassLoader> Bundle::getClassLoader() { return call_method<SCAPIX_META_STRING("getClassLoader"), ref<java::lang::ClassLoader>>(); }
inline ref<java::lang::Object> Bundle::clone() { return call_method<SCAPIX_META_STRING("clone"), ref<java::lang::Object>>(); }
inline ref<android::os::Bundle> Bundle::deepCopy() { return call_method<SCAPIX_META_STRING("deepCopy"), ref<android::os::Bundle>>(); }
inline void Bundle::clear() { return call_method<SCAPIX_META_STRING("clear"), void>(); }
inline void Bundle::remove(ref<java::lang::String> key) { return call_method<SCAPIX_META_STRING("remove"), void>(key); }
inline void Bundle::putAll(ref<android::os::Bundle> bundle) { return call_method<SCAPIX_META_STRING("putAll"), void>(bundle); }
inline jboolean Bundle::hasFileDescriptors() { return call_method<SCAPIX_META_STRING("hasFileDescriptors"), jboolean>(); }
inline void Bundle::putByte(ref<java::lang::String> key, jbyte value) { return call_method<SCAPIX_META_STRING("putByte"), void>(key, value); }
inline void Bundle::putChar(ref<java::lang::String> key, jchar value) { return call_method<SCAPIX_META_STRING("putChar"), void>(key, value); }
inline void Bundle::putShort(ref<java::lang::String> key, jshort value) { return call_method<SCAPIX_META_STRING("putShort"), void>(key, value); }
inline void Bundle::putFloat(ref<java::lang::String> key, jfloat value) { return call_method<SCAPIX_META_STRING("putFloat"), void>(key, value); }
inline void Bundle::putCharSequence(ref<java::lang::String> key, ref<java::lang::CharSequence> value) { return call_method<SCAPIX_META_STRING("putCharSequence"), void>(key, value); }
inline void Bundle::putParcelable(ref<java::lang::String> key, ref<android::os::Parcelable> value) { return call_method<SCAPIX_META_STRING("putParcelable"), void>(key, value); }
inline void Bundle::putSize(ref<java::lang::String> key, ref<android::util::Size> value) { return call_method<SCAPIX_META_STRING("putSize"), void>(key, value); }
inline void Bundle::putSizeF(ref<java::lang::String> key, ref<android::util::SizeF> value) { return call_method<SCAPIX_META_STRING("putSizeF"), void>(key, value); }
inline void Bundle::putParcelableArray(ref<java::lang::String> key, ref<link::java::array<android::os::Parcelable>> value) { return call_method<SCAPIX_META_STRING("putParcelableArray"), void>(key, value); }
inline void Bundle::putParcelableArrayList(ref<java::lang::String> key, ref<java::util::ArrayList> value) { return call_method<SCAPIX_META_STRING("putParcelableArrayList"), void>(key, value); }
inline void Bundle::putSparseParcelableArray(ref<java::lang::String> key, ref<android::util::SparseArray> value) { return call_method<SCAPIX_META_STRING("putSparseParcelableArray"), void>(key, value); }
inline void Bundle::putIntegerArrayList(ref<java::lang::String> key, ref<java::util::ArrayList> value) { return call_method<SCAPIX_META_STRING("putIntegerArrayList"), void>(key, value); }
inline void Bundle::putStringArrayList(ref<java::lang::String> key, ref<java::util::ArrayList> value) { return call_method<SCAPIX_META_STRING("putStringArrayList"), void>(key, value); }
inline void Bundle::putCharSequenceArrayList(ref<java::lang::String> key, ref<java::util::ArrayList> value) { return call_method<SCAPIX_META_STRING("putCharSequenceArrayList"), void>(key, value); }
inline void Bundle::putSerializable(ref<java::lang::String> key, ref<java::io::Serializable> value) { return call_method<SCAPIX_META_STRING("putSerializable"), void>(key, value); }
inline void Bundle::putByteArray(ref<java::lang::String> key, ref<link::java::array<jbyte>> value) { return call_method<SCAPIX_META_STRING("putByteArray"), void>(key, value); }
inline void Bundle::putShortArray(ref<java::lang::String> key, ref<link::java::array<jshort>> value) { return call_method<SCAPIX_META_STRING("putShortArray"), void>(key, value); }
inline void Bundle::putCharArray(ref<java::lang::String> key, ref<link::java::array<jchar>> value) { return call_method<SCAPIX_META_STRING("putCharArray"), void>(key, value); }
inline void Bundle::putFloatArray(ref<java::lang::String> key, ref<link::java::array<jfloat>> value) { return call_method<SCAPIX_META_STRING("putFloatArray"), void>(key, value); }
inline void Bundle::putCharSequenceArray(ref<java::lang::String> key, ref<link::java::array<java::lang::CharSequence>> value) { return call_method<SCAPIX_META_STRING("putCharSequenceArray"), void>(key, value); }
inline void Bundle::putBundle(ref<java::lang::String> key, ref<android::os::Bundle> value) { return call_method<SCAPIX_META_STRING("putBundle"), void>(key, value); }
inline void Bundle::putBinder(ref<java::lang::String> key, ref<android::os::IBinder> value) { return call_method<SCAPIX_META_STRING("putBinder"), void>(key, value); }
inline jbyte Bundle::getByte(ref<java::lang::String> key) { return call_method<SCAPIX_META_STRING("getByte"), jbyte>(key); }
inline ref<java::lang::Byte> Bundle::getByte(ref<java::lang::String> key, jbyte defaultValue) { return call_method<SCAPIX_META_STRING("getByte"), ref<java::lang::Byte>>(key, defaultValue); }
inline jchar Bundle::getChar(ref<java::lang::String> key) { return call_method<SCAPIX_META_STRING("getChar"), jchar>(key); }
inline jchar Bundle::getChar(ref<java::lang::String> key, jchar defaultValue) { return call_method<SCAPIX_META_STRING("getChar"), jchar>(key, defaultValue); }
inline jshort Bundle::getShort(ref<java::lang::String> key) { return call_method<SCAPIX_META_STRING("getShort"), jshort>(key); }
inline jshort Bundle::getShort(ref<java::lang::String> key, jshort defaultValue) { return call_method<SCAPIX_META_STRING("getShort"), jshort>(key, defaultValue); }
inline jfloat Bundle::getFloat(ref<java::lang::String> key) { return call_method<SCAPIX_META_STRING("getFloat"), jfloat>(key); }
inline jfloat Bundle::getFloat(ref<java::lang::String> key, jfloat defaultValue) { return call_method<SCAPIX_META_STRING("getFloat"), jfloat>(key, defaultValue); }
inline ref<java::lang::CharSequence> Bundle::getCharSequence(ref<java::lang::String> key) { return call_method<SCAPIX_META_STRING("getCharSequence"), ref<java::lang::CharSequence>>(key); }
inline ref<java::lang::CharSequence> Bundle::getCharSequence(ref<java::lang::String> key, ref<java::lang::CharSequence> defaultValue) { return call_method<SCAPIX_META_STRING("getCharSequence"), ref<java::lang::CharSequence>>(key, defaultValue); }
inline ref<android::util::Size> Bundle::getSize(ref<java::lang::String> key) { return call_method<SCAPIX_META_STRING("getSize"), ref<android::util::Size>>(key); }
inline ref<android::util::SizeF> Bundle::getSizeF(ref<java::lang::String> key) { return call_method<SCAPIX_META_STRING("getSizeF"), ref<android::util::SizeF>>(key); }
inline ref<android::os::Bundle> Bundle::getBundle(ref<java::lang::String> key) { return call_method<SCAPIX_META_STRING("getBundle"), ref<android::os::Bundle>>(key); }
inline ref<android::os::Parcelable> Bundle::getParcelable(ref<java::lang::String> key) { return call_method<SCAPIX_META_STRING("getParcelable"), ref<android::os::Parcelable>>(key); }
inline ref<link::java::array<android::os::Parcelable>> Bundle::getParcelableArray(ref<java::lang::String> key) { return call_method<SCAPIX_META_STRING("getParcelableArray"), ref<link::java::array<android::os::Parcelable>>>(key); }
inline ref<java::util::ArrayList> Bundle::getParcelableArrayList(ref<java::lang::String> key) { return call_method<SCAPIX_META_STRING("getParcelableArrayList"), ref<java::util::ArrayList>>(key); }
inline ref<android::util::SparseArray> Bundle::getSparseParcelableArray(ref<java::lang::String> key) { return call_method<SCAPIX_META_STRING("getSparseParcelableArray"), ref<android::util::SparseArray>>(key); }
inline ref<java::io::Serializable> Bundle::getSerializable(ref<java::lang::String> key) { return call_method<SCAPIX_META_STRING("getSerializable"), ref<java::io::Serializable>>(key); }
inline ref<java::util::ArrayList> Bundle::getIntegerArrayList(ref<java::lang::String> key) { return call_method<SCAPIX_META_STRING("getIntegerArrayList"), ref<java::util::ArrayList>>(key); }
inline ref<java::util::ArrayList> Bundle::getStringArrayList(ref<java::lang::String> key) { return call_method<SCAPIX_META_STRING("getStringArrayList"), ref<java::util::ArrayList>>(key); }
inline ref<java::util::ArrayList> Bundle::getCharSequenceArrayList(ref<java::lang::String> key) { return call_method<SCAPIX_META_STRING("getCharSequenceArrayList"), ref<java::util::ArrayList>>(key); }
inline ref<link::java::array<jbyte>> Bundle::getByteArray(ref<java::lang::String> key) { return call_method<SCAPIX_META_STRING("getByteArray"), ref<link::java::array<jbyte>>>(key); }
inline ref<link::java::array<jshort>> Bundle::getShortArray(ref<java::lang::String> key) { return call_method<SCAPIX_META_STRING("getShortArray"), ref<link::java::array<jshort>>>(key); }
inline ref<link::java::array<jchar>> Bundle::getCharArray(ref<java::lang::String> key) { return call_method<SCAPIX_META_STRING("getCharArray"), ref<link::java::array<jchar>>>(key); }
inline ref<link::java::array<jfloat>> Bundle::getFloatArray(ref<java::lang::String> key) { return call_method<SCAPIX_META_STRING("getFloatArray"), ref<link::java::array<jfloat>>>(key); }
inline ref<link::java::array<java::lang::CharSequence>> Bundle::getCharSequenceArray(ref<java::lang::String> key) { return call_method<SCAPIX_META_STRING("getCharSequenceArray"), ref<link::java::array<java::lang::CharSequence>>>(key); }
inline ref<android::os::IBinder> Bundle::getBinder(ref<java::lang::String> key) { return call_method<SCAPIX_META_STRING("getBinder"), ref<android::os::IBinder>>(key); }
inline jint Bundle::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }
inline void Bundle::writeToParcel(ref<android::os::Parcel> parcel, jint flags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(parcel, flags); }
inline void Bundle::readFromParcel(ref<android::os::Parcel> parcel) { return call_method<SCAPIX_META_STRING("readFromParcel"), void>(parcel); }
inline ref<java::lang::String> Bundle::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }

} // namespace android::os
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_OS_BUNDLE_H
