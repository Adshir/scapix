// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_OS_PARCEL_H
#define SCAPIX_ANDROID_OS_PARCEL_H

namespace scapix::java_api {

namespace android::os { class Bundle; }
namespace android::os { class IBinder; }
namespace android::os { class IInterface; }
namespace android::os { class ParcelFileDescriptor; }
namespace android::os { class Parcelable; }
namespace android::os { class Parcelable_Creator; }
namespace android::os { class PersistableBundle; }
namespace android::util { class Size; }
namespace android::util { class SizeF; }
namespace android::util { class SparseArray; }
namespace android::util { class SparseBooleanArray; }
namespace java::io { class FileDescriptor; }
namespace java::io { class Serializable; }
namespace java::lang { class ClassLoader; }
namespace java::lang { class Exception; }
namespace java::lang { class String; }
namespace java::util { class ArrayList; }
namespace java::util { class HashMap; }
namespace java::util { class List; }
namespace java::util { class Map; }

namespace android::os {

class Parcel : public object_base<SCAPIX_META_STRING("android/os/Parcel"),
	java::lang::Object>
{
public:

	static ref<android::os::Parcelable_Creator> STRING_CREATOR_();

	static ref<android::os::Parcel> obtain();
	void recycle();
	jint dataSize();
	jint dataAvail();
	jint dataPosition();
	jint dataCapacity();
	void setDataSize(jint size);
	void setDataPosition(jint pos);
	void setDataCapacity(jint size);
	ref<link::java::array<jbyte>> marshall();
	void unmarshall(ref<link::java::array<jbyte>> data, jint offset, jint length);
	void appendFrom(ref<android::os::Parcel> parcel, jint offset, jint length);
	jboolean hasFileDescriptors();
	void writeInterfaceToken(ref<java::lang::String> interfaceName);
	void enforceInterface(ref<java::lang::String> interfaceName);
	void writeByteArray(ref<link::java::array<jbyte>> b);
	void writeByteArray(ref<link::java::array<jbyte>> b, jint offset, jint len);
	void writeInt(jint val);
	void writeLong(jlong val);
	void writeFloat(jfloat val);
	void writeDouble(jdouble val);
	void writeString(ref<java::lang::String> val);
	void writeStrongBinder(ref<android::os::IBinder> val);
	void writeStrongInterface(ref<android::os::IInterface> val);
	void writeFileDescriptor(ref<java::io::FileDescriptor> val);
	void writeByte(jbyte val);
	void writeMap(ref<java::util::Map> val);
	void writeBundle(ref<android::os::Bundle> val);
	void writePersistableBundle(ref<android::os::PersistableBundle> val);
	void writeSize(ref<android::util::Size> val);
	void writeSizeF(ref<android::util::SizeF> val);
	void writeList(ref<java::util::List> val);
	void writeArray(ref<link::java::array<java::lang::Object>> val);
	void writeSparseArray(ref<android::util::SparseArray> val);
	void writeSparseBooleanArray(ref<android::util::SparseBooleanArray> val);
	void writeBooleanArray(ref<link::java::array<jboolean>> val);
	ref<link::java::array<jboolean>> createBooleanArray();
	void readBooleanArray(ref<link::java::array<jboolean>> val);
	void writeCharArray(ref<link::java::array<jchar>> val);
	ref<link::java::array<jchar>> createCharArray();
	void readCharArray(ref<link::java::array<jchar>> val);
	void writeIntArray(ref<link::java::array<jint>> val);
	ref<link::java::array<jint>> createIntArray();
	void readIntArray(ref<link::java::array<jint>> val);
	void writeLongArray(ref<link::java::array<jlong>> val);
	ref<link::java::array<jlong>> createLongArray();
	void readLongArray(ref<link::java::array<jlong>> val);
	void writeFloatArray(ref<link::java::array<jfloat>> val);
	ref<link::java::array<jfloat>> createFloatArray();
	void readFloatArray(ref<link::java::array<jfloat>> val);
	void writeDoubleArray(ref<link::java::array<jdouble>> val);
	ref<link::java::array<jdouble>> createDoubleArray();
	void readDoubleArray(ref<link::java::array<jdouble>> val);
	void writeStringArray(ref<link::java::array<java::lang::String>> val);
	ref<link::java::array<java::lang::String>> createStringArray();
	void readStringArray(ref<link::java::array<java::lang::String>> val);
	void writeBinderArray(ref<link::java::array<android::os::IBinder>> val);
	ref<link::java::array<android::os::IBinder>> createBinderArray();
	void readBinderArray(ref<link::java::array<android::os::IBinder>> val);
	void writeTypedList(ref<java::util::List> val);
	void writeStringList(ref<java::util::List> val);
	void writeBinderList(ref<java::util::List> val);
	void writeTypedArray(ref<link::java::array<android::os::Parcelable>> val, jint parcelableFlags);
	void writeTypedObject(ref<android::os::Parcelable> val, jint parcelableFlags);
	void writeValue(ref<java::lang::Object> v);
	void writeParcelable(ref<android::os::Parcelable> p, jint parcelableFlags);
	void writeSerializable(ref<java::io::Serializable> s);
	void writeException(ref<java::lang::Exception> e);
	void writeNoException();
	void readException();
	void readException(jint code, ref<java::lang::String> msg);
	jint readInt();
	jlong readLong();
	jfloat readFloat();
	jdouble readDouble();
	ref<java::lang::String> readString();
	ref<android::os::IBinder> readStrongBinder();
	ref<android::os::ParcelFileDescriptor> readFileDescriptor();
	jbyte readByte();
	void readMap(ref<java::util::Map> outVal, ref<java::lang::ClassLoader> loader);
	void readList(ref<java::util::List> outVal, ref<java::lang::ClassLoader> loader);
	ref<java::util::HashMap> readHashMap(ref<java::lang::ClassLoader> loader);
	ref<android::os::Bundle> readBundle();
	ref<android::os::Bundle> readBundle(ref<java::lang::ClassLoader> loader);
	ref<android::os::PersistableBundle> readPersistableBundle();
	ref<android::os::PersistableBundle> readPersistableBundle(ref<java::lang::ClassLoader> loader);
	ref<android::util::Size> readSize();
	ref<android::util::SizeF> readSizeF();
	ref<link::java::array<jbyte>> createByteArray();
	void readByteArray(ref<link::java::array<jbyte>> val);
	ref<java::util::ArrayList> readArrayList(ref<java::lang::ClassLoader> loader);
	ref<link::java::array<java::lang::Object>> readArray(ref<java::lang::ClassLoader> loader);
	ref<android::util::SparseArray> readSparseArray(ref<java::lang::ClassLoader> loader);
	ref<android::util::SparseBooleanArray> readSparseBooleanArray();
	ref<java::util::ArrayList> createTypedArrayList(ref<android::os::Parcelable_Creator> c);
	void readTypedList(ref<java::util::List> list, ref<android::os::Parcelable_Creator> c);
	ref<java::util::ArrayList> createStringArrayList();
	ref<java::util::ArrayList> createBinderArrayList();
	void readStringList(ref<java::util::List> list);
	void readBinderList(ref<java::util::List> list);
	ref<link::java::array<java::lang::Object>> createTypedArray(ref<android::os::Parcelable_Creator> c);
	void readTypedArray(ref<link::java::array<java::lang::Object>> val, ref<android::os::Parcelable_Creator> c);
	ref<java::lang::Object> readTypedObject(ref<android::os::Parcelable_Creator> c);
	void writeParcelableArray(ref<link::java::array<android::os::Parcelable>> value, jint parcelableFlags);
	ref<java::lang::Object> readValue(ref<java::lang::ClassLoader> loader);
	ref<android::os::Parcelable> readParcelable(ref<java::lang::ClassLoader> loader);
	ref<link::java::array<android::os::Parcelable>> readParcelableArray(ref<java::lang::ClassLoader> loader);
	ref<java::io::Serializable> readSerializable();

protected:

	Parcel(handle_type h) : base_(h) {}

};

} // namespace android::os
} // namespace scapix::java_api

#include <scapix/java_api/android/os/Bundle.h>
#include <scapix/java_api/android/os/IBinder.h>
#include <scapix/java_api/android/os/IInterface.h>
#include <scapix/java_api/android/os/ParcelFileDescriptor.h>
#include <scapix/java_api/android/os/Parcelable.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/android/os/PersistableBundle.h>
#include <scapix/java_api/android/util/Size.h>
#include <scapix/java_api/android/util/SizeF.h>
#include <scapix/java_api/android/util/SparseArray.h>
#include <scapix/java_api/android/util/SparseBooleanArray.h>
#include <scapix/java_api/java/io/FileDescriptor.h>
#include <scapix/java_api/java/io/Serializable.h>
#include <scapix/java_api/java/lang/ClassLoader.h>
#include <scapix/java_api/java/lang/Exception.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/ArrayList.h>
#include <scapix/java_api/java/util/HashMap.h>
#include <scapix/java_api/java/util/List.h>
#include <scapix/java_api/java/util/Map.h>

namespace scapix::java_api {
namespace android::os {

inline ref<android::os::Parcelable_Creator> Parcel::STRING_CREATOR_() { return get_static_field<SCAPIX_META_STRING("STRING_CREATOR"), ref<android::os::Parcelable_Creator>>(); }
inline ref<android::os::Parcel> Parcel::obtain() { return call_static_method<SCAPIX_META_STRING("obtain"), ref<android::os::Parcel>>(); }
inline void Parcel::recycle() { return call_method<SCAPIX_META_STRING("recycle"), void>(); }
inline jint Parcel::dataSize() { return call_method<SCAPIX_META_STRING("dataSize"), jint>(); }
inline jint Parcel::dataAvail() { return call_method<SCAPIX_META_STRING("dataAvail"), jint>(); }
inline jint Parcel::dataPosition() { return call_method<SCAPIX_META_STRING("dataPosition"), jint>(); }
inline jint Parcel::dataCapacity() { return call_method<SCAPIX_META_STRING("dataCapacity"), jint>(); }
inline void Parcel::setDataSize(jint size) { return call_method<SCAPIX_META_STRING("setDataSize"), void>(size); }
inline void Parcel::setDataPosition(jint pos) { return call_method<SCAPIX_META_STRING("setDataPosition"), void>(pos); }
inline void Parcel::setDataCapacity(jint size) { return call_method<SCAPIX_META_STRING("setDataCapacity"), void>(size); }
inline ref<link::java::array<jbyte>> Parcel::marshall() { return call_method<SCAPIX_META_STRING("marshall"), ref<link::java::array<jbyte>>>(); }
inline void Parcel::unmarshall(ref<link::java::array<jbyte>> data, jint offset, jint length) { return call_method<SCAPIX_META_STRING("unmarshall"), void>(data, offset, length); }
inline void Parcel::appendFrom(ref<android::os::Parcel> parcel, jint offset, jint length) { return call_method<SCAPIX_META_STRING("appendFrom"), void>(parcel, offset, length); }
inline jboolean Parcel::hasFileDescriptors() { return call_method<SCAPIX_META_STRING("hasFileDescriptors"), jboolean>(); }
inline void Parcel::writeInterfaceToken(ref<java::lang::String> interfaceName) { return call_method<SCAPIX_META_STRING("writeInterfaceToken"), void>(interfaceName); }
inline void Parcel::enforceInterface(ref<java::lang::String> interfaceName) { return call_method<SCAPIX_META_STRING("enforceInterface"), void>(interfaceName); }
inline void Parcel::writeByteArray(ref<link::java::array<jbyte>> b) { return call_method<SCAPIX_META_STRING("writeByteArray"), void>(b); }
inline void Parcel::writeByteArray(ref<link::java::array<jbyte>> b, jint offset, jint len) { return call_method<SCAPIX_META_STRING("writeByteArray"), void>(b, offset, len); }
inline void Parcel::writeInt(jint val) { return call_method<SCAPIX_META_STRING("writeInt"), void>(val); }
inline void Parcel::writeLong(jlong val) { return call_method<SCAPIX_META_STRING("writeLong"), void>(val); }
inline void Parcel::writeFloat(jfloat val) { return call_method<SCAPIX_META_STRING("writeFloat"), void>(val); }
inline void Parcel::writeDouble(jdouble val) { return call_method<SCAPIX_META_STRING("writeDouble"), void>(val); }
inline void Parcel::writeString(ref<java::lang::String> val) { return call_method<SCAPIX_META_STRING("writeString"), void>(val); }
inline void Parcel::writeStrongBinder(ref<android::os::IBinder> val) { return call_method<SCAPIX_META_STRING("writeStrongBinder"), void>(val); }
inline void Parcel::writeStrongInterface(ref<android::os::IInterface> val) { return call_method<SCAPIX_META_STRING("writeStrongInterface"), void>(val); }
inline void Parcel::writeFileDescriptor(ref<java::io::FileDescriptor> val) { return call_method<SCAPIX_META_STRING("writeFileDescriptor"), void>(val); }
inline void Parcel::writeByte(jbyte val) { return call_method<SCAPIX_META_STRING("writeByte"), void>(val); }
inline void Parcel::writeMap(ref<java::util::Map> val) { return call_method<SCAPIX_META_STRING("writeMap"), void>(val); }
inline void Parcel::writeBundle(ref<android::os::Bundle> val) { return call_method<SCAPIX_META_STRING("writeBundle"), void>(val); }
inline void Parcel::writePersistableBundle(ref<android::os::PersistableBundle> val) { return call_method<SCAPIX_META_STRING("writePersistableBundle"), void>(val); }
inline void Parcel::writeSize(ref<android::util::Size> val) { return call_method<SCAPIX_META_STRING("writeSize"), void>(val); }
inline void Parcel::writeSizeF(ref<android::util::SizeF> val) { return call_method<SCAPIX_META_STRING("writeSizeF"), void>(val); }
inline void Parcel::writeList(ref<java::util::List> val) { return call_method<SCAPIX_META_STRING("writeList"), void>(val); }
inline void Parcel::writeArray(ref<link::java::array<java::lang::Object>> val) { return call_method<SCAPIX_META_STRING("writeArray"), void>(val); }
inline void Parcel::writeSparseArray(ref<android::util::SparseArray> val) { return call_method<SCAPIX_META_STRING("writeSparseArray"), void>(val); }
inline void Parcel::writeSparseBooleanArray(ref<android::util::SparseBooleanArray> val) { return call_method<SCAPIX_META_STRING("writeSparseBooleanArray"), void>(val); }
inline void Parcel::writeBooleanArray(ref<link::java::array<jboolean>> val) { return call_method<SCAPIX_META_STRING("writeBooleanArray"), void>(val); }
inline ref<link::java::array<jboolean>> Parcel::createBooleanArray() { return call_method<SCAPIX_META_STRING("createBooleanArray"), ref<link::java::array<jboolean>>>(); }
inline void Parcel::readBooleanArray(ref<link::java::array<jboolean>> val) { return call_method<SCAPIX_META_STRING("readBooleanArray"), void>(val); }
inline void Parcel::writeCharArray(ref<link::java::array<jchar>> val) { return call_method<SCAPIX_META_STRING("writeCharArray"), void>(val); }
inline ref<link::java::array<jchar>> Parcel::createCharArray() { return call_method<SCAPIX_META_STRING("createCharArray"), ref<link::java::array<jchar>>>(); }
inline void Parcel::readCharArray(ref<link::java::array<jchar>> val) { return call_method<SCAPIX_META_STRING("readCharArray"), void>(val); }
inline void Parcel::writeIntArray(ref<link::java::array<jint>> val) { return call_method<SCAPIX_META_STRING("writeIntArray"), void>(val); }
inline ref<link::java::array<jint>> Parcel::createIntArray() { return call_method<SCAPIX_META_STRING("createIntArray"), ref<link::java::array<jint>>>(); }
inline void Parcel::readIntArray(ref<link::java::array<jint>> val) { return call_method<SCAPIX_META_STRING("readIntArray"), void>(val); }
inline void Parcel::writeLongArray(ref<link::java::array<jlong>> val) { return call_method<SCAPIX_META_STRING("writeLongArray"), void>(val); }
inline ref<link::java::array<jlong>> Parcel::createLongArray() { return call_method<SCAPIX_META_STRING("createLongArray"), ref<link::java::array<jlong>>>(); }
inline void Parcel::readLongArray(ref<link::java::array<jlong>> val) { return call_method<SCAPIX_META_STRING("readLongArray"), void>(val); }
inline void Parcel::writeFloatArray(ref<link::java::array<jfloat>> val) { return call_method<SCAPIX_META_STRING("writeFloatArray"), void>(val); }
inline ref<link::java::array<jfloat>> Parcel::createFloatArray() { return call_method<SCAPIX_META_STRING("createFloatArray"), ref<link::java::array<jfloat>>>(); }
inline void Parcel::readFloatArray(ref<link::java::array<jfloat>> val) { return call_method<SCAPIX_META_STRING("readFloatArray"), void>(val); }
inline void Parcel::writeDoubleArray(ref<link::java::array<jdouble>> val) { return call_method<SCAPIX_META_STRING("writeDoubleArray"), void>(val); }
inline ref<link::java::array<jdouble>> Parcel::createDoubleArray() { return call_method<SCAPIX_META_STRING("createDoubleArray"), ref<link::java::array<jdouble>>>(); }
inline void Parcel::readDoubleArray(ref<link::java::array<jdouble>> val) { return call_method<SCAPIX_META_STRING("readDoubleArray"), void>(val); }
inline void Parcel::writeStringArray(ref<link::java::array<java::lang::String>> val) { return call_method<SCAPIX_META_STRING("writeStringArray"), void>(val); }
inline ref<link::java::array<java::lang::String>> Parcel::createStringArray() { return call_method<SCAPIX_META_STRING("createStringArray"), ref<link::java::array<java::lang::String>>>(); }
inline void Parcel::readStringArray(ref<link::java::array<java::lang::String>> val) { return call_method<SCAPIX_META_STRING("readStringArray"), void>(val); }
inline void Parcel::writeBinderArray(ref<link::java::array<android::os::IBinder>> val) { return call_method<SCAPIX_META_STRING("writeBinderArray"), void>(val); }
inline ref<link::java::array<android::os::IBinder>> Parcel::createBinderArray() { return call_method<SCAPIX_META_STRING("createBinderArray"), ref<link::java::array<android::os::IBinder>>>(); }
inline void Parcel::readBinderArray(ref<link::java::array<android::os::IBinder>> val) { return call_method<SCAPIX_META_STRING("readBinderArray"), void>(val); }
inline void Parcel::writeTypedList(ref<java::util::List> val) { return call_method<SCAPIX_META_STRING("writeTypedList"), void>(val); }
inline void Parcel::writeStringList(ref<java::util::List> val) { return call_method<SCAPIX_META_STRING("writeStringList"), void>(val); }
inline void Parcel::writeBinderList(ref<java::util::List> val) { return call_method<SCAPIX_META_STRING("writeBinderList"), void>(val); }
inline void Parcel::writeTypedArray(ref<link::java::array<android::os::Parcelable>> val, jint parcelableFlags) { return call_method<SCAPIX_META_STRING("writeTypedArray"), void>(val, parcelableFlags); }
inline void Parcel::writeTypedObject(ref<android::os::Parcelable> val, jint parcelableFlags) { return call_method<SCAPIX_META_STRING("writeTypedObject"), void>(val, parcelableFlags); }
inline void Parcel::writeValue(ref<java::lang::Object> v) { return call_method<SCAPIX_META_STRING("writeValue"), void>(v); }
inline void Parcel::writeParcelable(ref<android::os::Parcelable> p, jint parcelableFlags) { return call_method<SCAPIX_META_STRING("writeParcelable"), void>(p, parcelableFlags); }
inline void Parcel::writeSerializable(ref<java::io::Serializable> s) { return call_method<SCAPIX_META_STRING("writeSerializable"), void>(s); }
inline void Parcel::writeException(ref<java::lang::Exception> e) { return call_method<SCAPIX_META_STRING("writeException"), void>(e); }
inline void Parcel::writeNoException() { return call_method<SCAPIX_META_STRING("writeNoException"), void>(); }
inline void Parcel::readException() { return call_method<SCAPIX_META_STRING("readException"), void>(); }
inline void Parcel::readException(jint code, ref<java::lang::String> msg) { return call_method<SCAPIX_META_STRING("readException"), void>(code, msg); }
inline jint Parcel::readInt() { return call_method<SCAPIX_META_STRING("readInt"), jint>(); }
inline jlong Parcel::readLong() { return call_method<SCAPIX_META_STRING("readLong"), jlong>(); }
inline jfloat Parcel::readFloat() { return call_method<SCAPIX_META_STRING("readFloat"), jfloat>(); }
inline jdouble Parcel::readDouble() { return call_method<SCAPIX_META_STRING("readDouble"), jdouble>(); }
inline ref<java::lang::String> Parcel::readString() { return call_method<SCAPIX_META_STRING("readString"), ref<java::lang::String>>(); }
inline ref<android::os::IBinder> Parcel::readStrongBinder() { return call_method<SCAPIX_META_STRING("readStrongBinder"), ref<android::os::IBinder>>(); }
inline ref<android::os::ParcelFileDescriptor> Parcel::readFileDescriptor() { return call_method<SCAPIX_META_STRING("readFileDescriptor"), ref<android::os::ParcelFileDescriptor>>(); }
inline jbyte Parcel::readByte() { return call_method<SCAPIX_META_STRING("readByte"), jbyte>(); }
inline void Parcel::readMap(ref<java::util::Map> outVal, ref<java::lang::ClassLoader> loader) { return call_method<SCAPIX_META_STRING("readMap"), void>(outVal, loader); }
inline void Parcel::readList(ref<java::util::List> outVal, ref<java::lang::ClassLoader> loader) { return call_method<SCAPIX_META_STRING("readList"), void>(outVal, loader); }
inline ref<java::util::HashMap> Parcel::readHashMap(ref<java::lang::ClassLoader> loader) { return call_method<SCAPIX_META_STRING("readHashMap"), ref<java::util::HashMap>>(loader); }
inline ref<android::os::Bundle> Parcel::readBundle() { return call_method<SCAPIX_META_STRING("readBundle"), ref<android::os::Bundle>>(); }
inline ref<android::os::Bundle> Parcel::readBundle(ref<java::lang::ClassLoader> loader) { return call_method<SCAPIX_META_STRING("readBundle"), ref<android::os::Bundle>>(loader); }
inline ref<android::os::PersistableBundle> Parcel::readPersistableBundle() { return call_method<SCAPIX_META_STRING("readPersistableBundle"), ref<android::os::PersistableBundle>>(); }
inline ref<android::os::PersistableBundle> Parcel::readPersistableBundle(ref<java::lang::ClassLoader> loader) { return call_method<SCAPIX_META_STRING("readPersistableBundle"), ref<android::os::PersistableBundle>>(loader); }
inline ref<android::util::Size> Parcel::readSize() { return call_method<SCAPIX_META_STRING("readSize"), ref<android::util::Size>>(); }
inline ref<android::util::SizeF> Parcel::readSizeF() { return call_method<SCAPIX_META_STRING("readSizeF"), ref<android::util::SizeF>>(); }
inline ref<link::java::array<jbyte>> Parcel::createByteArray() { return call_method<SCAPIX_META_STRING("createByteArray"), ref<link::java::array<jbyte>>>(); }
inline void Parcel::readByteArray(ref<link::java::array<jbyte>> val) { return call_method<SCAPIX_META_STRING("readByteArray"), void>(val); }
inline ref<java::util::ArrayList> Parcel::readArrayList(ref<java::lang::ClassLoader> loader) { return call_method<SCAPIX_META_STRING("readArrayList"), ref<java::util::ArrayList>>(loader); }
inline ref<link::java::array<java::lang::Object>> Parcel::readArray(ref<java::lang::ClassLoader> loader) { return call_method<SCAPIX_META_STRING("readArray"), ref<link::java::array<java::lang::Object>>>(loader); }
inline ref<android::util::SparseArray> Parcel::readSparseArray(ref<java::lang::ClassLoader> loader) { return call_method<SCAPIX_META_STRING("readSparseArray"), ref<android::util::SparseArray>>(loader); }
inline ref<android::util::SparseBooleanArray> Parcel::readSparseBooleanArray() { return call_method<SCAPIX_META_STRING("readSparseBooleanArray"), ref<android::util::SparseBooleanArray>>(); }
inline ref<java::util::ArrayList> Parcel::createTypedArrayList(ref<android::os::Parcelable_Creator> c) { return call_method<SCAPIX_META_STRING("createTypedArrayList"), ref<java::util::ArrayList>>(c); }
inline void Parcel::readTypedList(ref<java::util::List> list, ref<android::os::Parcelable_Creator> c) { return call_method<SCAPIX_META_STRING("readTypedList"), void>(list, c); }
inline ref<java::util::ArrayList> Parcel::createStringArrayList() { return call_method<SCAPIX_META_STRING("createStringArrayList"), ref<java::util::ArrayList>>(); }
inline ref<java::util::ArrayList> Parcel::createBinderArrayList() { return call_method<SCAPIX_META_STRING("createBinderArrayList"), ref<java::util::ArrayList>>(); }
inline void Parcel::readStringList(ref<java::util::List> list) { return call_method<SCAPIX_META_STRING("readStringList"), void>(list); }
inline void Parcel::readBinderList(ref<java::util::List> list) { return call_method<SCAPIX_META_STRING("readBinderList"), void>(list); }
inline ref<link::java::array<java::lang::Object>> Parcel::createTypedArray(ref<android::os::Parcelable_Creator> c) { return call_method<SCAPIX_META_STRING("createTypedArray"), ref<link::java::array<java::lang::Object>>>(c); }
inline void Parcel::readTypedArray(ref<link::java::array<java::lang::Object>> val, ref<android::os::Parcelable_Creator> c) { return call_method<SCAPIX_META_STRING("readTypedArray"), void>(val, c); }
inline ref<java::lang::Object> Parcel::readTypedObject(ref<android::os::Parcelable_Creator> c) { return call_method<SCAPIX_META_STRING("readTypedObject"), ref<java::lang::Object>>(c); }
inline void Parcel::writeParcelableArray(ref<link::java::array<android::os::Parcelable>> value, jint parcelableFlags) { return call_method<SCAPIX_META_STRING("writeParcelableArray"), void>(value, parcelableFlags); }
inline ref<java::lang::Object> Parcel::readValue(ref<java::lang::ClassLoader> loader) { return call_method<SCAPIX_META_STRING("readValue"), ref<java::lang::Object>>(loader); }
inline ref<android::os::Parcelable> Parcel::readParcelable(ref<java::lang::ClassLoader> loader) { return call_method<SCAPIX_META_STRING("readParcelable"), ref<android::os::Parcelable>>(loader); }
inline ref<link::java::array<android::os::Parcelable>> Parcel::readParcelableArray(ref<java::lang::ClassLoader> loader) { return call_method<SCAPIX_META_STRING("readParcelableArray"), ref<link::java::array<android::os::Parcelable>>>(loader); }
inline ref<java::io::Serializable> Parcel::readSerializable() { return call_method<SCAPIX_META_STRING("readSerializable"), ref<java::io::Serializable>>(); }

} // namespace android::os
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_OS_PARCEL_H
