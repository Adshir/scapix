// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_OS_STRICTMODE_VMPOLICY_BUILDER_H
#define SCAPIX_ANDROID_OS_STRICTMODE_VMPOLICY_BUILDER_H

namespace scapix::java_api {

namespace android::os { class StrictMode_OnVmViolationListener; }
namespace android::os { class StrictMode_VmPolicy; }
namespace java::lang { class Class; }
namespace java::util::concurrent { class Executor; }

namespace android::os {

class StrictMode_VmPolicy_Builder : public object_base<SCAPIX_META_STRING("android/os/StrictMode$VmPolicy$Builder"),
	java::lang::Object>
{
public:

	static ref<StrictMode_VmPolicy_Builder> new_object();
	static ref<StrictMode_VmPolicy_Builder> new_object(ref<android::os::StrictMode_VmPolicy> base);
	ref<android::os::StrictMode_VmPolicy_Builder> setClassInstanceLimit(ref<java::lang::Class> klass, jint instanceLimit);
	ref<android::os::StrictMode_VmPolicy_Builder> detectActivityLeaks();
	ref<android::os::StrictMode_VmPolicy_Builder> detectNonSdkApiUsage();
	ref<android::os::StrictMode_VmPolicy_Builder> permitNonSdkApiUsage();
	ref<android::os::StrictMode_VmPolicy_Builder> detectAll();
	ref<android::os::StrictMode_VmPolicy_Builder> detectLeakedSqlLiteObjects();
	ref<android::os::StrictMode_VmPolicy_Builder> detectLeakedClosableObjects();
	ref<android::os::StrictMode_VmPolicy_Builder> detectLeakedRegistrationObjects();
	ref<android::os::StrictMode_VmPolicy_Builder> detectFileUriExposure();
	ref<android::os::StrictMode_VmPolicy_Builder> detectCleartextNetwork();
	ref<android::os::StrictMode_VmPolicy_Builder> detectContentUriWithoutPermission();
	ref<android::os::StrictMode_VmPolicy_Builder> detectUntaggedSockets();
	ref<android::os::StrictMode_VmPolicy_Builder> penaltyDeath();
	ref<android::os::StrictMode_VmPolicy_Builder> penaltyDeathOnCleartextNetwork();
	ref<android::os::StrictMode_VmPolicy_Builder> penaltyDeathOnFileUriExposure();
	ref<android::os::StrictMode_VmPolicy_Builder> penaltyLog();
	ref<android::os::StrictMode_VmPolicy_Builder> penaltyDropBox();
	ref<android::os::StrictMode_VmPolicy_Builder> penaltyListener(ref<java::util::concurrent::Executor> executor, ref<android::os::StrictMode_OnVmViolationListener> listener);
	ref<android::os::StrictMode_VmPolicy> build();

protected:

	StrictMode_VmPolicy_Builder(handle_type h) : base_(h) {}

};

} // namespace android::os
} // namespace scapix::java_api

#include <scapix/java_api/android/os/StrictMode_OnVmViolationListener.h>
#include <scapix/java_api/android/os/StrictMode_VmPolicy.h>
#include <scapix/java_api/java/lang/Class.h>
#include <scapix/java_api/java/util/concurrent/Executor.h>

namespace scapix::java_api {
namespace android::os {

inline ref<StrictMode_VmPolicy_Builder> StrictMode_VmPolicy_Builder::new_object() { return base_::new_object(); }
inline ref<StrictMode_VmPolicy_Builder> StrictMode_VmPolicy_Builder::new_object(ref<android::os::StrictMode_VmPolicy> base) { return base_::new_object(base); }
inline ref<android::os::StrictMode_VmPolicy_Builder> StrictMode_VmPolicy_Builder::setClassInstanceLimit(ref<java::lang::Class> klass, jint instanceLimit) { return call_method<SCAPIX_META_STRING("setClassInstanceLimit"), ref<android::os::StrictMode_VmPolicy_Builder>>(klass, instanceLimit); }
inline ref<android::os::StrictMode_VmPolicy_Builder> StrictMode_VmPolicy_Builder::detectActivityLeaks() { return call_method<SCAPIX_META_STRING("detectActivityLeaks"), ref<android::os::StrictMode_VmPolicy_Builder>>(); }
inline ref<android::os::StrictMode_VmPolicy_Builder> StrictMode_VmPolicy_Builder::detectNonSdkApiUsage() { return call_method<SCAPIX_META_STRING("detectNonSdkApiUsage"), ref<android::os::StrictMode_VmPolicy_Builder>>(); }
inline ref<android::os::StrictMode_VmPolicy_Builder> StrictMode_VmPolicy_Builder::permitNonSdkApiUsage() { return call_method<SCAPIX_META_STRING("permitNonSdkApiUsage"), ref<android::os::StrictMode_VmPolicy_Builder>>(); }
inline ref<android::os::StrictMode_VmPolicy_Builder> StrictMode_VmPolicy_Builder::detectAll() { return call_method<SCAPIX_META_STRING("detectAll"), ref<android::os::StrictMode_VmPolicy_Builder>>(); }
inline ref<android::os::StrictMode_VmPolicy_Builder> StrictMode_VmPolicy_Builder::detectLeakedSqlLiteObjects() { return call_method<SCAPIX_META_STRING("detectLeakedSqlLiteObjects"), ref<android::os::StrictMode_VmPolicy_Builder>>(); }
inline ref<android::os::StrictMode_VmPolicy_Builder> StrictMode_VmPolicy_Builder::detectLeakedClosableObjects() { return call_method<SCAPIX_META_STRING("detectLeakedClosableObjects"), ref<android::os::StrictMode_VmPolicy_Builder>>(); }
inline ref<android::os::StrictMode_VmPolicy_Builder> StrictMode_VmPolicy_Builder::detectLeakedRegistrationObjects() { return call_method<SCAPIX_META_STRING("detectLeakedRegistrationObjects"), ref<android::os::StrictMode_VmPolicy_Builder>>(); }
inline ref<android::os::StrictMode_VmPolicy_Builder> StrictMode_VmPolicy_Builder::detectFileUriExposure() { return call_method<SCAPIX_META_STRING("detectFileUriExposure"), ref<android::os::StrictMode_VmPolicy_Builder>>(); }
inline ref<android::os::StrictMode_VmPolicy_Builder> StrictMode_VmPolicy_Builder::detectCleartextNetwork() { return call_method<SCAPIX_META_STRING("detectCleartextNetwork"), ref<android::os::StrictMode_VmPolicy_Builder>>(); }
inline ref<android::os::StrictMode_VmPolicy_Builder> StrictMode_VmPolicy_Builder::detectContentUriWithoutPermission() { return call_method<SCAPIX_META_STRING("detectContentUriWithoutPermission"), ref<android::os::StrictMode_VmPolicy_Builder>>(); }
inline ref<android::os::StrictMode_VmPolicy_Builder> StrictMode_VmPolicy_Builder::detectUntaggedSockets() { return call_method<SCAPIX_META_STRING("detectUntaggedSockets"), ref<android::os::StrictMode_VmPolicy_Builder>>(); }
inline ref<android::os::StrictMode_VmPolicy_Builder> StrictMode_VmPolicy_Builder::penaltyDeath() { return call_method<SCAPIX_META_STRING("penaltyDeath"), ref<android::os::StrictMode_VmPolicy_Builder>>(); }
inline ref<android::os::StrictMode_VmPolicy_Builder> StrictMode_VmPolicy_Builder::penaltyDeathOnCleartextNetwork() { return call_method<SCAPIX_META_STRING("penaltyDeathOnCleartextNetwork"), ref<android::os::StrictMode_VmPolicy_Builder>>(); }
inline ref<android::os::StrictMode_VmPolicy_Builder> StrictMode_VmPolicy_Builder::penaltyDeathOnFileUriExposure() { return call_method<SCAPIX_META_STRING("penaltyDeathOnFileUriExposure"), ref<android::os::StrictMode_VmPolicy_Builder>>(); }
inline ref<android::os::StrictMode_VmPolicy_Builder> StrictMode_VmPolicy_Builder::penaltyLog() { return call_method<SCAPIX_META_STRING("penaltyLog"), ref<android::os::StrictMode_VmPolicy_Builder>>(); }
inline ref<android::os::StrictMode_VmPolicy_Builder> StrictMode_VmPolicy_Builder::penaltyDropBox() { return call_method<SCAPIX_META_STRING("penaltyDropBox"), ref<android::os::StrictMode_VmPolicy_Builder>>(); }
inline ref<android::os::StrictMode_VmPolicy_Builder> StrictMode_VmPolicy_Builder::penaltyListener(ref<java::util::concurrent::Executor> executor, ref<android::os::StrictMode_OnVmViolationListener> listener) { return call_method<SCAPIX_META_STRING("penaltyListener"), ref<android::os::StrictMode_VmPolicy_Builder>>(executor, listener); }
inline ref<android::os::StrictMode_VmPolicy> StrictMode_VmPolicy_Builder::build() { return call_method<SCAPIX_META_STRING("build"), ref<android::os::StrictMode_VmPolicy>>(); }

} // namespace android::os
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_OS_STRICTMODE_VMPOLICY_BUILDER_H
