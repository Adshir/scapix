// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_ANDROID_OS_HEALTH_TIMERSTAT_H
#define SCAPIX_ANDROID_OS_HEALTH_TIMERSTAT_H

namespace scapix::java_api {

namespace android::os { class Parcel; }
namespace android::os { class Parcelable_Creator; }

namespace android::os::health {

class TimerStat : public object_base<SCAPIX_META_STRING("android/os/health/TimerStat"),
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static ref<android::os::Parcelable_Creator> CREATOR_();

	static ref<TimerStat> new_object();
	static ref<TimerStat> new_object(jint count, jlong time);
	static ref<TimerStat> new_object(ref<android::os::Parcel> in);
	jint describeContents();
	void writeToParcel(ref<android::os::Parcel> out, jint flags);
	void setCount(jint count);
	jint getCount();
	void setTime(jlong time);
	jlong getTime();

protected:

	TimerStat(handle_type h) : base_(h) {}

};

} // namespace android::os::health
} // namespace scapix::java_api

#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>

namespace scapix::java_api {
namespace android::os::health {

inline ref<android::os::Parcelable_Creator> TimerStat::CREATOR_() { return get_static_field<SCAPIX_META_STRING("CREATOR"), ref<android::os::Parcelable_Creator>>(); }
inline ref<TimerStat> TimerStat::new_object() { return base_::new_object(); }
inline ref<TimerStat> TimerStat::new_object(jint count, jlong time) { return base_::new_object(count, time); }
inline ref<TimerStat> TimerStat::new_object(ref<android::os::Parcel> in) { return base_::new_object(in); }
inline jint TimerStat::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }
inline void TimerStat::writeToParcel(ref<android::os::Parcel> out, jint flags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(out, flags); }
inline void TimerStat::setCount(jint count) { return call_method<SCAPIX_META_STRING("setCount"), void>(count); }
inline jint TimerStat::getCount() { return call_method<SCAPIX_META_STRING("getCount"), jint>(); }
inline void TimerStat::setTime(jlong time) { return call_method<SCAPIX_META_STRING("setTime"), void>(time); }
inline jlong TimerStat::getTime() { return call_method<SCAPIX_META_STRING("getTime"), jlong>(); }

} // namespace android::os::health
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_OS_HEALTH_TIMERSTAT_H
