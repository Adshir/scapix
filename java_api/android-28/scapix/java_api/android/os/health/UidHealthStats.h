// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_OS_HEALTH_UIDHEALTHSTATS_H
#define SCAPIX_ANDROID_OS_HEALTH_UIDHEALTHSTATS_H

namespace scapix::java_api {
namespace android::os::health {

class UidHealthStats : public object_base<SCAPIX_META_STRING("android/os/health/UidHealthStats"),
	java::lang::Object>
{
public:

	static jint MEASUREMENT_BLUETOOTH_IDLE_MS_();
	static jint MEASUREMENT_BLUETOOTH_POWER_MAMS_();
	static jint MEASUREMENT_BLUETOOTH_RX_BYTES_();
	static jint MEASUREMENT_BLUETOOTH_RX_MS_();
	static jint MEASUREMENT_BLUETOOTH_RX_PACKETS_();
	static jint MEASUREMENT_BLUETOOTH_TX_BYTES_();
	static jint MEASUREMENT_BLUETOOTH_TX_MS_();
	static jint MEASUREMENT_BLUETOOTH_TX_PACKETS_();
	static jint MEASUREMENT_BUTTON_USER_ACTIVITY_COUNT_();
	static jint MEASUREMENT_CPU_POWER_MAMS_();
	static jint MEASUREMENT_MOBILE_IDLE_MS_();
	static jint MEASUREMENT_MOBILE_POWER_MAMS_();
	static jint MEASUREMENT_MOBILE_RX_BYTES_();
	static jint MEASUREMENT_MOBILE_RX_MS_();
	static jint MEASUREMENT_MOBILE_RX_PACKETS_();
	static jint MEASUREMENT_MOBILE_TX_BYTES_();
	static jint MEASUREMENT_MOBILE_TX_MS_();
	static jint MEASUREMENT_MOBILE_TX_PACKETS_();
	static jint MEASUREMENT_OTHER_USER_ACTIVITY_COUNT_();
	static jint MEASUREMENT_REALTIME_BATTERY_MS_();
	static jint MEASUREMENT_REALTIME_SCREEN_OFF_BATTERY_MS_();
	static jint MEASUREMENT_SYSTEM_CPU_TIME_MS_();
	static jint MEASUREMENT_TOUCH_USER_ACTIVITY_COUNT_();
	static jint MEASUREMENT_UPTIME_BATTERY_MS_();
	static jint MEASUREMENT_UPTIME_SCREEN_OFF_BATTERY_MS_();
	static jint MEASUREMENT_USER_CPU_TIME_MS_();
	static jint MEASUREMENT_WIFI_FULL_LOCK_MS_();
	static jint MEASUREMENT_WIFI_IDLE_MS_();
	static jint MEASUREMENT_WIFI_MULTICAST_MS_();
	static jint MEASUREMENT_WIFI_POWER_MAMS_();
	static jint MEASUREMENT_WIFI_RUNNING_MS_();
	static jint MEASUREMENT_WIFI_RX_BYTES_();
	static jint MEASUREMENT_WIFI_RX_MS_();
	static jint MEASUREMENT_WIFI_RX_PACKETS_();
	static jint MEASUREMENT_WIFI_TX_BYTES_();
	static jint MEASUREMENT_WIFI_TX_MS_();
	static jint MEASUREMENT_WIFI_TX_PACKETS_();
	static jint STATS_PACKAGES_();
	static jint STATS_PIDS_();
	static jint STATS_PROCESSES_();
	static jint TIMERS_JOBS_();
	static jint TIMERS_SENSORS_();
	static jint TIMERS_SYNCS_();
	static jint TIMERS_WAKELOCKS_DRAW_();
	static jint TIMERS_WAKELOCKS_FULL_();
	static jint TIMERS_WAKELOCKS_PARTIAL_();
	static jint TIMERS_WAKELOCKS_WINDOW_();
	static jint TIMER_AUDIO_();
	static jint TIMER_BLUETOOTH_SCAN_();
	static jint TIMER_CAMERA_();
	static jint TIMER_FLASHLIGHT_();
	static jint TIMER_FOREGROUND_ACTIVITY_();
	static jint TIMER_GPS_SENSOR_();
	static jint TIMER_MOBILE_RADIO_ACTIVE_();
	static jint TIMER_PROCESS_STATE_BACKGROUND_MS_();
	static jint TIMER_PROCESS_STATE_CACHED_MS_();
	static jint TIMER_PROCESS_STATE_FOREGROUND_MS_();
	static jint TIMER_PROCESS_STATE_FOREGROUND_SERVICE_MS_();
	static jint TIMER_PROCESS_STATE_TOP_MS_();
	static jint TIMER_PROCESS_STATE_TOP_SLEEPING_MS_();
	static jint TIMER_VIBRATOR_();
	static jint TIMER_VIDEO_();
	static jint TIMER_WIFI_SCAN_();


protected:

	UidHealthStats(handle_type h) : base_(h) {}

};

} // namespace android::os::health
} // namespace scapix::java_api


namespace scapix::java_api {
namespace android::os::health {

inline jint UidHealthStats::MEASUREMENT_BLUETOOTH_IDLE_MS_() { return get_static_field<SCAPIX_META_STRING("MEASUREMENT_BLUETOOTH_IDLE_MS"), jint>(); }
inline jint UidHealthStats::MEASUREMENT_BLUETOOTH_POWER_MAMS_() { return get_static_field<SCAPIX_META_STRING("MEASUREMENT_BLUETOOTH_POWER_MAMS"), jint>(); }
inline jint UidHealthStats::MEASUREMENT_BLUETOOTH_RX_BYTES_() { return get_static_field<SCAPIX_META_STRING("MEASUREMENT_BLUETOOTH_RX_BYTES"), jint>(); }
inline jint UidHealthStats::MEASUREMENT_BLUETOOTH_RX_MS_() { return get_static_field<SCAPIX_META_STRING("MEASUREMENT_BLUETOOTH_RX_MS"), jint>(); }
inline jint UidHealthStats::MEASUREMENT_BLUETOOTH_RX_PACKETS_() { return get_static_field<SCAPIX_META_STRING("MEASUREMENT_BLUETOOTH_RX_PACKETS"), jint>(); }
inline jint UidHealthStats::MEASUREMENT_BLUETOOTH_TX_BYTES_() { return get_static_field<SCAPIX_META_STRING("MEASUREMENT_BLUETOOTH_TX_BYTES"), jint>(); }
inline jint UidHealthStats::MEASUREMENT_BLUETOOTH_TX_MS_() { return get_static_field<SCAPIX_META_STRING("MEASUREMENT_BLUETOOTH_TX_MS"), jint>(); }
inline jint UidHealthStats::MEASUREMENT_BLUETOOTH_TX_PACKETS_() { return get_static_field<SCAPIX_META_STRING("MEASUREMENT_BLUETOOTH_TX_PACKETS"), jint>(); }
inline jint UidHealthStats::MEASUREMENT_BUTTON_USER_ACTIVITY_COUNT_() { return get_static_field<SCAPIX_META_STRING("MEASUREMENT_BUTTON_USER_ACTIVITY_COUNT"), jint>(); }
inline jint UidHealthStats::MEASUREMENT_CPU_POWER_MAMS_() { return get_static_field<SCAPIX_META_STRING("MEASUREMENT_CPU_POWER_MAMS"), jint>(); }
inline jint UidHealthStats::MEASUREMENT_MOBILE_IDLE_MS_() { return get_static_field<SCAPIX_META_STRING("MEASUREMENT_MOBILE_IDLE_MS"), jint>(); }
inline jint UidHealthStats::MEASUREMENT_MOBILE_POWER_MAMS_() { return get_static_field<SCAPIX_META_STRING("MEASUREMENT_MOBILE_POWER_MAMS"), jint>(); }
inline jint UidHealthStats::MEASUREMENT_MOBILE_RX_BYTES_() { return get_static_field<SCAPIX_META_STRING("MEASUREMENT_MOBILE_RX_BYTES"), jint>(); }
inline jint UidHealthStats::MEASUREMENT_MOBILE_RX_MS_() { return get_static_field<SCAPIX_META_STRING("MEASUREMENT_MOBILE_RX_MS"), jint>(); }
inline jint UidHealthStats::MEASUREMENT_MOBILE_RX_PACKETS_() { return get_static_field<SCAPIX_META_STRING("MEASUREMENT_MOBILE_RX_PACKETS"), jint>(); }
inline jint UidHealthStats::MEASUREMENT_MOBILE_TX_BYTES_() { return get_static_field<SCAPIX_META_STRING("MEASUREMENT_MOBILE_TX_BYTES"), jint>(); }
inline jint UidHealthStats::MEASUREMENT_MOBILE_TX_MS_() { return get_static_field<SCAPIX_META_STRING("MEASUREMENT_MOBILE_TX_MS"), jint>(); }
inline jint UidHealthStats::MEASUREMENT_MOBILE_TX_PACKETS_() { return get_static_field<SCAPIX_META_STRING("MEASUREMENT_MOBILE_TX_PACKETS"), jint>(); }
inline jint UidHealthStats::MEASUREMENT_OTHER_USER_ACTIVITY_COUNT_() { return get_static_field<SCAPIX_META_STRING("MEASUREMENT_OTHER_USER_ACTIVITY_COUNT"), jint>(); }
inline jint UidHealthStats::MEASUREMENT_REALTIME_BATTERY_MS_() { return get_static_field<SCAPIX_META_STRING("MEASUREMENT_REALTIME_BATTERY_MS"), jint>(); }
inline jint UidHealthStats::MEASUREMENT_REALTIME_SCREEN_OFF_BATTERY_MS_() { return get_static_field<SCAPIX_META_STRING("MEASUREMENT_REALTIME_SCREEN_OFF_BATTERY_MS"), jint>(); }
inline jint UidHealthStats::MEASUREMENT_SYSTEM_CPU_TIME_MS_() { return get_static_field<SCAPIX_META_STRING("MEASUREMENT_SYSTEM_CPU_TIME_MS"), jint>(); }
inline jint UidHealthStats::MEASUREMENT_TOUCH_USER_ACTIVITY_COUNT_() { return get_static_field<SCAPIX_META_STRING("MEASUREMENT_TOUCH_USER_ACTIVITY_COUNT"), jint>(); }
inline jint UidHealthStats::MEASUREMENT_UPTIME_BATTERY_MS_() { return get_static_field<SCAPIX_META_STRING("MEASUREMENT_UPTIME_BATTERY_MS"), jint>(); }
inline jint UidHealthStats::MEASUREMENT_UPTIME_SCREEN_OFF_BATTERY_MS_() { return get_static_field<SCAPIX_META_STRING("MEASUREMENT_UPTIME_SCREEN_OFF_BATTERY_MS"), jint>(); }
inline jint UidHealthStats::MEASUREMENT_USER_CPU_TIME_MS_() { return get_static_field<SCAPIX_META_STRING("MEASUREMENT_USER_CPU_TIME_MS"), jint>(); }
inline jint UidHealthStats::MEASUREMENT_WIFI_FULL_LOCK_MS_() { return get_static_field<SCAPIX_META_STRING("MEASUREMENT_WIFI_FULL_LOCK_MS"), jint>(); }
inline jint UidHealthStats::MEASUREMENT_WIFI_IDLE_MS_() { return get_static_field<SCAPIX_META_STRING("MEASUREMENT_WIFI_IDLE_MS"), jint>(); }
inline jint UidHealthStats::MEASUREMENT_WIFI_MULTICAST_MS_() { return get_static_field<SCAPIX_META_STRING("MEASUREMENT_WIFI_MULTICAST_MS"), jint>(); }
inline jint UidHealthStats::MEASUREMENT_WIFI_POWER_MAMS_() { return get_static_field<SCAPIX_META_STRING("MEASUREMENT_WIFI_POWER_MAMS"), jint>(); }
inline jint UidHealthStats::MEASUREMENT_WIFI_RUNNING_MS_() { return get_static_field<SCAPIX_META_STRING("MEASUREMENT_WIFI_RUNNING_MS"), jint>(); }
inline jint UidHealthStats::MEASUREMENT_WIFI_RX_BYTES_() { return get_static_field<SCAPIX_META_STRING("MEASUREMENT_WIFI_RX_BYTES"), jint>(); }
inline jint UidHealthStats::MEASUREMENT_WIFI_RX_MS_() { return get_static_field<SCAPIX_META_STRING("MEASUREMENT_WIFI_RX_MS"), jint>(); }
inline jint UidHealthStats::MEASUREMENT_WIFI_RX_PACKETS_() { return get_static_field<SCAPIX_META_STRING("MEASUREMENT_WIFI_RX_PACKETS"), jint>(); }
inline jint UidHealthStats::MEASUREMENT_WIFI_TX_BYTES_() { return get_static_field<SCAPIX_META_STRING("MEASUREMENT_WIFI_TX_BYTES"), jint>(); }
inline jint UidHealthStats::MEASUREMENT_WIFI_TX_MS_() { return get_static_field<SCAPIX_META_STRING("MEASUREMENT_WIFI_TX_MS"), jint>(); }
inline jint UidHealthStats::MEASUREMENT_WIFI_TX_PACKETS_() { return get_static_field<SCAPIX_META_STRING("MEASUREMENT_WIFI_TX_PACKETS"), jint>(); }
inline jint UidHealthStats::STATS_PACKAGES_() { return get_static_field<SCAPIX_META_STRING("STATS_PACKAGES"), jint>(); }
inline jint UidHealthStats::STATS_PIDS_() { return get_static_field<SCAPIX_META_STRING("STATS_PIDS"), jint>(); }
inline jint UidHealthStats::STATS_PROCESSES_() { return get_static_field<SCAPIX_META_STRING("STATS_PROCESSES"), jint>(); }
inline jint UidHealthStats::TIMERS_JOBS_() { return get_static_field<SCAPIX_META_STRING("TIMERS_JOBS"), jint>(); }
inline jint UidHealthStats::TIMERS_SENSORS_() { return get_static_field<SCAPIX_META_STRING("TIMERS_SENSORS"), jint>(); }
inline jint UidHealthStats::TIMERS_SYNCS_() { return get_static_field<SCAPIX_META_STRING("TIMERS_SYNCS"), jint>(); }
inline jint UidHealthStats::TIMERS_WAKELOCKS_DRAW_() { return get_static_field<SCAPIX_META_STRING("TIMERS_WAKELOCKS_DRAW"), jint>(); }
inline jint UidHealthStats::TIMERS_WAKELOCKS_FULL_() { return get_static_field<SCAPIX_META_STRING("TIMERS_WAKELOCKS_FULL"), jint>(); }
inline jint UidHealthStats::TIMERS_WAKELOCKS_PARTIAL_() { return get_static_field<SCAPIX_META_STRING("TIMERS_WAKELOCKS_PARTIAL"), jint>(); }
inline jint UidHealthStats::TIMERS_WAKELOCKS_WINDOW_() { return get_static_field<SCAPIX_META_STRING("TIMERS_WAKELOCKS_WINDOW"), jint>(); }
inline jint UidHealthStats::TIMER_AUDIO_() { return get_static_field<SCAPIX_META_STRING("TIMER_AUDIO"), jint>(); }
inline jint UidHealthStats::TIMER_BLUETOOTH_SCAN_() { return get_static_field<SCAPIX_META_STRING("TIMER_BLUETOOTH_SCAN"), jint>(); }
inline jint UidHealthStats::TIMER_CAMERA_() { return get_static_field<SCAPIX_META_STRING("TIMER_CAMERA"), jint>(); }
inline jint UidHealthStats::TIMER_FLASHLIGHT_() { return get_static_field<SCAPIX_META_STRING("TIMER_FLASHLIGHT"), jint>(); }
inline jint UidHealthStats::TIMER_FOREGROUND_ACTIVITY_() { return get_static_field<SCAPIX_META_STRING("TIMER_FOREGROUND_ACTIVITY"), jint>(); }
inline jint UidHealthStats::TIMER_GPS_SENSOR_() { return get_static_field<SCAPIX_META_STRING("TIMER_GPS_SENSOR"), jint>(); }
inline jint UidHealthStats::TIMER_MOBILE_RADIO_ACTIVE_() { return get_static_field<SCAPIX_META_STRING("TIMER_MOBILE_RADIO_ACTIVE"), jint>(); }
inline jint UidHealthStats::TIMER_PROCESS_STATE_BACKGROUND_MS_() { return get_static_field<SCAPIX_META_STRING("TIMER_PROCESS_STATE_BACKGROUND_MS"), jint>(); }
inline jint UidHealthStats::TIMER_PROCESS_STATE_CACHED_MS_() { return get_static_field<SCAPIX_META_STRING("TIMER_PROCESS_STATE_CACHED_MS"), jint>(); }
inline jint UidHealthStats::TIMER_PROCESS_STATE_FOREGROUND_MS_() { return get_static_field<SCAPIX_META_STRING("TIMER_PROCESS_STATE_FOREGROUND_MS"), jint>(); }
inline jint UidHealthStats::TIMER_PROCESS_STATE_FOREGROUND_SERVICE_MS_() { return get_static_field<SCAPIX_META_STRING("TIMER_PROCESS_STATE_FOREGROUND_SERVICE_MS"), jint>(); }
inline jint UidHealthStats::TIMER_PROCESS_STATE_TOP_MS_() { return get_static_field<SCAPIX_META_STRING("TIMER_PROCESS_STATE_TOP_MS"), jint>(); }
inline jint UidHealthStats::TIMER_PROCESS_STATE_TOP_SLEEPING_MS_() { return get_static_field<SCAPIX_META_STRING("TIMER_PROCESS_STATE_TOP_SLEEPING_MS"), jint>(); }
inline jint UidHealthStats::TIMER_VIBRATOR_() { return get_static_field<SCAPIX_META_STRING("TIMER_VIBRATOR"), jint>(); }
inline jint UidHealthStats::TIMER_VIDEO_() { return get_static_field<SCAPIX_META_STRING("TIMER_VIDEO"), jint>(); }
inline jint UidHealthStats::TIMER_WIFI_SCAN_() { return get_static_field<SCAPIX_META_STRING("TIMER_WIFI_SCAN"), jint>(); }

} // namespace android::os::health
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_OS_HEALTH_UIDHEALTHSTATS_H
