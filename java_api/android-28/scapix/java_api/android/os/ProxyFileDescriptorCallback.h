// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_OS_PROXYFILEDESCRIPTORCALLBACK_H
#define SCAPIX_ANDROID_OS_PROXYFILEDESCRIPTORCALLBACK_H

namespace scapix::java_api {
namespace android::os {

class ProxyFileDescriptorCallback : public object_base<SCAPIX_META_STRING("android/os/ProxyFileDescriptorCallback"),
	java::lang::Object>
{
public:

	static ref<ProxyFileDescriptorCallback> new_object();
	jlong onGetSize();
	jint onRead(jlong offset, jint p2, ref<link::java::array<jbyte>> size);
	jint onWrite(jlong offset, jint p2, ref<link::java::array<jbyte>> size);
	void onFsync();
	void onRelease();

protected:

	ProxyFileDescriptorCallback(handle_type h) : base_(h) {}

};

} // namespace android::os
} // namespace scapix::java_api


namespace scapix::java_api {
namespace android::os {

inline ref<ProxyFileDescriptorCallback> ProxyFileDescriptorCallback::new_object() { return base_::new_object(); }
inline jlong ProxyFileDescriptorCallback::onGetSize() { return call_method<SCAPIX_META_STRING("onGetSize"), jlong>(); }
inline jint ProxyFileDescriptorCallback::onRead(jlong offset, jint p2, ref<link::java::array<jbyte>> size) { return call_method<SCAPIX_META_STRING("onRead"), jint>(offset, p2, size); }
inline jint ProxyFileDescriptorCallback::onWrite(jlong offset, jint p2, ref<link::java::array<jbyte>> size) { return call_method<SCAPIX_META_STRING("onWrite"), jint>(offset, p2, size); }
inline void ProxyFileDescriptorCallback::onFsync() { return call_method<SCAPIX_META_STRING("onFsync"), void>(); }
inline void ProxyFileDescriptorCallback::onRelease() { return call_method<SCAPIX_META_STRING("onRelease"), void>(); }

} // namespace android::os
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_OS_PROXYFILEDESCRIPTORCALLBACK_H
