// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_OS_SYSTEMCLOCK_H
#define SCAPIX_ANDROID_OS_SYSTEMCLOCK_H

namespace scapix::java_api {
namespace android::os {

class SystemClock : public object_base<SCAPIX_META_STRING("android/os/SystemClock"),
	java::lang::Object>
{
public:

	static void sleep(jlong ms);
	static jboolean setCurrentTimeMillis(jlong millis);
	static jlong uptimeMillis();
	static jlong elapsedRealtime();
	static jlong elapsedRealtimeNanos();
	static jlong currentThreadTimeMillis();

protected:

	SystemClock(handle_type h) : base_(h) {}

};

} // namespace android::os
} // namespace scapix::java_api


namespace scapix::java_api {
namespace android::os {

inline void SystemClock::sleep(jlong ms) { return call_static_method<SCAPIX_META_STRING("sleep"), void>(ms); }
inline jboolean SystemClock::setCurrentTimeMillis(jlong millis) { return call_static_method<SCAPIX_META_STRING("setCurrentTimeMillis"), jboolean>(millis); }
inline jlong SystemClock::uptimeMillis() { return call_static_method<SCAPIX_META_STRING("uptimeMillis"), jlong>(); }
inline jlong SystemClock::elapsedRealtime() { return call_static_method<SCAPIX_META_STRING("elapsedRealtime"), jlong>(); }
inline jlong SystemClock::elapsedRealtimeNanos() { return call_static_method<SCAPIX_META_STRING("elapsedRealtimeNanos"), jlong>(); }
inline jlong SystemClock::currentThreadTimeMillis() { return call_static_method<SCAPIX_META_STRING("currentThreadTimeMillis"), jlong>(); }

} // namespace android::os
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_OS_SYSTEMCLOCK_H
