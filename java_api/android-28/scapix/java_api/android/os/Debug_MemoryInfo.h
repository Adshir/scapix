// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_ANDROID_OS_DEBUG_MEMORYINFO_H
#define SCAPIX_ANDROID_OS_DEBUG_MEMORYINFO_H

namespace scapix::java_api {

namespace android::os { class Parcel; }
namespace android::os { class Parcelable_Creator; }
namespace java::lang { class String; }
namespace java::util { class Map; }

namespace android::os {

class Debug_MemoryInfo : public object_base<SCAPIX_META_STRING("android/os/Debug$MemoryInfo"),
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static ref<android::os::Parcelable_Creator> CREATOR_();
	jint dalvikPrivateDirty();
	void dalvikPrivateDirty(jint);
	jint dalvikPss();
	void dalvikPss(jint);
	jint dalvikSharedDirty();
	void dalvikSharedDirty(jint);
	jint nativePrivateDirty();
	void nativePrivateDirty(jint);
	jint nativePss();
	void nativePss(jint);
	jint nativeSharedDirty();
	void nativeSharedDirty(jint);
	jint otherPrivateDirty();
	void otherPrivateDirty(jint);
	jint otherPss();
	void otherPss(jint);
	jint otherSharedDirty();
	void otherSharedDirty(jint);

	static ref<Debug_MemoryInfo> new_object();
	jint getTotalPss();
	jint getTotalSwappablePss();
	jint getTotalPrivateDirty();
	jint getTotalSharedDirty();
	jint getTotalPrivateClean();
	jint getTotalSharedClean();
	ref<java::lang::String> getMemoryStat(ref<java::lang::String> statName);
	ref<java::util::Map> getMemoryStats();
	jint describeContents();
	void writeToParcel(ref<android::os::Parcel> dest, jint flags);
	void readFromParcel(ref<android::os::Parcel> source);

protected:

	Debug_MemoryInfo(handle_type h) : base_(h) {}

};

} // namespace android::os
} // namespace scapix::java_api

#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Map.h>

namespace scapix::java_api {
namespace android::os {

inline ref<android::os::Parcelable_Creator> Debug_MemoryInfo::CREATOR_() { return get_static_field<SCAPIX_META_STRING("CREATOR"), ref<android::os::Parcelable_Creator>>(); }
inline jint Debug_MemoryInfo::dalvikPrivateDirty() { return get_field<SCAPIX_META_STRING("dalvikPrivateDirty"), jint>(); }
inline void Debug_MemoryInfo::dalvikPrivateDirty(jint v) { set_field<SCAPIX_META_STRING("dalvikPrivateDirty"), jint>(v); }
inline jint Debug_MemoryInfo::dalvikPss() { return get_field<SCAPIX_META_STRING("dalvikPss"), jint>(); }
inline void Debug_MemoryInfo::dalvikPss(jint v) { set_field<SCAPIX_META_STRING("dalvikPss"), jint>(v); }
inline jint Debug_MemoryInfo::dalvikSharedDirty() { return get_field<SCAPIX_META_STRING("dalvikSharedDirty"), jint>(); }
inline void Debug_MemoryInfo::dalvikSharedDirty(jint v) { set_field<SCAPIX_META_STRING("dalvikSharedDirty"), jint>(v); }
inline jint Debug_MemoryInfo::nativePrivateDirty() { return get_field<SCAPIX_META_STRING("nativePrivateDirty"), jint>(); }
inline void Debug_MemoryInfo::nativePrivateDirty(jint v) { set_field<SCAPIX_META_STRING("nativePrivateDirty"), jint>(v); }
inline jint Debug_MemoryInfo::nativePss() { return get_field<SCAPIX_META_STRING("nativePss"), jint>(); }
inline void Debug_MemoryInfo::nativePss(jint v) { set_field<SCAPIX_META_STRING("nativePss"), jint>(v); }
inline jint Debug_MemoryInfo::nativeSharedDirty() { return get_field<SCAPIX_META_STRING("nativeSharedDirty"), jint>(); }
inline void Debug_MemoryInfo::nativeSharedDirty(jint v) { set_field<SCAPIX_META_STRING("nativeSharedDirty"), jint>(v); }
inline jint Debug_MemoryInfo::otherPrivateDirty() { return get_field<SCAPIX_META_STRING("otherPrivateDirty"), jint>(); }
inline void Debug_MemoryInfo::otherPrivateDirty(jint v) { set_field<SCAPIX_META_STRING("otherPrivateDirty"), jint>(v); }
inline jint Debug_MemoryInfo::otherPss() { return get_field<SCAPIX_META_STRING("otherPss"), jint>(); }
inline void Debug_MemoryInfo::otherPss(jint v) { set_field<SCAPIX_META_STRING("otherPss"), jint>(v); }
inline jint Debug_MemoryInfo::otherSharedDirty() { return get_field<SCAPIX_META_STRING("otherSharedDirty"), jint>(); }
inline void Debug_MemoryInfo::otherSharedDirty(jint v) { set_field<SCAPIX_META_STRING("otherSharedDirty"), jint>(v); }
inline ref<Debug_MemoryInfo> Debug_MemoryInfo::new_object() { return base_::new_object(); }
inline jint Debug_MemoryInfo::getTotalPss() { return call_method<SCAPIX_META_STRING("getTotalPss"), jint>(); }
inline jint Debug_MemoryInfo::getTotalSwappablePss() { return call_method<SCAPIX_META_STRING("getTotalSwappablePss"), jint>(); }
inline jint Debug_MemoryInfo::getTotalPrivateDirty() { return call_method<SCAPIX_META_STRING("getTotalPrivateDirty"), jint>(); }
inline jint Debug_MemoryInfo::getTotalSharedDirty() { return call_method<SCAPIX_META_STRING("getTotalSharedDirty"), jint>(); }
inline jint Debug_MemoryInfo::getTotalPrivateClean() { return call_method<SCAPIX_META_STRING("getTotalPrivateClean"), jint>(); }
inline jint Debug_MemoryInfo::getTotalSharedClean() { return call_method<SCAPIX_META_STRING("getTotalSharedClean"), jint>(); }
inline ref<java::lang::String> Debug_MemoryInfo::getMemoryStat(ref<java::lang::String> statName) { return call_method<SCAPIX_META_STRING("getMemoryStat"), ref<java::lang::String>>(statName); }
inline ref<java::util::Map> Debug_MemoryInfo::getMemoryStats() { return call_method<SCAPIX_META_STRING("getMemoryStats"), ref<java::util::Map>>(); }
inline jint Debug_MemoryInfo::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }
inline void Debug_MemoryInfo::writeToParcel(ref<android::os::Parcel> dest, jint flags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(dest, flags); }
inline void Debug_MemoryInfo::readFromParcel(ref<android::os::Parcel> source) { return call_method<SCAPIX_META_STRING("readFromParcel"), void>(source); }

} // namespace android::os
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_OS_DEBUG_MEMORYINFO_H
