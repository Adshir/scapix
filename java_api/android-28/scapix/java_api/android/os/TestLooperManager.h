// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_OS_TESTLOOPERMANAGER_H
#define SCAPIX_ANDROID_OS_TESTLOOPERMANAGER_H

namespace scapix::java_api {

namespace android::os { class Handler; }
namespace android::os { class Message; }
namespace android::os { class MessageQueue; }
namespace java::lang { class Runnable; }

namespace android::os {

class TestLooperManager : public object_base<SCAPIX_META_STRING("android/os/TestLooperManager"),
	java::lang::Object>
{
public:

	ref<android::os::MessageQueue> getMessageQueue();
	ref<android::os::Message> next();
	void release();
	void execute(ref<android::os::Message> message);
	void recycle(ref<android::os::Message> msg);
	jboolean hasMessages(ref<android::os::Handler> h, ref<java::lang::Object> object, jint what);
	jboolean hasMessages(ref<android::os::Handler> h, ref<java::lang::Object> object, ref<java::lang::Runnable> r);

protected:

	TestLooperManager(handle_type h) : base_(h) {}

};

} // namespace android::os
} // namespace scapix::java_api

#include <scapix/java_api/android/os/Handler.h>
#include <scapix/java_api/android/os/Message.h>
#include <scapix/java_api/android/os/MessageQueue.h>
#include <scapix/java_api/java/lang/Runnable.h>

namespace scapix::java_api {
namespace android::os {

inline ref<android::os::MessageQueue> TestLooperManager::getMessageQueue() { return call_method<SCAPIX_META_STRING("getMessageQueue"), ref<android::os::MessageQueue>>(); }
inline ref<android::os::Message> TestLooperManager::next() { return call_method<SCAPIX_META_STRING("next"), ref<android::os::Message>>(); }
inline void TestLooperManager::release() { return call_method<SCAPIX_META_STRING("release"), void>(); }
inline void TestLooperManager::execute(ref<android::os::Message> message) { return call_method<SCAPIX_META_STRING("execute"), void>(message); }
inline void TestLooperManager::recycle(ref<android::os::Message> msg) { return call_method<SCAPIX_META_STRING("recycle"), void>(msg); }
inline jboolean TestLooperManager::hasMessages(ref<android::os::Handler> h, ref<java::lang::Object> object, jint what) { return call_method<SCAPIX_META_STRING("hasMessages"), jboolean>(h, object, what); }
inline jboolean TestLooperManager::hasMessages(ref<android::os::Handler> h, ref<java::lang::Object> object, ref<java::lang::Runnable> r) { return call_method<SCAPIX_META_STRING("hasMessages"), jboolean>(h, object, r); }

} // namespace android::os
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_OS_TESTLOOPERMANAGER_H
