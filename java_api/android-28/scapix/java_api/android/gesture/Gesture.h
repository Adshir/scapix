// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_ANDROID_GESTURE_GESTURE_H
#define SCAPIX_ANDROID_GESTURE_GESTURE_H

namespace scapix::java_api {

namespace android::gesture { class GestureStroke; }
namespace android::graphics { class Bitmap; }
namespace android::graphics { class Path; }
namespace android::graphics { class RectF; }
namespace android::os { class Parcel; }
namespace android::os { class Parcelable_Creator; }
namespace java::util { class ArrayList; }

namespace android::gesture {

class Gesture : public object_base<SCAPIX_META_STRING("android/gesture/Gesture"),
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static ref<android::os::Parcelable_Creator> CREATOR_();

	static ref<Gesture> new_object();
	ref<java::lang::Object> clone();
	ref<java::util::ArrayList> getStrokes();
	jint getStrokesCount();
	void addStroke(ref<android::gesture::GestureStroke> stroke);
	jfloat getLength();
	ref<android::graphics::RectF> getBoundingBox();
	ref<android::graphics::Path> toPath();
	ref<android::graphics::Path> toPath(ref<android::graphics::Path> path);
	ref<android::graphics::Path> toPath(jint width, jint height, jint edge, jint numSample);
	ref<android::graphics::Path> toPath(ref<android::graphics::Path> path, jint width, jint height, jint edge, jint numSample);
	jlong getID();
	ref<android::graphics::Bitmap> toBitmap(jint width, jint height, jint edge, jint numSample, jint color);
	ref<android::graphics::Bitmap> toBitmap(jint width, jint height, jint inset, jint color);
	void writeToParcel(ref<android::os::Parcel> out, jint flags);
	jint describeContents();

protected:

	Gesture(handle_type h) : base_(h) {}

};

} // namespace android::gesture
} // namespace scapix::java_api

#include <scapix/java_api/android/gesture/GestureStroke.h>
#include <scapix/java_api/android/graphics/Bitmap.h>
#include <scapix/java_api/android/graphics/Path.h>
#include <scapix/java_api/android/graphics/RectF.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/util/ArrayList.h>

namespace scapix::java_api {
namespace android::gesture {

inline ref<android::os::Parcelable_Creator> Gesture::CREATOR_() { return get_static_field<SCAPIX_META_STRING("CREATOR"), ref<android::os::Parcelable_Creator>>(); }
inline ref<Gesture> Gesture::new_object() { return base_::new_object(); }
inline ref<java::lang::Object> Gesture::clone() { return call_method<SCAPIX_META_STRING("clone"), ref<java::lang::Object>>(); }
inline ref<java::util::ArrayList> Gesture::getStrokes() { return call_method<SCAPIX_META_STRING("getStrokes"), ref<java::util::ArrayList>>(); }
inline jint Gesture::getStrokesCount() { return call_method<SCAPIX_META_STRING("getStrokesCount"), jint>(); }
inline void Gesture::addStroke(ref<android::gesture::GestureStroke> stroke) { return call_method<SCAPIX_META_STRING("addStroke"), void>(stroke); }
inline jfloat Gesture::getLength() { return call_method<SCAPIX_META_STRING("getLength"), jfloat>(); }
inline ref<android::graphics::RectF> Gesture::getBoundingBox() { return call_method<SCAPIX_META_STRING("getBoundingBox"), ref<android::graphics::RectF>>(); }
inline ref<android::graphics::Path> Gesture::toPath() { return call_method<SCAPIX_META_STRING("toPath"), ref<android::graphics::Path>>(); }
inline ref<android::graphics::Path> Gesture::toPath(ref<android::graphics::Path> path) { return call_method<SCAPIX_META_STRING("toPath"), ref<android::graphics::Path>>(path); }
inline ref<android::graphics::Path> Gesture::toPath(jint width, jint height, jint edge, jint numSample) { return call_method<SCAPIX_META_STRING("toPath"), ref<android::graphics::Path>>(width, height, edge, numSample); }
inline ref<android::graphics::Path> Gesture::toPath(ref<android::graphics::Path> path, jint width, jint height, jint edge, jint numSample) { return call_method<SCAPIX_META_STRING("toPath"), ref<android::graphics::Path>>(path, width, height, edge, numSample); }
inline jlong Gesture::getID() { return call_method<SCAPIX_META_STRING("getID"), jlong>(); }
inline ref<android::graphics::Bitmap> Gesture::toBitmap(jint width, jint height, jint edge, jint numSample, jint color) { return call_method<SCAPIX_META_STRING("toBitmap"), ref<android::graphics::Bitmap>>(width, height, edge, numSample, color); }
inline ref<android::graphics::Bitmap> Gesture::toBitmap(jint width, jint height, jint inset, jint color) { return call_method<SCAPIX_META_STRING("toBitmap"), ref<android::graphics::Bitmap>>(width, height, inset, color); }
inline void Gesture::writeToParcel(ref<android::os::Parcel> out, jint flags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(out, flags); }
inline jint Gesture::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }

} // namespace android::gesture
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_GESTURE_GESTURE_H
