// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_UTIL_LRUCACHE_H
#define SCAPIX_ANDROID_UTIL_LRUCACHE_H

namespace scapix::java_api {

namespace java::lang { class String; }
namespace java::util { class Map; }

namespace android::util {

class LruCache : public object_base<SCAPIX_META_STRING("android/util/LruCache"),
	java::lang::Object>
{
public:

	static ref<LruCache> new_object(jint maxSize);
	void resize(jint maxSize);
	ref<java::lang::Object> get(ref<java::lang::Object> key);
	ref<java::lang::Object> put(ref<java::lang::Object> key, ref<java::lang::Object> value);
	void trimToSize(jint maxSize);
	ref<java::lang::Object> remove(ref<java::lang::Object> key);
	void evictAll();
	jint size();
	jint maxSize();
	jint hitCount();
	jint missCount();
	jint createCount();
	jint putCount();
	jint evictionCount();
	ref<java::util::Map> snapshot();
	ref<java::lang::String> toString();

protected:

	LruCache(handle_type h) : base_(h) {}

};

} // namespace android::util
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Map.h>

namespace scapix::java_api {
namespace android::util {

inline ref<LruCache> LruCache::new_object(jint maxSize) { return base_::new_object(maxSize); }
inline void LruCache::resize(jint maxSize) { return call_method<SCAPIX_META_STRING("resize"), void>(maxSize); }
inline ref<java::lang::Object> LruCache::get(ref<java::lang::Object> key) { return call_method<SCAPIX_META_STRING("get"), ref<java::lang::Object>>(key); }
inline ref<java::lang::Object> LruCache::put(ref<java::lang::Object> key, ref<java::lang::Object> value) { return call_method<SCAPIX_META_STRING("put"), ref<java::lang::Object>>(key, value); }
inline void LruCache::trimToSize(jint maxSize) { return call_method<SCAPIX_META_STRING("trimToSize"), void>(maxSize); }
inline ref<java::lang::Object> LruCache::remove(ref<java::lang::Object> key) { return call_method<SCAPIX_META_STRING("remove"), ref<java::lang::Object>>(key); }
inline void LruCache::evictAll() { return call_method<SCAPIX_META_STRING("evictAll"), void>(); }
inline jint LruCache::size() { return call_method<SCAPIX_META_STRING("size"), jint>(); }
inline jint LruCache::maxSize() { return call_method<SCAPIX_META_STRING("maxSize"), jint>(); }
inline jint LruCache::hitCount() { return call_method<SCAPIX_META_STRING("hitCount"), jint>(); }
inline jint LruCache::missCount() { return call_method<SCAPIX_META_STRING("missCount"), jint>(); }
inline jint LruCache::createCount() { return call_method<SCAPIX_META_STRING("createCount"), jint>(); }
inline jint LruCache::putCount() { return call_method<SCAPIX_META_STRING("putCount"), jint>(); }
inline jint LruCache::evictionCount() { return call_method<SCAPIX_META_STRING("evictionCount"), jint>(); }
inline ref<java::util::Map> LruCache::snapshot() { return call_method<SCAPIX_META_STRING("snapshot"), ref<java::util::Map>>(); }
inline ref<java::lang::String> LruCache::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }

} // namespace android::util
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_UTIL_LRUCACHE_H
