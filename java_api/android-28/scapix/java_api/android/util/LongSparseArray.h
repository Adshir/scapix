// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/Cloneable.h>

#ifndef SCAPIX_ANDROID_UTIL_LONGSPARSEARRAY_H
#define SCAPIX_ANDROID_UTIL_LONGSPARSEARRAY_H

namespace scapix::java_api {

namespace java::lang { class String; }

namespace android::util {

class LongSparseArray : public object_base<SCAPIX_META_STRING("android/util/LongSparseArray"),
	java::lang::Object,
	java::lang::Cloneable>
{
public:

	static ref<LongSparseArray> new_object();
	static ref<LongSparseArray> new_object(jint initialCapacity);
	ref<android::util::LongSparseArray> clone();
	ref<java::lang::Object> get(jlong key);
	ref<java::lang::Object> get(jlong key, ref<java::lang::Object> p2);
	void delete_(jlong key);
	void remove(jlong key);
	void removeAt(jint index);
	void put(jlong key, ref<java::lang::Object> p2);
	jint size();
	jlong keyAt(jint index);
	ref<java::lang::Object> valueAt(jint index);
	void setValueAt(jint index, ref<java::lang::Object> value);
	jint indexOfKey(jlong key);
	jint indexOfValue(ref<java::lang::Object> value);
	void clear();
	void append(jlong key, ref<java::lang::Object> p2);
	ref<java::lang::String> toString();

protected:

	LongSparseArray(handle_type h) : base_(h) {}

};

} // namespace android::util
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::util {

inline ref<LongSparseArray> LongSparseArray::new_object() { return base_::new_object(); }
inline ref<LongSparseArray> LongSparseArray::new_object(jint initialCapacity) { return base_::new_object(initialCapacity); }
inline ref<android::util::LongSparseArray> LongSparseArray::clone() { return call_method<SCAPIX_META_STRING("clone"), ref<android::util::LongSparseArray>>(); }
inline ref<java::lang::Object> LongSparseArray::get(jlong key) { return call_method<SCAPIX_META_STRING("get"), ref<java::lang::Object>>(key); }
inline ref<java::lang::Object> LongSparseArray::get(jlong key, ref<java::lang::Object> p2) { return call_method<SCAPIX_META_STRING("get"), ref<java::lang::Object>>(key, p2); }
inline void LongSparseArray::delete_(jlong key) { return call_method<SCAPIX_META_STRING("delete"), void>(key); }
inline void LongSparseArray::remove(jlong key) { return call_method<SCAPIX_META_STRING("remove"), void>(key); }
inline void LongSparseArray::removeAt(jint index) { return call_method<SCAPIX_META_STRING("removeAt"), void>(index); }
inline void LongSparseArray::put(jlong key, ref<java::lang::Object> p2) { return call_method<SCAPIX_META_STRING("put"), void>(key, p2); }
inline jint LongSparseArray::size() { return call_method<SCAPIX_META_STRING("size"), jint>(); }
inline jlong LongSparseArray::keyAt(jint index) { return call_method<SCAPIX_META_STRING("keyAt"), jlong>(index); }
inline ref<java::lang::Object> LongSparseArray::valueAt(jint index) { return call_method<SCAPIX_META_STRING("valueAt"), ref<java::lang::Object>>(index); }
inline void LongSparseArray::setValueAt(jint index, ref<java::lang::Object> value) { return call_method<SCAPIX_META_STRING("setValueAt"), void>(index, value); }
inline jint LongSparseArray::indexOfKey(jlong key) { return call_method<SCAPIX_META_STRING("indexOfKey"), jint>(key); }
inline jint LongSparseArray::indexOfValue(ref<java::lang::Object> value) { return call_method<SCAPIX_META_STRING("indexOfValue"), jint>(value); }
inline void LongSparseArray::clear() { return call_method<SCAPIX_META_STRING("clear"), void>(); }
inline void LongSparseArray::append(jlong key, ref<java::lang::Object> p2) { return call_method<SCAPIX_META_STRING("append"), void>(key, p2); }
inline ref<java::lang::String> LongSparseArray::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }

} // namespace android::util
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_UTIL_LONGSPARSEARRAY_H
