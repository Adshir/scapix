// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_UTIL_XML_H
#define SCAPIX_ANDROID_UTIL_XML_H

namespace scapix::java_api {

namespace android::util { class AttributeSet; }
namespace android::util { class Xml_Encoding; }
namespace java::io { class InputStream; }
namespace java::io { class Reader; }
namespace java::lang { class String; }
namespace org::xml::sax { class ContentHandler; }
namespace org::xmlpull::v1 { class XmlPullParser; }
namespace org::xmlpull::v1 { class XmlSerializer; }

namespace android::util {

class Xml : public object_base<SCAPIX_META_STRING("android/util/Xml"),
	java::lang::Object>
{
public:

	using Encoding = Xml_Encoding;

	static ref<java::lang::String> FEATURE_RELAXED_();
	static void FEATURE_RELAXED_(ref<java::lang::String>);

	static void parse(ref<java::lang::String> xml, ref<org::xml::sax::ContentHandler> contentHandler);
	static void parse(ref<java::io::Reader> in, ref<org::xml::sax::ContentHandler> contentHandler);
	static void parse(ref<java::io::InputStream> in, ref<android::util::Xml_Encoding> encoding, ref<org::xml::sax::ContentHandler> contentHandler);
	static ref<org::xmlpull::v1::XmlPullParser> newPullParser();
	static ref<org::xmlpull::v1::XmlSerializer> newSerializer();
	static ref<android::util::Xml_Encoding> findEncodingByName(ref<java::lang::String> encodingName);
	static ref<android::util::AttributeSet> asAttributeSet(ref<org::xmlpull::v1::XmlPullParser> parser);

protected:

	Xml(handle_type h) : base_(h) {}

};

} // namespace android::util
} // namespace scapix::java_api

#include <scapix/java_api/android/util/AttributeSet.h>
#include <scapix/java_api/android/util/Xml_Encoding.h>
#include <scapix/java_api/java/io/InputStream.h>
#include <scapix/java_api/java/io/Reader.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/org/xml/sax/ContentHandler.h>
#include <scapix/java_api/org/xmlpull/v1/XmlPullParser.h>
#include <scapix/java_api/org/xmlpull/v1/XmlSerializer.h>

namespace scapix::java_api {
namespace android::util {

inline ref<java::lang::String> Xml::FEATURE_RELAXED_() { return get_static_field<SCAPIX_META_STRING("FEATURE_RELAXED"), ref<java::lang::String>>(); }
inline void Xml::FEATURE_RELAXED_(ref<java::lang::String> v) { set_static_field<SCAPIX_META_STRING("FEATURE_RELAXED"), ref<java::lang::String>>(v); }
inline void Xml::parse(ref<java::lang::String> xml, ref<org::xml::sax::ContentHandler> contentHandler) { return call_static_method<SCAPIX_META_STRING("parse"), void>(xml, contentHandler); }
inline void Xml::parse(ref<java::io::Reader> in, ref<org::xml::sax::ContentHandler> contentHandler) { return call_static_method<SCAPIX_META_STRING("parse"), void>(in, contentHandler); }
inline void Xml::parse(ref<java::io::InputStream> in, ref<android::util::Xml_Encoding> encoding, ref<org::xml::sax::ContentHandler> contentHandler) { return call_static_method<SCAPIX_META_STRING("parse"), void>(in, encoding, contentHandler); }
inline ref<org::xmlpull::v1::XmlPullParser> Xml::newPullParser() { return call_static_method<SCAPIX_META_STRING("newPullParser"), ref<org::xmlpull::v1::XmlPullParser>>(); }
inline ref<org::xmlpull::v1::XmlSerializer> Xml::newSerializer() { return call_static_method<SCAPIX_META_STRING("newSerializer"), ref<org::xmlpull::v1::XmlSerializer>>(); }
inline ref<android::util::Xml_Encoding> Xml::findEncodingByName(ref<java::lang::String> encodingName) { return call_static_method<SCAPIX_META_STRING("findEncodingByName"), ref<android::util::Xml_Encoding>>(encodingName); }
inline ref<android::util::AttributeSet> Xml::asAttributeSet(ref<org::xmlpull::v1::XmlPullParser> parser) { return call_static_method<SCAPIX_META_STRING("asAttributeSet"), ref<android::util::AttributeSet>>(parser); }

} // namespace android::util
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_UTIL_XML_H
