// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/io/FilterOutputStream.h>

#ifndef SCAPIX_ANDROID_UTIL_BASE64OUTPUTSTREAM_H
#define SCAPIX_ANDROID_UTIL_BASE64OUTPUTSTREAM_H

namespace scapix::java_api {

namespace java::io { class OutputStream; }

namespace android::util {

class Base64OutputStream : public object_base<SCAPIX_META_STRING("android/util/Base64OutputStream"),
	java::io::FilterOutputStream>
{
public:

	static ref<Base64OutputStream> new_object(ref<java::io::OutputStream> out, jint flags);
	void write(jint b);
	void write(ref<link::java::array<jbyte>> b, jint off, jint len);
	void close();

protected:

	Base64OutputStream(handle_type h) : base_(h) {}

};

} // namespace android::util
} // namespace scapix::java_api

#include <scapix/java_api/java/io/OutputStream.h>

namespace scapix::java_api {
namespace android::util {

inline ref<Base64OutputStream> Base64OutputStream::new_object(ref<java::io::OutputStream> out, jint flags) { return base_::new_object(out, flags); }
inline void Base64OutputStream::write(jint b) { return call_method<SCAPIX_META_STRING("write"), void>(b); }
inline void Base64OutputStream::write(ref<link::java::array<jbyte>> b, jint off, jint len) { return call_method<SCAPIX_META_STRING("write"), void>(b, off, len); }
inline void Base64OutputStream::close() { return call_method<SCAPIX_META_STRING("close"), void>(); }

} // namespace android::util
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_UTIL_BASE64OUTPUTSTREAM_H
