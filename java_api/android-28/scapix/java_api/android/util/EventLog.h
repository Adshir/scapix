// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_UTIL_EVENTLOG_H
#define SCAPIX_ANDROID_UTIL_EVENTLOG_H

namespace scapix::java_api {

namespace java::lang { class String; }
namespace java::util { class Collection; }
namespace android::util { class EventLog_Event; }

namespace android::util {

class EventLog : public object_base<SCAPIX_META_STRING("android/util/EventLog"),
	java::lang::Object>
{
public:

	using Event = EventLog_Event;

	static jint writeEvent(jint p1, jint p2);
	static jint writeEvent(jint p1, jlong p2);
	static jint writeEvent(jint p1, jfloat p2);
	static jint writeEvent(jint p1, ref<java::lang::String> p2);
	static jint writeEvent(jint p1, ref<link::java::array<java::lang::Object>> p2);
	static void readEvents(ref<link::java::array<jint>> p1, ref<java::util::Collection> p2);
	static ref<java::lang::String> getTagName(jint tag);
	static jint getTagCode(ref<java::lang::String> name);

protected:

	EventLog(handle_type h) : base_(h) {}

};

} // namespace android::util
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Collection.h>

namespace scapix::java_api {
namespace android::util {

inline jint EventLog::writeEvent(jint p1, jint p2) { return call_static_method<SCAPIX_META_STRING("writeEvent"), jint>(p1, p2); }
inline jint EventLog::writeEvent(jint p1, jlong p2) { return call_static_method<SCAPIX_META_STRING("writeEvent"), jint>(p1, p2); }
inline jint EventLog::writeEvent(jint p1, jfloat p2) { return call_static_method<SCAPIX_META_STRING("writeEvent"), jint>(p1, p2); }
inline jint EventLog::writeEvent(jint p1, ref<java::lang::String> p2) { return call_static_method<SCAPIX_META_STRING("writeEvent"), jint>(p1, p2); }
inline jint EventLog::writeEvent(jint p1, ref<link::java::array<java::lang::Object>> p2) { return call_static_method<SCAPIX_META_STRING("writeEvent"), jint>(p1, p2); }
inline void EventLog::readEvents(ref<link::java::array<jint>> p1, ref<java::util::Collection> p2) { return call_static_method<SCAPIX_META_STRING("readEvents"), void>(p1, p2); }
inline ref<java::lang::String> EventLog::getTagName(jint tag) { return call_static_method<SCAPIX_META_STRING("getTagName"), ref<java::lang::String>>(tag); }
inline jint EventLog::getTagCode(ref<java::lang::String> name) { return call_static_method<SCAPIX_META_STRING("getTagCode"), jint>(name); }

} // namespace android::util
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_UTIL_EVENTLOG_H
