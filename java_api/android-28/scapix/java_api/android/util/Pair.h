// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_UTIL_PAIR_H
#define SCAPIX_ANDROID_UTIL_PAIR_H

namespace scapix::java_api {

namespace java::lang { class String; }

namespace android::util {

class Pair : public object_base<SCAPIX_META_STRING("android/util/Pair"),
	java::lang::Object>
{
public:

	ref<java::lang::Object> first();
	ref<java::lang::Object> second();

	static ref<Pair> new_object(ref<java::lang::Object> first, ref<java::lang::Object> second);
	jboolean equals(ref<java::lang::Object> o);
	jint hashCode();
	ref<java::lang::String> toString();
	static ref<android::util::Pair> create(ref<java::lang::Object> a, ref<java::lang::Object> b);

protected:

	Pair(handle_type h) : base_(h) {}

};

} // namespace android::util
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::util {

inline ref<java::lang::Object> Pair::first() { return get_field<SCAPIX_META_STRING("first"), ref<java::lang::Object>>(); }
inline ref<java::lang::Object> Pair::second() { return get_field<SCAPIX_META_STRING("second"), ref<java::lang::Object>>(); }
inline ref<Pair> Pair::new_object(ref<java::lang::Object> first, ref<java::lang::Object> second) { return base_::new_object(first, second); }
inline jboolean Pair::equals(ref<java::lang::Object> o) { return call_method<SCAPIX_META_STRING("equals"), jboolean>(o); }
inline jint Pair::hashCode() { return call_method<SCAPIX_META_STRING("hashCode"), jint>(); }
inline ref<java::lang::String> Pair::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }
inline ref<android::util::Pair> Pair::create(ref<java::lang::Object> a, ref<java::lang::Object> b) { return call_static_method<SCAPIX_META_STRING("create"), ref<android::util::Pair>>(a, b); }

} // namespace android::util
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_UTIL_PAIR_H
