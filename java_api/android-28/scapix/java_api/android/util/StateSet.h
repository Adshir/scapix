// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_UTIL_STATESET_H
#define SCAPIX_ANDROID_UTIL_STATESET_H

namespace scapix::java_api {

namespace java::lang { class String; }

namespace android::util {

class StateSet : public object_base<SCAPIX_META_STRING("android/util/StateSet"),
	java::lang::Object>
{
public:

	static ref<link::java::array<jint>> NOTHING_();
	static ref<link::java::array<jint>> WILD_CARD_();

	static jboolean isWildCard(ref<link::java::array<jint>> stateSetOrSpec);
	static jboolean stateSetMatches(ref<link::java::array<jint>> stateSpec, ref<link::java::array<jint>> stateSet);
	static jboolean stateSetMatches(ref<link::java::array<jint>> stateSpec, jint state);
	static ref<link::java::array<jint>> trimStateSet(ref<link::java::array<jint>> states, jint newSize);
	static ref<java::lang::String> dump(ref<link::java::array<jint>> states);

protected:

	StateSet(handle_type h) : base_(h) {}

};

} // namespace android::util
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::util {

inline ref<link::java::array<jint>> StateSet::NOTHING_() { return get_static_field<SCAPIX_META_STRING("NOTHING"), ref<link::java::array<jint>>>(); }
inline ref<link::java::array<jint>> StateSet::WILD_CARD_() { return get_static_field<SCAPIX_META_STRING("WILD_CARD"), ref<link::java::array<jint>>>(); }
inline jboolean StateSet::isWildCard(ref<link::java::array<jint>> stateSetOrSpec) { return call_static_method<SCAPIX_META_STRING("isWildCard"), jboolean>(stateSetOrSpec); }
inline jboolean StateSet::stateSetMatches(ref<link::java::array<jint>> stateSpec, ref<link::java::array<jint>> stateSet) { return call_static_method<SCAPIX_META_STRING("stateSetMatches"), jboolean>(stateSpec, stateSet); }
inline jboolean StateSet::stateSetMatches(ref<link::java::array<jint>> stateSpec, jint state) { return call_static_method<SCAPIX_META_STRING("stateSetMatches"), jboolean>(stateSpec, state); }
inline ref<link::java::array<jint>> StateSet::trimStateSet(ref<link::java::array<jint>> states, jint newSize) { return call_static_method<SCAPIX_META_STRING("trimStateSet"), ref<link::java::array<jint>>>(states, newSize); }
inline ref<java::lang::String> StateSet::dump(ref<link::java::array<jint>> states) { return call_static_method<SCAPIX_META_STRING("dump"), ref<java::lang::String>>(states); }

} // namespace android::util
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_UTIL_STATESET_H
