// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/Cloneable.h>

#ifndef SCAPIX_ANDROID_UTIL_SPARSELONGARRAY_H
#define SCAPIX_ANDROID_UTIL_SPARSELONGARRAY_H

namespace scapix::java_api {

namespace java::lang { class String; }

namespace android::util {

class SparseLongArray : public object_base<SCAPIX_META_STRING("android/util/SparseLongArray"),
	java::lang::Object,
	java::lang::Cloneable>
{
public:

	static ref<SparseLongArray> new_object();
	static ref<SparseLongArray> new_object(jint initialCapacity);
	ref<android::util::SparseLongArray> clone();
	jlong get(jint key);
	jlong get(jint key, jlong valueIfKeyNotFound);
	void delete_(jint key);
	void removeAt(jint index);
	void put(jint key, jlong value);
	jint size();
	jint keyAt(jint index);
	jlong valueAt(jint index);
	jint indexOfKey(jint key);
	jint indexOfValue(jlong value);
	void clear();
	void append(jint key, jlong value);
	ref<java::lang::String> toString();

protected:

	SparseLongArray(handle_type h) : base_(h) {}

};

} // namespace android::util
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::util {

inline ref<SparseLongArray> SparseLongArray::new_object() { return base_::new_object(); }
inline ref<SparseLongArray> SparseLongArray::new_object(jint initialCapacity) { return base_::new_object(initialCapacity); }
inline ref<android::util::SparseLongArray> SparseLongArray::clone() { return call_method<SCAPIX_META_STRING("clone"), ref<android::util::SparseLongArray>>(); }
inline jlong SparseLongArray::get(jint key) { return call_method<SCAPIX_META_STRING("get"), jlong>(key); }
inline jlong SparseLongArray::get(jint key, jlong valueIfKeyNotFound) { return call_method<SCAPIX_META_STRING("get"), jlong>(key, valueIfKeyNotFound); }
inline void SparseLongArray::delete_(jint key) { return call_method<SCAPIX_META_STRING("delete"), void>(key); }
inline void SparseLongArray::removeAt(jint index) { return call_method<SCAPIX_META_STRING("removeAt"), void>(index); }
inline void SparseLongArray::put(jint key, jlong value) { return call_method<SCAPIX_META_STRING("put"), void>(key, value); }
inline jint SparseLongArray::size() { return call_method<SCAPIX_META_STRING("size"), jint>(); }
inline jint SparseLongArray::keyAt(jint index) { return call_method<SCAPIX_META_STRING("keyAt"), jint>(index); }
inline jlong SparseLongArray::valueAt(jint index) { return call_method<SCAPIX_META_STRING("valueAt"), jlong>(index); }
inline jint SparseLongArray::indexOfKey(jint key) { return call_method<SCAPIX_META_STRING("indexOfKey"), jint>(key); }
inline jint SparseLongArray::indexOfValue(jlong value) { return call_method<SCAPIX_META_STRING("indexOfValue"), jint>(value); }
inline void SparseLongArray::clear() { return call_method<SCAPIX_META_STRING("clear"), void>(); }
inline void SparseLongArray::append(jint key, jlong value) { return call_method<SCAPIX_META_STRING("append"), void>(key, value); }
inline ref<java::lang::String> SparseLongArray::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }

} // namespace android::util
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_UTIL_SPARSELONGARRAY_H
