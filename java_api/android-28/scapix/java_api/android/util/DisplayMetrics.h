// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_UTIL_DISPLAYMETRICS_H
#define SCAPIX_ANDROID_UTIL_DISPLAYMETRICS_H

namespace scapix::java_api {

namespace java::lang { class String; }

namespace android::util {

class DisplayMetrics : public object_base<SCAPIX_META_STRING("android/util/DisplayMetrics"),
	java::lang::Object>
{
public:

	static jint DENSITY_260_();
	static jint DENSITY_280_();
	static jint DENSITY_300_();
	static jint DENSITY_340_();
	static jint DENSITY_360_();
	static jint DENSITY_400_();
	static jint DENSITY_420_();
	static jint DENSITY_440_();
	static jint DENSITY_560_();
	static jint DENSITY_DEFAULT_();
	static jint DENSITY_DEVICE_STABLE_();
	static jint DENSITY_HIGH_();
	static jint DENSITY_LOW_();
	static jint DENSITY_MEDIUM_();
	static jint DENSITY_TV_();
	static jint DENSITY_XHIGH_();
	static jint DENSITY_XXHIGH_();
	static jint DENSITY_XXXHIGH_();
	jfloat density();
	void density(jfloat);
	jint densityDpi();
	void densityDpi(jint);
	jint heightPixels();
	void heightPixels(jint);
	jfloat scaledDensity();
	void scaledDensity(jfloat);
	jint widthPixels();
	void widthPixels(jint);
	jfloat xdpi();
	void xdpi(jfloat);
	jfloat ydpi();
	void ydpi(jfloat);

	static ref<DisplayMetrics> new_object();
	void setTo(ref<android::util::DisplayMetrics> o);
	void setToDefaults();
	jboolean equals(ref<java::lang::Object> o);
	jboolean equals(ref<android::util::DisplayMetrics> other);
	jint hashCode();
	ref<java::lang::String> toString();

protected:

	DisplayMetrics(handle_type h) : base_(h) {}

};

} // namespace android::util
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::util {

inline jint DisplayMetrics::DENSITY_260_() { return get_static_field<SCAPIX_META_STRING("DENSITY_260"), jint>(); }
inline jint DisplayMetrics::DENSITY_280_() { return get_static_field<SCAPIX_META_STRING("DENSITY_280"), jint>(); }
inline jint DisplayMetrics::DENSITY_300_() { return get_static_field<SCAPIX_META_STRING("DENSITY_300"), jint>(); }
inline jint DisplayMetrics::DENSITY_340_() { return get_static_field<SCAPIX_META_STRING("DENSITY_340"), jint>(); }
inline jint DisplayMetrics::DENSITY_360_() { return get_static_field<SCAPIX_META_STRING("DENSITY_360"), jint>(); }
inline jint DisplayMetrics::DENSITY_400_() { return get_static_field<SCAPIX_META_STRING("DENSITY_400"), jint>(); }
inline jint DisplayMetrics::DENSITY_420_() { return get_static_field<SCAPIX_META_STRING("DENSITY_420"), jint>(); }
inline jint DisplayMetrics::DENSITY_440_() { return get_static_field<SCAPIX_META_STRING("DENSITY_440"), jint>(); }
inline jint DisplayMetrics::DENSITY_560_() { return get_static_field<SCAPIX_META_STRING("DENSITY_560"), jint>(); }
inline jint DisplayMetrics::DENSITY_DEFAULT_() { return get_static_field<SCAPIX_META_STRING("DENSITY_DEFAULT"), jint>(); }
inline jint DisplayMetrics::DENSITY_DEVICE_STABLE_() { return get_static_field<SCAPIX_META_STRING("DENSITY_DEVICE_STABLE"), jint>(); }
inline jint DisplayMetrics::DENSITY_HIGH_() { return get_static_field<SCAPIX_META_STRING("DENSITY_HIGH"), jint>(); }
inline jint DisplayMetrics::DENSITY_LOW_() { return get_static_field<SCAPIX_META_STRING("DENSITY_LOW"), jint>(); }
inline jint DisplayMetrics::DENSITY_MEDIUM_() { return get_static_field<SCAPIX_META_STRING("DENSITY_MEDIUM"), jint>(); }
inline jint DisplayMetrics::DENSITY_TV_() { return get_static_field<SCAPIX_META_STRING("DENSITY_TV"), jint>(); }
inline jint DisplayMetrics::DENSITY_XHIGH_() { return get_static_field<SCAPIX_META_STRING("DENSITY_XHIGH"), jint>(); }
inline jint DisplayMetrics::DENSITY_XXHIGH_() { return get_static_field<SCAPIX_META_STRING("DENSITY_XXHIGH"), jint>(); }
inline jint DisplayMetrics::DENSITY_XXXHIGH_() { return get_static_field<SCAPIX_META_STRING("DENSITY_XXXHIGH"), jint>(); }
inline jfloat DisplayMetrics::density() { return get_field<SCAPIX_META_STRING("density"), jfloat>(); }
inline void DisplayMetrics::density(jfloat v) { set_field<SCAPIX_META_STRING("density"), jfloat>(v); }
inline jint DisplayMetrics::densityDpi() { return get_field<SCAPIX_META_STRING("densityDpi"), jint>(); }
inline void DisplayMetrics::densityDpi(jint v) { set_field<SCAPIX_META_STRING("densityDpi"), jint>(v); }
inline jint DisplayMetrics::heightPixels() { return get_field<SCAPIX_META_STRING("heightPixels"), jint>(); }
inline void DisplayMetrics::heightPixels(jint v) { set_field<SCAPIX_META_STRING("heightPixels"), jint>(v); }
inline jfloat DisplayMetrics::scaledDensity() { return get_field<SCAPIX_META_STRING("scaledDensity"), jfloat>(); }
inline void DisplayMetrics::scaledDensity(jfloat v) { set_field<SCAPIX_META_STRING("scaledDensity"), jfloat>(v); }
inline jint DisplayMetrics::widthPixels() { return get_field<SCAPIX_META_STRING("widthPixels"), jint>(); }
inline void DisplayMetrics::widthPixels(jint v) { set_field<SCAPIX_META_STRING("widthPixels"), jint>(v); }
inline jfloat DisplayMetrics::xdpi() { return get_field<SCAPIX_META_STRING("xdpi"), jfloat>(); }
inline void DisplayMetrics::xdpi(jfloat v) { set_field<SCAPIX_META_STRING("xdpi"), jfloat>(v); }
inline jfloat DisplayMetrics::ydpi() { return get_field<SCAPIX_META_STRING("ydpi"), jfloat>(); }
inline void DisplayMetrics::ydpi(jfloat v) { set_field<SCAPIX_META_STRING("ydpi"), jfloat>(v); }
inline ref<DisplayMetrics> DisplayMetrics::new_object() { return base_::new_object(); }
inline void DisplayMetrics::setTo(ref<android::util::DisplayMetrics> o) { return call_method<SCAPIX_META_STRING("setTo"), void>(o); }
inline void DisplayMetrics::setToDefaults() { return call_method<SCAPIX_META_STRING("setToDefaults"), void>(); }
inline jboolean DisplayMetrics::equals(ref<java::lang::Object> o) { return call_method<SCAPIX_META_STRING("equals"), jboolean>(o); }
inline jboolean DisplayMetrics::equals(ref<android::util::DisplayMetrics> other) { return call_method<SCAPIX_META_STRING("equals"), jboolean>(other); }
inline jint DisplayMetrics::hashCode() { return call_method<SCAPIX_META_STRING("hashCode"), jint>(); }
inline ref<java::lang::String> DisplayMetrics::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }

} // namespace android::util
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_UTIL_DISPLAYMETRICS_H
