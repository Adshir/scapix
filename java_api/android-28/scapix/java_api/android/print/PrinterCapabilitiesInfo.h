// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_ANDROID_PRINT_PRINTERCAPABILITIESINFO_H
#define SCAPIX_ANDROID_PRINT_PRINTERCAPABILITIESINFO_H

namespace scapix::java_api {

namespace android::os { class Parcel; }
namespace android::os { class Parcelable_Creator; }
namespace android::print { class PrintAttributes; }
namespace android::print { class PrintAttributes_Margins; }
namespace java::lang { class String; }
namespace java::util { class List; }
namespace android::print { class PrinterCapabilitiesInfo_Builder; }

namespace android::print {

class PrinterCapabilitiesInfo : public object_base<SCAPIX_META_STRING("android/print/PrinterCapabilitiesInfo"),
	java::lang::Object,
	android::os::Parcelable>
{
public:

	using Builder = PrinterCapabilitiesInfo_Builder;

	static ref<android::os::Parcelable_Creator> CREATOR_();

	ref<java::util::List> getMediaSizes();
	ref<java::util::List> getResolutions();
	ref<android::print::PrintAttributes_Margins> getMinMargins();
	jint getColorModes();
	jint getDuplexModes();
	ref<android::print::PrintAttributes> getDefaults();
	jint describeContents();
	void writeToParcel(ref<android::os::Parcel> parcel, jint flags);
	jint hashCode();
	jboolean equals(ref<java::lang::Object> obj);
	ref<java::lang::String> toString();

protected:

	PrinterCapabilitiesInfo(handle_type h) : base_(h) {}

};

} // namespace android::print
} // namespace scapix::java_api

#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/android/print/PrintAttributes.h>
#include <scapix/java_api/android/print/PrintAttributes_Margins.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/List.h>

namespace scapix::java_api {
namespace android::print {

inline ref<android::os::Parcelable_Creator> PrinterCapabilitiesInfo::CREATOR_() { return get_static_field<SCAPIX_META_STRING("CREATOR"), ref<android::os::Parcelable_Creator>>(); }
inline ref<java::util::List> PrinterCapabilitiesInfo::getMediaSizes() { return call_method<SCAPIX_META_STRING("getMediaSizes"), ref<java::util::List>>(); }
inline ref<java::util::List> PrinterCapabilitiesInfo::getResolutions() { return call_method<SCAPIX_META_STRING("getResolutions"), ref<java::util::List>>(); }
inline ref<android::print::PrintAttributes_Margins> PrinterCapabilitiesInfo::getMinMargins() { return call_method<SCAPIX_META_STRING("getMinMargins"), ref<android::print::PrintAttributes_Margins>>(); }
inline jint PrinterCapabilitiesInfo::getColorModes() { return call_method<SCAPIX_META_STRING("getColorModes"), jint>(); }
inline jint PrinterCapabilitiesInfo::getDuplexModes() { return call_method<SCAPIX_META_STRING("getDuplexModes"), jint>(); }
inline ref<android::print::PrintAttributes> PrinterCapabilitiesInfo::getDefaults() { return call_method<SCAPIX_META_STRING("getDefaults"), ref<android::print::PrintAttributes>>(); }
inline jint PrinterCapabilitiesInfo::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }
inline void PrinterCapabilitiesInfo::writeToParcel(ref<android::os::Parcel> parcel, jint flags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(parcel, flags); }
inline jint PrinterCapabilitiesInfo::hashCode() { return call_method<SCAPIX_META_STRING("hashCode"), jint>(); }
inline jboolean PrinterCapabilitiesInfo::equals(ref<java::lang::Object> obj) { return call_method<SCAPIX_META_STRING("equals"), jboolean>(obj); }
inline ref<java::lang::String> PrinterCapabilitiesInfo::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }

} // namespace android::print
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_PRINT_PRINTERCAPABILITIESINFO_H
