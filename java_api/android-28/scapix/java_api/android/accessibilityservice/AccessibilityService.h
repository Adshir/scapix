// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/app/Service.h>

#ifndef SCAPIX_ANDROID_ACCESSIBILITYSERVICE_ACCESSIBILITYSERVICE_H
#define SCAPIX_ANDROID_ACCESSIBILITYSERVICE_ACCESSIBILITYSERVICE_H

namespace scapix::java_api {

namespace android::accessibilityservice { class AccessibilityButtonController; }
namespace android::accessibilityservice { class AccessibilityService_GestureResultCallback; }
namespace android::accessibilityservice { class AccessibilityService_MagnificationController; }
namespace android::accessibilityservice { class AccessibilityService_SoftKeyboardController; }
namespace android::accessibilityservice { class AccessibilityServiceInfo; }
namespace android::accessibilityservice { class FingerprintGestureController; }
namespace android::accessibilityservice { class GestureDescription; }
namespace android::content { class Intent; }
namespace android::os { class Handler; }
namespace android::os { class IBinder; }
namespace android::view::accessibility { class AccessibilityEvent; }
namespace android::view::accessibility { class AccessibilityNodeInfo; }
namespace java::lang { class Object; }
namespace java::lang { class String; }
namespace java::util { class List; }

namespace android::accessibilityservice {

class AccessibilityService : public object_base<SCAPIX_META_STRING("android/accessibilityservice/AccessibilityService"),
	android::app::Service>
{
public:

	using SoftKeyboardController = AccessibilityService_SoftKeyboardController;
	using MagnificationController = AccessibilityService_MagnificationController;
	using GestureResultCallback = AccessibilityService_GestureResultCallback;

	static jint GESTURE_SWIPE_DOWN_();
	static jint GESTURE_SWIPE_DOWN_AND_LEFT_();
	static jint GESTURE_SWIPE_DOWN_AND_RIGHT_();
	static jint GESTURE_SWIPE_DOWN_AND_UP_();
	static jint GESTURE_SWIPE_LEFT_();
	static jint GESTURE_SWIPE_LEFT_AND_DOWN_();
	static jint GESTURE_SWIPE_LEFT_AND_RIGHT_();
	static jint GESTURE_SWIPE_LEFT_AND_UP_();
	static jint GESTURE_SWIPE_RIGHT_();
	static jint GESTURE_SWIPE_RIGHT_AND_DOWN_();
	static jint GESTURE_SWIPE_RIGHT_AND_LEFT_();
	static jint GESTURE_SWIPE_RIGHT_AND_UP_();
	static jint GESTURE_SWIPE_UP_();
	static jint GESTURE_SWIPE_UP_AND_DOWN_();
	static jint GESTURE_SWIPE_UP_AND_LEFT_();
	static jint GESTURE_SWIPE_UP_AND_RIGHT_();
	static jint GLOBAL_ACTION_BACK_();
	static jint GLOBAL_ACTION_HOME_();
	static jint GLOBAL_ACTION_LOCK_SCREEN_();
	static jint GLOBAL_ACTION_NOTIFICATIONS_();
	static jint GLOBAL_ACTION_POWER_DIALOG_();
	static jint GLOBAL_ACTION_QUICK_SETTINGS_();
	static jint GLOBAL_ACTION_RECENTS_();
	static jint GLOBAL_ACTION_TAKE_SCREENSHOT_();
	static jint GLOBAL_ACTION_TOGGLE_SPLIT_SCREEN_();
	static ref<java::lang::String> SERVICE_INTERFACE_();
	static ref<java::lang::String> SERVICE_META_DATA_();
	static jint SHOW_MODE_AUTO_();
	static jint SHOW_MODE_HIDDEN_();

	static ref<AccessibilityService> new_object();
	void onAccessibilityEvent(ref<android::view::accessibility::AccessibilityEvent> p1);
	void onInterrupt();
	ref<java::util::List> getWindows();
	ref<android::view::accessibility::AccessibilityNodeInfo> getRootInActiveWindow();
	void disableSelf();
	ref<android::accessibilityservice::AccessibilityService_MagnificationController> getMagnificationController();
	ref<android::accessibilityservice::FingerprintGestureController> getFingerprintGestureController();
	jboolean dispatchGesture(ref<android::accessibilityservice::GestureDescription> gesture, ref<android::accessibilityservice::AccessibilityService_GestureResultCallback> callback, ref<android::os::Handler> handler);
	ref<android::accessibilityservice::AccessibilityService_SoftKeyboardController> getSoftKeyboardController();
	ref<android::accessibilityservice::AccessibilityButtonController> getAccessibilityButtonController();
	jboolean performGlobalAction(jint action);
	ref<android::view::accessibility::AccessibilityNodeInfo> findFocus(jint focus);
	ref<android::accessibilityservice::AccessibilityServiceInfo> getServiceInfo();
	void setServiceInfo(ref<android::accessibilityservice::AccessibilityServiceInfo> info);
	ref<java::lang::Object> getSystemService(ref<java::lang::String> name);
	ref<android::os::IBinder> onBind(ref<android::content::Intent> intent);

protected:

	AccessibilityService(handle_type h) : base_(h) {}

};

} // namespace android::accessibilityservice
} // namespace scapix::java_api

#include <scapix/java_api/android/accessibilityservice/AccessibilityButtonController.h>
#include <scapix/java_api/android/accessibilityservice/AccessibilityService_GestureResultCallback.h>
#include <scapix/java_api/android/accessibilityservice/AccessibilityService_MagnificationController.h>
#include <scapix/java_api/android/accessibilityservice/AccessibilityService_SoftKeyboardController.h>
#include <scapix/java_api/android/accessibilityservice/AccessibilityServiceInfo.h>
#include <scapix/java_api/android/accessibilityservice/FingerprintGestureController.h>
#include <scapix/java_api/android/accessibilityservice/GestureDescription.h>
#include <scapix/java_api/android/content/Intent.h>
#include <scapix/java_api/android/os/Handler.h>
#include <scapix/java_api/android/os/IBinder.h>
#include <scapix/java_api/android/view/accessibility/AccessibilityEvent.h>
#include <scapix/java_api/android/view/accessibility/AccessibilityNodeInfo.h>
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/List.h>

namespace scapix::java_api {
namespace android::accessibilityservice {

inline jint AccessibilityService::GESTURE_SWIPE_DOWN_() { return get_static_field<SCAPIX_META_STRING("GESTURE_SWIPE_DOWN"), jint>(); }
inline jint AccessibilityService::GESTURE_SWIPE_DOWN_AND_LEFT_() { return get_static_field<SCAPIX_META_STRING("GESTURE_SWIPE_DOWN_AND_LEFT"), jint>(); }
inline jint AccessibilityService::GESTURE_SWIPE_DOWN_AND_RIGHT_() { return get_static_field<SCAPIX_META_STRING("GESTURE_SWIPE_DOWN_AND_RIGHT"), jint>(); }
inline jint AccessibilityService::GESTURE_SWIPE_DOWN_AND_UP_() { return get_static_field<SCAPIX_META_STRING("GESTURE_SWIPE_DOWN_AND_UP"), jint>(); }
inline jint AccessibilityService::GESTURE_SWIPE_LEFT_() { return get_static_field<SCAPIX_META_STRING("GESTURE_SWIPE_LEFT"), jint>(); }
inline jint AccessibilityService::GESTURE_SWIPE_LEFT_AND_DOWN_() { return get_static_field<SCAPIX_META_STRING("GESTURE_SWIPE_LEFT_AND_DOWN"), jint>(); }
inline jint AccessibilityService::GESTURE_SWIPE_LEFT_AND_RIGHT_() { return get_static_field<SCAPIX_META_STRING("GESTURE_SWIPE_LEFT_AND_RIGHT"), jint>(); }
inline jint AccessibilityService::GESTURE_SWIPE_LEFT_AND_UP_() { return get_static_field<SCAPIX_META_STRING("GESTURE_SWIPE_LEFT_AND_UP"), jint>(); }
inline jint AccessibilityService::GESTURE_SWIPE_RIGHT_() { return get_static_field<SCAPIX_META_STRING("GESTURE_SWIPE_RIGHT"), jint>(); }
inline jint AccessibilityService::GESTURE_SWIPE_RIGHT_AND_DOWN_() { return get_static_field<SCAPIX_META_STRING("GESTURE_SWIPE_RIGHT_AND_DOWN"), jint>(); }
inline jint AccessibilityService::GESTURE_SWIPE_RIGHT_AND_LEFT_() { return get_static_field<SCAPIX_META_STRING("GESTURE_SWIPE_RIGHT_AND_LEFT"), jint>(); }
inline jint AccessibilityService::GESTURE_SWIPE_RIGHT_AND_UP_() { return get_static_field<SCAPIX_META_STRING("GESTURE_SWIPE_RIGHT_AND_UP"), jint>(); }
inline jint AccessibilityService::GESTURE_SWIPE_UP_() { return get_static_field<SCAPIX_META_STRING("GESTURE_SWIPE_UP"), jint>(); }
inline jint AccessibilityService::GESTURE_SWIPE_UP_AND_DOWN_() { return get_static_field<SCAPIX_META_STRING("GESTURE_SWIPE_UP_AND_DOWN"), jint>(); }
inline jint AccessibilityService::GESTURE_SWIPE_UP_AND_LEFT_() { return get_static_field<SCAPIX_META_STRING("GESTURE_SWIPE_UP_AND_LEFT"), jint>(); }
inline jint AccessibilityService::GESTURE_SWIPE_UP_AND_RIGHT_() { return get_static_field<SCAPIX_META_STRING("GESTURE_SWIPE_UP_AND_RIGHT"), jint>(); }
inline jint AccessibilityService::GLOBAL_ACTION_BACK_() { return get_static_field<SCAPIX_META_STRING("GLOBAL_ACTION_BACK"), jint>(); }
inline jint AccessibilityService::GLOBAL_ACTION_HOME_() { return get_static_field<SCAPIX_META_STRING("GLOBAL_ACTION_HOME"), jint>(); }
inline jint AccessibilityService::GLOBAL_ACTION_LOCK_SCREEN_() { return get_static_field<SCAPIX_META_STRING("GLOBAL_ACTION_LOCK_SCREEN"), jint>(); }
inline jint AccessibilityService::GLOBAL_ACTION_NOTIFICATIONS_() { return get_static_field<SCAPIX_META_STRING("GLOBAL_ACTION_NOTIFICATIONS"), jint>(); }
inline jint AccessibilityService::GLOBAL_ACTION_POWER_DIALOG_() { return get_static_field<SCAPIX_META_STRING("GLOBAL_ACTION_POWER_DIALOG"), jint>(); }
inline jint AccessibilityService::GLOBAL_ACTION_QUICK_SETTINGS_() { return get_static_field<SCAPIX_META_STRING("GLOBAL_ACTION_QUICK_SETTINGS"), jint>(); }
inline jint AccessibilityService::GLOBAL_ACTION_RECENTS_() { return get_static_field<SCAPIX_META_STRING("GLOBAL_ACTION_RECENTS"), jint>(); }
inline jint AccessibilityService::GLOBAL_ACTION_TAKE_SCREENSHOT_() { return get_static_field<SCAPIX_META_STRING("GLOBAL_ACTION_TAKE_SCREENSHOT"), jint>(); }
inline jint AccessibilityService::GLOBAL_ACTION_TOGGLE_SPLIT_SCREEN_() { return get_static_field<SCAPIX_META_STRING("GLOBAL_ACTION_TOGGLE_SPLIT_SCREEN"), jint>(); }
inline ref<java::lang::String> AccessibilityService::SERVICE_INTERFACE_() { return get_static_field<SCAPIX_META_STRING("SERVICE_INTERFACE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> AccessibilityService::SERVICE_META_DATA_() { return get_static_field<SCAPIX_META_STRING("SERVICE_META_DATA"), ref<java::lang::String>>(); }
inline jint AccessibilityService::SHOW_MODE_AUTO_() { return get_static_field<SCAPIX_META_STRING("SHOW_MODE_AUTO"), jint>(); }
inline jint AccessibilityService::SHOW_MODE_HIDDEN_() { return get_static_field<SCAPIX_META_STRING("SHOW_MODE_HIDDEN"), jint>(); }
inline ref<AccessibilityService> AccessibilityService::new_object() { return base_::new_object(); }
inline void AccessibilityService::onAccessibilityEvent(ref<android::view::accessibility::AccessibilityEvent> p1) { return call_method<SCAPIX_META_STRING("onAccessibilityEvent"), void>(p1); }
inline void AccessibilityService::onInterrupt() { return call_method<SCAPIX_META_STRING("onInterrupt"), void>(); }
inline ref<java::util::List> AccessibilityService::getWindows() { return call_method<SCAPIX_META_STRING("getWindows"), ref<java::util::List>>(); }
inline ref<android::view::accessibility::AccessibilityNodeInfo> AccessibilityService::getRootInActiveWindow() { return call_method<SCAPIX_META_STRING("getRootInActiveWindow"), ref<android::view::accessibility::AccessibilityNodeInfo>>(); }
inline void AccessibilityService::disableSelf() { return call_method<SCAPIX_META_STRING("disableSelf"), void>(); }
inline ref<android::accessibilityservice::AccessibilityService_MagnificationController> AccessibilityService::getMagnificationController() { return call_method<SCAPIX_META_STRING("getMagnificationController"), ref<android::accessibilityservice::AccessibilityService_MagnificationController>>(); }
inline ref<android::accessibilityservice::FingerprintGestureController> AccessibilityService::getFingerprintGestureController() { return call_method<SCAPIX_META_STRING("getFingerprintGestureController"), ref<android::accessibilityservice::FingerprintGestureController>>(); }
inline jboolean AccessibilityService::dispatchGesture(ref<android::accessibilityservice::GestureDescription> gesture, ref<android::accessibilityservice::AccessibilityService_GestureResultCallback> callback, ref<android::os::Handler> handler) { return call_method<SCAPIX_META_STRING("dispatchGesture"), jboolean>(gesture, callback, handler); }
inline ref<android::accessibilityservice::AccessibilityService_SoftKeyboardController> AccessibilityService::getSoftKeyboardController() { return call_method<SCAPIX_META_STRING("getSoftKeyboardController"), ref<android::accessibilityservice::AccessibilityService_SoftKeyboardController>>(); }
inline ref<android::accessibilityservice::AccessibilityButtonController> AccessibilityService::getAccessibilityButtonController() { return call_method<SCAPIX_META_STRING("getAccessibilityButtonController"), ref<android::accessibilityservice::AccessibilityButtonController>>(); }
inline jboolean AccessibilityService::performGlobalAction(jint action) { return call_method<SCAPIX_META_STRING("performGlobalAction"), jboolean>(action); }
inline ref<android::view::accessibility::AccessibilityNodeInfo> AccessibilityService::findFocus(jint focus) { return call_method<SCAPIX_META_STRING("findFocus"), ref<android::view::accessibility::AccessibilityNodeInfo>>(focus); }
inline ref<android::accessibilityservice::AccessibilityServiceInfo> AccessibilityService::getServiceInfo() { return call_method<SCAPIX_META_STRING("getServiceInfo"), ref<android::accessibilityservice::AccessibilityServiceInfo>>(); }
inline void AccessibilityService::setServiceInfo(ref<android::accessibilityservice::AccessibilityServiceInfo> info) { return call_method<SCAPIX_META_STRING("setServiceInfo"), void>(info); }
inline ref<java::lang::Object> AccessibilityService::getSystemService(ref<java::lang::String> name) { return call_method<SCAPIX_META_STRING("getSystemService"), ref<java::lang::Object>>(name); }
inline ref<android::os::IBinder> AccessibilityService::onBind(ref<android::content::Intent> intent) { return call_method<SCAPIX_META_STRING("onBind"), ref<android::os::IBinder>>(intent); }

} // namespace android::accessibilityservice
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_ACCESSIBILITYSERVICE_ACCESSIBILITYSERVICE_H
