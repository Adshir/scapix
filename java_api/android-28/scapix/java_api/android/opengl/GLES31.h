// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/opengl/GLES30.h>

#ifndef SCAPIX_ANDROID_OPENGL_GLES31_H
#define SCAPIX_ANDROID_OPENGL_GLES31_H

namespace scapix::java_api {

namespace java::lang { class String; }
namespace java::nio { class FloatBuffer; }
namespace java::nio { class IntBuffer; }

namespace android::opengl {

class GLES31 : public object_base<SCAPIX_META_STRING("android/opengl/GLES31"),
	android::opengl::GLES30>
{
public:

	static jint GL_ACTIVE_ATOMIC_COUNTER_BUFFERS_();
	static jint GL_ACTIVE_PROGRAM_();
	static jint GL_ACTIVE_RESOURCES_();
	static jint GL_ACTIVE_VARIABLES_();
	static jint GL_ALL_BARRIER_BITS_();
	static jint GL_ALL_SHADER_BITS_();
	static jint GL_ARRAY_SIZE_();
	static jint GL_ARRAY_STRIDE_();
	static jint GL_ATOMIC_COUNTER_BARRIER_BIT_();
	static jint GL_ATOMIC_COUNTER_BUFFER_();
	static jint GL_ATOMIC_COUNTER_BUFFER_BINDING_();
	static jint GL_ATOMIC_COUNTER_BUFFER_INDEX_();
	static jint GL_ATOMIC_COUNTER_BUFFER_SIZE_();
	static jint GL_ATOMIC_COUNTER_BUFFER_START_();
	static jint GL_BLOCK_INDEX_();
	static jint GL_BUFFER_BINDING_();
	static jint GL_BUFFER_DATA_SIZE_();
	static jint GL_BUFFER_UPDATE_BARRIER_BIT_();
	static jint GL_BUFFER_VARIABLE_();
	static jint GL_COMMAND_BARRIER_BIT_();
	static jint GL_COMPUTE_SHADER_();
	static jint GL_COMPUTE_SHADER_BIT_();
	static jint GL_COMPUTE_WORK_GROUP_SIZE_();
	static jint GL_DEPTH_STENCIL_TEXTURE_MODE_();
	static jint GL_DISPATCH_INDIRECT_BUFFER_();
	static jint GL_DISPATCH_INDIRECT_BUFFER_BINDING_();
	static jint GL_DRAW_INDIRECT_BUFFER_();
	static jint GL_DRAW_INDIRECT_BUFFER_BINDING_();
	static jint GL_ELEMENT_ARRAY_BARRIER_BIT_();
	static jint GL_FRAGMENT_SHADER_BIT_();
	static jint GL_FRAMEBUFFER_BARRIER_BIT_();
	static jint GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS_();
	static jint GL_FRAMEBUFFER_DEFAULT_HEIGHT_();
	static jint GL_FRAMEBUFFER_DEFAULT_SAMPLES_();
	static jint GL_FRAMEBUFFER_DEFAULT_WIDTH_();
	static jint GL_IMAGE_2D_();
	static jint GL_IMAGE_2D_ARRAY_();
	static jint GL_IMAGE_3D_();
	static jint GL_IMAGE_BINDING_ACCESS_();
	static jint GL_IMAGE_BINDING_FORMAT_();
	static jint GL_IMAGE_BINDING_LAYER_();
	static jint GL_IMAGE_BINDING_LAYERED_();
	static jint GL_IMAGE_BINDING_LEVEL_();
	static jint GL_IMAGE_BINDING_NAME_();
	static jint GL_IMAGE_CUBE_();
	static jint GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS_();
	static jint GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE_();
	static jint GL_IMAGE_FORMAT_COMPATIBILITY_TYPE_();
	static jint GL_INT_IMAGE_2D_();
	static jint GL_INT_IMAGE_2D_ARRAY_();
	static jint GL_INT_IMAGE_3D_();
	static jint GL_INT_IMAGE_CUBE_();
	static jint GL_INT_SAMPLER_2D_MULTISAMPLE_();
	static jint GL_IS_ROW_MAJOR_();
	static jint GL_LOCATION_();
	static jint GL_MATRIX_STRIDE_();
	static jint GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS_();
	static jint GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE_();
	static jint GL_MAX_COLOR_TEXTURE_SAMPLES_();
	static jint GL_MAX_COMBINED_ATOMIC_COUNTERS_();
	static jint GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS_();
	static jint GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS_();
	static jint GL_MAX_COMBINED_IMAGE_UNIFORMS_();
	static jint GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES_();
	static jint GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS_();
	static jint GL_MAX_COMPUTE_ATOMIC_COUNTERS_();
	static jint GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS_();
	static jint GL_MAX_COMPUTE_IMAGE_UNIFORMS_();
	static jint GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS_();
	static jint GL_MAX_COMPUTE_SHARED_MEMORY_SIZE_();
	static jint GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS_();
	static jint GL_MAX_COMPUTE_UNIFORM_BLOCKS_();
	static jint GL_MAX_COMPUTE_UNIFORM_COMPONENTS_();
	static jint GL_MAX_COMPUTE_WORK_GROUP_COUNT_();
	static jint GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS_();
	static jint GL_MAX_COMPUTE_WORK_GROUP_SIZE_();
	static jint GL_MAX_DEPTH_TEXTURE_SAMPLES_();
	static jint GL_MAX_FRAGMENT_ATOMIC_COUNTERS_();
	static jint GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS_();
	static jint GL_MAX_FRAGMENT_IMAGE_UNIFORMS_();
	static jint GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS_();
	static jint GL_MAX_FRAMEBUFFER_HEIGHT_();
	static jint GL_MAX_FRAMEBUFFER_SAMPLES_();
	static jint GL_MAX_FRAMEBUFFER_WIDTH_();
	static jint GL_MAX_IMAGE_UNITS_();
	static jint GL_MAX_INTEGER_SAMPLES_();
	static jint GL_MAX_NAME_LENGTH_();
	static jint GL_MAX_NUM_ACTIVE_VARIABLES_();
	static jint GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_();
	static jint GL_MAX_SAMPLE_MASK_WORDS_();
	static jint GL_MAX_SHADER_STORAGE_BLOCK_SIZE_();
	static jint GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS_();
	static jint GL_MAX_UNIFORM_LOCATIONS_();
	static jint GL_MAX_VERTEX_ATOMIC_COUNTERS_();
	static jint GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS_();
	static jint GL_MAX_VERTEX_ATTRIB_BINDINGS_();
	static jint GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET_();
	static jint GL_MAX_VERTEX_ATTRIB_STRIDE_();
	static jint GL_MAX_VERTEX_IMAGE_UNIFORMS_();
	static jint GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS_();
	static jint GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_();
	static jint GL_NAME_LENGTH_();
	static jint GL_NUM_ACTIVE_VARIABLES_();
	static jint GL_OFFSET_();
	static jint GL_PIXEL_BUFFER_BARRIER_BIT_();
	static jint GL_PROGRAM_INPUT_();
	static jint GL_PROGRAM_OUTPUT_();
	static jint GL_PROGRAM_PIPELINE_BINDING_();
	static jint GL_PROGRAM_SEPARABLE_();
	static jint GL_READ_ONLY_();
	static jint GL_READ_WRITE_();
	static jint GL_REFERENCED_BY_COMPUTE_SHADER_();
	static jint GL_REFERENCED_BY_FRAGMENT_SHADER_();
	static jint GL_REFERENCED_BY_VERTEX_SHADER_();
	static jint GL_SAMPLER_2D_MULTISAMPLE_();
	static jint GL_SAMPLE_MASK_();
	static jint GL_SAMPLE_MASK_VALUE_();
	static jint GL_SAMPLE_POSITION_();
	static jint GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_();
	static jint GL_SHADER_STORAGE_BARRIER_BIT_();
	static jint GL_SHADER_STORAGE_BLOCK_();
	static jint GL_SHADER_STORAGE_BUFFER_();
	static jint GL_SHADER_STORAGE_BUFFER_BINDING_();
	static jint GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT_();
	static jint GL_SHADER_STORAGE_BUFFER_SIZE_();
	static jint GL_SHADER_STORAGE_BUFFER_START_();
	static jint GL_STENCIL_INDEX_();
	static jint GL_TEXTURE_2D_MULTISAMPLE_();
	static jint GL_TEXTURE_ALPHA_SIZE_();
	static jint GL_TEXTURE_ALPHA_TYPE_();
	static jint GL_TEXTURE_BINDING_2D_MULTISAMPLE_();
	static jint GL_TEXTURE_BLUE_SIZE_();
	static jint GL_TEXTURE_BLUE_TYPE_();
	static jint GL_TEXTURE_COMPRESSED_();
	static jint GL_TEXTURE_DEPTH_();
	static jint GL_TEXTURE_DEPTH_SIZE_();
	static jint GL_TEXTURE_DEPTH_TYPE_();
	static jint GL_TEXTURE_FETCH_BARRIER_BIT_();
	static jint GL_TEXTURE_FIXED_SAMPLE_LOCATIONS_();
	static jint GL_TEXTURE_GREEN_SIZE_();
	static jint GL_TEXTURE_GREEN_TYPE_();
	static jint GL_TEXTURE_HEIGHT_();
	static jint GL_TEXTURE_INTERNAL_FORMAT_();
	static jint GL_TEXTURE_RED_SIZE_();
	static jint GL_TEXTURE_RED_TYPE_();
	static jint GL_TEXTURE_SAMPLES_();
	static jint GL_TEXTURE_SHARED_SIZE_();
	static jint GL_TEXTURE_STENCIL_SIZE_();
	static jint GL_TEXTURE_UPDATE_BARRIER_BIT_();
	static jint GL_TEXTURE_WIDTH_();
	static jint GL_TOP_LEVEL_ARRAY_SIZE_();
	static jint GL_TOP_LEVEL_ARRAY_STRIDE_();
	static jint GL_TRANSFORM_FEEDBACK_BARRIER_BIT_();
	static jint GL_TRANSFORM_FEEDBACK_VARYING_();
	static jint GL_TYPE_();
	static jint GL_UNIFORM_();
	static jint GL_UNIFORM_BARRIER_BIT_();
	static jint GL_UNIFORM_BLOCK_();
	static jint GL_UNSIGNED_INT_ATOMIC_COUNTER_();
	static jint GL_UNSIGNED_INT_IMAGE_2D_();
	static jint GL_UNSIGNED_INT_IMAGE_2D_ARRAY_();
	static jint GL_UNSIGNED_INT_IMAGE_3D_();
	static jint GL_UNSIGNED_INT_IMAGE_CUBE_();
	static jint GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_();
	static jint GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_();
	static jint GL_VERTEX_ATTRIB_BINDING_();
	static jint GL_VERTEX_ATTRIB_RELATIVE_OFFSET_();
	static jint GL_VERTEX_BINDING_BUFFER_();
	static jint GL_VERTEX_BINDING_DIVISOR_();
	static jint GL_VERTEX_BINDING_OFFSET_();
	static jint GL_VERTEX_BINDING_STRIDE_();
	static jint GL_VERTEX_SHADER_BIT_();
	static jint GL_WRITE_ONLY_();

	static void glDispatchCompute(jint p1, jint p2, jint p3);
	static void glDispatchComputeIndirect(jlong p1);
	static void glDrawArraysIndirect(jint p1, jlong p2);
	static void glDrawElementsIndirect(jint p1, jint p2, jlong p3);
	static void glFramebufferParameteri(jint p1, jint p2, jint p3);
	static void glGetFramebufferParameteriv(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4);
	static void glGetFramebufferParameteriv(jint p1, jint p2, ref<java::nio::IntBuffer> p3);
	static void glGetProgramInterfaceiv(jint p1, jint p2, jint p3, ref<link::java::array<jint>> p4, jint p5);
	static void glGetProgramInterfaceiv(jint p1, jint p2, jint p3, ref<java::nio::IntBuffer> p4);
	static jint glGetProgramResourceIndex(jint p1, jint p2, ref<java::lang::String> p3);
	static ref<java::lang::String> glGetProgramResourceName(jint p1, jint p2, jint p3);
	static void glGetProgramResourceiv(jint p1, jint p2, jint p3, jint p4, ref<link::java::array<jint>> p5, jint p6, jint p7, ref<link::java::array<jint>> p8, jint p9, ref<link::java::array<jint>> p10, jint p11);
	static void glGetProgramResourceiv(jint p1, jint p2, jint p3, jint p4, ref<java::nio::IntBuffer> p5, jint p6, ref<java::nio::IntBuffer> p7, ref<java::nio::IntBuffer> p8);
	static jint glGetProgramResourceLocation(jint p1, jint p2, ref<java::lang::String> p3);
	static void glUseProgramStages(jint p1, jint p2, jint p3);
	static void glActiveShaderProgram(jint p1, jint p2);
	static jint glCreateShaderProgramv(jint p1, ref<link::java::array<java::lang::String>> p2);
	static void glBindProgramPipeline(jint p1);
	static void glDeleteProgramPipelines(jint p1, ref<link::java::array<jint>> p2, jint p3);
	static void glDeleteProgramPipelines(jint p1, ref<java::nio::IntBuffer> p2);
	static void glGenProgramPipelines(jint p1, ref<link::java::array<jint>> p2, jint p3);
	static void glGenProgramPipelines(jint p1, ref<java::nio::IntBuffer> p2);
	static jboolean glIsProgramPipeline(jint p1);
	static void glGetProgramPipelineiv(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4);
	static void glGetProgramPipelineiv(jint p1, jint p2, ref<java::nio::IntBuffer> p3);
	static void glProgramUniform1i(jint p1, jint p2, jint p3);
	static void glProgramUniform2i(jint p1, jint p2, jint p3, jint p4);
	static void glProgramUniform3i(jint p1, jint p2, jint p3, jint p4, jint p5);
	static void glProgramUniform4i(jint p1, jint p2, jint p3, jint p4, jint p5, jint p6);
	static void glProgramUniform1ui(jint p1, jint p2, jint p3);
	static void glProgramUniform2ui(jint p1, jint p2, jint p3, jint p4);
	static void glProgramUniform3ui(jint p1, jint p2, jint p3, jint p4, jint p5);
	static void glProgramUniform4ui(jint p1, jint p2, jint p3, jint p4, jint p5, jint p6);
	static void glProgramUniform1f(jint p1, jint p2, jfloat p3);
	static void glProgramUniform2f(jint p1, jint p2, jfloat p3, jfloat p4);
	static void glProgramUniform3f(jint p1, jint p2, jfloat p3, jfloat p4, jfloat p5);
	static void glProgramUniform4f(jint p1, jint p2, jfloat p3, jfloat p4, jfloat p5, jfloat p6);
	static void glProgramUniform1iv(jint p1, jint p2, jint p3, ref<link::java::array<jint>> p4, jint p5);
	static void glProgramUniform1iv(jint p1, jint p2, jint p3, ref<java::nio::IntBuffer> p4);
	static void glProgramUniform2iv(jint p1, jint p2, jint p3, ref<link::java::array<jint>> p4, jint p5);
	static void glProgramUniform2iv(jint p1, jint p2, jint p3, ref<java::nio::IntBuffer> p4);
	static void glProgramUniform3iv(jint p1, jint p2, jint p3, ref<link::java::array<jint>> p4, jint p5);
	static void glProgramUniform3iv(jint p1, jint p2, jint p3, ref<java::nio::IntBuffer> p4);
	static void glProgramUniform4iv(jint p1, jint p2, jint p3, ref<link::java::array<jint>> p4, jint p5);
	static void glProgramUniform4iv(jint p1, jint p2, jint p3, ref<java::nio::IntBuffer> p4);
	static void glProgramUniform1uiv(jint p1, jint p2, jint p3, ref<link::java::array<jint>> p4, jint p5);
	static void glProgramUniform1uiv(jint p1, jint p2, jint p3, ref<java::nio::IntBuffer> p4);
	static void glProgramUniform2uiv(jint p1, jint p2, jint p3, ref<link::java::array<jint>> p4, jint p5);
	static void glProgramUniform2uiv(jint p1, jint p2, jint p3, ref<java::nio::IntBuffer> p4);
	static void glProgramUniform3uiv(jint p1, jint p2, jint p3, ref<link::java::array<jint>> p4, jint p5);
	static void glProgramUniform3uiv(jint p1, jint p2, jint p3, ref<java::nio::IntBuffer> p4);
	static void glProgramUniform4uiv(jint p1, jint p2, jint p3, ref<link::java::array<jint>> p4, jint p5);
	static void glProgramUniform4uiv(jint p1, jint p2, jint p3, ref<java::nio::IntBuffer> p4);
	static void glProgramUniform1fv(jint p1, jint p2, jint p3, ref<link::java::array<jfloat>> p4, jint p5);
	static void glProgramUniform1fv(jint p1, jint p2, jint p3, ref<java::nio::FloatBuffer> p4);
	static void glProgramUniform2fv(jint p1, jint p2, jint p3, ref<link::java::array<jfloat>> p4, jint p5);
	static void glProgramUniform2fv(jint p1, jint p2, jint p3, ref<java::nio::FloatBuffer> p4);
	static void glProgramUniform3fv(jint p1, jint p2, jint p3, ref<link::java::array<jfloat>> p4, jint p5);
	static void glProgramUniform3fv(jint p1, jint p2, jint p3, ref<java::nio::FloatBuffer> p4);
	static void glProgramUniform4fv(jint p1, jint p2, jint p3, ref<link::java::array<jfloat>> p4, jint p5);
	static void glProgramUniform4fv(jint p1, jint p2, jint p3, ref<java::nio::FloatBuffer> p4);
	static void glProgramUniformMatrix2fv(jint p1, jint p2, jint p3, jboolean p4, ref<link::java::array<jfloat>> p5, jint p6);
	static void glProgramUniformMatrix2fv(jint p1, jint p2, jint p3, jboolean p4, ref<java::nio::FloatBuffer> p5);
	static void glProgramUniformMatrix3fv(jint p1, jint p2, jint p3, jboolean p4, ref<link::java::array<jfloat>> p5, jint p6);
	static void glProgramUniformMatrix3fv(jint p1, jint p2, jint p3, jboolean p4, ref<java::nio::FloatBuffer> p5);
	static void glProgramUniformMatrix4fv(jint p1, jint p2, jint p3, jboolean p4, ref<link::java::array<jfloat>> p5, jint p6);
	static void glProgramUniformMatrix4fv(jint p1, jint p2, jint p3, jboolean p4, ref<java::nio::FloatBuffer> p5);
	static void glProgramUniformMatrix2x3fv(jint p1, jint p2, jint p3, jboolean p4, ref<link::java::array<jfloat>> p5, jint p6);
	static void glProgramUniformMatrix2x3fv(jint p1, jint p2, jint p3, jboolean p4, ref<java::nio::FloatBuffer> p5);
	static void glProgramUniformMatrix3x2fv(jint p1, jint p2, jint p3, jboolean p4, ref<link::java::array<jfloat>> p5, jint p6);
	static void glProgramUniformMatrix3x2fv(jint p1, jint p2, jint p3, jboolean p4, ref<java::nio::FloatBuffer> p5);
	static void glProgramUniformMatrix2x4fv(jint p1, jint p2, jint p3, jboolean p4, ref<link::java::array<jfloat>> p5, jint p6);
	static void glProgramUniformMatrix2x4fv(jint p1, jint p2, jint p3, jboolean p4, ref<java::nio::FloatBuffer> p5);
	static void glProgramUniformMatrix4x2fv(jint p1, jint p2, jint p3, jboolean p4, ref<link::java::array<jfloat>> p5, jint p6);
	static void glProgramUniformMatrix4x2fv(jint p1, jint p2, jint p3, jboolean p4, ref<java::nio::FloatBuffer> p5);
	static void glProgramUniformMatrix3x4fv(jint p1, jint p2, jint p3, jboolean p4, ref<link::java::array<jfloat>> p5, jint p6);
	static void glProgramUniformMatrix3x4fv(jint p1, jint p2, jint p3, jboolean p4, ref<java::nio::FloatBuffer> p5);
	static void glProgramUniformMatrix4x3fv(jint p1, jint p2, jint p3, jboolean p4, ref<link::java::array<jfloat>> p5, jint p6);
	static void glProgramUniformMatrix4x3fv(jint p1, jint p2, jint p3, jboolean p4, ref<java::nio::FloatBuffer> p5);
	static void glValidateProgramPipeline(jint p1);
	static ref<java::lang::String> glGetProgramPipelineInfoLog(jint p1);
	static void glBindImageTexture(jint p1, jint p2, jint p3, jboolean p4, jint p5, jint p6, jint p7);
	static void glGetBooleani_v(jint p1, jint p2, ref<link::java::array<jboolean>> p3, jint p4);
	static void glGetBooleani_v(jint p1, jint p2, ref<java::nio::IntBuffer> p3);
	static void glMemoryBarrier(jint p1);
	static void glMemoryBarrierByRegion(jint p1);
	static void glTexStorage2DMultisample(jint p1, jint p2, jint p3, jint p4, jint p5, jboolean p6);
	static void glGetMultisamplefv(jint p1, jint p2, ref<link::java::array<jfloat>> p3, jint p4);
	static void glGetMultisamplefv(jint p1, jint p2, ref<java::nio::FloatBuffer> p3);
	static void glSampleMaski(jint p1, jint p2);
	static void glGetTexLevelParameteriv(jint p1, jint p2, jint p3, ref<link::java::array<jint>> p4, jint p5);
	static void glGetTexLevelParameteriv(jint p1, jint p2, jint p3, ref<java::nio::IntBuffer> p4);
	static void glGetTexLevelParameterfv(jint p1, jint p2, jint p3, ref<link::java::array<jfloat>> p4, jint p5);
	static void glGetTexLevelParameterfv(jint p1, jint p2, jint p3, ref<java::nio::FloatBuffer> p4);
	static void glBindVertexBuffer(jint p1, jint p2, jlong p3, jint p4);
	static void glVertexAttribFormat(jint p1, jint p2, jint p3, jboolean p4, jint p5);
	static void glVertexAttribIFormat(jint p1, jint p2, jint p3, jint p4);
	static void glVertexAttribBinding(jint p1, jint p2);
	static void glVertexBindingDivisor(jint p1, jint p2);

protected:

	GLES31(handle_type h) : base_(h) {}

};

} // namespace android::opengl
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/nio/FloatBuffer.h>
#include <scapix/java_api/java/nio/IntBuffer.h>

namespace scapix::java_api {
namespace android::opengl {

inline jint GLES31::GL_ACTIVE_ATOMIC_COUNTER_BUFFERS_() { return get_static_field<SCAPIX_META_STRING("GL_ACTIVE_ATOMIC_COUNTER_BUFFERS"), jint>(); }
inline jint GLES31::GL_ACTIVE_PROGRAM_() { return get_static_field<SCAPIX_META_STRING("GL_ACTIVE_PROGRAM"), jint>(); }
inline jint GLES31::GL_ACTIVE_RESOURCES_() { return get_static_field<SCAPIX_META_STRING("GL_ACTIVE_RESOURCES"), jint>(); }
inline jint GLES31::GL_ACTIVE_VARIABLES_() { return get_static_field<SCAPIX_META_STRING("GL_ACTIVE_VARIABLES"), jint>(); }
inline jint GLES31::GL_ALL_BARRIER_BITS_() { return get_static_field<SCAPIX_META_STRING("GL_ALL_BARRIER_BITS"), jint>(); }
inline jint GLES31::GL_ALL_SHADER_BITS_() { return get_static_field<SCAPIX_META_STRING("GL_ALL_SHADER_BITS"), jint>(); }
inline jint GLES31::GL_ARRAY_SIZE_() { return get_static_field<SCAPIX_META_STRING("GL_ARRAY_SIZE"), jint>(); }
inline jint GLES31::GL_ARRAY_STRIDE_() { return get_static_field<SCAPIX_META_STRING("GL_ARRAY_STRIDE"), jint>(); }
inline jint GLES31::GL_ATOMIC_COUNTER_BARRIER_BIT_() { return get_static_field<SCAPIX_META_STRING("GL_ATOMIC_COUNTER_BARRIER_BIT"), jint>(); }
inline jint GLES31::GL_ATOMIC_COUNTER_BUFFER_() { return get_static_field<SCAPIX_META_STRING("GL_ATOMIC_COUNTER_BUFFER"), jint>(); }
inline jint GLES31::GL_ATOMIC_COUNTER_BUFFER_BINDING_() { return get_static_field<SCAPIX_META_STRING("GL_ATOMIC_COUNTER_BUFFER_BINDING"), jint>(); }
inline jint GLES31::GL_ATOMIC_COUNTER_BUFFER_INDEX_() { return get_static_field<SCAPIX_META_STRING("GL_ATOMIC_COUNTER_BUFFER_INDEX"), jint>(); }
inline jint GLES31::GL_ATOMIC_COUNTER_BUFFER_SIZE_() { return get_static_field<SCAPIX_META_STRING("GL_ATOMIC_COUNTER_BUFFER_SIZE"), jint>(); }
inline jint GLES31::GL_ATOMIC_COUNTER_BUFFER_START_() { return get_static_field<SCAPIX_META_STRING("GL_ATOMIC_COUNTER_BUFFER_START"), jint>(); }
inline jint GLES31::GL_BLOCK_INDEX_() { return get_static_field<SCAPIX_META_STRING("GL_BLOCK_INDEX"), jint>(); }
inline jint GLES31::GL_BUFFER_BINDING_() { return get_static_field<SCAPIX_META_STRING("GL_BUFFER_BINDING"), jint>(); }
inline jint GLES31::GL_BUFFER_DATA_SIZE_() { return get_static_field<SCAPIX_META_STRING("GL_BUFFER_DATA_SIZE"), jint>(); }
inline jint GLES31::GL_BUFFER_UPDATE_BARRIER_BIT_() { return get_static_field<SCAPIX_META_STRING("GL_BUFFER_UPDATE_BARRIER_BIT"), jint>(); }
inline jint GLES31::GL_BUFFER_VARIABLE_() { return get_static_field<SCAPIX_META_STRING("GL_BUFFER_VARIABLE"), jint>(); }
inline jint GLES31::GL_COMMAND_BARRIER_BIT_() { return get_static_field<SCAPIX_META_STRING("GL_COMMAND_BARRIER_BIT"), jint>(); }
inline jint GLES31::GL_COMPUTE_SHADER_() { return get_static_field<SCAPIX_META_STRING("GL_COMPUTE_SHADER"), jint>(); }
inline jint GLES31::GL_COMPUTE_SHADER_BIT_() { return get_static_field<SCAPIX_META_STRING("GL_COMPUTE_SHADER_BIT"), jint>(); }
inline jint GLES31::GL_COMPUTE_WORK_GROUP_SIZE_() { return get_static_field<SCAPIX_META_STRING("GL_COMPUTE_WORK_GROUP_SIZE"), jint>(); }
inline jint GLES31::GL_DEPTH_STENCIL_TEXTURE_MODE_() { return get_static_field<SCAPIX_META_STRING("GL_DEPTH_STENCIL_TEXTURE_MODE"), jint>(); }
inline jint GLES31::GL_DISPATCH_INDIRECT_BUFFER_() { return get_static_field<SCAPIX_META_STRING("GL_DISPATCH_INDIRECT_BUFFER"), jint>(); }
inline jint GLES31::GL_DISPATCH_INDIRECT_BUFFER_BINDING_() { return get_static_field<SCAPIX_META_STRING("GL_DISPATCH_INDIRECT_BUFFER_BINDING"), jint>(); }
inline jint GLES31::GL_DRAW_INDIRECT_BUFFER_() { return get_static_field<SCAPIX_META_STRING("GL_DRAW_INDIRECT_BUFFER"), jint>(); }
inline jint GLES31::GL_DRAW_INDIRECT_BUFFER_BINDING_() { return get_static_field<SCAPIX_META_STRING("GL_DRAW_INDIRECT_BUFFER_BINDING"), jint>(); }
inline jint GLES31::GL_ELEMENT_ARRAY_BARRIER_BIT_() { return get_static_field<SCAPIX_META_STRING("GL_ELEMENT_ARRAY_BARRIER_BIT"), jint>(); }
inline jint GLES31::GL_FRAGMENT_SHADER_BIT_() { return get_static_field<SCAPIX_META_STRING("GL_FRAGMENT_SHADER_BIT"), jint>(); }
inline jint GLES31::GL_FRAMEBUFFER_BARRIER_BIT_() { return get_static_field<SCAPIX_META_STRING("GL_FRAMEBUFFER_BARRIER_BIT"), jint>(); }
inline jint GLES31::GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS_() { return get_static_field<SCAPIX_META_STRING("GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS"), jint>(); }
inline jint GLES31::GL_FRAMEBUFFER_DEFAULT_HEIGHT_() { return get_static_field<SCAPIX_META_STRING("GL_FRAMEBUFFER_DEFAULT_HEIGHT"), jint>(); }
inline jint GLES31::GL_FRAMEBUFFER_DEFAULT_SAMPLES_() { return get_static_field<SCAPIX_META_STRING("GL_FRAMEBUFFER_DEFAULT_SAMPLES"), jint>(); }
inline jint GLES31::GL_FRAMEBUFFER_DEFAULT_WIDTH_() { return get_static_field<SCAPIX_META_STRING("GL_FRAMEBUFFER_DEFAULT_WIDTH"), jint>(); }
inline jint GLES31::GL_IMAGE_2D_() { return get_static_field<SCAPIX_META_STRING("GL_IMAGE_2D"), jint>(); }
inline jint GLES31::GL_IMAGE_2D_ARRAY_() { return get_static_field<SCAPIX_META_STRING("GL_IMAGE_2D_ARRAY"), jint>(); }
inline jint GLES31::GL_IMAGE_3D_() { return get_static_field<SCAPIX_META_STRING("GL_IMAGE_3D"), jint>(); }
inline jint GLES31::GL_IMAGE_BINDING_ACCESS_() { return get_static_field<SCAPIX_META_STRING("GL_IMAGE_BINDING_ACCESS"), jint>(); }
inline jint GLES31::GL_IMAGE_BINDING_FORMAT_() { return get_static_field<SCAPIX_META_STRING("GL_IMAGE_BINDING_FORMAT"), jint>(); }
inline jint GLES31::GL_IMAGE_BINDING_LAYER_() { return get_static_field<SCAPIX_META_STRING("GL_IMAGE_BINDING_LAYER"), jint>(); }
inline jint GLES31::GL_IMAGE_BINDING_LAYERED_() { return get_static_field<SCAPIX_META_STRING("GL_IMAGE_BINDING_LAYERED"), jint>(); }
inline jint GLES31::GL_IMAGE_BINDING_LEVEL_() { return get_static_field<SCAPIX_META_STRING("GL_IMAGE_BINDING_LEVEL"), jint>(); }
inline jint GLES31::GL_IMAGE_BINDING_NAME_() { return get_static_field<SCAPIX_META_STRING("GL_IMAGE_BINDING_NAME"), jint>(); }
inline jint GLES31::GL_IMAGE_CUBE_() { return get_static_field<SCAPIX_META_STRING("GL_IMAGE_CUBE"), jint>(); }
inline jint GLES31::GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS_() { return get_static_field<SCAPIX_META_STRING("GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS"), jint>(); }
inline jint GLES31::GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE_() { return get_static_field<SCAPIX_META_STRING("GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE"), jint>(); }
inline jint GLES31::GL_IMAGE_FORMAT_COMPATIBILITY_TYPE_() { return get_static_field<SCAPIX_META_STRING("GL_IMAGE_FORMAT_COMPATIBILITY_TYPE"), jint>(); }
inline jint GLES31::GL_INT_IMAGE_2D_() { return get_static_field<SCAPIX_META_STRING("GL_INT_IMAGE_2D"), jint>(); }
inline jint GLES31::GL_INT_IMAGE_2D_ARRAY_() { return get_static_field<SCAPIX_META_STRING("GL_INT_IMAGE_2D_ARRAY"), jint>(); }
inline jint GLES31::GL_INT_IMAGE_3D_() { return get_static_field<SCAPIX_META_STRING("GL_INT_IMAGE_3D"), jint>(); }
inline jint GLES31::GL_INT_IMAGE_CUBE_() { return get_static_field<SCAPIX_META_STRING("GL_INT_IMAGE_CUBE"), jint>(); }
inline jint GLES31::GL_INT_SAMPLER_2D_MULTISAMPLE_() { return get_static_field<SCAPIX_META_STRING("GL_INT_SAMPLER_2D_MULTISAMPLE"), jint>(); }
inline jint GLES31::GL_IS_ROW_MAJOR_() { return get_static_field<SCAPIX_META_STRING("GL_IS_ROW_MAJOR"), jint>(); }
inline jint GLES31::GL_LOCATION_() { return get_static_field<SCAPIX_META_STRING("GL_LOCATION"), jint>(); }
inline jint GLES31::GL_MATRIX_STRIDE_() { return get_static_field<SCAPIX_META_STRING("GL_MATRIX_STRIDE"), jint>(); }
inline jint GLES31::GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS"), jint>(); }
inline jint GLES31::GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE"), jint>(); }
inline jint GLES31::GL_MAX_COLOR_TEXTURE_SAMPLES_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_COLOR_TEXTURE_SAMPLES"), jint>(); }
inline jint GLES31::GL_MAX_COMBINED_ATOMIC_COUNTERS_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_COMBINED_ATOMIC_COUNTERS"), jint>(); }
inline jint GLES31::GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS"), jint>(); }
inline jint GLES31::GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS"), jint>(); }
inline jint GLES31::GL_MAX_COMBINED_IMAGE_UNIFORMS_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_COMBINED_IMAGE_UNIFORMS"), jint>(); }
inline jint GLES31::GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES"), jint>(); }
inline jint GLES31::GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS"), jint>(); }
inline jint GLES31::GL_MAX_COMPUTE_ATOMIC_COUNTERS_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_COMPUTE_ATOMIC_COUNTERS"), jint>(); }
inline jint GLES31::GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS"), jint>(); }
inline jint GLES31::GL_MAX_COMPUTE_IMAGE_UNIFORMS_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_COMPUTE_IMAGE_UNIFORMS"), jint>(); }
inline jint GLES31::GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS"), jint>(); }
inline jint GLES31::GL_MAX_COMPUTE_SHARED_MEMORY_SIZE_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_COMPUTE_SHARED_MEMORY_SIZE"), jint>(); }
inline jint GLES31::GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS"), jint>(); }
inline jint GLES31::GL_MAX_COMPUTE_UNIFORM_BLOCKS_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_COMPUTE_UNIFORM_BLOCKS"), jint>(); }
inline jint GLES31::GL_MAX_COMPUTE_UNIFORM_COMPONENTS_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_COMPUTE_UNIFORM_COMPONENTS"), jint>(); }
inline jint GLES31::GL_MAX_COMPUTE_WORK_GROUP_COUNT_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_COMPUTE_WORK_GROUP_COUNT"), jint>(); }
inline jint GLES31::GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS"), jint>(); }
inline jint GLES31::GL_MAX_COMPUTE_WORK_GROUP_SIZE_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_COMPUTE_WORK_GROUP_SIZE"), jint>(); }
inline jint GLES31::GL_MAX_DEPTH_TEXTURE_SAMPLES_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_DEPTH_TEXTURE_SAMPLES"), jint>(); }
inline jint GLES31::GL_MAX_FRAGMENT_ATOMIC_COUNTERS_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_FRAGMENT_ATOMIC_COUNTERS"), jint>(); }
inline jint GLES31::GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS"), jint>(); }
inline jint GLES31::GL_MAX_FRAGMENT_IMAGE_UNIFORMS_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_FRAGMENT_IMAGE_UNIFORMS"), jint>(); }
inline jint GLES31::GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS"), jint>(); }
inline jint GLES31::GL_MAX_FRAMEBUFFER_HEIGHT_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_FRAMEBUFFER_HEIGHT"), jint>(); }
inline jint GLES31::GL_MAX_FRAMEBUFFER_SAMPLES_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_FRAMEBUFFER_SAMPLES"), jint>(); }
inline jint GLES31::GL_MAX_FRAMEBUFFER_WIDTH_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_FRAMEBUFFER_WIDTH"), jint>(); }
inline jint GLES31::GL_MAX_IMAGE_UNITS_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_IMAGE_UNITS"), jint>(); }
inline jint GLES31::GL_MAX_INTEGER_SAMPLES_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_INTEGER_SAMPLES"), jint>(); }
inline jint GLES31::GL_MAX_NAME_LENGTH_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_NAME_LENGTH"), jint>(); }
inline jint GLES31::GL_MAX_NUM_ACTIVE_VARIABLES_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_NUM_ACTIVE_VARIABLES"), jint>(); }
inline jint GLES31::GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET"), jint>(); }
inline jint GLES31::GL_MAX_SAMPLE_MASK_WORDS_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_SAMPLE_MASK_WORDS"), jint>(); }
inline jint GLES31::GL_MAX_SHADER_STORAGE_BLOCK_SIZE_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_SHADER_STORAGE_BLOCK_SIZE"), jint>(); }
inline jint GLES31::GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS"), jint>(); }
inline jint GLES31::GL_MAX_UNIFORM_LOCATIONS_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_UNIFORM_LOCATIONS"), jint>(); }
inline jint GLES31::GL_MAX_VERTEX_ATOMIC_COUNTERS_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_VERTEX_ATOMIC_COUNTERS"), jint>(); }
inline jint GLES31::GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS"), jint>(); }
inline jint GLES31::GL_MAX_VERTEX_ATTRIB_BINDINGS_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_VERTEX_ATTRIB_BINDINGS"), jint>(); }
inline jint GLES31::GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET"), jint>(); }
inline jint GLES31::GL_MAX_VERTEX_ATTRIB_STRIDE_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_VERTEX_ATTRIB_STRIDE"), jint>(); }
inline jint GLES31::GL_MAX_VERTEX_IMAGE_UNIFORMS_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_VERTEX_IMAGE_UNIFORMS"), jint>(); }
inline jint GLES31::GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS"), jint>(); }
inline jint GLES31::GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_() { return get_static_field<SCAPIX_META_STRING("GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET"), jint>(); }
inline jint GLES31::GL_NAME_LENGTH_() { return get_static_field<SCAPIX_META_STRING("GL_NAME_LENGTH"), jint>(); }
inline jint GLES31::GL_NUM_ACTIVE_VARIABLES_() { return get_static_field<SCAPIX_META_STRING("GL_NUM_ACTIVE_VARIABLES"), jint>(); }
inline jint GLES31::GL_OFFSET_() { return get_static_field<SCAPIX_META_STRING("GL_OFFSET"), jint>(); }
inline jint GLES31::GL_PIXEL_BUFFER_BARRIER_BIT_() { return get_static_field<SCAPIX_META_STRING("GL_PIXEL_BUFFER_BARRIER_BIT"), jint>(); }
inline jint GLES31::GL_PROGRAM_INPUT_() { return get_static_field<SCAPIX_META_STRING("GL_PROGRAM_INPUT"), jint>(); }
inline jint GLES31::GL_PROGRAM_OUTPUT_() { return get_static_field<SCAPIX_META_STRING("GL_PROGRAM_OUTPUT"), jint>(); }
inline jint GLES31::GL_PROGRAM_PIPELINE_BINDING_() { return get_static_field<SCAPIX_META_STRING("GL_PROGRAM_PIPELINE_BINDING"), jint>(); }
inline jint GLES31::GL_PROGRAM_SEPARABLE_() { return get_static_field<SCAPIX_META_STRING("GL_PROGRAM_SEPARABLE"), jint>(); }
inline jint GLES31::GL_READ_ONLY_() { return get_static_field<SCAPIX_META_STRING("GL_READ_ONLY"), jint>(); }
inline jint GLES31::GL_READ_WRITE_() { return get_static_field<SCAPIX_META_STRING("GL_READ_WRITE"), jint>(); }
inline jint GLES31::GL_REFERENCED_BY_COMPUTE_SHADER_() { return get_static_field<SCAPIX_META_STRING("GL_REFERENCED_BY_COMPUTE_SHADER"), jint>(); }
inline jint GLES31::GL_REFERENCED_BY_FRAGMENT_SHADER_() { return get_static_field<SCAPIX_META_STRING("GL_REFERENCED_BY_FRAGMENT_SHADER"), jint>(); }
inline jint GLES31::GL_REFERENCED_BY_VERTEX_SHADER_() { return get_static_field<SCAPIX_META_STRING("GL_REFERENCED_BY_VERTEX_SHADER"), jint>(); }
inline jint GLES31::GL_SAMPLER_2D_MULTISAMPLE_() { return get_static_field<SCAPIX_META_STRING("GL_SAMPLER_2D_MULTISAMPLE"), jint>(); }
inline jint GLES31::GL_SAMPLE_MASK_() { return get_static_field<SCAPIX_META_STRING("GL_SAMPLE_MASK"), jint>(); }
inline jint GLES31::GL_SAMPLE_MASK_VALUE_() { return get_static_field<SCAPIX_META_STRING("GL_SAMPLE_MASK_VALUE"), jint>(); }
inline jint GLES31::GL_SAMPLE_POSITION_() { return get_static_field<SCAPIX_META_STRING("GL_SAMPLE_POSITION"), jint>(); }
inline jint GLES31::GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_() { return get_static_field<SCAPIX_META_STRING("GL_SHADER_IMAGE_ACCESS_BARRIER_BIT"), jint>(); }
inline jint GLES31::GL_SHADER_STORAGE_BARRIER_BIT_() { return get_static_field<SCAPIX_META_STRING("GL_SHADER_STORAGE_BARRIER_BIT"), jint>(); }
inline jint GLES31::GL_SHADER_STORAGE_BLOCK_() { return get_static_field<SCAPIX_META_STRING("GL_SHADER_STORAGE_BLOCK"), jint>(); }
inline jint GLES31::GL_SHADER_STORAGE_BUFFER_() { return get_static_field<SCAPIX_META_STRING("GL_SHADER_STORAGE_BUFFER"), jint>(); }
inline jint GLES31::GL_SHADER_STORAGE_BUFFER_BINDING_() { return get_static_field<SCAPIX_META_STRING("GL_SHADER_STORAGE_BUFFER_BINDING"), jint>(); }
inline jint GLES31::GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT_() { return get_static_field<SCAPIX_META_STRING("GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT"), jint>(); }
inline jint GLES31::GL_SHADER_STORAGE_BUFFER_SIZE_() { return get_static_field<SCAPIX_META_STRING("GL_SHADER_STORAGE_BUFFER_SIZE"), jint>(); }
inline jint GLES31::GL_SHADER_STORAGE_BUFFER_START_() { return get_static_field<SCAPIX_META_STRING("GL_SHADER_STORAGE_BUFFER_START"), jint>(); }
inline jint GLES31::GL_STENCIL_INDEX_() { return get_static_field<SCAPIX_META_STRING("GL_STENCIL_INDEX"), jint>(); }
inline jint GLES31::GL_TEXTURE_2D_MULTISAMPLE_() { return get_static_field<SCAPIX_META_STRING("GL_TEXTURE_2D_MULTISAMPLE"), jint>(); }
inline jint GLES31::GL_TEXTURE_ALPHA_SIZE_() { return get_static_field<SCAPIX_META_STRING("GL_TEXTURE_ALPHA_SIZE"), jint>(); }
inline jint GLES31::GL_TEXTURE_ALPHA_TYPE_() { return get_static_field<SCAPIX_META_STRING("GL_TEXTURE_ALPHA_TYPE"), jint>(); }
inline jint GLES31::GL_TEXTURE_BINDING_2D_MULTISAMPLE_() { return get_static_field<SCAPIX_META_STRING("GL_TEXTURE_BINDING_2D_MULTISAMPLE"), jint>(); }
inline jint GLES31::GL_TEXTURE_BLUE_SIZE_() { return get_static_field<SCAPIX_META_STRING("GL_TEXTURE_BLUE_SIZE"), jint>(); }
inline jint GLES31::GL_TEXTURE_BLUE_TYPE_() { return get_static_field<SCAPIX_META_STRING("GL_TEXTURE_BLUE_TYPE"), jint>(); }
inline jint GLES31::GL_TEXTURE_COMPRESSED_() { return get_static_field<SCAPIX_META_STRING("GL_TEXTURE_COMPRESSED"), jint>(); }
inline jint GLES31::GL_TEXTURE_DEPTH_() { return get_static_field<SCAPIX_META_STRING("GL_TEXTURE_DEPTH"), jint>(); }
inline jint GLES31::GL_TEXTURE_DEPTH_SIZE_() { return get_static_field<SCAPIX_META_STRING("GL_TEXTURE_DEPTH_SIZE"), jint>(); }
inline jint GLES31::GL_TEXTURE_DEPTH_TYPE_() { return get_static_field<SCAPIX_META_STRING("GL_TEXTURE_DEPTH_TYPE"), jint>(); }
inline jint GLES31::GL_TEXTURE_FETCH_BARRIER_BIT_() { return get_static_field<SCAPIX_META_STRING("GL_TEXTURE_FETCH_BARRIER_BIT"), jint>(); }
inline jint GLES31::GL_TEXTURE_FIXED_SAMPLE_LOCATIONS_() { return get_static_field<SCAPIX_META_STRING("GL_TEXTURE_FIXED_SAMPLE_LOCATIONS"), jint>(); }
inline jint GLES31::GL_TEXTURE_GREEN_SIZE_() { return get_static_field<SCAPIX_META_STRING("GL_TEXTURE_GREEN_SIZE"), jint>(); }
inline jint GLES31::GL_TEXTURE_GREEN_TYPE_() { return get_static_field<SCAPIX_META_STRING("GL_TEXTURE_GREEN_TYPE"), jint>(); }
inline jint GLES31::GL_TEXTURE_HEIGHT_() { return get_static_field<SCAPIX_META_STRING("GL_TEXTURE_HEIGHT"), jint>(); }
inline jint GLES31::GL_TEXTURE_INTERNAL_FORMAT_() { return get_static_field<SCAPIX_META_STRING("GL_TEXTURE_INTERNAL_FORMAT"), jint>(); }
inline jint GLES31::GL_TEXTURE_RED_SIZE_() { return get_static_field<SCAPIX_META_STRING("GL_TEXTURE_RED_SIZE"), jint>(); }
inline jint GLES31::GL_TEXTURE_RED_TYPE_() { return get_static_field<SCAPIX_META_STRING("GL_TEXTURE_RED_TYPE"), jint>(); }
inline jint GLES31::GL_TEXTURE_SAMPLES_() { return get_static_field<SCAPIX_META_STRING("GL_TEXTURE_SAMPLES"), jint>(); }
inline jint GLES31::GL_TEXTURE_SHARED_SIZE_() { return get_static_field<SCAPIX_META_STRING("GL_TEXTURE_SHARED_SIZE"), jint>(); }
inline jint GLES31::GL_TEXTURE_STENCIL_SIZE_() { return get_static_field<SCAPIX_META_STRING("GL_TEXTURE_STENCIL_SIZE"), jint>(); }
inline jint GLES31::GL_TEXTURE_UPDATE_BARRIER_BIT_() { return get_static_field<SCAPIX_META_STRING("GL_TEXTURE_UPDATE_BARRIER_BIT"), jint>(); }
inline jint GLES31::GL_TEXTURE_WIDTH_() { return get_static_field<SCAPIX_META_STRING("GL_TEXTURE_WIDTH"), jint>(); }
inline jint GLES31::GL_TOP_LEVEL_ARRAY_SIZE_() { return get_static_field<SCAPIX_META_STRING("GL_TOP_LEVEL_ARRAY_SIZE"), jint>(); }
inline jint GLES31::GL_TOP_LEVEL_ARRAY_STRIDE_() { return get_static_field<SCAPIX_META_STRING("GL_TOP_LEVEL_ARRAY_STRIDE"), jint>(); }
inline jint GLES31::GL_TRANSFORM_FEEDBACK_BARRIER_BIT_() { return get_static_field<SCAPIX_META_STRING("GL_TRANSFORM_FEEDBACK_BARRIER_BIT"), jint>(); }
inline jint GLES31::GL_TRANSFORM_FEEDBACK_VARYING_() { return get_static_field<SCAPIX_META_STRING("GL_TRANSFORM_FEEDBACK_VARYING"), jint>(); }
inline jint GLES31::GL_TYPE_() { return get_static_field<SCAPIX_META_STRING("GL_TYPE"), jint>(); }
inline jint GLES31::GL_UNIFORM_() { return get_static_field<SCAPIX_META_STRING("GL_UNIFORM"), jint>(); }
inline jint GLES31::GL_UNIFORM_BARRIER_BIT_() { return get_static_field<SCAPIX_META_STRING("GL_UNIFORM_BARRIER_BIT"), jint>(); }
inline jint GLES31::GL_UNIFORM_BLOCK_() { return get_static_field<SCAPIX_META_STRING("GL_UNIFORM_BLOCK"), jint>(); }
inline jint GLES31::GL_UNSIGNED_INT_ATOMIC_COUNTER_() { return get_static_field<SCAPIX_META_STRING("GL_UNSIGNED_INT_ATOMIC_COUNTER"), jint>(); }
inline jint GLES31::GL_UNSIGNED_INT_IMAGE_2D_() { return get_static_field<SCAPIX_META_STRING("GL_UNSIGNED_INT_IMAGE_2D"), jint>(); }
inline jint GLES31::GL_UNSIGNED_INT_IMAGE_2D_ARRAY_() { return get_static_field<SCAPIX_META_STRING("GL_UNSIGNED_INT_IMAGE_2D_ARRAY"), jint>(); }
inline jint GLES31::GL_UNSIGNED_INT_IMAGE_3D_() { return get_static_field<SCAPIX_META_STRING("GL_UNSIGNED_INT_IMAGE_3D"), jint>(); }
inline jint GLES31::GL_UNSIGNED_INT_IMAGE_CUBE_() { return get_static_field<SCAPIX_META_STRING("GL_UNSIGNED_INT_IMAGE_CUBE"), jint>(); }
inline jint GLES31::GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_() { return get_static_field<SCAPIX_META_STRING("GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE"), jint>(); }
inline jint GLES31::GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_() { return get_static_field<SCAPIX_META_STRING("GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT"), jint>(); }
inline jint GLES31::GL_VERTEX_ATTRIB_BINDING_() { return get_static_field<SCAPIX_META_STRING("GL_VERTEX_ATTRIB_BINDING"), jint>(); }
inline jint GLES31::GL_VERTEX_ATTRIB_RELATIVE_OFFSET_() { return get_static_field<SCAPIX_META_STRING("GL_VERTEX_ATTRIB_RELATIVE_OFFSET"), jint>(); }
inline jint GLES31::GL_VERTEX_BINDING_BUFFER_() { return get_static_field<SCAPIX_META_STRING("GL_VERTEX_BINDING_BUFFER"), jint>(); }
inline jint GLES31::GL_VERTEX_BINDING_DIVISOR_() { return get_static_field<SCAPIX_META_STRING("GL_VERTEX_BINDING_DIVISOR"), jint>(); }
inline jint GLES31::GL_VERTEX_BINDING_OFFSET_() { return get_static_field<SCAPIX_META_STRING("GL_VERTEX_BINDING_OFFSET"), jint>(); }
inline jint GLES31::GL_VERTEX_BINDING_STRIDE_() { return get_static_field<SCAPIX_META_STRING("GL_VERTEX_BINDING_STRIDE"), jint>(); }
inline jint GLES31::GL_VERTEX_SHADER_BIT_() { return get_static_field<SCAPIX_META_STRING("GL_VERTEX_SHADER_BIT"), jint>(); }
inline jint GLES31::GL_WRITE_ONLY_() { return get_static_field<SCAPIX_META_STRING("GL_WRITE_ONLY"), jint>(); }
inline void GLES31::glDispatchCompute(jint p1, jint p2, jint p3) { return call_static_method<SCAPIX_META_STRING("glDispatchCompute"), void>(p1, p2, p3); }
inline void GLES31::glDispatchComputeIndirect(jlong p1) { return call_static_method<SCAPIX_META_STRING("glDispatchComputeIndirect"), void>(p1); }
inline void GLES31::glDrawArraysIndirect(jint p1, jlong p2) { return call_static_method<SCAPIX_META_STRING("glDrawArraysIndirect"), void>(p1, p2); }
inline void GLES31::glDrawElementsIndirect(jint p1, jint p2, jlong p3) { return call_static_method<SCAPIX_META_STRING("glDrawElementsIndirect"), void>(p1, p2, p3); }
inline void GLES31::glFramebufferParameteri(jint p1, jint p2, jint p3) { return call_static_method<SCAPIX_META_STRING("glFramebufferParameteri"), void>(p1, p2, p3); }
inline void GLES31::glGetFramebufferParameteriv(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4) { return call_static_method<SCAPIX_META_STRING("glGetFramebufferParameteriv"), void>(p1, p2, p3, p4); }
inline void GLES31::glGetFramebufferParameteriv(jint p1, jint p2, ref<java::nio::IntBuffer> p3) { return call_static_method<SCAPIX_META_STRING("glGetFramebufferParameteriv"), void>(p1, p2, p3); }
inline void GLES31::glGetProgramInterfaceiv(jint p1, jint p2, jint p3, ref<link::java::array<jint>> p4, jint p5) { return call_static_method<SCAPIX_META_STRING("glGetProgramInterfaceiv"), void>(p1, p2, p3, p4, p5); }
inline void GLES31::glGetProgramInterfaceiv(jint p1, jint p2, jint p3, ref<java::nio::IntBuffer> p4) { return call_static_method<SCAPIX_META_STRING("glGetProgramInterfaceiv"), void>(p1, p2, p3, p4); }
inline jint GLES31::glGetProgramResourceIndex(jint p1, jint p2, ref<java::lang::String> p3) { return call_static_method<SCAPIX_META_STRING("glGetProgramResourceIndex"), jint>(p1, p2, p3); }
inline ref<java::lang::String> GLES31::glGetProgramResourceName(jint p1, jint p2, jint p3) { return call_static_method<SCAPIX_META_STRING("glGetProgramResourceName"), ref<java::lang::String>>(p1, p2, p3); }
inline void GLES31::glGetProgramResourceiv(jint p1, jint p2, jint p3, jint p4, ref<link::java::array<jint>> p5, jint p6, jint p7, ref<link::java::array<jint>> p8, jint p9, ref<link::java::array<jint>> p10, jint p11) { return call_static_method<SCAPIX_META_STRING("glGetProgramResourceiv"), void>(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11); }
inline void GLES31::glGetProgramResourceiv(jint p1, jint p2, jint p3, jint p4, ref<java::nio::IntBuffer> p5, jint p6, ref<java::nio::IntBuffer> p7, ref<java::nio::IntBuffer> p8) { return call_static_method<SCAPIX_META_STRING("glGetProgramResourceiv"), void>(p1, p2, p3, p4, p5, p6, p7, p8); }
inline jint GLES31::glGetProgramResourceLocation(jint p1, jint p2, ref<java::lang::String> p3) { return call_static_method<SCAPIX_META_STRING("glGetProgramResourceLocation"), jint>(p1, p2, p3); }
inline void GLES31::glUseProgramStages(jint p1, jint p2, jint p3) { return call_static_method<SCAPIX_META_STRING("glUseProgramStages"), void>(p1, p2, p3); }
inline void GLES31::glActiveShaderProgram(jint p1, jint p2) { return call_static_method<SCAPIX_META_STRING("glActiveShaderProgram"), void>(p1, p2); }
inline jint GLES31::glCreateShaderProgramv(jint p1, ref<link::java::array<java::lang::String>> p2) { return call_static_method<SCAPIX_META_STRING("glCreateShaderProgramv"), jint>(p1, p2); }
inline void GLES31::glBindProgramPipeline(jint p1) { return call_static_method<SCAPIX_META_STRING("glBindProgramPipeline"), void>(p1); }
inline void GLES31::glDeleteProgramPipelines(jint p1, ref<link::java::array<jint>> p2, jint p3) { return call_static_method<SCAPIX_META_STRING("glDeleteProgramPipelines"), void>(p1, p2, p3); }
inline void GLES31::glDeleteProgramPipelines(jint p1, ref<java::nio::IntBuffer> p2) { return call_static_method<SCAPIX_META_STRING("glDeleteProgramPipelines"), void>(p1, p2); }
inline void GLES31::glGenProgramPipelines(jint p1, ref<link::java::array<jint>> p2, jint p3) { return call_static_method<SCAPIX_META_STRING("glGenProgramPipelines"), void>(p1, p2, p3); }
inline void GLES31::glGenProgramPipelines(jint p1, ref<java::nio::IntBuffer> p2) { return call_static_method<SCAPIX_META_STRING("glGenProgramPipelines"), void>(p1, p2); }
inline jboolean GLES31::glIsProgramPipeline(jint p1) { return call_static_method<SCAPIX_META_STRING("glIsProgramPipeline"), jboolean>(p1); }
inline void GLES31::glGetProgramPipelineiv(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4) { return call_static_method<SCAPIX_META_STRING("glGetProgramPipelineiv"), void>(p1, p2, p3, p4); }
inline void GLES31::glGetProgramPipelineiv(jint p1, jint p2, ref<java::nio::IntBuffer> p3) { return call_static_method<SCAPIX_META_STRING("glGetProgramPipelineiv"), void>(p1, p2, p3); }
inline void GLES31::glProgramUniform1i(jint p1, jint p2, jint p3) { return call_static_method<SCAPIX_META_STRING("glProgramUniform1i"), void>(p1, p2, p3); }
inline void GLES31::glProgramUniform2i(jint p1, jint p2, jint p3, jint p4) { return call_static_method<SCAPIX_META_STRING("glProgramUniform2i"), void>(p1, p2, p3, p4); }
inline void GLES31::glProgramUniform3i(jint p1, jint p2, jint p3, jint p4, jint p5) { return call_static_method<SCAPIX_META_STRING("glProgramUniform3i"), void>(p1, p2, p3, p4, p5); }
inline void GLES31::glProgramUniform4i(jint p1, jint p2, jint p3, jint p4, jint p5, jint p6) { return call_static_method<SCAPIX_META_STRING("glProgramUniform4i"), void>(p1, p2, p3, p4, p5, p6); }
inline void GLES31::glProgramUniform1ui(jint p1, jint p2, jint p3) { return call_static_method<SCAPIX_META_STRING("glProgramUniform1ui"), void>(p1, p2, p3); }
inline void GLES31::glProgramUniform2ui(jint p1, jint p2, jint p3, jint p4) { return call_static_method<SCAPIX_META_STRING("glProgramUniform2ui"), void>(p1, p2, p3, p4); }
inline void GLES31::glProgramUniform3ui(jint p1, jint p2, jint p3, jint p4, jint p5) { return call_static_method<SCAPIX_META_STRING("glProgramUniform3ui"), void>(p1, p2, p3, p4, p5); }
inline void GLES31::glProgramUniform4ui(jint p1, jint p2, jint p3, jint p4, jint p5, jint p6) { return call_static_method<SCAPIX_META_STRING("glProgramUniform4ui"), void>(p1, p2, p3, p4, p5, p6); }
inline void GLES31::glProgramUniform1f(jint p1, jint p2, jfloat p3) { return call_static_method<SCAPIX_META_STRING("glProgramUniform1f"), void>(p1, p2, p3); }
inline void GLES31::glProgramUniform2f(jint p1, jint p2, jfloat p3, jfloat p4) { return call_static_method<SCAPIX_META_STRING("glProgramUniform2f"), void>(p1, p2, p3, p4); }
inline void GLES31::glProgramUniform3f(jint p1, jint p2, jfloat p3, jfloat p4, jfloat p5) { return call_static_method<SCAPIX_META_STRING("glProgramUniform3f"), void>(p1, p2, p3, p4, p5); }
inline void GLES31::glProgramUniform4f(jint p1, jint p2, jfloat p3, jfloat p4, jfloat p5, jfloat p6) { return call_static_method<SCAPIX_META_STRING("glProgramUniform4f"), void>(p1, p2, p3, p4, p5, p6); }
inline void GLES31::glProgramUniform1iv(jint p1, jint p2, jint p3, ref<link::java::array<jint>> p4, jint p5) { return call_static_method<SCAPIX_META_STRING("glProgramUniform1iv"), void>(p1, p2, p3, p4, p5); }
inline void GLES31::glProgramUniform1iv(jint p1, jint p2, jint p3, ref<java::nio::IntBuffer> p4) { return call_static_method<SCAPIX_META_STRING("glProgramUniform1iv"), void>(p1, p2, p3, p4); }
inline void GLES31::glProgramUniform2iv(jint p1, jint p2, jint p3, ref<link::java::array<jint>> p4, jint p5) { return call_static_method<SCAPIX_META_STRING("glProgramUniform2iv"), void>(p1, p2, p3, p4, p5); }
inline void GLES31::glProgramUniform2iv(jint p1, jint p2, jint p3, ref<java::nio::IntBuffer> p4) { return call_static_method<SCAPIX_META_STRING("glProgramUniform2iv"), void>(p1, p2, p3, p4); }
inline void GLES31::glProgramUniform3iv(jint p1, jint p2, jint p3, ref<link::java::array<jint>> p4, jint p5) { return call_static_method<SCAPIX_META_STRING("glProgramUniform3iv"), void>(p1, p2, p3, p4, p5); }
inline void GLES31::glProgramUniform3iv(jint p1, jint p2, jint p3, ref<java::nio::IntBuffer> p4) { return call_static_method<SCAPIX_META_STRING("glProgramUniform3iv"), void>(p1, p2, p3, p4); }
inline void GLES31::glProgramUniform4iv(jint p1, jint p2, jint p3, ref<link::java::array<jint>> p4, jint p5) { return call_static_method<SCAPIX_META_STRING("glProgramUniform4iv"), void>(p1, p2, p3, p4, p5); }
inline void GLES31::glProgramUniform4iv(jint p1, jint p2, jint p3, ref<java::nio::IntBuffer> p4) { return call_static_method<SCAPIX_META_STRING("glProgramUniform4iv"), void>(p1, p2, p3, p4); }
inline void GLES31::glProgramUniform1uiv(jint p1, jint p2, jint p3, ref<link::java::array<jint>> p4, jint p5) { return call_static_method<SCAPIX_META_STRING("glProgramUniform1uiv"), void>(p1, p2, p3, p4, p5); }
inline void GLES31::glProgramUniform1uiv(jint p1, jint p2, jint p3, ref<java::nio::IntBuffer> p4) { return call_static_method<SCAPIX_META_STRING("glProgramUniform1uiv"), void>(p1, p2, p3, p4); }
inline void GLES31::glProgramUniform2uiv(jint p1, jint p2, jint p3, ref<link::java::array<jint>> p4, jint p5) { return call_static_method<SCAPIX_META_STRING("glProgramUniform2uiv"), void>(p1, p2, p3, p4, p5); }
inline void GLES31::glProgramUniform2uiv(jint p1, jint p2, jint p3, ref<java::nio::IntBuffer> p4) { return call_static_method<SCAPIX_META_STRING("glProgramUniform2uiv"), void>(p1, p2, p3, p4); }
inline void GLES31::glProgramUniform3uiv(jint p1, jint p2, jint p3, ref<link::java::array<jint>> p4, jint p5) { return call_static_method<SCAPIX_META_STRING("glProgramUniform3uiv"), void>(p1, p2, p3, p4, p5); }
inline void GLES31::glProgramUniform3uiv(jint p1, jint p2, jint p3, ref<java::nio::IntBuffer> p4) { return call_static_method<SCAPIX_META_STRING("glProgramUniform3uiv"), void>(p1, p2, p3, p4); }
inline void GLES31::glProgramUniform4uiv(jint p1, jint p2, jint p3, ref<link::java::array<jint>> p4, jint p5) { return call_static_method<SCAPIX_META_STRING("glProgramUniform4uiv"), void>(p1, p2, p3, p4, p5); }
inline void GLES31::glProgramUniform4uiv(jint p1, jint p2, jint p3, ref<java::nio::IntBuffer> p4) { return call_static_method<SCAPIX_META_STRING("glProgramUniform4uiv"), void>(p1, p2, p3, p4); }
inline void GLES31::glProgramUniform1fv(jint p1, jint p2, jint p3, ref<link::java::array<jfloat>> p4, jint p5) { return call_static_method<SCAPIX_META_STRING("glProgramUniform1fv"), void>(p1, p2, p3, p4, p5); }
inline void GLES31::glProgramUniform1fv(jint p1, jint p2, jint p3, ref<java::nio::FloatBuffer> p4) { return call_static_method<SCAPIX_META_STRING("glProgramUniform1fv"), void>(p1, p2, p3, p4); }
inline void GLES31::glProgramUniform2fv(jint p1, jint p2, jint p3, ref<link::java::array<jfloat>> p4, jint p5) { return call_static_method<SCAPIX_META_STRING("glProgramUniform2fv"), void>(p1, p2, p3, p4, p5); }
inline void GLES31::glProgramUniform2fv(jint p1, jint p2, jint p3, ref<java::nio::FloatBuffer> p4) { return call_static_method<SCAPIX_META_STRING("glProgramUniform2fv"), void>(p1, p2, p3, p4); }
inline void GLES31::glProgramUniform3fv(jint p1, jint p2, jint p3, ref<link::java::array<jfloat>> p4, jint p5) { return call_static_method<SCAPIX_META_STRING("glProgramUniform3fv"), void>(p1, p2, p3, p4, p5); }
inline void GLES31::glProgramUniform3fv(jint p1, jint p2, jint p3, ref<java::nio::FloatBuffer> p4) { return call_static_method<SCAPIX_META_STRING("glProgramUniform3fv"), void>(p1, p2, p3, p4); }
inline void GLES31::glProgramUniform4fv(jint p1, jint p2, jint p3, ref<link::java::array<jfloat>> p4, jint p5) { return call_static_method<SCAPIX_META_STRING("glProgramUniform4fv"), void>(p1, p2, p3, p4, p5); }
inline void GLES31::glProgramUniform4fv(jint p1, jint p2, jint p3, ref<java::nio::FloatBuffer> p4) { return call_static_method<SCAPIX_META_STRING("glProgramUniform4fv"), void>(p1, p2, p3, p4); }
inline void GLES31::glProgramUniformMatrix2fv(jint p1, jint p2, jint p3, jboolean p4, ref<link::java::array<jfloat>> p5, jint p6) { return call_static_method<SCAPIX_META_STRING("glProgramUniformMatrix2fv"), void>(p1, p2, p3, p4, p5, p6); }
inline void GLES31::glProgramUniformMatrix2fv(jint p1, jint p2, jint p3, jboolean p4, ref<java::nio::FloatBuffer> p5) { return call_static_method<SCAPIX_META_STRING("glProgramUniformMatrix2fv"), void>(p1, p2, p3, p4, p5); }
inline void GLES31::glProgramUniformMatrix3fv(jint p1, jint p2, jint p3, jboolean p4, ref<link::java::array<jfloat>> p5, jint p6) { return call_static_method<SCAPIX_META_STRING("glProgramUniformMatrix3fv"), void>(p1, p2, p3, p4, p5, p6); }
inline void GLES31::glProgramUniformMatrix3fv(jint p1, jint p2, jint p3, jboolean p4, ref<java::nio::FloatBuffer> p5) { return call_static_method<SCAPIX_META_STRING("glProgramUniformMatrix3fv"), void>(p1, p2, p3, p4, p5); }
inline void GLES31::glProgramUniformMatrix4fv(jint p1, jint p2, jint p3, jboolean p4, ref<link::java::array<jfloat>> p5, jint p6) { return call_static_method<SCAPIX_META_STRING("glProgramUniformMatrix4fv"), void>(p1, p2, p3, p4, p5, p6); }
inline void GLES31::glProgramUniformMatrix4fv(jint p1, jint p2, jint p3, jboolean p4, ref<java::nio::FloatBuffer> p5) { return call_static_method<SCAPIX_META_STRING("glProgramUniformMatrix4fv"), void>(p1, p2, p3, p4, p5); }
inline void GLES31::glProgramUniformMatrix2x3fv(jint p1, jint p2, jint p3, jboolean p4, ref<link::java::array<jfloat>> p5, jint p6) { return call_static_method<SCAPIX_META_STRING("glProgramUniformMatrix2x3fv"), void>(p1, p2, p3, p4, p5, p6); }
inline void GLES31::glProgramUniformMatrix2x3fv(jint p1, jint p2, jint p3, jboolean p4, ref<java::nio::FloatBuffer> p5) { return call_static_method<SCAPIX_META_STRING("glProgramUniformMatrix2x3fv"), void>(p1, p2, p3, p4, p5); }
inline void GLES31::glProgramUniformMatrix3x2fv(jint p1, jint p2, jint p3, jboolean p4, ref<link::java::array<jfloat>> p5, jint p6) { return call_static_method<SCAPIX_META_STRING("glProgramUniformMatrix3x2fv"), void>(p1, p2, p3, p4, p5, p6); }
inline void GLES31::glProgramUniformMatrix3x2fv(jint p1, jint p2, jint p3, jboolean p4, ref<java::nio::FloatBuffer> p5) { return call_static_method<SCAPIX_META_STRING("glProgramUniformMatrix3x2fv"), void>(p1, p2, p3, p4, p5); }
inline void GLES31::glProgramUniformMatrix2x4fv(jint p1, jint p2, jint p3, jboolean p4, ref<link::java::array<jfloat>> p5, jint p6) { return call_static_method<SCAPIX_META_STRING("glProgramUniformMatrix2x4fv"), void>(p1, p2, p3, p4, p5, p6); }
inline void GLES31::glProgramUniformMatrix2x4fv(jint p1, jint p2, jint p3, jboolean p4, ref<java::nio::FloatBuffer> p5) { return call_static_method<SCAPIX_META_STRING("glProgramUniformMatrix2x4fv"), void>(p1, p2, p3, p4, p5); }
inline void GLES31::glProgramUniformMatrix4x2fv(jint p1, jint p2, jint p3, jboolean p4, ref<link::java::array<jfloat>> p5, jint p6) { return call_static_method<SCAPIX_META_STRING("glProgramUniformMatrix4x2fv"), void>(p1, p2, p3, p4, p5, p6); }
inline void GLES31::glProgramUniformMatrix4x2fv(jint p1, jint p2, jint p3, jboolean p4, ref<java::nio::FloatBuffer> p5) { return call_static_method<SCAPIX_META_STRING("glProgramUniformMatrix4x2fv"), void>(p1, p2, p3, p4, p5); }
inline void GLES31::glProgramUniformMatrix3x4fv(jint p1, jint p2, jint p3, jboolean p4, ref<link::java::array<jfloat>> p5, jint p6) { return call_static_method<SCAPIX_META_STRING("glProgramUniformMatrix3x4fv"), void>(p1, p2, p3, p4, p5, p6); }
inline void GLES31::glProgramUniformMatrix3x4fv(jint p1, jint p2, jint p3, jboolean p4, ref<java::nio::FloatBuffer> p5) { return call_static_method<SCAPIX_META_STRING("glProgramUniformMatrix3x4fv"), void>(p1, p2, p3, p4, p5); }
inline void GLES31::glProgramUniformMatrix4x3fv(jint p1, jint p2, jint p3, jboolean p4, ref<link::java::array<jfloat>> p5, jint p6) { return call_static_method<SCAPIX_META_STRING("glProgramUniformMatrix4x3fv"), void>(p1, p2, p3, p4, p5, p6); }
inline void GLES31::glProgramUniformMatrix4x3fv(jint p1, jint p2, jint p3, jboolean p4, ref<java::nio::FloatBuffer> p5) { return call_static_method<SCAPIX_META_STRING("glProgramUniformMatrix4x3fv"), void>(p1, p2, p3, p4, p5); }
inline void GLES31::glValidateProgramPipeline(jint p1) { return call_static_method<SCAPIX_META_STRING("glValidateProgramPipeline"), void>(p1); }
inline ref<java::lang::String> GLES31::glGetProgramPipelineInfoLog(jint p1) { return call_static_method<SCAPIX_META_STRING("glGetProgramPipelineInfoLog"), ref<java::lang::String>>(p1); }
inline void GLES31::glBindImageTexture(jint p1, jint p2, jint p3, jboolean p4, jint p5, jint p6, jint p7) { return call_static_method<SCAPIX_META_STRING("glBindImageTexture"), void>(p1, p2, p3, p4, p5, p6, p7); }
inline void GLES31::glGetBooleani_v(jint p1, jint p2, ref<link::java::array<jboolean>> p3, jint p4) { return call_static_method<SCAPIX_META_STRING("glGetBooleani_v"), void>(p1, p2, p3, p4); }
inline void GLES31::glGetBooleani_v(jint p1, jint p2, ref<java::nio::IntBuffer> p3) { return call_static_method<SCAPIX_META_STRING("glGetBooleani_v"), void>(p1, p2, p3); }
inline void GLES31::glMemoryBarrier(jint p1) { return call_static_method<SCAPIX_META_STRING("glMemoryBarrier"), void>(p1); }
inline void GLES31::glMemoryBarrierByRegion(jint p1) { return call_static_method<SCAPIX_META_STRING("glMemoryBarrierByRegion"), void>(p1); }
inline void GLES31::glTexStorage2DMultisample(jint p1, jint p2, jint p3, jint p4, jint p5, jboolean p6) { return call_static_method<SCAPIX_META_STRING("glTexStorage2DMultisample"), void>(p1, p2, p3, p4, p5, p6); }
inline void GLES31::glGetMultisamplefv(jint p1, jint p2, ref<link::java::array<jfloat>> p3, jint p4) { return call_static_method<SCAPIX_META_STRING("glGetMultisamplefv"), void>(p1, p2, p3, p4); }
inline void GLES31::glGetMultisamplefv(jint p1, jint p2, ref<java::nio::FloatBuffer> p3) { return call_static_method<SCAPIX_META_STRING("glGetMultisamplefv"), void>(p1, p2, p3); }
inline void GLES31::glSampleMaski(jint p1, jint p2) { return call_static_method<SCAPIX_META_STRING("glSampleMaski"), void>(p1, p2); }
inline void GLES31::glGetTexLevelParameteriv(jint p1, jint p2, jint p3, ref<link::java::array<jint>> p4, jint p5) { return call_static_method<SCAPIX_META_STRING("glGetTexLevelParameteriv"), void>(p1, p2, p3, p4, p5); }
inline void GLES31::glGetTexLevelParameteriv(jint p1, jint p2, jint p3, ref<java::nio::IntBuffer> p4) { return call_static_method<SCAPIX_META_STRING("glGetTexLevelParameteriv"), void>(p1, p2, p3, p4); }
inline void GLES31::glGetTexLevelParameterfv(jint p1, jint p2, jint p3, ref<link::java::array<jfloat>> p4, jint p5) { return call_static_method<SCAPIX_META_STRING("glGetTexLevelParameterfv"), void>(p1, p2, p3, p4, p5); }
inline void GLES31::glGetTexLevelParameterfv(jint p1, jint p2, jint p3, ref<java::nio::FloatBuffer> p4) { return call_static_method<SCAPIX_META_STRING("glGetTexLevelParameterfv"), void>(p1, p2, p3, p4); }
inline void GLES31::glBindVertexBuffer(jint p1, jint p2, jlong p3, jint p4) { return call_static_method<SCAPIX_META_STRING("glBindVertexBuffer"), void>(p1, p2, p3, p4); }
inline void GLES31::glVertexAttribFormat(jint p1, jint p2, jint p3, jboolean p4, jint p5) { return call_static_method<SCAPIX_META_STRING("glVertexAttribFormat"), void>(p1, p2, p3, p4, p5); }
inline void GLES31::glVertexAttribIFormat(jint p1, jint p2, jint p3, jint p4) { return call_static_method<SCAPIX_META_STRING("glVertexAttribIFormat"), void>(p1, p2, p3, p4); }
inline void GLES31::glVertexAttribBinding(jint p1, jint p2) { return call_static_method<SCAPIX_META_STRING("glVertexAttribBinding"), void>(p1, p2); }
inline void GLES31::glVertexBindingDivisor(jint p1, jint p2) { return call_static_method<SCAPIX_META_STRING("glVertexBindingDivisor"), void>(p1, p2); }

} // namespace android::opengl
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_OPENGL_GLES31_H
