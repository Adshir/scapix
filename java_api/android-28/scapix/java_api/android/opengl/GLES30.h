// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/opengl/GLES20.h>

#ifndef SCAPIX_ANDROID_OPENGL_GLES30_H
#define SCAPIX_ANDROID_OPENGL_GLES30_H

namespace scapix::java_api {

namespace java::lang { class String; }
namespace java::nio { class Buffer; }
namespace java::nio { class ByteBuffer; }
namespace java::nio { class FloatBuffer; }
namespace java::nio { class IntBuffer; }
namespace java::nio { class LongBuffer; }

namespace android::opengl {

class GLES30 : public object_base<SCAPIX_META_STRING("android/opengl/GLES30"),
	android::opengl::GLES20>
{
public:

	static jint GL_ACTIVE_UNIFORM_BLOCKS_();
	static jint GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH_();
	static jint GL_ALREADY_SIGNALED_();
	static jint GL_ANY_SAMPLES_PASSED_();
	static jint GL_ANY_SAMPLES_PASSED_CONSERVATIVE_();
	static jint GL_BLUE_();
	static jint GL_BUFFER_ACCESS_FLAGS_();
	static jint GL_BUFFER_MAPPED_();
	static jint GL_BUFFER_MAP_LENGTH_();
	static jint GL_BUFFER_MAP_OFFSET_();
	static jint GL_BUFFER_MAP_POINTER_();
	static jint GL_COLOR_();
	static jint GL_COLOR_ATTACHMENT1_();
	static jint GL_COLOR_ATTACHMENT10_();
	static jint GL_COLOR_ATTACHMENT11_();
	static jint GL_COLOR_ATTACHMENT12_();
	static jint GL_COLOR_ATTACHMENT13_();
	static jint GL_COLOR_ATTACHMENT14_();
	static jint GL_COLOR_ATTACHMENT15_();
	static jint GL_COLOR_ATTACHMENT2_();
	static jint GL_COLOR_ATTACHMENT3_();
	static jint GL_COLOR_ATTACHMENT4_();
	static jint GL_COLOR_ATTACHMENT5_();
	static jint GL_COLOR_ATTACHMENT6_();
	static jint GL_COLOR_ATTACHMENT7_();
	static jint GL_COLOR_ATTACHMENT8_();
	static jint GL_COLOR_ATTACHMENT9_();
	static jint GL_COMPARE_REF_TO_TEXTURE_();
	static jint GL_COMPRESSED_R11_EAC_();
	static jint GL_COMPRESSED_RG11_EAC_();
	static jint GL_COMPRESSED_RGB8_ETC2_();
	static jint GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2_();
	static jint GL_COMPRESSED_RGBA8_ETC2_EAC_();
	static jint GL_COMPRESSED_SIGNED_R11_EAC_();
	static jint GL_COMPRESSED_SIGNED_RG11_EAC_();
	static jint GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC_();
	static jint GL_COMPRESSED_SRGB8_ETC2_();
	static jint GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2_();
	static jint GL_CONDITION_SATISFIED_();
	static jint GL_COPY_READ_BUFFER_();
	static jint GL_COPY_READ_BUFFER_BINDING_();
	static jint GL_COPY_WRITE_BUFFER_();
	static jint GL_COPY_WRITE_BUFFER_BINDING_();
	static jint GL_CURRENT_QUERY_();
	static jint GL_DEPTH_();
	static jint GL_DEPTH24_STENCIL8_();
	static jint GL_DEPTH32F_STENCIL8_();
	static jint GL_DEPTH_COMPONENT24_();
	static jint GL_DEPTH_COMPONENT32F_();
	static jint GL_DEPTH_STENCIL_();
	static jint GL_DEPTH_STENCIL_ATTACHMENT_();
	static jint GL_DRAW_BUFFER0_();
	static jint GL_DRAW_BUFFER1_();
	static jint GL_DRAW_BUFFER10_();
	static jint GL_DRAW_BUFFER11_();
	static jint GL_DRAW_BUFFER12_();
	static jint GL_DRAW_BUFFER13_();
	static jint GL_DRAW_BUFFER14_();
	static jint GL_DRAW_BUFFER15_();
	static jint GL_DRAW_BUFFER2_();
	static jint GL_DRAW_BUFFER3_();
	static jint GL_DRAW_BUFFER4_();
	static jint GL_DRAW_BUFFER5_();
	static jint GL_DRAW_BUFFER6_();
	static jint GL_DRAW_BUFFER7_();
	static jint GL_DRAW_BUFFER8_();
	static jint GL_DRAW_BUFFER9_();
	static jint GL_DRAW_FRAMEBUFFER_();
	static jint GL_DRAW_FRAMEBUFFER_BINDING_();
	static jint GL_DYNAMIC_COPY_();
	static jint GL_DYNAMIC_READ_();
	static jint GL_FLOAT_32_UNSIGNED_INT_24_8_REV_();
	static jint GL_FLOAT_MAT2x3();
	static jint GL_FLOAT_MAT2x4();
	static jint GL_FLOAT_MAT3x2();
	static jint GL_FLOAT_MAT3x4();
	static jint GL_FLOAT_MAT4x2();
	static jint GL_FLOAT_MAT4x3();
	static jint GL_FRAGMENT_SHADER_DERIVATIVE_HINT_();
	static jint GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE_();
	static jint GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE_();
	static jint GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_();
	static jint GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_();
	static jint GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE_();
	static jint GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE_();
	static jint GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE_();
	static jint GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE_();
	static jint GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_();
	static jint GL_FRAMEBUFFER_DEFAULT_();
	static jint GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_();
	static jint GL_FRAMEBUFFER_UNDEFINED_();
	static jint GL_GREEN_();
	static jint GL_HALF_FLOAT_();
	static jint GL_INTERLEAVED_ATTRIBS_();
	static jint GL_INT_2_10_10_10_REV_();
	static jint GL_INT_SAMPLER_2D_();
	static jint GL_INT_SAMPLER_2D_ARRAY_();
	static jint GL_INT_SAMPLER_3D_();
	static jint GL_INT_SAMPLER_CUBE_();
	static jint GL_INVALID_INDEX_();
	static jint GL_MAJOR_VERSION_();
	static jint GL_MAP_FLUSH_EXPLICIT_BIT_();
	static jint GL_MAP_INVALIDATE_BUFFER_BIT_();
	static jint GL_MAP_INVALIDATE_RANGE_BIT_();
	static jint GL_MAP_READ_BIT_();
	static jint GL_MAP_UNSYNCHRONIZED_BIT_();
	static jint GL_MAP_WRITE_BIT_();
	static jint GL_MAX_();
	static jint GL_MAX_3D_TEXTURE_SIZE_();
	static jint GL_MAX_ARRAY_TEXTURE_LAYERS_();
	static jint GL_MAX_COLOR_ATTACHMENTS_();
	static jint GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS_();
	static jint GL_MAX_COMBINED_UNIFORM_BLOCKS_();
	static jint GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS_();
	static jint GL_MAX_DRAW_BUFFERS_();
	static jint GL_MAX_ELEMENTS_INDICES_();
	static jint GL_MAX_ELEMENTS_VERTICES_();
	static jint GL_MAX_ELEMENT_INDEX_();
	static jint GL_MAX_FRAGMENT_INPUT_COMPONENTS_();
	static jint GL_MAX_FRAGMENT_UNIFORM_BLOCKS_();
	static jint GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_();
	static jint GL_MAX_PROGRAM_TEXEL_OFFSET_();
	static jint GL_MAX_SAMPLES_();
	static jint GL_MAX_SERVER_WAIT_TIMEOUT_();
	static jint GL_MAX_TEXTURE_LOD_BIAS_();
	static jint GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_();
	static jint GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_();
	static jint GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_();
	static jint GL_MAX_UNIFORM_BLOCK_SIZE_();
	static jint GL_MAX_UNIFORM_BUFFER_BINDINGS_();
	static jint GL_MAX_VARYING_COMPONENTS_();
	static jint GL_MAX_VERTEX_OUTPUT_COMPONENTS_();
	static jint GL_MAX_VERTEX_UNIFORM_BLOCKS_();
	static jint GL_MAX_VERTEX_UNIFORM_COMPONENTS_();
	static jint GL_MIN_();
	static jint GL_MINOR_VERSION_();
	static jint GL_MIN_PROGRAM_TEXEL_OFFSET_();
	static jint GL_NUM_EXTENSIONS_();
	static jint GL_NUM_PROGRAM_BINARY_FORMATS_();
	static jint GL_NUM_SAMPLE_COUNTS_();
	static jint GL_OBJECT_TYPE_();
	static jint GL_PACK_ROW_LENGTH_();
	static jint GL_PACK_SKIP_PIXELS_();
	static jint GL_PACK_SKIP_ROWS_();
	static jint GL_PIXEL_PACK_BUFFER_();
	static jint GL_PIXEL_PACK_BUFFER_BINDING_();
	static jint GL_PIXEL_UNPACK_BUFFER_();
	static jint GL_PIXEL_UNPACK_BUFFER_BINDING_();
	static jint GL_PRIMITIVE_RESTART_FIXED_INDEX_();
	static jint GL_PROGRAM_BINARY_FORMATS_();
	static jint GL_PROGRAM_BINARY_LENGTH_();
	static jint GL_PROGRAM_BINARY_RETRIEVABLE_HINT_();
	static jint GL_QUERY_RESULT_();
	static jint GL_QUERY_RESULT_AVAILABLE_();
	static jint GL_R11F_G11F_B10F_();
	static jint GL_R16F_();
	static jint GL_R16I_();
	static jint GL_R16UI_();
	static jint GL_R32F_();
	static jint GL_R32I_();
	static jint GL_R32UI_();
	static jint GL_R8_();
	static jint GL_R8I_();
	static jint GL_R8UI_();
	static jint GL_R8_SNORM_();
	static jint GL_RASTERIZER_DISCARD_();
	static jint GL_READ_BUFFER_();
	static jint GL_READ_FRAMEBUFFER_();
	static jint GL_READ_FRAMEBUFFER_BINDING_();
	static jint GL_RED_();
	static jint GL_RED_INTEGER_();
	static jint GL_RENDERBUFFER_SAMPLES_();
	static jint GL_RG_();
	static jint GL_RG16F_();
	static jint GL_RG16I_();
	static jint GL_RG16UI_();
	static jint GL_RG32F_();
	static jint GL_RG32I_();
	static jint GL_RG32UI_();
	static jint GL_RG8_();
	static jint GL_RG8I_();
	static jint GL_RG8UI_();
	static jint GL_RG8_SNORM_();
	static jint GL_RGB10_A2_();
	static jint GL_RGB10_A2UI_();
	static jint GL_RGB16F_();
	static jint GL_RGB16I_();
	static jint GL_RGB16UI_();
	static jint GL_RGB32F_();
	static jint GL_RGB32I_();
	static jint GL_RGB32UI_();
	static jint GL_RGB8_();
	static jint GL_RGB8I_();
	static jint GL_RGB8UI_();
	static jint GL_RGB8_SNORM_();
	static jint GL_RGB9_E5_();
	static jint GL_RGBA16F_();
	static jint GL_RGBA16I_();
	static jint GL_RGBA16UI_();
	static jint GL_RGBA32F_();
	static jint GL_RGBA32I_();
	static jint GL_RGBA32UI_();
	static jint GL_RGBA8_();
	static jint GL_RGBA8I_();
	static jint GL_RGBA8UI_();
	static jint GL_RGBA8_SNORM_();
	static jint GL_RGBA_INTEGER_();
	static jint GL_RGB_INTEGER_();
	static jint GL_RG_INTEGER_();
	static jint GL_SAMPLER_2D_ARRAY_();
	static jint GL_SAMPLER_2D_ARRAY_SHADOW_();
	static jint GL_SAMPLER_2D_SHADOW_();
	static jint GL_SAMPLER_3D_();
	static jint GL_SAMPLER_BINDING_();
	static jint GL_SAMPLER_CUBE_SHADOW_();
	static jint GL_SEPARATE_ATTRIBS_();
	static jint GL_SIGNALED_();
	static jint GL_SIGNED_NORMALIZED_();
	static jint GL_SRGB_();
	static jint GL_SRGB8_();
	static jint GL_SRGB8_ALPHA8_();
	static jint GL_STATIC_COPY_();
	static jint GL_STATIC_READ_();
	static jint GL_STENCIL_();
	static jint GL_STREAM_COPY_();
	static jint GL_STREAM_READ_();
	static jint GL_SYNC_CONDITION_();
	static jint GL_SYNC_FENCE_();
	static jint GL_SYNC_FLAGS_();
	static jint GL_SYNC_FLUSH_COMMANDS_BIT_();
	static jint GL_SYNC_GPU_COMMANDS_COMPLETE_();
	static jint GL_SYNC_STATUS_();
	static jint GL_TEXTURE_2D_ARRAY_();
	static jint GL_TEXTURE_3D_();
	static jint GL_TEXTURE_BASE_LEVEL_();
	static jint GL_TEXTURE_BINDING_2D_ARRAY_();
	static jint GL_TEXTURE_BINDING_3D_();
	static jint GL_TEXTURE_COMPARE_FUNC_();
	static jint GL_TEXTURE_COMPARE_MODE_();
	static jint GL_TEXTURE_IMMUTABLE_FORMAT_();
	static jint GL_TEXTURE_IMMUTABLE_LEVELS_();
	static jint GL_TEXTURE_MAX_LEVEL_();
	static jint GL_TEXTURE_MAX_LOD_();
	static jint GL_TEXTURE_MIN_LOD_();
	static jint GL_TEXTURE_SWIZZLE_A_();
	static jint GL_TEXTURE_SWIZZLE_B_();
	static jint GL_TEXTURE_SWIZZLE_G_();
	static jint GL_TEXTURE_SWIZZLE_R_();
	static jint GL_TEXTURE_WRAP_R_();
	static jint GL_TIMEOUT_EXPIRED_();
	static jlong GL_TIMEOUT_IGNORED_();
	static jint GL_TRANSFORM_FEEDBACK_();
	static jint GL_TRANSFORM_FEEDBACK_ACTIVE_();
	static jint GL_TRANSFORM_FEEDBACK_BINDING_();
	static jint GL_TRANSFORM_FEEDBACK_BUFFER_();
	static jint GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_();
	static jint GL_TRANSFORM_FEEDBACK_BUFFER_MODE_();
	static jint GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_();
	static jint GL_TRANSFORM_FEEDBACK_BUFFER_START_();
	static jint GL_TRANSFORM_FEEDBACK_PAUSED_();
	static jint GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_();
	static jint GL_TRANSFORM_FEEDBACK_VARYINGS_();
	static jint GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_();
	static jint GL_UNIFORM_ARRAY_STRIDE_();
	static jint GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS_();
	static jint GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES_();
	static jint GL_UNIFORM_BLOCK_BINDING_();
	static jint GL_UNIFORM_BLOCK_DATA_SIZE_();
	static jint GL_UNIFORM_BLOCK_INDEX_();
	static jint GL_UNIFORM_BLOCK_NAME_LENGTH_();
	static jint GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER_();
	static jint GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER_();
	static jint GL_UNIFORM_BUFFER_();
	static jint GL_UNIFORM_BUFFER_BINDING_();
	static jint GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT_();
	static jint GL_UNIFORM_BUFFER_SIZE_();
	static jint GL_UNIFORM_BUFFER_START_();
	static jint GL_UNIFORM_IS_ROW_MAJOR_();
	static jint GL_UNIFORM_MATRIX_STRIDE_();
	static jint GL_UNIFORM_NAME_LENGTH_();
	static jint GL_UNIFORM_OFFSET_();
	static jint GL_UNIFORM_SIZE_();
	static jint GL_UNIFORM_TYPE_();
	static jint GL_UNPACK_IMAGE_HEIGHT_();
	static jint GL_UNPACK_ROW_LENGTH_();
	static jint GL_UNPACK_SKIP_IMAGES_();
	static jint GL_UNPACK_SKIP_PIXELS_();
	static jint GL_UNPACK_SKIP_ROWS_();
	static jint GL_UNSIGNALED_();
	static jint GL_UNSIGNED_INT_10F_11F_11F_REV_();
	static jint GL_UNSIGNED_INT_24_8_();
	static jint GL_UNSIGNED_INT_2_10_10_10_REV_();
	static jint GL_UNSIGNED_INT_5_9_9_9_REV_();
	static jint GL_UNSIGNED_INT_SAMPLER_2D_();
	static jint GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_();
	static jint GL_UNSIGNED_INT_SAMPLER_3D_();
	static jint GL_UNSIGNED_INT_SAMPLER_CUBE_();
	static jint GL_UNSIGNED_INT_VEC2_();
	static jint GL_UNSIGNED_INT_VEC3_();
	static jint GL_UNSIGNED_INT_VEC4_();
	static jint GL_UNSIGNED_NORMALIZED_();
	static jint GL_VERTEX_ARRAY_BINDING_();
	static jint GL_VERTEX_ATTRIB_ARRAY_DIVISOR_();
	static jint GL_VERTEX_ATTRIB_ARRAY_INTEGER_();
	static jint GL_WAIT_FAILED_();

	static ref<GLES30> new_object();
	static void glReadBuffer(jint p1);
	static void glDrawRangeElements(jint p1, jint p2, jint p3, jint p4, jint p5, ref<java::nio::Buffer> p6);
	static void glDrawRangeElements(jint p1, jint p2, jint p3, jint p4, jint p5, jint p6);
	static void glTexImage3D(jint p1, jint p2, jint p3, jint p4, jint p5, jint p6, jint p7, jint p8, jint p9, ref<java::nio::Buffer> p10);
	static void glTexImage3D(jint p1, jint p2, jint p3, jint p4, jint p5, jint p6, jint p7, jint p8, jint p9, jint p10);
	static void glTexSubImage3D(jint p1, jint p2, jint p3, jint p4, jint p5, jint p6, jint p7, jint p8, jint p9, jint p10, ref<java::nio::Buffer> p11);
	static void glTexSubImage3D(jint p1, jint p2, jint p3, jint p4, jint p5, jint p6, jint p7, jint p8, jint p9, jint p10, jint p11);
	static void glCopyTexSubImage3D(jint p1, jint p2, jint p3, jint p4, jint p5, jint p6, jint p7, jint p8, jint p9);
	static void glCompressedTexImage3D(jint p1, jint p2, jint p3, jint p4, jint p5, jint p6, jint p7, jint p8, ref<java::nio::Buffer> p9);
	static void glCompressedTexImage3D(jint p1, jint p2, jint p3, jint p4, jint p5, jint p6, jint p7, jint p8, jint p9);
	static void glCompressedTexSubImage3D(jint p1, jint p2, jint p3, jint p4, jint p5, jint p6, jint p7, jint p8, jint p9, jint p10, ref<java::nio::Buffer> p11);
	static void glCompressedTexSubImage3D(jint p1, jint p2, jint p3, jint p4, jint p5, jint p6, jint p7, jint p8, jint p9, jint p10, jint p11);
	static void glGenQueries(jint p1, ref<link::java::array<jint>> p2, jint p3);
	static void glGenQueries(jint p1, ref<java::nio::IntBuffer> p2);
	static void glDeleteQueries(jint p1, ref<link::java::array<jint>> p2, jint p3);
	static void glDeleteQueries(jint p1, ref<java::nio::IntBuffer> p2);
	static jboolean glIsQuery(jint p1);
	static void glBeginQuery(jint p1, jint p2);
	static void glEndQuery(jint p1);
	static void glGetQueryiv(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4);
	static void glGetQueryiv(jint p1, jint p2, ref<java::nio::IntBuffer> p3);
	static void glGetQueryObjectuiv(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4);
	static void glGetQueryObjectuiv(jint p1, jint p2, ref<java::nio::IntBuffer> p3);
	static jboolean glUnmapBuffer(jint p1);
	static ref<java::nio::Buffer> glGetBufferPointerv(jint p1, jint p2);
	static void glDrawBuffers(jint p1, ref<link::java::array<jint>> p2, jint p3);
	static void glDrawBuffers(jint p1, ref<java::nio::IntBuffer> p2);
	static void glUniformMatrix2x3fv(jint p1, jint p2, jboolean p3, ref<link::java::array<jfloat>> p4, jint p5);
	static void glUniformMatrix2x3fv(jint p1, jint p2, jboolean p3, ref<java::nio::FloatBuffer> p4);
	static void glUniformMatrix3x2fv(jint p1, jint p2, jboolean p3, ref<link::java::array<jfloat>> p4, jint p5);
	static void glUniformMatrix3x2fv(jint p1, jint p2, jboolean p3, ref<java::nio::FloatBuffer> p4);
	static void glUniformMatrix2x4fv(jint p1, jint p2, jboolean p3, ref<link::java::array<jfloat>> p4, jint p5);
	static void glUniformMatrix2x4fv(jint p1, jint p2, jboolean p3, ref<java::nio::FloatBuffer> p4);
	static void glUniformMatrix4x2fv(jint p1, jint p2, jboolean p3, ref<link::java::array<jfloat>> p4, jint p5);
	static void glUniformMatrix4x2fv(jint p1, jint p2, jboolean p3, ref<java::nio::FloatBuffer> p4);
	static void glUniformMatrix3x4fv(jint p1, jint p2, jboolean p3, ref<link::java::array<jfloat>> p4, jint p5);
	static void glUniformMatrix3x4fv(jint p1, jint p2, jboolean p3, ref<java::nio::FloatBuffer> p4);
	static void glUniformMatrix4x3fv(jint p1, jint p2, jboolean p3, ref<link::java::array<jfloat>> p4, jint p5);
	static void glUniformMatrix4x3fv(jint p1, jint p2, jboolean p3, ref<java::nio::FloatBuffer> p4);
	static void glBlitFramebuffer(jint p1, jint p2, jint p3, jint p4, jint p5, jint p6, jint p7, jint p8, jint p9, jint p10);
	static void glRenderbufferStorageMultisample(jint p1, jint p2, jint p3, jint p4, jint p5);
	static void glFramebufferTextureLayer(jint p1, jint p2, jint p3, jint p4, jint p5);
	static ref<java::nio::Buffer> glMapBufferRange(jint p1, jint p2, jint p3, jint p4);
	static void glFlushMappedBufferRange(jint p1, jint p2, jint p3);
	static void glBindVertexArray(jint p1);
	static void glDeleteVertexArrays(jint p1, ref<link::java::array<jint>> p2, jint p3);
	static void glDeleteVertexArrays(jint p1, ref<java::nio::IntBuffer> p2);
	static void glGenVertexArrays(jint p1, ref<link::java::array<jint>> p2, jint p3);
	static void glGenVertexArrays(jint p1, ref<java::nio::IntBuffer> p2);
	static jboolean glIsVertexArray(jint p1);
	static void glGetIntegeri_v(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4);
	static void glGetIntegeri_v(jint p1, jint p2, ref<java::nio::IntBuffer> p3);
	static void glBeginTransformFeedback(jint p1);
	static void glEndTransformFeedback();
	static void glBindBufferRange(jint p1, jint p2, jint p3, jint p4, jint p5);
	static void glBindBufferBase(jint p1, jint p2, jint p3);
	static void glTransformFeedbackVaryings(jint p1, ref<link::java::array<java::lang::String>> p2, jint p3);
	static void glGetTransformFeedbackVarying(jint p1, jint p2, jint p3, ref<link::java::array<jint>> p4, jint p5, ref<link::java::array<jint>> p6, jint p7, ref<link::java::array<jint>> p8, jint p9, ref<link::java::array<jbyte>> p10, jint p11);
	static void glGetTransformFeedbackVarying(jint p1, jint p2, jint p3, ref<java::nio::IntBuffer> p4, ref<java::nio::IntBuffer> p5, ref<java::nio::IntBuffer> p6, jbyte p7);
	static void glGetTransformFeedbackVarying(jint p1, jint p2, jint p3, ref<java::nio::IntBuffer> p4, ref<java::nio::IntBuffer> p5, ref<java::nio::IntBuffer> p6, ref<java::nio::ByteBuffer> p7);
	static ref<java::lang::String> glGetTransformFeedbackVarying(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4, ref<link::java::array<jint>> p5, jint p6);
	static ref<java::lang::String> glGetTransformFeedbackVarying(jint p1, jint p2, ref<java::nio::IntBuffer> p3, ref<java::nio::IntBuffer> p4);
	static void glVertexAttribIPointer(jint index, jint size, jint type, jint stride, ref<java::nio::Buffer> pointer);
	static void glVertexAttribIPointer(jint p1, jint p2, jint p3, jint p4, jint p5);
	static void glGetVertexAttribIiv(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4);
	static void glGetVertexAttribIiv(jint p1, jint p2, ref<java::nio::IntBuffer> p3);
	static void glGetVertexAttribIuiv(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4);
	static void glGetVertexAttribIuiv(jint p1, jint p2, ref<java::nio::IntBuffer> p3);
	static void glVertexAttribI4i(jint p1, jint p2, jint p3, jint p4, jint p5);
	static void glVertexAttribI4ui(jint p1, jint p2, jint p3, jint p4, jint p5);
	static void glVertexAttribI4iv(jint p1, ref<link::java::array<jint>> p2, jint p3);
	static void glVertexAttribI4iv(jint p1, ref<java::nio::IntBuffer> p2);
	static void glVertexAttribI4uiv(jint p1, ref<link::java::array<jint>> p2, jint p3);
	static void glVertexAttribI4uiv(jint p1, ref<java::nio::IntBuffer> p2);
	static void glGetUniformuiv(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4);
	static void glGetUniformuiv(jint p1, jint p2, ref<java::nio::IntBuffer> p3);
	static jint glGetFragDataLocation(jint p1, ref<java::lang::String> p2);
	static void glUniform1ui(jint p1, jint p2);
	static void glUniform2ui(jint p1, jint p2, jint p3);
	static void glUniform3ui(jint p1, jint p2, jint p3, jint p4);
	static void glUniform4ui(jint p1, jint p2, jint p3, jint p4, jint p5);
	static void glUniform1uiv(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4);
	static void glUniform1uiv(jint p1, jint p2, ref<java::nio::IntBuffer> p3);
	static void glUniform2uiv(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4);
	static void glUniform2uiv(jint p1, jint p2, ref<java::nio::IntBuffer> p3);
	static void glUniform3uiv(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4);
	static void glUniform3uiv(jint p1, jint p2, ref<java::nio::IntBuffer> p3);
	static void glUniform4uiv(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4);
	static void glUniform4uiv(jint p1, jint p2, ref<java::nio::IntBuffer> p3);
	static void glClearBufferiv(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4);
	static void glClearBufferiv(jint p1, jint p2, ref<java::nio::IntBuffer> p3);
	static void glClearBufferuiv(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4);
	static void glClearBufferuiv(jint p1, jint p2, ref<java::nio::IntBuffer> p3);
	static void glClearBufferfv(jint p1, jint p2, ref<link::java::array<jfloat>> p3, jint p4);
	static void glClearBufferfv(jint p1, jint p2, ref<java::nio::FloatBuffer> p3);
	static void glClearBufferfi(jint p1, jint p2, jfloat p3, jint p4);
	static ref<java::lang::String> glGetStringi(jint p1, jint p2);
	static void glCopyBufferSubData(jint p1, jint p2, jint p3, jint p4, jint p5);
	static void glGetUniformIndices(jint p1, ref<link::java::array<java::lang::String>> p2, ref<link::java::array<jint>> p3, jint p4);
	static void glGetUniformIndices(jint p1, ref<link::java::array<java::lang::String>> p2, ref<java::nio::IntBuffer> p3);
	static void glGetActiveUniformsiv(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4, jint p5, ref<link::java::array<jint>> p6, jint p7);
	static void glGetActiveUniformsiv(jint p1, jint p2, ref<java::nio::IntBuffer> p3, jint p4, ref<java::nio::IntBuffer> p5);
	static jint glGetUniformBlockIndex(jint p1, ref<java::lang::String> p2);
	static void glGetActiveUniformBlockiv(jint p1, jint p2, jint p3, ref<link::java::array<jint>> p4, jint p5);
	static void glGetActiveUniformBlockiv(jint p1, jint p2, jint p3, ref<java::nio::IntBuffer> p4);
	static void glGetActiveUniformBlockName(jint p1, jint p2, jint p3, ref<link::java::array<jint>> p4, jint p5, ref<link::java::array<jbyte>> p6, jint p7);
	static void glGetActiveUniformBlockName(jint p1, jint p2, ref<java::nio::Buffer> p3, ref<java::nio::Buffer> p4);
	static ref<java::lang::String> glGetActiveUniformBlockName(jint p1, jint p2);
	static void glUniformBlockBinding(jint p1, jint p2, jint p3);
	static void glDrawArraysInstanced(jint p1, jint p2, jint p3, jint p4);
	static void glDrawElementsInstanced(jint p1, jint p2, jint p3, ref<java::nio::Buffer> p4, jint p5);
	static void glDrawElementsInstanced(jint p1, jint p2, jint p3, jint p4, jint p5);
	static jlong glFenceSync(jint p1, jint p2);
	static jboolean glIsSync(jlong p1);
	static void glDeleteSync(jlong p1);
	static jint glClientWaitSync(jlong p1, jint p2, jlong p3);
	static void glWaitSync(jlong p1, jint p2, jlong p3);
	static void glGetInteger64v(jint p1, ref<link::java::array<jlong>> p2, jint p3);
	static void glGetInteger64v(jint p1, ref<java::nio::LongBuffer> p2);
	static void glGetSynciv(jlong p1, jint p2, jint p3, ref<link::java::array<jint>> p4, jint p5, ref<link::java::array<jint>> p6, jint p7);
	static void glGetSynciv(jlong p1, jint p2, jint p3, ref<java::nio::IntBuffer> p4, ref<java::nio::IntBuffer> p5);
	static void glGetInteger64i_v(jint p1, jint p2, ref<link::java::array<jlong>> p3, jint p4);
	static void glGetInteger64i_v(jint p1, jint p2, ref<java::nio::LongBuffer> p3);
	static void glGetBufferParameteri64v(jint p1, jint p2, ref<link::java::array<jlong>> p3, jint p4);
	static void glGetBufferParameteri64v(jint p1, jint p2, ref<java::nio::LongBuffer> p3);
	static void glGenSamplers(jint p1, ref<link::java::array<jint>> p2, jint p3);
	static void glGenSamplers(jint p1, ref<java::nio::IntBuffer> p2);
	static void glDeleteSamplers(jint p1, ref<link::java::array<jint>> p2, jint p3);
	static void glDeleteSamplers(jint p1, ref<java::nio::IntBuffer> p2);
	static jboolean glIsSampler(jint p1);
	static void glBindSampler(jint p1, jint p2);
	static void glSamplerParameteri(jint p1, jint p2, jint p3);
	static void glSamplerParameteriv(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4);
	static void glSamplerParameteriv(jint p1, jint p2, ref<java::nio::IntBuffer> p3);
	static void glSamplerParameterf(jint p1, jint p2, jfloat p3);
	static void glSamplerParameterfv(jint p1, jint p2, ref<link::java::array<jfloat>> p3, jint p4);
	static void glSamplerParameterfv(jint p1, jint p2, ref<java::nio::FloatBuffer> p3);
	static void glGetSamplerParameteriv(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4);
	static void glGetSamplerParameteriv(jint p1, jint p2, ref<java::nio::IntBuffer> p3);
	static void glGetSamplerParameterfv(jint p1, jint p2, ref<link::java::array<jfloat>> p3, jint p4);
	static void glGetSamplerParameterfv(jint p1, jint p2, ref<java::nio::FloatBuffer> p3);
	static void glVertexAttribDivisor(jint p1, jint p2);
	static void glBindTransformFeedback(jint p1, jint p2);
	static void glDeleteTransformFeedbacks(jint p1, ref<link::java::array<jint>> p2, jint p3);
	static void glDeleteTransformFeedbacks(jint p1, ref<java::nio::IntBuffer> p2);
	static void glGenTransformFeedbacks(jint p1, ref<link::java::array<jint>> p2, jint p3);
	static void glGenTransformFeedbacks(jint p1, ref<java::nio::IntBuffer> p2);
	static jboolean glIsTransformFeedback(jint p1);
	static void glPauseTransformFeedback();
	static void glResumeTransformFeedback();
	static void glGetProgramBinary(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4, ref<link::java::array<jint>> p5, jint p6, ref<java::nio::Buffer> p7);
	static void glGetProgramBinary(jint p1, jint p2, ref<java::nio::IntBuffer> p3, ref<java::nio::IntBuffer> p4, ref<java::nio::Buffer> p5);
	static void glProgramBinary(jint p1, jint p2, ref<java::nio::Buffer> p3, jint p4);
	static void glProgramParameteri(jint p1, jint p2, jint p3);
	static void glInvalidateFramebuffer(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4);
	static void glInvalidateFramebuffer(jint p1, jint p2, ref<java::nio::IntBuffer> p3);
	static void glInvalidateSubFramebuffer(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4, jint p5, jint p6, jint p7, jint p8);
	static void glInvalidateSubFramebuffer(jint p1, jint p2, ref<java::nio::IntBuffer> p3, jint p4, jint p5, jint p6, jint p7);
	static void glTexStorage2D(jint p1, jint p2, jint p3, jint p4, jint p5);
	static void glTexStorage3D(jint p1, jint p2, jint p3, jint p4, jint p5, jint p6);
	static void glGetInternalformativ(jint p1, jint p2, jint p3, jint p4, ref<link::java::array<jint>> p5, jint p6);
	static void glGetInternalformativ(jint p1, jint p2, jint p3, jint p4, ref<java::nio::IntBuffer> p5);
	static void glReadPixels(jint p1, jint p2, jint p3, jint p4, jint p5, jint p6, jint p7);

protected:

	GLES30(handle_type h) : base_(h) {}

};

} // namespace android::opengl
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/nio/Buffer.h>
#include <scapix/java_api/java/nio/ByteBuffer.h>
#include <scapix/java_api/java/nio/FloatBuffer.h>
#include <scapix/java_api/java/nio/IntBuffer.h>
#include <scapix/java_api/java/nio/LongBuffer.h>

namespace scapix::java_api {
namespace android::opengl {

inline jint GLES30::GL_ACTIVE_UNIFORM_BLOCKS_() { return get_static_field<SCAPIX_META_STRING("GL_ACTIVE_UNIFORM_BLOCKS"), jint>(); }
inline jint GLES30::GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH_() { return get_static_field<SCAPIX_META_STRING("GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH"), jint>(); }
inline jint GLES30::GL_ALREADY_SIGNALED_() { return get_static_field<SCAPIX_META_STRING("GL_ALREADY_SIGNALED"), jint>(); }
inline jint GLES30::GL_ANY_SAMPLES_PASSED_() { return get_static_field<SCAPIX_META_STRING("GL_ANY_SAMPLES_PASSED"), jint>(); }
inline jint GLES30::GL_ANY_SAMPLES_PASSED_CONSERVATIVE_() { return get_static_field<SCAPIX_META_STRING("GL_ANY_SAMPLES_PASSED_CONSERVATIVE"), jint>(); }
inline jint GLES30::GL_BLUE_() { return get_static_field<SCAPIX_META_STRING("GL_BLUE"), jint>(); }
inline jint GLES30::GL_BUFFER_ACCESS_FLAGS_() { return get_static_field<SCAPIX_META_STRING("GL_BUFFER_ACCESS_FLAGS"), jint>(); }
inline jint GLES30::GL_BUFFER_MAPPED_() { return get_static_field<SCAPIX_META_STRING("GL_BUFFER_MAPPED"), jint>(); }
inline jint GLES30::GL_BUFFER_MAP_LENGTH_() { return get_static_field<SCAPIX_META_STRING("GL_BUFFER_MAP_LENGTH"), jint>(); }
inline jint GLES30::GL_BUFFER_MAP_OFFSET_() { return get_static_field<SCAPIX_META_STRING("GL_BUFFER_MAP_OFFSET"), jint>(); }
inline jint GLES30::GL_BUFFER_MAP_POINTER_() { return get_static_field<SCAPIX_META_STRING("GL_BUFFER_MAP_POINTER"), jint>(); }
inline jint GLES30::GL_COLOR_() { return get_static_field<SCAPIX_META_STRING("GL_COLOR"), jint>(); }
inline jint GLES30::GL_COLOR_ATTACHMENT1_() { return get_static_field<SCAPIX_META_STRING("GL_COLOR_ATTACHMENT1"), jint>(); }
inline jint GLES30::GL_COLOR_ATTACHMENT10_() { return get_static_field<SCAPIX_META_STRING("GL_COLOR_ATTACHMENT10"), jint>(); }
inline jint GLES30::GL_COLOR_ATTACHMENT11_() { return get_static_field<SCAPIX_META_STRING("GL_COLOR_ATTACHMENT11"), jint>(); }
inline jint GLES30::GL_COLOR_ATTACHMENT12_() { return get_static_field<SCAPIX_META_STRING("GL_COLOR_ATTACHMENT12"), jint>(); }
inline jint GLES30::GL_COLOR_ATTACHMENT13_() { return get_static_field<SCAPIX_META_STRING("GL_COLOR_ATTACHMENT13"), jint>(); }
inline jint GLES30::GL_COLOR_ATTACHMENT14_() { return get_static_field<SCAPIX_META_STRING("GL_COLOR_ATTACHMENT14"), jint>(); }
inline jint GLES30::GL_COLOR_ATTACHMENT15_() { return get_static_field<SCAPIX_META_STRING("GL_COLOR_ATTACHMENT15"), jint>(); }
inline jint GLES30::GL_COLOR_ATTACHMENT2_() { return get_static_field<SCAPIX_META_STRING("GL_COLOR_ATTACHMENT2"), jint>(); }
inline jint GLES30::GL_COLOR_ATTACHMENT3_() { return get_static_field<SCAPIX_META_STRING("GL_COLOR_ATTACHMENT3"), jint>(); }
inline jint GLES30::GL_COLOR_ATTACHMENT4_() { return get_static_field<SCAPIX_META_STRING("GL_COLOR_ATTACHMENT4"), jint>(); }
inline jint GLES30::GL_COLOR_ATTACHMENT5_() { return get_static_field<SCAPIX_META_STRING("GL_COLOR_ATTACHMENT5"), jint>(); }
inline jint GLES30::GL_COLOR_ATTACHMENT6_() { return get_static_field<SCAPIX_META_STRING("GL_COLOR_ATTACHMENT6"), jint>(); }
inline jint GLES30::GL_COLOR_ATTACHMENT7_() { return get_static_field<SCAPIX_META_STRING("GL_COLOR_ATTACHMENT7"), jint>(); }
inline jint GLES30::GL_COLOR_ATTACHMENT8_() { return get_static_field<SCAPIX_META_STRING("GL_COLOR_ATTACHMENT8"), jint>(); }
inline jint GLES30::GL_COLOR_ATTACHMENT9_() { return get_static_field<SCAPIX_META_STRING("GL_COLOR_ATTACHMENT9"), jint>(); }
inline jint GLES30::GL_COMPARE_REF_TO_TEXTURE_() { return get_static_field<SCAPIX_META_STRING("GL_COMPARE_REF_TO_TEXTURE"), jint>(); }
inline jint GLES30::GL_COMPRESSED_R11_EAC_() { return get_static_field<SCAPIX_META_STRING("GL_COMPRESSED_R11_EAC"), jint>(); }
inline jint GLES30::GL_COMPRESSED_RG11_EAC_() { return get_static_field<SCAPIX_META_STRING("GL_COMPRESSED_RG11_EAC"), jint>(); }
inline jint GLES30::GL_COMPRESSED_RGB8_ETC2_() { return get_static_field<SCAPIX_META_STRING("GL_COMPRESSED_RGB8_ETC2"), jint>(); }
inline jint GLES30::GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2_() { return get_static_field<SCAPIX_META_STRING("GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2"), jint>(); }
inline jint GLES30::GL_COMPRESSED_RGBA8_ETC2_EAC_() { return get_static_field<SCAPIX_META_STRING("GL_COMPRESSED_RGBA8_ETC2_EAC"), jint>(); }
inline jint GLES30::GL_COMPRESSED_SIGNED_R11_EAC_() { return get_static_field<SCAPIX_META_STRING("GL_COMPRESSED_SIGNED_R11_EAC"), jint>(); }
inline jint GLES30::GL_COMPRESSED_SIGNED_RG11_EAC_() { return get_static_field<SCAPIX_META_STRING("GL_COMPRESSED_SIGNED_RG11_EAC"), jint>(); }
inline jint GLES30::GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC_() { return get_static_field<SCAPIX_META_STRING("GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC"), jint>(); }
inline jint GLES30::GL_COMPRESSED_SRGB8_ETC2_() { return get_static_field<SCAPIX_META_STRING("GL_COMPRESSED_SRGB8_ETC2"), jint>(); }
inline jint GLES30::GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2_() { return get_static_field<SCAPIX_META_STRING("GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2"), jint>(); }
inline jint GLES30::GL_CONDITION_SATISFIED_() { return get_static_field<SCAPIX_META_STRING("GL_CONDITION_SATISFIED"), jint>(); }
inline jint GLES30::GL_COPY_READ_BUFFER_() { return get_static_field<SCAPIX_META_STRING("GL_COPY_READ_BUFFER"), jint>(); }
inline jint GLES30::GL_COPY_READ_BUFFER_BINDING_() { return get_static_field<SCAPIX_META_STRING("GL_COPY_READ_BUFFER_BINDING"), jint>(); }
inline jint GLES30::GL_COPY_WRITE_BUFFER_() { return get_static_field<SCAPIX_META_STRING("GL_COPY_WRITE_BUFFER"), jint>(); }
inline jint GLES30::GL_COPY_WRITE_BUFFER_BINDING_() { return get_static_field<SCAPIX_META_STRING("GL_COPY_WRITE_BUFFER_BINDING"), jint>(); }
inline jint GLES30::GL_CURRENT_QUERY_() { return get_static_field<SCAPIX_META_STRING("GL_CURRENT_QUERY"), jint>(); }
inline jint GLES30::GL_DEPTH_() { return get_static_field<SCAPIX_META_STRING("GL_DEPTH"), jint>(); }
inline jint GLES30::GL_DEPTH24_STENCIL8_() { return get_static_field<SCAPIX_META_STRING("GL_DEPTH24_STENCIL8"), jint>(); }
inline jint GLES30::GL_DEPTH32F_STENCIL8_() { return get_static_field<SCAPIX_META_STRING("GL_DEPTH32F_STENCIL8"), jint>(); }
inline jint GLES30::GL_DEPTH_COMPONENT24_() { return get_static_field<SCAPIX_META_STRING("GL_DEPTH_COMPONENT24"), jint>(); }
inline jint GLES30::GL_DEPTH_COMPONENT32F_() { return get_static_field<SCAPIX_META_STRING("GL_DEPTH_COMPONENT32F"), jint>(); }
inline jint GLES30::GL_DEPTH_STENCIL_() { return get_static_field<SCAPIX_META_STRING("GL_DEPTH_STENCIL"), jint>(); }
inline jint GLES30::GL_DEPTH_STENCIL_ATTACHMENT_() { return get_static_field<SCAPIX_META_STRING("GL_DEPTH_STENCIL_ATTACHMENT"), jint>(); }
inline jint GLES30::GL_DRAW_BUFFER0_() { return get_static_field<SCAPIX_META_STRING("GL_DRAW_BUFFER0"), jint>(); }
inline jint GLES30::GL_DRAW_BUFFER1_() { return get_static_field<SCAPIX_META_STRING("GL_DRAW_BUFFER1"), jint>(); }
inline jint GLES30::GL_DRAW_BUFFER10_() { return get_static_field<SCAPIX_META_STRING("GL_DRAW_BUFFER10"), jint>(); }
inline jint GLES30::GL_DRAW_BUFFER11_() { return get_static_field<SCAPIX_META_STRING("GL_DRAW_BUFFER11"), jint>(); }
inline jint GLES30::GL_DRAW_BUFFER12_() { return get_static_field<SCAPIX_META_STRING("GL_DRAW_BUFFER12"), jint>(); }
inline jint GLES30::GL_DRAW_BUFFER13_() { return get_static_field<SCAPIX_META_STRING("GL_DRAW_BUFFER13"), jint>(); }
inline jint GLES30::GL_DRAW_BUFFER14_() { return get_static_field<SCAPIX_META_STRING("GL_DRAW_BUFFER14"), jint>(); }
inline jint GLES30::GL_DRAW_BUFFER15_() { return get_static_field<SCAPIX_META_STRING("GL_DRAW_BUFFER15"), jint>(); }
inline jint GLES30::GL_DRAW_BUFFER2_() { return get_static_field<SCAPIX_META_STRING("GL_DRAW_BUFFER2"), jint>(); }
inline jint GLES30::GL_DRAW_BUFFER3_() { return get_static_field<SCAPIX_META_STRING("GL_DRAW_BUFFER3"), jint>(); }
inline jint GLES30::GL_DRAW_BUFFER4_() { return get_static_field<SCAPIX_META_STRING("GL_DRAW_BUFFER4"), jint>(); }
inline jint GLES30::GL_DRAW_BUFFER5_() { return get_static_field<SCAPIX_META_STRING("GL_DRAW_BUFFER5"), jint>(); }
inline jint GLES30::GL_DRAW_BUFFER6_() { return get_static_field<SCAPIX_META_STRING("GL_DRAW_BUFFER6"), jint>(); }
inline jint GLES30::GL_DRAW_BUFFER7_() { return get_static_field<SCAPIX_META_STRING("GL_DRAW_BUFFER7"), jint>(); }
inline jint GLES30::GL_DRAW_BUFFER8_() { return get_static_field<SCAPIX_META_STRING("GL_DRAW_BUFFER8"), jint>(); }
inline jint GLES30::GL_DRAW_BUFFER9_() { return get_static_field<SCAPIX_META_STRING("GL_DRAW_BUFFER9"), jint>(); }
inline jint GLES30::GL_DRAW_FRAMEBUFFER_() { return get_static_field<SCAPIX_META_STRING("GL_DRAW_FRAMEBUFFER"), jint>(); }
inline jint GLES30::GL_DRAW_FRAMEBUFFER_BINDING_() { return get_static_field<SCAPIX_META_STRING("GL_DRAW_FRAMEBUFFER_BINDING"), jint>(); }
inline jint GLES30::GL_DYNAMIC_COPY_() { return get_static_field<SCAPIX_META_STRING("GL_DYNAMIC_COPY"), jint>(); }
inline jint GLES30::GL_DYNAMIC_READ_() { return get_static_field<SCAPIX_META_STRING("GL_DYNAMIC_READ"), jint>(); }
inline jint GLES30::GL_FLOAT_32_UNSIGNED_INT_24_8_REV_() { return get_static_field<SCAPIX_META_STRING("GL_FLOAT_32_UNSIGNED_INT_24_8_REV"), jint>(); }
inline jint GLES30::GL_FLOAT_MAT2x3() { return get_static_field<SCAPIX_META_STRING("GL_FLOAT_MAT2x3"), jint>(); }
inline jint GLES30::GL_FLOAT_MAT2x4() { return get_static_field<SCAPIX_META_STRING("GL_FLOAT_MAT2x4"), jint>(); }
inline jint GLES30::GL_FLOAT_MAT3x2() { return get_static_field<SCAPIX_META_STRING("GL_FLOAT_MAT3x2"), jint>(); }
inline jint GLES30::GL_FLOAT_MAT3x4() { return get_static_field<SCAPIX_META_STRING("GL_FLOAT_MAT3x4"), jint>(); }
inline jint GLES30::GL_FLOAT_MAT4x2() { return get_static_field<SCAPIX_META_STRING("GL_FLOAT_MAT4x2"), jint>(); }
inline jint GLES30::GL_FLOAT_MAT4x3() { return get_static_field<SCAPIX_META_STRING("GL_FLOAT_MAT4x3"), jint>(); }
inline jint GLES30::GL_FRAGMENT_SHADER_DERIVATIVE_HINT_() { return get_static_field<SCAPIX_META_STRING("GL_FRAGMENT_SHADER_DERIVATIVE_HINT"), jint>(); }
inline jint GLES30::GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE_() { return get_static_field<SCAPIX_META_STRING("GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE"), jint>(); }
inline jint GLES30::GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE_() { return get_static_field<SCAPIX_META_STRING("GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE"), jint>(); }
inline jint GLES30::GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_() { return get_static_field<SCAPIX_META_STRING("GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING"), jint>(); }
inline jint GLES30::GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_() { return get_static_field<SCAPIX_META_STRING("GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE"), jint>(); }
inline jint GLES30::GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE_() { return get_static_field<SCAPIX_META_STRING("GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE"), jint>(); }
inline jint GLES30::GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE_() { return get_static_field<SCAPIX_META_STRING("GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE"), jint>(); }
inline jint GLES30::GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE_() { return get_static_field<SCAPIX_META_STRING("GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE"), jint>(); }
inline jint GLES30::GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE_() { return get_static_field<SCAPIX_META_STRING("GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE"), jint>(); }
inline jint GLES30::GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_() { return get_static_field<SCAPIX_META_STRING("GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER"), jint>(); }
inline jint GLES30::GL_FRAMEBUFFER_DEFAULT_() { return get_static_field<SCAPIX_META_STRING("GL_FRAMEBUFFER_DEFAULT"), jint>(); }
inline jint GLES30::GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_() { return get_static_field<SCAPIX_META_STRING("GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE"), jint>(); }
inline jint GLES30::GL_FRAMEBUFFER_UNDEFINED_() { return get_static_field<SCAPIX_META_STRING("GL_FRAMEBUFFER_UNDEFINED"), jint>(); }
inline jint GLES30::GL_GREEN_() { return get_static_field<SCAPIX_META_STRING("GL_GREEN"), jint>(); }
inline jint GLES30::GL_HALF_FLOAT_() { return get_static_field<SCAPIX_META_STRING("GL_HALF_FLOAT"), jint>(); }
inline jint GLES30::GL_INTERLEAVED_ATTRIBS_() { return get_static_field<SCAPIX_META_STRING("GL_INTERLEAVED_ATTRIBS"), jint>(); }
inline jint GLES30::GL_INT_2_10_10_10_REV_() { return get_static_field<SCAPIX_META_STRING("GL_INT_2_10_10_10_REV"), jint>(); }
inline jint GLES30::GL_INT_SAMPLER_2D_() { return get_static_field<SCAPIX_META_STRING("GL_INT_SAMPLER_2D"), jint>(); }
inline jint GLES30::GL_INT_SAMPLER_2D_ARRAY_() { return get_static_field<SCAPIX_META_STRING("GL_INT_SAMPLER_2D_ARRAY"), jint>(); }
inline jint GLES30::GL_INT_SAMPLER_3D_() { return get_static_field<SCAPIX_META_STRING("GL_INT_SAMPLER_3D"), jint>(); }
inline jint GLES30::GL_INT_SAMPLER_CUBE_() { return get_static_field<SCAPIX_META_STRING("GL_INT_SAMPLER_CUBE"), jint>(); }
inline jint GLES30::GL_INVALID_INDEX_() { return get_static_field<SCAPIX_META_STRING("GL_INVALID_INDEX"), jint>(); }
inline jint GLES30::GL_MAJOR_VERSION_() { return get_static_field<SCAPIX_META_STRING("GL_MAJOR_VERSION"), jint>(); }
inline jint GLES30::GL_MAP_FLUSH_EXPLICIT_BIT_() { return get_static_field<SCAPIX_META_STRING("GL_MAP_FLUSH_EXPLICIT_BIT"), jint>(); }
inline jint GLES30::GL_MAP_INVALIDATE_BUFFER_BIT_() { return get_static_field<SCAPIX_META_STRING("GL_MAP_INVALIDATE_BUFFER_BIT"), jint>(); }
inline jint GLES30::GL_MAP_INVALIDATE_RANGE_BIT_() { return get_static_field<SCAPIX_META_STRING("GL_MAP_INVALIDATE_RANGE_BIT"), jint>(); }
inline jint GLES30::GL_MAP_READ_BIT_() { return get_static_field<SCAPIX_META_STRING("GL_MAP_READ_BIT"), jint>(); }
inline jint GLES30::GL_MAP_UNSYNCHRONIZED_BIT_() { return get_static_field<SCAPIX_META_STRING("GL_MAP_UNSYNCHRONIZED_BIT"), jint>(); }
inline jint GLES30::GL_MAP_WRITE_BIT_() { return get_static_field<SCAPIX_META_STRING("GL_MAP_WRITE_BIT"), jint>(); }
inline jint GLES30::GL_MAX_() { return get_static_field<SCAPIX_META_STRING("GL_MAX"), jint>(); }
inline jint GLES30::GL_MAX_3D_TEXTURE_SIZE_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_3D_TEXTURE_SIZE"), jint>(); }
inline jint GLES30::GL_MAX_ARRAY_TEXTURE_LAYERS_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_ARRAY_TEXTURE_LAYERS"), jint>(); }
inline jint GLES30::GL_MAX_COLOR_ATTACHMENTS_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_COLOR_ATTACHMENTS"), jint>(); }
inline jint GLES30::GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS"), jint>(); }
inline jint GLES30::GL_MAX_COMBINED_UNIFORM_BLOCKS_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_COMBINED_UNIFORM_BLOCKS"), jint>(); }
inline jint GLES30::GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS"), jint>(); }
inline jint GLES30::GL_MAX_DRAW_BUFFERS_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_DRAW_BUFFERS"), jint>(); }
inline jint GLES30::GL_MAX_ELEMENTS_INDICES_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_ELEMENTS_INDICES"), jint>(); }
inline jint GLES30::GL_MAX_ELEMENTS_VERTICES_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_ELEMENTS_VERTICES"), jint>(); }
inline jint GLES30::GL_MAX_ELEMENT_INDEX_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_ELEMENT_INDEX"), jint>(); }
inline jint GLES30::GL_MAX_FRAGMENT_INPUT_COMPONENTS_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_FRAGMENT_INPUT_COMPONENTS"), jint>(); }
inline jint GLES30::GL_MAX_FRAGMENT_UNIFORM_BLOCKS_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_FRAGMENT_UNIFORM_BLOCKS"), jint>(); }
inline jint GLES30::GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_FRAGMENT_UNIFORM_COMPONENTS"), jint>(); }
inline jint GLES30::GL_MAX_PROGRAM_TEXEL_OFFSET_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_PROGRAM_TEXEL_OFFSET"), jint>(); }
inline jint GLES30::GL_MAX_SAMPLES_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_SAMPLES"), jint>(); }
inline jint GLES30::GL_MAX_SERVER_WAIT_TIMEOUT_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_SERVER_WAIT_TIMEOUT"), jint>(); }
inline jint GLES30::GL_MAX_TEXTURE_LOD_BIAS_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_TEXTURE_LOD_BIAS"), jint>(); }
inline jint GLES30::GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS"), jint>(); }
inline jint GLES30::GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS"), jint>(); }
inline jint GLES30::GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS"), jint>(); }
inline jint GLES30::GL_MAX_UNIFORM_BLOCK_SIZE_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_UNIFORM_BLOCK_SIZE"), jint>(); }
inline jint GLES30::GL_MAX_UNIFORM_BUFFER_BINDINGS_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_UNIFORM_BUFFER_BINDINGS"), jint>(); }
inline jint GLES30::GL_MAX_VARYING_COMPONENTS_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_VARYING_COMPONENTS"), jint>(); }
inline jint GLES30::GL_MAX_VERTEX_OUTPUT_COMPONENTS_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_VERTEX_OUTPUT_COMPONENTS"), jint>(); }
inline jint GLES30::GL_MAX_VERTEX_UNIFORM_BLOCKS_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_VERTEX_UNIFORM_BLOCKS"), jint>(); }
inline jint GLES30::GL_MAX_VERTEX_UNIFORM_COMPONENTS_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_VERTEX_UNIFORM_COMPONENTS"), jint>(); }
inline jint GLES30::GL_MIN_() { return get_static_field<SCAPIX_META_STRING("GL_MIN"), jint>(); }
inline jint GLES30::GL_MINOR_VERSION_() { return get_static_field<SCAPIX_META_STRING("GL_MINOR_VERSION"), jint>(); }
inline jint GLES30::GL_MIN_PROGRAM_TEXEL_OFFSET_() { return get_static_field<SCAPIX_META_STRING("GL_MIN_PROGRAM_TEXEL_OFFSET"), jint>(); }
inline jint GLES30::GL_NUM_EXTENSIONS_() { return get_static_field<SCAPIX_META_STRING("GL_NUM_EXTENSIONS"), jint>(); }
inline jint GLES30::GL_NUM_PROGRAM_BINARY_FORMATS_() { return get_static_field<SCAPIX_META_STRING("GL_NUM_PROGRAM_BINARY_FORMATS"), jint>(); }
inline jint GLES30::GL_NUM_SAMPLE_COUNTS_() { return get_static_field<SCAPIX_META_STRING("GL_NUM_SAMPLE_COUNTS"), jint>(); }
inline jint GLES30::GL_OBJECT_TYPE_() { return get_static_field<SCAPIX_META_STRING("GL_OBJECT_TYPE"), jint>(); }
inline jint GLES30::GL_PACK_ROW_LENGTH_() { return get_static_field<SCAPIX_META_STRING("GL_PACK_ROW_LENGTH"), jint>(); }
inline jint GLES30::GL_PACK_SKIP_PIXELS_() { return get_static_field<SCAPIX_META_STRING("GL_PACK_SKIP_PIXELS"), jint>(); }
inline jint GLES30::GL_PACK_SKIP_ROWS_() { return get_static_field<SCAPIX_META_STRING("GL_PACK_SKIP_ROWS"), jint>(); }
inline jint GLES30::GL_PIXEL_PACK_BUFFER_() { return get_static_field<SCAPIX_META_STRING("GL_PIXEL_PACK_BUFFER"), jint>(); }
inline jint GLES30::GL_PIXEL_PACK_BUFFER_BINDING_() { return get_static_field<SCAPIX_META_STRING("GL_PIXEL_PACK_BUFFER_BINDING"), jint>(); }
inline jint GLES30::GL_PIXEL_UNPACK_BUFFER_() { return get_static_field<SCAPIX_META_STRING("GL_PIXEL_UNPACK_BUFFER"), jint>(); }
inline jint GLES30::GL_PIXEL_UNPACK_BUFFER_BINDING_() { return get_static_field<SCAPIX_META_STRING("GL_PIXEL_UNPACK_BUFFER_BINDING"), jint>(); }
inline jint GLES30::GL_PRIMITIVE_RESTART_FIXED_INDEX_() { return get_static_field<SCAPIX_META_STRING("GL_PRIMITIVE_RESTART_FIXED_INDEX"), jint>(); }
inline jint GLES30::GL_PROGRAM_BINARY_FORMATS_() { return get_static_field<SCAPIX_META_STRING("GL_PROGRAM_BINARY_FORMATS"), jint>(); }
inline jint GLES30::GL_PROGRAM_BINARY_LENGTH_() { return get_static_field<SCAPIX_META_STRING("GL_PROGRAM_BINARY_LENGTH"), jint>(); }
inline jint GLES30::GL_PROGRAM_BINARY_RETRIEVABLE_HINT_() { return get_static_field<SCAPIX_META_STRING("GL_PROGRAM_BINARY_RETRIEVABLE_HINT"), jint>(); }
inline jint GLES30::GL_QUERY_RESULT_() { return get_static_field<SCAPIX_META_STRING("GL_QUERY_RESULT"), jint>(); }
inline jint GLES30::GL_QUERY_RESULT_AVAILABLE_() { return get_static_field<SCAPIX_META_STRING("GL_QUERY_RESULT_AVAILABLE"), jint>(); }
inline jint GLES30::GL_R11F_G11F_B10F_() { return get_static_field<SCAPIX_META_STRING("GL_R11F_G11F_B10F"), jint>(); }
inline jint GLES30::GL_R16F_() { return get_static_field<SCAPIX_META_STRING("GL_R16F"), jint>(); }
inline jint GLES30::GL_R16I_() { return get_static_field<SCAPIX_META_STRING("GL_R16I"), jint>(); }
inline jint GLES30::GL_R16UI_() { return get_static_field<SCAPIX_META_STRING("GL_R16UI"), jint>(); }
inline jint GLES30::GL_R32F_() { return get_static_field<SCAPIX_META_STRING("GL_R32F"), jint>(); }
inline jint GLES30::GL_R32I_() { return get_static_field<SCAPIX_META_STRING("GL_R32I"), jint>(); }
inline jint GLES30::GL_R32UI_() { return get_static_field<SCAPIX_META_STRING("GL_R32UI"), jint>(); }
inline jint GLES30::GL_R8_() { return get_static_field<SCAPIX_META_STRING("GL_R8"), jint>(); }
inline jint GLES30::GL_R8I_() { return get_static_field<SCAPIX_META_STRING("GL_R8I"), jint>(); }
inline jint GLES30::GL_R8UI_() { return get_static_field<SCAPIX_META_STRING("GL_R8UI"), jint>(); }
inline jint GLES30::GL_R8_SNORM_() { return get_static_field<SCAPIX_META_STRING("GL_R8_SNORM"), jint>(); }
inline jint GLES30::GL_RASTERIZER_DISCARD_() { return get_static_field<SCAPIX_META_STRING("GL_RASTERIZER_DISCARD"), jint>(); }
inline jint GLES30::GL_READ_BUFFER_() { return get_static_field<SCAPIX_META_STRING("GL_READ_BUFFER"), jint>(); }
inline jint GLES30::GL_READ_FRAMEBUFFER_() { return get_static_field<SCAPIX_META_STRING("GL_READ_FRAMEBUFFER"), jint>(); }
inline jint GLES30::GL_READ_FRAMEBUFFER_BINDING_() { return get_static_field<SCAPIX_META_STRING("GL_READ_FRAMEBUFFER_BINDING"), jint>(); }
inline jint GLES30::GL_RED_() { return get_static_field<SCAPIX_META_STRING("GL_RED"), jint>(); }
inline jint GLES30::GL_RED_INTEGER_() { return get_static_field<SCAPIX_META_STRING("GL_RED_INTEGER"), jint>(); }
inline jint GLES30::GL_RENDERBUFFER_SAMPLES_() { return get_static_field<SCAPIX_META_STRING("GL_RENDERBUFFER_SAMPLES"), jint>(); }
inline jint GLES30::GL_RG_() { return get_static_field<SCAPIX_META_STRING("GL_RG"), jint>(); }
inline jint GLES30::GL_RG16F_() { return get_static_field<SCAPIX_META_STRING("GL_RG16F"), jint>(); }
inline jint GLES30::GL_RG16I_() { return get_static_field<SCAPIX_META_STRING("GL_RG16I"), jint>(); }
inline jint GLES30::GL_RG16UI_() { return get_static_field<SCAPIX_META_STRING("GL_RG16UI"), jint>(); }
inline jint GLES30::GL_RG32F_() { return get_static_field<SCAPIX_META_STRING("GL_RG32F"), jint>(); }
inline jint GLES30::GL_RG32I_() { return get_static_field<SCAPIX_META_STRING("GL_RG32I"), jint>(); }
inline jint GLES30::GL_RG32UI_() { return get_static_field<SCAPIX_META_STRING("GL_RG32UI"), jint>(); }
inline jint GLES30::GL_RG8_() { return get_static_field<SCAPIX_META_STRING("GL_RG8"), jint>(); }
inline jint GLES30::GL_RG8I_() { return get_static_field<SCAPIX_META_STRING("GL_RG8I"), jint>(); }
inline jint GLES30::GL_RG8UI_() { return get_static_field<SCAPIX_META_STRING("GL_RG8UI"), jint>(); }
inline jint GLES30::GL_RG8_SNORM_() { return get_static_field<SCAPIX_META_STRING("GL_RG8_SNORM"), jint>(); }
inline jint GLES30::GL_RGB10_A2_() { return get_static_field<SCAPIX_META_STRING("GL_RGB10_A2"), jint>(); }
inline jint GLES30::GL_RGB10_A2UI_() { return get_static_field<SCAPIX_META_STRING("GL_RGB10_A2UI"), jint>(); }
inline jint GLES30::GL_RGB16F_() { return get_static_field<SCAPIX_META_STRING("GL_RGB16F"), jint>(); }
inline jint GLES30::GL_RGB16I_() { return get_static_field<SCAPIX_META_STRING("GL_RGB16I"), jint>(); }
inline jint GLES30::GL_RGB16UI_() { return get_static_field<SCAPIX_META_STRING("GL_RGB16UI"), jint>(); }
inline jint GLES30::GL_RGB32F_() { return get_static_field<SCAPIX_META_STRING("GL_RGB32F"), jint>(); }
inline jint GLES30::GL_RGB32I_() { return get_static_field<SCAPIX_META_STRING("GL_RGB32I"), jint>(); }
inline jint GLES30::GL_RGB32UI_() { return get_static_field<SCAPIX_META_STRING("GL_RGB32UI"), jint>(); }
inline jint GLES30::GL_RGB8_() { return get_static_field<SCAPIX_META_STRING("GL_RGB8"), jint>(); }
inline jint GLES30::GL_RGB8I_() { return get_static_field<SCAPIX_META_STRING("GL_RGB8I"), jint>(); }
inline jint GLES30::GL_RGB8UI_() { return get_static_field<SCAPIX_META_STRING("GL_RGB8UI"), jint>(); }
inline jint GLES30::GL_RGB8_SNORM_() { return get_static_field<SCAPIX_META_STRING("GL_RGB8_SNORM"), jint>(); }
inline jint GLES30::GL_RGB9_E5_() { return get_static_field<SCAPIX_META_STRING("GL_RGB9_E5"), jint>(); }
inline jint GLES30::GL_RGBA16F_() { return get_static_field<SCAPIX_META_STRING("GL_RGBA16F"), jint>(); }
inline jint GLES30::GL_RGBA16I_() { return get_static_field<SCAPIX_META_STRING("GL_RGBA16I"), jint>(); }
inline jint GLES30::GL_RGBA16UI_() { return get_static_field<SCAPIX_META_STRING("GL_RGBA16UI"), jint>(); }
inline jint GLES30::GL_RGBA32F_() { return get_static_field<SCAPIX_META_STRING("GL_RGBA32F"), jint>(); }
inline jint GLES30::GL_RGBA32I_() { return get_static_field<SCAPIX_META_STRING("GL_RGBA32I"), jint>(); }
inline jint GLES30::GL_RGBA32UI_() { return get_static_field<SCAPIX_META_STRING("GL_RGBA32UI"), jint>(); }
inline jint GLES30::GL_RGBA8_() { return get_static_field<SCAPIX_META_STRING("GL_RGBA8"), jint>(); }
inline jint GLES30::GL_RGBA8I_() { return get_static_field<SCAPIX_META_STRING("GL_RGBA8I"), jint>(); }
inline jint GLES30::GL_RGBA8UI_() { return get_static_field<SCAPIX_META_STRING("GL_RGBA8UI"), jint>(); }
inline jint GLES30::GL_RGBA8_SNORM_() { return get_static_field<SCAPIX_META_STRING("GL_RGBA8_SNORM"), jint>(); }
inline jint GLES30::GL_RGBA_INTEGER_() { return get_static_field<SCAPIX_META_STRING("GL_RGBA_INTEGER"), jint>(); }
inline jint GLES30::GL_RGB_INTEGER_() { return get_static_field<SCAPIX_META_STRING("GL_RGB_INTEGER"), jint>(); }
inline jint GLES30::GL_RG_INTEGER_() { return get_static_field<SCAPIX_META_STRING("GL_RG_INTEGER"), jint>(); }
inline jint GLES30::GL_SAMPLER_2D_ARRAY_() { return get_static_field<SCAPIX_META_STRING("GL_SAMPLER_2D_ARRAY"), jint>(); }
inline jint GLES30::GL_SAMPLER_2D_ARRAY_SHADOW_() { return get_static_field<SCAPIX_META_STRING("GL_SAMPLER_2D_ARRAY_SHADOW"), jint>(); }
inline jint GLES30::GL_SAMPLER_2D_SHADOW_() { return get_static_field<SCAPIX_META_STRING("GL_SAMPLER_2D_SHADOW"), jint>(); }
inline jint GLES30::GL_SAMPLER_3D_() { return get_static_field<SCAPIX_META_STRING("GL_SAMPLER_3D"), jint>(); }
inline jint GLES30::GL_SAMPLER_BINDING_() { return get_static_field<SCAPIX_META_STRING("GL_SAMPLER_BINDING"), jint>(); }
inline jint GLES30::GL_SAMPLER_CUBE_SHADOW_() { return get_static_field<SCAPIX_META_STRING("GL_SAMPLER_CUBE_SHADOW"), jint>(); }
inline jint GLES30::GL_SEPARATE_ATTRIBS_() { return get_static_field<SCAPIX_META_STRING("GL_SEPARATE_ATTRIBS"), jint>(); }
inline jint GLES30::GL_SIGNALED_() { return get_static_field<SCAPIX_META_STRING("GL_SIGNALED"), jint>(); }
inline jint GLES30::GL_SIGNED_NORMALIZED_() { return get_static_field<SCAPIX_META_STRING("GL_SIGNED_NORMALIZED"), jint>(); }
inline jint GLES30::GL_SRGB_() { return get_static_field<SCAPIX_META_STRING("GL_SRGB"), jint>(); }
inline jint GLES30::GL_SRGB8_() { return get_static_field<SCAPIX_META_STRING("GL_SRGB8"), jint>(); }
inline jint GLES30::GL_SRGB8_ALPHA8_() { return get_static_field<SCAPIX_META_STRING("GL_SRGB8_ALPHA8"), jint>(); }
inline jint GLES30::GL_STATIC_COPY_() { return get_static_field<SCAPIX_META_STRING("GL_STATIC_COPY"), jint>(); }
inline jint GLES30::GL_STATIC_READ_() { return get_static_field<SCAPIX_META_STRING("GL_STATIC_READ"), jint>(); }
inline jint GLES30::GL_STENCIL_() { return get_static_field<SCAPIX_META_STRING("GL_STENCIL"), jint>(); }
inline jint GLES30::GL_STREAM_COPY_() { return get_static_field<SCAPIX_META_STRING("GL_STREAM_COPY"), jint>(); }
inline jint GLES30::GL_STREAM_READ_() { return get_static_field<SCAPIX_META_STRING("GL_STREAM_READ"), jint>(); }
inline jint GLES30::GL_SYNC_CONDITION_() { return get_static_field<SCAPIX_META_STRING("GL_SYNC_CONDITION"), jint>(); }
inline jint GLES30::GL_SYNC_FENCE_() { return get_static_field<SCAPIX_META_STRING("GL_SYNC_FENCE"), jint>(); }
inline jint GLES30::GL_SYNC_FLAGS_() { return get_static_field<SCAPIX_META_STRING("GL_SYNC_FLAGS"), jint>(); }
inline jint GLES30::GL_SYNC_FLUSH_COMMANDS_BIT_() { return get_static_field<SCAPIX_META_STRING("GL_SYNC_FLUSH_COMMANDS_BIT"), jint>(); }
inline jint GLES30::GL_SYNC_GPU_COMMANDS_COMPLETE_() { return get_static_field<SCAPIX_META_STRING("GL_SYNC_GPU_COMMANDS_COMPLETE"), jint>(); }
inline jint GLES30::GL_SYNC_STATUS_() { return get_static_field<SCAPIX_META_STRING("GL_SYNC_STATUS"), jint>(); }
inline jint GLES30::GL_TEXTURE_2D_ARRAY_() { return get_static_field<SCAPIX_META_STRING("GL_TEXTURE_2D_ARRAY"), jint>(); }
inline jint GLES30::GL_TEXTURE_3D_() { return get_static_field<SCAPIX_META_STRING("GL_TEXTURE_3D"), jint>(); }
inline jint GLES30::GL_TEXTURE_BASE_LEVEL_() { return get_static_field<SCAPIX_META_STRING("GL_TEXTURE_BASE_LEVEL"), jint>(); }
inline jint GLES30::GL_TEXTURE_BINDING_2D_ARRAY_() { return get_static_field<SCAPIX_META_STRING("GL_TEXTURE_BINDING_2D_ARRAY"), jint>(); }
inline jint GLES30::GL_TEXTURE_BINDING_3D_() { return get_static_field<SCAPIX_META_STRING("GL_TEXTURE_BINDING_3D"), jint>(); }
inline jint GLES30::GL_TEXTURE_COMPARE_FUNC_() { return get_static_field<SCAPIX_META_STRING("GL_TEXTURE_COMPARE_FUNC"), jint>(); }
inline jint GLES30::GL_TEXTURE_COMPARE_MODE_() { return get_static_field<SCAPIX_META_STRING("GL_TEXTURE_COMPARE_MODE"), jint>(); }
inline jint GLES30::GL_TEXTURE_IMMUTABLE_FORMAT_() { return get_static_field<SCAPIX_META_STRING("GL_TEXTURE_IMMUTABLE_FORMAT"), jint>(); }
inline jint GLES30::GL_TEXTURE_IMMUTABLE_LEVELS_() { return get_static_field<SCAPIX_META_STRING("GL_TEXTURE_IMMUTABLE_LEVELS"), jint>(); }
inline jint GLES30::GL_TEXTURE_MAX_LEVEL_() { return get_static_field<SCAPIX_META_STRING("GL_TEXTURE_MAX_LEVEL"), jint>(); }
inline jint GLES30::GL_TEXTURE_MAX_LOD_() { return get_static_field<SCAPIX_META_STRING("GL_TEXTURE_MAX_LOD"), jint>(); }
inline jint GLES30::GL_TEXTURE_MIN_LOD_() { return get_static_field<SCAPIX_META_STRING("GL_TEXTURE_MIN_LOD"), jint>(); }
inline jint GLES30::GL_TEXTURE_SWIZZLE_A_() { return get_static_field<SCAPIX_META_STRING("GL_TEXTURE_SWIZZLE_A"), jint>(); }
inline jint GLES30::GL_TEXTURE_SWIZZLE_B_() { return get_static_field<SCAPIX_META_STRING("GL_TEXTURE_SWIZZLE_B"), jint>(); }
inline jint GLES30::GL_TEXTURE_SWIZZLE_G_() { return get_static_field<SCAPIX_META_STRING("GL_TEXTURE_SWIZZLE_G"), jint>(); }
inline jint GLES30::GL_TEXTURE_SWIZZLE_R_() { return get_static_field<SCAPIX_META_STRING("GL_TEXTURE_SWIZZLE_R"), jint>(); }
inline jint GLES30::GL_TEXTURE_WRAP_R_() { return get_static_field<SCAPIX_META_STRING("GL_TEXTURE_WRAP_R"), jint>(); }
inline jint GLES30::GL_TIMEOUT_EXPIRED_() { return get_static_field<SCAPIX_META_STRING("GL_TIMEOUT_EXPIRED"), jint>(); }
inline jlong GLES30::GL_TIMEOUT_IGNORED_() { return get_static_field<SCAPIX_META_STRING("GL_TIMEOUT_IGNORED"), jlong>(); }
inline jint GLES30::GL_TRANSFORM_FEEDBACK_() { return get_static_field<SCAPIX_META_STRING("GL_TRANSFORM_FEEDBACK"), jint>(); }
inline jint GLES30::GL_TRANSFORM_FEEDBACK_ACTIVE_() { return get_static_field<SCAPIX_META_STRING("GL_TRANSFORM_FEEDBACK_ACTIVE"), jint>(); }
inline jint GLES30::GL_TRANSFORM_FEEDBACK_BINDING_() { return get_static_field<SCAPIX_META_STRING("GL_TRANSFORM_FEEDBACK_BINDING"), jint>(); }
inline jint GLES30::GL_TRANSFORM_FEEDBACK_BUFFER_() { return get_static_field<SCAPIX_META_STRING("GL_TRANSFORM_FEEDBACK_BUFFER"), jint>(); }
inline jint GLES30::GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_() { return get_static_field<SCAPIX_META_STRING("GL_TRANSFORM_FEEDBACK_BUFFER_BINDING"), jint>(); }
inline jint GLES30::GL_TRANSFORM_FEEDBACK_BUFFER_MODE_() { return get_static_field<SCAPIX_META_STRING("GL_TRANSFORM_FEEDBACK_BUFFER_MODE"), jint>(); }
inline jint GLES30::GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_() { return get_static_field<SCAPIX_META_STRING("GL_TRANSFORM_FEEDBACK_BUFFER_SIZE"), jint>(); }
inline jint GLES30::GL_TRANSFORM_FEEDBACK_BUFFER_START_() { return get_static_field<SCAPIX_META_STRING("GL_TRANSFORM_FEEDBACK_BUFFER_START"), jint>(); }
inline jint GLES30::GL_TRANSFORM_FEEDBACK_PAUSED_() { return get_static_field<SCAPIX_META_STRING("GL_TRANSFORM_FEEDBACK_PAUSED"), jint>(); }
inline jint GLES30::GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_() { return get_static_field<SCAPIX_META_STRING("GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN"), jint>(); }
inline jint GLES30::GL_TRANSFORM_FEEDBACK_VARYINGS_() { return get_static_field<SCAPIX_META_STRING("GL_TRANSFORM_FEEDBACK_VARYINGS"), jint>(); }
inline jint GLES30::GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_() { return get_static_field<SCAPIX_META_STRING("GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH"), jint>(); }
inline jint GLES30::GL_UNIFORM_ARRAY_STRIDE_() { return get_static_field<SCAPIX_META_STRING("GL_UNIFORM_ARRAY_STRIDE"), jint>(); }
inline jint GLES30::GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS_() { return get_static_field<SCAPIX_META_STRING("GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS"), jint>(); }
inline jint GLES30::GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES_() { return get_static_field<SCAPIX_META_STRING("GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES"), jint>(); }
inline jint GLES30::GL_UNIFORM_BLOCK_BINDING_() { return get_static_field<SCAPIX_META_STRING("GL_UNIFORM_BLOCK_BINDING"), jint>(); }
inline jint GLES30::GL_UNIFORM_BLOCK_DATA_SIZE_() { return get_static_field<SCAPIX_META_STRING("GL_UNIFORM_BLOCK_DATA_SIZE"), jint>(); }
inline jint GLES30::GL_UNIFORM_BLOCK_INDEX_() { return get_static_field<SCAPIX_META_STRING("GL_UNIFORM_BLOCK_INDEX"), jint>(); }
inline jint GLES30::GL_UNIFORM_BLOCK_NAME_LENGTH_() { return get_static_field<SCAPIX_META_STRING("GL_UNIFORM_BLOCK_NAME_LENGTH"), jint>(); }
inline jint GLES30::GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER_() { return get_static_field<SCAPIX_META_STRING("GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER"), jint>(); }
inline jint GLES30::GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER_() { return get_static_field<SCAPIX_META_STRING("GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER"), jint>(); }
inline jint GLES30::GL_UNIFORM_BUFFER_() { return get_static_field<SCAPIX_META_STRING("GL_UNIFORM_BUFFER"), jint>(); }
inline jint GLES30::GL_UNIFORM_BUFFER_BINDING_() { return get_static_field<SCAPIX_META_STRING("GL_UNIFORM_BUFFER_BINDING"), jint>(); }
inline jint GLES30::GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT_() { return get_static_field<SCAPIX_META_STRING("GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT"), jint>(); }
inline jint GLES30::GL_UNIFORM_BUFFER_SIZE_() { return get_static_field<SCAPIX_META_STRING("GL_UNIFORM_BUFFER_SIZE"), jint>(); }
inline jint GLES30::GL_UNIFORM_BUFFER_START_() { return get_static_field<SCAPIX_META_STRING("GL_UNIFORM_BUFFER_START"), jint>(); }
inline jint GLES30::GL_UNIFORM_IS_ROW_MAJOR_() { return get_static_field<SCAPIX_META_STRING("GL_UNIFORM_IS_ROW_MAJOR"), jint>(); }
inline jint GLES30::GL_UNIFORM_MATRIX_STRIDE_() { return get_static_field<SCAPIX_META_STRING("GL_UNIFORM_MATRIX_STRIDE"), jint>(); }
inline jint GLES30::GL_UNIFORM_NAME_LENGTH_() { return get_static_field<SCAPIX_META_STRING("GL_UNIFORM_NAME_LENGTH"), jint>(); }
inline jint GLES30::GL_UNIFORM_OFFSET_() { return get_static_field<SCAPIX_META_STRING("GL_UNIFORM_OFFSET"), jint>(); }
inline jint GLES30::GL_UNIFORM_SIZE_() { return get_static_field<SCAPIX_META_STRING("GL_UNIFORM_SIZE"), jint>(); }
inline jint GLES30::GL_UNIFORM_TYPE_() { return get_static_field<SCAPIX_META_STRING("GL_UNIFORM_TYPE"), jint>(); }
inline jint GLES30::GL_UNPACK_IMAGE_HEIGHT_() { return get_static_field<SCAPIX_META_STRING("GL_UNPACK_IMAGE_HEIGHT"), jint>(); }
inline jint GLES30::GL_UNPACK_ROW_LENGTH_() { return get_static_field<SCAPIX_META_STRING("GL_UNPACK_ROW_LENGTH"), jint>(); }
inline jint GLES30::GL_UNPACK_SKIP_IMAGES_() { return get_static_field<SCAPIX_META_STRING("GL_UNPACK_SKIP_IMAGES"), jint>(); }
inline jint GLES30::GL_UNPACK_SKIP_PIXELS_() { return get_static_field<SCAPIX_META_STRING("GL_UNPACK_SKIP_PIXELS"), jint>(); }
inline jint GLES30::GL_UNPACK_SKIP_ROWS_() { return get_static_field<SCAPIX_META_STRING("GL_UNPACK_SKIP_ROWS"), jint>(); }
inline jint GLES30::GL_UNSIGNALED_() { return get_static_field<SCAPIX_META_STRING("GL_UNSIGNALED"), jint>(); }
inline jint GLES30::GL_UNSIGNED_INT_10F_11F_11F_REV_() { return get_static_field<SCAPIX_META_STRING("GL_UNSIGNED_INT_10F_11F_11F_REV"), jint>(); }
inline jint GLES30::GL_UNSIGNED_INT_24_8_() { return get_static_field<SCAPIX_META_STRING("GL_UNSIGNED_INT_24_8"), jint>(); }
inline jint GLES30::GL_UNSIGNED_INT_2_10_10_10_REV_() { return get_static_field<SCAPIX_META_STRING("GL_UNSIGNED_INT_2_10_10_10_REV"), jint>(); }
inline jint GLES30::GL_UNSIGNED_INT_5_9_9_9_REV_() { return get_static_field<SCAPIX_META_STRING("GL_UNSIGNED_INT_5_9_9_9_REV"), jint>(); }
inline jint GLES30::GL_UNSIGNED_INT_SAMPLER_2D_() { return get_static_field<SCAPIX_META_STRING("GL_UNSIGNED_INT_SAMPLER_2D"), jint>(); }
inline jint GLES30::GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_() { return get_static_field<SCAPIX_META_STRING("GL_UNSIGNED_INT_SAMPLER_2D_ARRAY"), jint>(); }
inline jint GLES30::GL_UNSIGNED_INT_SAMPLER_3D_() { return get_static_field<SCAPIX_META_STRING("GL_UNSIGNED_INT_SAMPLER_3D"), jint>(); }
inline jint GLES30::GL_UNSIGNED_INT_SAMPLER_CUBE_() { return get_static_field<SCAPIX_META_STRING("GL_UNSIGNED_INT_SAMPLER_CUBE"), jint>(); }
inline jint GLES30::GL_UNSIGNED_INT_VEC2_() { return get_static_field<SCAPIX_META_STRING("GL_UNSIGNED_INT_VEC2"), jint>(); }
inline jint GLES30::GL_UNSIGNED_INT_VEC3_() { return get_static_field<SCAPIX_META_STRING("GL_UNSIGNED_INT_VEC3"), jint>(); }
inline jint GLES30::GL_UNSIGNED_INT_VEC4_() { return get_static_field<SCAPIX_META_STRING("GL_UNSIGNED_INT_VEC4"), jint>(); }
inline jint GLES30::GL_UNSIGNED_NORMALIZED_() { return get_static_field<SCAPIX_META_STRING("GL_UNSIGNED_NORMALIZED"), jint>(); }
inline jint GLES30::GL_VERTEX_ARRAY_BINDING_() { return get_static_field<SCAPIX_META_STRING("GL_VERTEX_ARRAY_BINDING"), jint>(); }
inline jint GLES30::GL_VERTEX_ATTRIB_ARRAY_DIVISOR_() { return get_static_field<SCAPIX_META_STRING("GL_VERTEX_ATTRIB_ARRAY_DIVISOR"), jint>(); }
inline jint GLES30::GL_VERTEX_ATTRIB_ARRAY_INTEGER_() { return get_static_field<SCAPIX_META_STRING("GL_VERTEX_ATTRIB_ARRAY_INTEGER"), jint>(); }
inline jint GLES30::GL_WAIT_FAILED_() { return get_static_field<SCAPIX_META_STRING("GL_WAIT_FAILED"), jint>(); }
inline ref<GLES30> GLES30::new_object() { return base_::new_object(); }
inline void GLES30::glReadBuffer(jint p1) { return call_static_method<SCAPIX_META_STRING("glReadBuffer"), void>(p1); }
inline void GLES30::glDrawRangeElements(jint p1, jint p2, jint p3, jint p4, jint p5, ref<java::nio::Buffer> p6) { return call_static_method<SCAPIX_META_STRING("glDrawRangeElements"), void>(p1, p2, p3, p4, p5, p6); }
inline void GLES30::glDrawRangeElements(jint p1, jint p2, jint p3, jint p4, jint p5, jint p6) { return call_static_method<SCAPIX_META_STRING("glDrawRangeElements"), void>(p1, p2, p3, p4, p5, p6); }
inline void GLES30::glTexImage3D(jint p1, jint p2, jint p3, jint p4, jint p5, jint p6, jint p7, jint p8, jint p9, ref<java::nio::Buffer> p10) { return call_static_method<SCAPIX_META_STRING("glTexImage3D"), void>(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10); }
inline void GLES30::glTexImage3D(jint p1, jint p2, jint p3, jint p4, jint p5, jint p6, jint p7, jint p8, jint p9, jint p10) { return call_static_method<SCAPIX_META_STRING("glTexImage3D"), void>(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10); }
inline void GLES30::glTexSubImage3D(jint p1, jint p2, jint p3, jint p4, jint p5, jint p6, jint p7, jint p8, jint p9, jint p10, ref<java::nio::Buffer> p11) { return call_static_method<SCAPIX_META_STRING("glTexSubImage3D"), void>(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11); }
inline void GLES30::glTexSubImage3D(jint p1, jint p2, jint p3, jint p4, jint p5, jint p6, jint p7, jint p8, jint p9, jint p10, jint p11) { return call_static_method<SCAPIX_META_STRING("glTexSubImage3D"), void>(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11); }
inline void GLES30::glCopyTexSubImage3D(jint p1, jint p2, jint p3, jint p4, jint p5, jint p6, jint p7, jint p8, jint p9) { return call_static_method<SCAPIX_META_STRING("glCopyTexSubImage3D"), void>(p1, p2, p3, p4, p5, p6, p7, p8, p9); }
inline void GLES30::glCompressedTexImage3D(jint p1, jint p2, jint p3, jint p4, jint p5, jint p6, jint p7, jint p8, ref<java::nio::Buffer> p9) { return call_static_method<SCAPIX_META_STRING("glCompressedTexImage3D"), void>(p1, p2, p3, p4, p5, p6, p7, p8, p9); }
inline void GLES30::glCompressedTexImage3D(jint p1, jint p2, jint p3, jint p4, jint p5, jint p6, jint p7, jint p8, jint p9) { return call_static_method<SCAPIX_META_STRING("glCompressedTexImage3D"), void>(p1, p2, p3, p4, p5, p6, p7, p8, p9); }
inline void GLES30::glCompressedTexSubImage3D(jint p1, jint p2, jint p3, jint p4, jint p5, jint p6, jint p7, jint p8, jint p9, jint p10, ref<java::nio::Buffer> p11) { return call_static_method<SCAPIX_META_STRING("glCompressedTexSubImage3D"), void>(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11); }
inline void GLES30::glCompressedTexSubImage3D(jint p1, jint p2, jint p3, jint p4, jint p5, jint p6, jint p7, jint p8, jint p9, jint p10, jint p11) { return call_static_method<SCAPIX_META_STRING("glCompressedTexSubImage3D"), void>(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11); }
inline void GLES30::glGenQueries(jint p1, ref<link::java::array<jint>> p2, jint p3) { return call_static_method<SCAPIX_META_STRING("glGenQueries"), void>(p1, p2, p3); }
inline void GLES30::glGenQueries(jint p1, ref<java::nio::IntBuffer> p2) { return call_static_method<SCAPIX_META_STRING("glGenQueries"), void>(p1, p2); }
inline void GLES30::glDeleteQueries(jint p1, ref<link::java::array<jint>> p2, jint p3) { return call_static_method<SCAPIX_META_STRING("glDeleteQueries"), void>(p1, p2, p3); }
inline void GLES30::glDeleteQueries(jint p1, ref<java::nio::IntBuffer> p2) { return call_static_method<SCAPIX_META_STRING("glDeleteQueries"), void>(p1, p2); }
inline jboolean GLES30::glIsQuery(jint p1) { return call_static_method<SCAPIX_META_STRING("glIsQuery"), jboolean>(p1); }
inline void GLES30::glBeginQuery(jint p1, jint p2) { return call_static_method<SCAPIX_META_STRING("glBeginQuery"), void>(p1, p2); }
inline void GLES30::glEndQuery(jint p1) { return call_static_method<SCAPIX_META_STRING("glEndQuery"), void>(p1); }
inline void GLES30::glGetQueryiv(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4) { return call_static_method<SCAPIX_META_STRING("glGetQueryiv"), void>(p1, p2, p3, p4); }
inline void GLES30::glGetQueryiv(jint p1, jint p2, ref<java::nio::IntBuffer> p3) { return call_static_method<SCAPIX_META_STRING("glGetQueryiv"), void>(p1, p2, p3); }
inline void GLES30::glGetQueryObjectuiv(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4) { return call_static_method<SCAPIX_META_STRING("glGetQueryObjectuiv"), void>(p1, p2, p3, p4); }
inline void GLES30::glGetQueryObjectuiv(jint p1, jint p2, ref<java::nio::IntBuffer> p3) { return call_static_method<SCAPIX_META_STRING("glGetQueryObjectuiv"), void>(p1, p2, p3); }
inline jboolean GLES30::glUnmapBuffer(jint p1) { return call_static_method<SCAPIX_META_STRING("glUnmapBuffer"), jboolean>(p1); }
inline ref<java::nio::Buffer> GLES30::glGetBufferPointerv(jint p1, jint p2) { return call_static_method<SCAPIX_META_STRING("glGetBufferPointerv"), ref<java::nio::Buffer>>(p1, p2); }
inline void GLES30::glDrawBuffers(jint p1, ref<link::java::array<jint>> p2, jint p3) { return call_static_method<SCAPIX_META_STRING("glDrawBuffers"), void>(p1, p2, p3); }
inline void GLES30::glDrawBuffers(jint p1, ref<java::nio::IntBuffer> p2) { return call_static_method<SCAPIX_META_STRING("glDrawBuffers"), void>(p1, p2); }
inline void GLES30::glUniformMatrix2x3fv(jint p1, jint p2, jboolean p3, ref<link::java::array<jfloat>> p4, jint p5) { return call_static_method<SCAPIX_META_STRING("glUniformMatrix2x3fv"), void>(p1, p2, p3, p4, p5); }
inline void GLES30::glUniformMatrix2x3fv(jint p1, jint p2, jboolean p3, ref<java::nio::FloatBuffer> p4) { return call_static_method<SCAPIX_META_STRING("glUniformMatrix2x3fv"), void>(p1, p2, p3, p4); }
inline void GLES30::glUniformMatrix3x2fv(jint p1, jint p2, jboolean p3, ref<link::java::array<jfloat>> p4, jint p5) { return call_static_method<SCAPIX_META_STRING("glUniformMatrix3x2fv"), void>(p1, p2, p3, p4, p5); }
inline void GLES30::glUniformMatrix3x2fv(jint p1, jint p2, jboolean p3, ref<java::nio::FloatBuffer> p4) { return call_static_method<SCAPIX_META_STRING("glUniformMatrix3x2fv"), void>(p1, p2, p3, p4); }
inline void GLES30::glUniformMatrix2x4fv(jint p1, jint p2, jboolean p3, ref<link::java::array<jfloat>> p4, jint p5) { return call_static_method<SCAPIX_META_STRING("glUniformMatrix2x4fv"), void>(p1, p2, p3, p4, p5); }
inline void GLES30::glUniformMatrix2x4fv(jint p1, jint p2, jboolean p3, ref<java::nio::FloatBuffer> p4) { return call_static_method<SCAPIX_META_STRING("glUniformMatrix2x4fv"), void>(p1, p2, p3, p4); }
inline void GLES30::glUniformMatrix4x2fv(jint p1, jint p2, jboolean p3, ref<link::java::array<jfloat>> p4, jint p5) { return call_static_method<SCAPIX_META_STRING("glUniformMatrix4x2fv"), void>(p1, p2, p3, p4, p5); }
inline void GLES30::glUniformMatrix4x2fv(jint p1, jint p2, jboolean p3, ref<java::nio::FloatBuffer> p4) { return call_static_method<SCAPIX_META_STRING("glUniformMatrix4x2fv"), void>(p1, p2, p3, p4); }
inline void GLES30::glUniformMatrix3x4fv(jint p1, jint p2, jboolean p3, ref<link::java::array<jfloat>> p4, jint p5) { return call_static_method<SCAPIX_META_STRING("glUniformMatrix3x4fv"), void>(p1, p2, p3, p4, p5); }
inline void GLES30::glUniformMatrix3x4fv(jint p1, jint p2, jboolean p3, ref<java::nio::FloatBuffer> p4) { return call_static_method<SCAPIX_META_STRING("glUniformMatrix3x4fv"), void>(p1, p2, p3, p4); }
inline void GLES30::glUniformMatrix4x3fv(jint p1, jint p2, jboolean p3, ref<link::java::array<jfloat>> p4, jint p5) { return call_static_method<SCAPIX_META_STRING("glUniformMatrix4x3fv"), void>(p1, p2, p3, p4, p5); }
inline void GLES30::glUniformMatrix4x3fv(jint p1, jint p2, jboolean p3, ref<java::nio::FloatBuffer> p4) { return call_static_method<SCAPIX_META_STRING("glUniformMatrix4x3fv"), void>(p1, p2, p3, p4); }
inline void GLES30::glBlitFramebuffer(jint p1, jint p2, jint p3, jint p4, jint p5, jint p6, jint p7, jint p8, jint p9, jint p10) { return call_static_method<SCAPIX_META_STRING("glBlitFramebuffer"), void>(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10); }
inline void GLES30::glRenderbufferStorageMultisample(jint p1, jint p2, jint p3, jint p4, jint p5) { return call_static_method<SCAPIX_META_STRING("glRenderbufferStorageMultisample"), void>(p1, p2, p3, p4, p5); }
inline void GLES30::glFramebufferTextureLayer(jint p1, jint p2, jint p3, jint p4, jint p5) { return call_static_method<SCAPIX_META_STRING("glFramebufferTextureLayer"), void>(p1, p2, p3, p4, p5); }
inline ref<java::nio::Buffer> GLES30::glMapBufferRange(jint p1, jint p2, jint p3, jint p4) { return call_static_method<SCAPIX_META_STRING("glMapBufferRange"), ref<java::nio::Buffer>>(p1, p2, p3, p4); }
inline void GLES30::glFlushMappedBufferRange(jint p1, jint p2, jint p3) { return call_static_method<SCAPIX_META_STRING("glFlushMappedBufferRange"), void>(p1, p2, p3); }
inline void GLES30::glBindVertexArray(jint p1) { return call_static_method<SCAPIX_META_STRING("glBindVertexArray"), void>(p1); }
inline void GLES30::glDeleteVertexArrays(jint p1, ref<link::java::array<jint>> p2, jint p3) { return call_static_method<SCAPIX_META_STRING("glDeleteVertexArrays"), void>(p1, p2, p3); }
inline void GLES30::glDeleteVertexArrays(jint p1, ref<java::nio::IntBuffer> p2) { return call_static_method<SCAPIX_META_STRING("glDeleteVertexArrays"), void>(p1, p2); }
inline void GLES30::glGenVertexArrays(jint p1, ref<link::java::array<jint>> p2, jint p3) { return call_static_method<SCAPIX_META_STRING("glGenVertexArrays"), void>(p1, p2, p3); }
inline void GLES30::glGenVertexArrays(jint p1, ref<java::nio::IntBuffer> p2) { return call_static_method<SCAPIX_META_STRING("glGenVertexArrays"), void>(p1, p2); }
inline jboolean GLES30::glIsVertexArray(jint p1) { return call_static_method<SCAPIX_META_STRING("glIsVertexArray"), jboolean>(p1); }
inline void GLES30::glGetIntegeri_v(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4) { return call_static_method<SCAPIX_META_STRING("glGetIntegeri_v"), void>(p1, p2, p3, p4); }
inline void GLES30::glGetIntegeri_v(jint p1, jint p2, ref<java::nio::IntBuffer> p3) { return call_static_method<SCAPIX_META_STRING("glGetIntegeri_v"), void>(p1, p2, p3); }
inline void GLES30::glBeginTransformFeedback(jint p1) { return call_static_method<SCAPIX_META_STRING("glBeginTransformFeedback"), void>(p1); }
inline void GLES30::glEndTransformFeedback() { return call_static_method<SCAPIX_META_STRING("glEndTransformFeedback"), void>(); }
inline void GLES30::glBindBufferRange(jint p1, jint p2, jint p3, jint p4, jint p5) { return call_static_method<SCAPIX_META_STRING("glBindBufferRange"), void>(p1, p2, p3, p4, p5); }
inline void GLES30::glBindBufferBase(jint p1, jint p2, jint p3) { return call_static_method<SCAPIX_META_STRING("glBindBufferBase"), void>(p1, p2, p3); }
inline void GLES30::glTransformFeedbackVaryings(jint p1, ref<link::java::array<java::lang::String>> p2, jint p3) { return call_static_method<SCAPIX_META_STRING("glTransformFeedbackVaryings"), void>(p1, p2, p3); }
inline void GLES30::glGetTransformFeedbackVarying(jint p1, jint p2, jint p3, ref<link::java::array<jint>> p4, jint p5, ref<link::java::array<jint>> p6, jint p7, ref<link::java::array<jint>> p8, jint p9, ref<link::java::array<jbyte>> p10, jint p11) { return call_static_method<SCAPIX_META_STRING("glGetTransformFeedbackVarying"), void>(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11); }
inline void GLES30::glGetTransformFeedbackVarying(jint p1, jint p2, jint p3, ref<java::nio::IntBuffer> p4, ref<java::nio::IntBuffer> p5, ref<java::nio::IntBuffer> p6, jbyte p7) { return call_static_method<SCAPIX_META_STRING("glGetTransformFeedbackVarying"), void>(p1, p2, p3, p4, p5, p6, p7); }
inline void GLES30::glGetTransformFeedbackVarying(jint p1, jint p2, jint p3, ref<java::nio::IntBuffer> p4, ref<java::nio::IntBuffer> p5, ref<java::nio::IntBuffer> p6, ref<java::nio::ByteBuffer> p7) { return call_static_method<SCAPIX_META_STRING("glGetTransformFeedbackVarying"), void>(p1, p2, p3, p4, p5, p6, p7); }
inline ref<java::lang::String> GLES30::glGetTransformFeedbackVarying(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4, ref<link::java::array<jint>> p5, jint p6) { return call_static_method<SCAPIX_META_STRING("glGetTransformFeedbackVarying"), ref<java::lang::String>>(p1, p2, p3, p4, p5, p6); }
inline ref<java::lang::String> GLES30::glGetTransformFeedbackVarying(jint p1, jint p2, ref<java::nio::IntBuffer> p3, ref<java::nio::IntBuffer> p4) { return call_static_method<SCAPIX_META_STRING("glGetTransformFeedbackVarying"), ref<java::lang::String>>(p1, p2, p3, p4); }
inline void GLES30::glVertexAttribIPointer(jint index, jint size, jint type, jint stride, ref<java::nio::Buffer> pointer) { return call_static_method<SCAPIX_META_STRING("glVertexAttribIPointer"), void>(index, size, type, stride, pointer); }
inline void GLES30::glVertexAttribIPointer(jint p1, jint p2, jint p3, jint p4, jint p5) { return call_static_method<SCAPIX_META_STRING("glVertexAttribIPointer"), void>(p1, p2, p3, p4, p5); }
inline void GLES30::glGetVertexAttribIiv(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4) { return call_static_method<SCAPIX_META_STRING("glGetVertexAttribIiv"), void>(p1, p2, p3, p4); }
inline void GLES30::glGetVertexAttribIiv(jint p1, jint p2, ref<java::nio::IntBuffer> p3) { return call_static_method<SCAPIX_META_STRING("glGetVertexAttribIiv"), void>(p1, p2, p3); }
inline void GLES30::glGetVertexAttribIuiv(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4) { return call_static_method<SCAPIX_META_STRING("glGetVertexAttribIuiv"), void>(p1, p2, p3, p4); }
inline void GLES30::glGetVertexAttribIuiv(jint p1, jint p2, ref<java::nio::IntBuffer> p3) { return call_static_method<SCAPIX_META_STRING("glGetVertexAttribIuiv"), void>(p1, p2, p3); }
inline void GLES30::glVertexAttribI4i(jint p1, jint p2, jint p3, jint p4, jint p5) { return call_static_method<SCAPIX_META_STRING("glVertexAttribI4i"), void>(p1, p2, p3, p4, p5); }
inline void GLES30::glVertexAttribI4ui(jint p1, jint p2, jint p3, jint p4, jint p5) { return call_static_method<SCAPIX_META_STRING("glVertexAttribI4ui"), void>(p1, p2, p3, p4, p5); }
inline void GLES30::glVertexAttribI4iv(jint p1, ref<link::java::array<jint>> p2, jint p3) { return call_static_method<SCAPIX_META_STRING("glVertexAttribI4iv"), void>(p1, p2, p3); }
inline void GLES30::glVertexAttribI4iv(jint p1, ref<java::nio::IntBuffer> p2) { return call_static_method<SCAPIX_META_STRING("glVertexAttribI4iv"), void>(p1, p2); }
inline void GLES30::glVertexAttribI4uiv(jint p1, ref<link::java::array<jint>> p2, jint p3) { return call_static_method<SCAPIX_META_STRING("glVertexAttribI4uiv"), void>(p1, p2, p3); }
inline void GLES30::glVertexAttribI4uiv(jint p1, ref<java::nio::IntBuffer> p2) { return call_static_method<SCAPIX_META_STRING("glVertexAttribI4uiv"), void>(p1, p2); }
inline void GLES30::glGetUniformuiv(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4) { return call_static_method<SCAPIX_META_STRING("glGetUniformuiv"), void>(p1, p2, p3, p4); }
inline void GLES30::glGetUniformuiv(jint p1, jint p2, ref<java::nio::IntBuffer> p3) { return call_static_method<SCAPIX_META_STRING("glGetUniformuiv"), void>(p1, p2, p3); }
inline jint GLES30::glGetFragDataLocation(jint p1, ref<java::lang::String> p2) { return call_static_method<SCAPIX_META_STRING("glGetFragDataLocation"), jint>(p1, p2); }
inline void GLES30::glUniform1ui(jint p1, jint p2) { return call_static_method<SCAPIX_META_STRING("glUniform1ui"), void>(p1, p2); }
inline void GLES30::glUniform2ui(jint p1, jint p2, jint p3) { return call_static_method<SCAPIX_META_STRING("glUniform2ui"), void>(p1, p2, p3); }
inline void GLES30::glUniform3ui(jint p1, jint p2, jint p3, jint p4) { return call_static_method<SCAPIX_META_STRING("glUniform3ui"), void>(p1, p2, p3, p4); }
inline void GLES30::glUniform4ui(jint p1, jint p2, jint p3, jint p4, jint p5) { return call_static_method<SCAPIX_META_STRING("glUniform4ui"), void>(p1, p2, p3, p4, p5); }
inline void GLES30::glUniform1uiv(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4) { return call_static_method<SCAPIX_META_STRING("glUniform1uiv"), void>(p1, p2, p3, p4); }
inline void GLES30::glUniform1uiv(jint p1, jint p2, ref<java::nio::IntBuffer> p3) { return call_static_method<SCAPIX_META_STRING("glUniform1uiv"), void>(p1, p2, p3); }
inline void GLES30::glUniform2uiv(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4) { return call_static_method<SCAPIX_META_STRING("glUniform2uiv"), void>(p1, p2, p3, p4); }
inline void GLES30::glUniform2uiv(jint p1, jint p2, ref<java::nio::IntBuffer> p3) { return call_static_method<SCAPIX_META_STRING("glUniform2uiv"), void>(p1, p2, p3); }
inline void GLES30::glUniform3uiv(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4) { return call_static_method<SCAPIX_META_STRING("glUniform3uiv"), void>(p1, p2, p3, p4); }
inline void GLES30::glUniform3uiv(jint p1, jint p2, ref<java::nio::IntBuffer> p3) { return call_static_method<SCAPIX_META_STRING("glUniform3uiv"), void>(p1, p2, p3); }
inline void GLES30::glUniform4uiv(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4) { return call_static_method<SCAPIX_META_STRING("glUniform4uiv"), void>(p1, p2, p3, p4); }
inline void GLES30::glUniform4uiv(jint p1, jint p2, ref<java::nio::IntBuffer> p3) { return call_static_method<SCAPIX_META_STRING("glUniform4uiv"), void>(p1, p2, p3); }
inline void GLES30::glClearBufferiv(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4) { return call_static_method<SCAPIX_META_STRING("glClearBufferiv"), void>(p1, p2, p3, p4); }
inline void GLES30::glClearBufferiv(jint p1, jint p2, ref<java::nio::IntBuffer> p3) { return call_static_method<SCAPIX_META_STRING("glClearBufferiv"), void>(p1, p2, p3); }
inline void GLES30::glClearBufferuiv(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4) { return call_static_method<SCAPIX_META_STRING("glClearBufferuiv"), void>(p1, p2, p3, p4); }
inline void GLES30::glClearBufferuiv(jint p1, jint p2, ref<java::nio::IntBuffer> p3) { return call_static_method<SCAPIX_META_STRING("glClearBufferuiv"), void>(p1, p2, p3); }
inline void GLES30::glClearBufferfv(jint p1, jint p2, ref<link::java::array<jfloat>> p3, jint p4) { return call_static_method<SCAPIX_META_STRING("glClearBufferfv"), void>(p1, p2, p3, p4); }
inline void GLES30::glClearBufferfv(jint p1, jint p2, ref<java::nio::FloatBuffer> p3) { return call_static_method<SCAPIX_META_STRING("glClearBufferfv"), void>(p1, p2, p3); }
inline void GLES30::glClearBufferfi(jint p1, jint p2, jfloat p3, jint p4) { return call_static_method<SCAPIX_META_STRING("glClearBufferfi"), void>(p1, p2, p3, p4); }
inline ref<java::lang::String> GLES30::glGetStringi(jint p1, jint p2) { return call_static_method<SCAPIX_META_STRING("glGetStringi"), ref<java::lang::String>>(p1, p2); }
inline void GLES30::glCopyBufferSubData(jint p1, jint p2, jint p3, jint p4, jint p5) { return call_static_method<SCAPIX_META_STRING("glCopyBufferSubData"), void>(p1, p2, p3, p4, p5); }
inline void GLES30::glGetUniformIndices(jint p1, ref<link::java::array<java::lang::String>> p2, ref<link::java::array<jint>> p3, jint p4) { return call_static_method<SCAPIX_META_STRING("glGetUniformIndices"), void>(p1, p2, p3, p4); }
inline void GLES30::glGetUniformIndices(jint p1, ref<link::java::array<java::lang::String>> p2, ref<java::nio::IntBuffer> p3) { return call_static_method<SCAPIX_META_STRING("glGetUniformIndices"), void>(p1, p2, p3); }
inline void GLES30::glGetActiveUniformsiv(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4, jint p5, ref<link::java::array<jint>> p6, jint p7) { return call_static_method<SCAPIX_META_STRING("glGetActiveUniformsiv"), void>(p1, p2, p3, p4, p5, p6, p7); }
inline void GLES30::glGetActiveUniformsiv(jint p1, jint p2, ref<java::nio::IntBuffer> p3, jint p4, ref<java::nio::IntBuffer> p5) { return call_static_method<SCAPIX_META_STRING("glGetActiveUniformsiv"), void>(p1, p2, p3, p4, p5); }
inline jint GLES30::glGetUniformBlockIndex(jint p1, ref<java::lang::String> p2) { return call_static_method<SCAPIX_META_STRING("glGetUniformBlockIndex"), jint>(p1, p2); }
inline void GLES30::glGetActiveUniformBlockiv(jint p1, jint p2, jint p3, ref<link::java::array<jint>> p4, jint p5) { return call_static_method<SCAPIX_META_STRING("glGetActiveUniformBlockiv"), void>(p1, p2, p3, p4, p5); }
inline void GLES30::glGetActiveUniformBlockiv(jint p1, jint p2, jint p3, ref<java::nio::IntBuffer> p4) { return call_static_method<SCAPIX_META_STRING("glGetActiveUniformBlockiv"), void>(p1, p2, p3, p4); }
inline void GLES30::glGetActiveUniformBlockName(jint p1, jint p2, jint p3, ref<link::java::array<jint>> p4, jint p5, ref<link::java::array<jbyte>> p6, jint p7) { return call_static_method<SCAPIX_META_STRING("glGetActiveUniformBlockName"), void>(p1, p2, p3, p4, p5, p6, p7); }
inline void GLES30::glGetActiveUniformBlockName(jint p1, jint p2, ref<java::nio::Buffer> p3, ref<java::nio::Buffer> p4) { return call_static_method<SCAPIX_META_STRING("glGetActiveUniformBlockName"), void>(p1, p2, p3, p4); }
inline ref<java::lang::String> GLES30::glGetActiveUniformBlockName(jint p1, jint p2) { return call_static_method<SCAPIX_META_STRING("glGetActiveUniformBlockName"), ref<java::lang::String>>(p1, p2); }
inline void GLES30::glUniformBlockBinding(jint p1, jint p2, jint p3) { return call_static_method<SCAPIX_META_STRING("glUniformBlockBinding"), void>(p1, p2, p3); }
inline void GLES30::glDrawArraysInstanced(jint p1, jint p2, jint p3, jint p4) { return call_static_method<SCAPIX_META_STRING("glDrawArraysInstanced"), void>(p1, p2, p3, p4); }
inline void GLES30::glDrawElementsInstanced(jint p1, jint p2, jint p3, ref<java::nio::Buffer> p4, jint p5) { return call_static_method<SCAPIX_META_STRING("glDrawElementsInstanced"), void>(p1, p2, p3, p4, p5); }
inline void GLES30::glDrawElementsInstanced(jint p1, jint p2, jint p3, jint p4, jint p5) { return call_static_method<SCAPIX_META_STRING("glDrawElementsInstanced"), void>(p1, p2, p3, p4, p5); }
inline jlong GLES30::glFenceSync(jint p1, jint p2) { return call_static_method<SCAPIX_META_STRING("glFenceSync"), jlong>(p1, p2); }
inline jboolean GLES30::glIsSync(jlong p1) { return call_static_method<SCAPIX_META_STRING("glIsSync"), jboolean>(p1); }
inline void GLES30::glDeleteSync(jlong p1) { return call_static_method<SCAPIX_META_STRING("glDeleteSync"), void>(p1); }
inline jint GLES30::glClientWaitSync(jlong p1, jint p2, jlong p3) { return call_static_method<SCAPIX_META_STRING("glClientWaitSync"), jint>(p1, p2, p3); }
inline void GLES30::glWaitSync(jlong p1, jint p2, jlong p3) { return call_static_method<SCAPIX_META_STRING("glWaitSync"), void>(p1, p2, p3); }
inline void GLES30::glGetInteger64v(jint p1, ref<link::java::array<jlong>> p2, jint p3) { return call_static_method<SCAPIX_META_STRING("glGetInteger64v"), void>(p1, p2, p3); }
inline void GLES30::glGetInteger64v(jint p1, ref<java::nio::LongBuffer> p2) { return call_static_method<SCAPIX_META_STRING("glGetInteger64v"), void>(p1, p2); }
inline void GLES30::glGetSynciv(jlong p1, jint p2, jint p3, ref<link::java::array<jint>> p4, jint p5, ref<link::java::array<jint>> p6, jint p7) { return call_static_method<SCAPIX_META_STRING("glGetSynciv"), void>(p1, p2, p3, p4, p5, p6, p7); }
inline void GLES30::glGetSynciv(jlong p1, jint p2, jint p3, ref<java::nio::IntBuffer> p4, ref<java::nio::IntBuffer> p5) { return call_static_method<SCAPIX_META_STRING("glGetSynciv"), void>(p1, p2, p3, p4, p5); }
inline void GLES30::glGetInteger64i_v(jint p1, jint p2, ref<link::java::array<jlong>> p3, jint p4) { return call_static_method<SCAPIX_META_STRING("glGetInteger64i_v"), void>(p1, p2, p3, p4); }
inline void GLES30::glGetInteger64i_v(jint p1, jint p2, ref<java::nio::LongBuffer> p3) { return call_static_method<SCAPIX_META_STRING("glGetInteger64i_v"), void>(p1, p2, p3); }
inline void GLES30::glGetBufferParameteri64v(jint p1, jint p2, ref<link::java::array<jlong>> p3, jint p4) { return call_static_method<SCAPIX_META_STRING("glGetBufferParameteri64v"), void>(p1, p2, p3, p4); }
inline void GLES30::glGetBufferParameteri64v(jint p1, jint p2, ref<java::nio::LongBuffer> p3) { return call_static_method<SCAPIX_META_STRING("glGetBufferParameteri64v"), void>(p1, p2, p3); }
inline void GLES30::glGenSamplers(jint p1, ref<link::java::array<jint>> p2, jint p3) { return call_static_method<SCAPIX_META_STRING("glGenSamplers"), void>(p1, p2, p3); }
inline void GLES30::glGenSamplers(jint p1, ref<java::nio::IntBuffer> p2) { return call_static_method<SCAPIX_META_STRING("glGenSamplers"), void>(p1, p2); }
inline void GLES30::glDeleteSamplers(jint p1, ref<link::java::array<jint>> p2, jint p3) { return call_static_method<SCAPIX_META_STRING("glDeleteSamplers"), void>(p1, p2, p3); }
inline void GLES30::glDeleteSamplers(jint p1, ref<java::nio::IntBuffer> p2) { return call_static_method<SCAPIX_META_STRING("glDeleteSamplers"), void>(p1, p2); }
inline jboolean GLES30::glIsSampler(jint p1) { return call_static_method<SCAPIX_META_STRING("glIsSampler"), jboolean>(p1); }
inline void GLES30::glBindSampler(jint p1, jint p2) { return call_static_method<SCAPIX_META_STRING("glBindSampler"), void>(p1, p2); }
inline void GLES30::glSamplerParameteri(jint p1, jint p2, jint p3) { return call_static_method<SCAPIX_META_STRING("glSamplerParameteri"), void>(p1, p2, p3); }
inline void GLES30::glSamplerParameteriv(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4) { return call_static_method<SCAPIX_META_STRING("glSamplerParameteriv"), void>(p1, p2, p3, p4); }
inline void GLES30::glSamplerParameteriv(jint p1, jint p2, ref<java::nio::IntBuffer> p3) { return call_static_method<SCAPIX_META_STRING("glSamplerParameteriv"), void>(p1, p2, p3); }
inline void GLES30::glSamplerParameterf(jint p1, jint p2, jfloat p3) { return call_static_method<SCAPIX_META_STRING("glSamplerParameterf"), void>(p1, p2, p3); }
inline void GLES30::glSamplerParameterfv(jint p1, jint p2, ref<link::java::array<jfloat>> p3, jint p4) { return call_static_method<SCAPIX_META_STRING("glSamplerParameterfv"), void>(p1, p2, p3, p4); }
inline void GLES30::glSamplerParameterfv(jint p1, jint p2, ref<java::nio::FloatBuffer> p3) { return call_static_method<SCAPIX_META_STRING("glSamplerParameterfv"), void>(p1, p2, p3); }
inline void GLES30::glGetSamplerParameteriv(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4) { return call_static_method<SCAPIX_META_STRING("glGetSamplerParameteriv"), void>(p1, p2, p3, p4); }
inline void GLES30::glGetSamplerParameteriv(jint p1, jint p2, ref<java::nio::IntBuffer> p3) { return call_static_method<SCAPIX_META_STRING("glGetSamplerParameteriv"), void>(p1, p2, p3); }
inline void GLES30::glGetSamplerParameterfv(jint p1, jint p2, ref<link::java::array<jfloat>> p3, jint p4) { return call_static_method<SCAPIX_META_STRING("glGetSamplerParameterfv"), void>(p1, p2, p3, p4); }
inline void GLES30::glGetSamplerParameterfv(jint p1, jint p2, ref<java::nio::FloatBuffer> p3) { return call_static_method<SCAPIX_META_STRING("glGetSamplerParameterfv"), void>(p1, p2, p3); }
inline void GLES30::glVertexAttribDivisor(jint p1, jint p2) { return call_static_method<SCAPIX_META_STRING("glVertexAttribDivisor"), void>(p1, p2); }
inline void GLES30::glBindTransformFeedback(jint p1, jint p2) { return call_static_method<SCAPIX_META_STRING("glBindTransformFeedback"), void>(p1, p2); }
inline void GLES30::glDeleteTransformFeedbacks(jint p1, ref<link::java::array<jint>> p2, jint p3) { return call_static_method<SCAPIX_META_STRING("glDeleteTransformFeedbacks"), void>(p1, p2, p3); }
inline void GLES30::glDeleteTransformFeedbacks(jint p1, ref<java::nio::IntBuffer> p2) { return call_static_method<SCAPIX_META_STRING("glDeleteTransformFeedbacks"), void>(p1, p2); }
inline void GLES30::glGenTransformFeedbacks(jint p1, ref<link::java::array<jint>> p2, jint p3) { return call_static_method<SCAPIX_META_STRING("glGenTransformFeedbacks"), void>(p1, p2, p3); }
inline void GLES30::glGenTransformFeedbacks(jint p1, ref<java::nio::IntBuffer> p2) { return call_static_method<SCAPIX_META_STRING("glGenTransformFeedbacks"), void>(p1, p2); }
inline jboolean GLES30::glIsTransformFeedback(jint p1) { return call_static_method<SCAPIX_META_STRING("glIsTransformFeedback"), jboolean>(p1); }
inline void GLES30::glPauseTransformFeedback() { return call_static_method<SCAPIX_META_STRING("glPauseTransformFeedback"), void>(); }
inline void GLES30::glResumeTransformFeedback() { return call_static_method<SCAPIX_META_STRING("glResumeTransformFeedback"), void>(); }
inline void GLES30::glGetProgramBinary(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4, ref<link::java::array<jint>> p5, jint p6, ref<java::nio::Buffer> p7) { return call_static_method<SCAPIX_META_STRING("glGetProgramBinary"), void>(p1, p2, p3, p4, p5, p6, p7); }
inline void GLES30::glGetProgramBinary(jint p1, jint p2, ref<java::nio::IntBuffer> p3, ref<java::nio::IntBuffer> p4, ref<java::nio::Buffer> p5) { return call_static_method<SCAPIX_META_STRING("glGetProgramBinary"), void>(p1, p2, p3, p4, p5); }
inline void GLES30::glProgramBinary(jint p1, jint p2, ref<java::nio::Buffer> p3, jint p4) { return call_static_method<SCAPIX_META_STRING("glProgramBinary"), void>(p1, p2, p3, p4); }
inline void GLES30::glProgramParameteri(jint p1, jint p2, jint p3) { return call_static_method<SCAPIX_META_STRING("glProgramParameteri"), void>(p1, p2, p3); }
inline void GLES30::glInvalidateFramebuffer(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4) { return call_static_method<SCAPIX_META_STRING("glInvalidateFramebuffer"), void>(p1, p2, p3, p4); }
inline void GLES30::glInvalidateFramebuffer(jint p1, jint p2, ref<java::nio::IntBuffer> p3) { return call_static_method<SCAPIX_META_STRING("glInvalidateFramebuffer"), void>(p1, p2, p3); }
inline void GLES30::glInvalidateSubFramebuffer(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4, jint p5, jint p6, jint p7, jint p8) { return call_static_method<SCAPIX_META_STRING("glInvalidateSubFramebuffer"), void>(p1, p2, p3, p4, p5, p6, p7, p8); }
inline void GLES30::glInvalidateSubFramebuffer(jint p1, jint p2, ref<java::nio::IntBuffer> p3, jint p4, jint p5, jint p6, jint p7) { return call_static_method<SCAPIX_META_STRING("glInvalidateSubFramebuffer"), void>(p1, p2, p3, p4, p5, p6, p7); }
inline void GLES30::glTexStorage2D(jint p1, jint p2, jint p3, jint p4, jint p5) { return call_static_method<SCAPIX_META_STRING("glTexStorage2D"), void>(p1, p2, p3, p4, p5); }
inline void GLES30::glTexStorage3D(jint p1, jint p2, jint p3, jint p4, jint p5, jint p6) { return call_static_method<SCAPIX_META_STRING("glTexStorage3D"), void>(p1, p2, p3, p4, p5, p6); }
inline void GLES30::glGetInternalformativ(jint p1, jint p2, jint p3, jint p4, ref<link::java::array<jint>> p5, jint p6) { return call_static_method<SCAPIX_META_STRING("glGetInternalformativ"), void>(p1, p2, p3, p4, p5, p6); }
inline void GLES30::glGetInternalformativ(jint p1, jint p2, jint p3, jint p4, ref<java::nio::IntBuffer> p5) { return call_static_method<SCAPIX_META_STRING("glGetInternalformativ"), void>(p1, p2, p3, p4, p5); }
inline void GLES30::glReadPixels(jint p1, jint p2, jint p3, jint p4, jint p5, jint p6, jint p7) { return call_static_method<SCAPIX_META_STRING("glReadPixels"), void>(p1, p2, p3, p4, p5, p6, p7); }

} // namespace android::opengl
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_OPENGL_GLES30_H
