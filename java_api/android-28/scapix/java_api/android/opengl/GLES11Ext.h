// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_OPENGL_GLES11EXT_H
#define SCAPIX_ANDROID_OPENGL_GLES11EXT_H

namespace scapix::java_api {

namespace java::nio { class Buffer; }
namespace java::nio { class FloatBuffer; }
namespace java::nio { class IntBuffer; }
namespace java::nio { class ShortBuffer; }

namespace android::opengl {

class GLES11Ext : public object_base<SCAPIX_META_STRING("android/opengl/GLES11Ext"),
	java::lang::Object>
{
public:

	static jint GL_3DC_XY_AMD_();
	static jint GL_3DC_X_AMD_();
	static jint GL_ATC_RGBA_EXPLICIT_ALPHA_AMD_();
	static jint GL_ATC_RGBA_INTERPOLATED_ALPHA_AMD_();
	static jint GL_ATC_RGB_AMD_();
	static jint GL_BGRA_();
	static jint GL_BLEND_DST_ALPHA_OES_();
	static jint GL_BLEND_DST_RGB_OES_();
	static jint GL_BLEND_EQUATION_ALPHA_OES_();
	static jint GL_BLEND_EQUATION_OES_();
	static jint GL_BLEND_EQUATION_RGB_OES_();
	static jint GL_BLEND_SRC_ALPHA_OES_();
	static jint GL_BLEND_SRC_RGB_OES_();
	static jint GL_BUFFER_ACCESS_OES_();
	static jint GL_BUFFER_MAPPED_OES_();
	static jint GL_BUFFER_MAP_POINTER_OES_();
	static jint GL_COLOR_ATTACHMENT0_OES_();
	static jint GL_CURRENT_PALETTE_MATRIX_OES_();
	static jint GL_DECR_WRAP_OES_();
	static jint GL_DEPTH24_STENCIL8_OES_();
	static jint GL_DEPTH_ATTACHMENT_OES_();
	static jint GL_DEPTH_COMPONENT16_OES_();
	static jint GL_DEPTH_COMPONENT24_OES_();
	static jint GL_DEPTH_COMPONENT32_OES_();
	static jint GL_DEPTH_STENCIL_OES_();
	static jint GL_ETC1_RGB8_OES_();
	static jint GL_FIXED_OES_();
	static jint GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_OES_();
	static jint GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_OES_();
	static jint GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_OES_();
	static jint GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_OES_();
	static jint GL_FRAMEBUFFER_BINDING_OES_();
	static jint GL_FRAMEBUFFER_COMPLETE_OES_();
	static jint GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_OES_();
	static jint GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_OES_();
	static jint GL_FRAMEBUFFER_INCOMPLETE_FORMATS_OES_();
	static jint GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_OES_();
	static jint GL_FRAMEBUFFER_OES_();
	static jint GL_FRAMEBUFFER_UNSUPPORTED_OES_();
	static jint GL_FUNC_ADD_OES_();
	static jint GL_FUNC_REVERSE_SUBTRACT_OES_();
	static jint GL_FUNC_SUBTRACT_OES_();
	static jint GL_INCR_WRAP_OES_();
	static jint GL_INVALID_FRAMEBUFFER_OPERATION_OES_();
	static jint GL_MATRIX_INDEX_ARRAY_BUFFER_BINDING_OES_();
	static jint GL_MATRIX_INDEX_ARRAY_OES_();
	static jint GL_MATRIX_INDEX_ARRAY_POINTER_OES_();
	static jint GL_MATRIX_INDEX_ARRAY_SIZE_OES_();
	static jint GL_MATRIX_INDEX_ARRAY_STRIDE_OES_();
	static jint GL_MATRIX_INDEX_ARRAY_TYPE_OES_();
	static jint GL_MATRIX_PALETTE_OES_();
	static jint GL_MAX_CUBE_MAP_TEXTURE_SIZE_OES_();
	static jint GL_MAX_PALETTE_MATRICES_OES_();
	static jint GL_MAX_RENDERBUFFER_SIZE_OES_();
	static jint GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT_();
	static jint GL_MAX_VERTEX_UNITS_OES_();
	static jint GL_MIRRORED_REPEAT_OES_();
	static jint GL_MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES_();
	static jint GL_NONE_OES_();
	static jint GL_NORMAL_MAP_OES_();
	static jint GL_PROJECTION_MATRIX_FLOAT_AS_INT_BITS_OES_();
	static jint GL_REFLECTION_MAP_OES_();
	static jint GL_RENDERBUFFER_ALPHA_SIZE_OES_();
	static jint GL_RENDERBUFFER_BINDING_OES_();
	static jint GL_RENDERBUFFER_BLUE_SIZE_OES_();
	static jint GL_RENDERBUFFER_DEPTH_SIZE_OES_();
	static jint GL_RENDERBUFFER_GREEN_SIZE_OES_();
	static jint GL_RENDERBUFFER_HEIGHT_OES_();
	static jint GL_RENDERBUFFER_INTERNAL_FORMAT_OES_();
	static jint GL_RENDERBUFFER_OES_();
	static jint GL_RENDERBUFFER_RED_SIZE_OES_();
	static jint GL_RENDERBUFFER_STENCIL_SIZE_OES_();
	static jint GL_RENDERBUFFER_WIDTH_OES_();
	static jint GL_REQUIRED_TEXTURE_IMAGE_UNITS_OES_();
	static jint GL_RGB565_OES_();
	static jint GL_RGB5_A1_OES_();
	static jint GL_RGB8_OES_();
	static jint GL_RGBA4_OES_();
	static jint GL_RGBA8_OES_();
	static jint GL_SAMPLER_EXTERNAL_OES_();
	static jint GL_STENCIL_ATTACHMENT_OES_();
	static jint GL_STENCIL_INDEX1_OES_();
	static jint GL_STENCIL_INDEX4_OES_();
	static jint GL_STENCIL_INDEX8_OES_();
	static jint GL_TEXTURE_BINDING_CUBE_MAP_OES_();
	static jint GL_TEXTURE_BINDING_EXTERNAL_OES_();
	static jint GL_TEXTURE_CROP_RECT_OES_();
	static jint GL_TEXTURE_CUBE_MAP_NEGATIVE_X_OES_();
	static jint GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_OES_();
	static jint GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_OES_();
	static jint GL_TEXTURE_CUBE_MAP_OES_();
	static jint GL_TEXTURE_CUBE_MAP_POSITIVE_X_OES_();
	static jint GL_TEXTURE_CUBE_MAP_POSITIVE_Y_OES_();
	static jint GL_TEXTURE_CUBE_MAP_POSITIVE_Z_OES_();
	static jint GL_TEXTURE_EXTERNAL_OES_();
	static jint GL_TEXTURE_GEN_MODE_OES_();
	static jint GL_TEXTURE_GEN_STR_OES_();
	static jint GL_TEXTURE_MATRIX_FLOAT_AS_INT_BITS_OES_();
	static jint GL_TEXTURE_MAX_ANISOTROPY_EXT_();
	static jint GL_UNSIGNED_INT_24_8_OES_();
	static jint GL_WEIGHT_ARRAY_BUFFER_BINDING_OES_();
	static jint GL_WEIGHT_ARRAY_OES_();
	static jint GL_WEIGHT_ARRAY_POINTER_OES_();
	static jint GL_WEIGHT_ARRAY_SIZE_OES_();
	static jint GL_WEIGHT_ARRAY_STRIDE_OES_();
	static jint GL_WEIGHT_ARRAY_TYPE_OES_();
	static jint GL_WRITE_ONLY_OES_();

	static ref<GLES11Ext> new_object();
	static void glBlendEquationSeparateOES(jint p1, jint p2);
	static void glBlendFuncSeparateOES(jint p1, jint p2, jint p3, jint p4);
	static void glBlendEquationOES(jint p1);
	static void glDrawTexsOES(jshort p1, jshort p2, jshort p3, jshort p4, jshort p5);
	static void glDrawTexiOES(jint p1, jint p2, jint p3, jint p4, jint p5);
	static void glDrawTexxOES(jint p1, jint p2, jint p3, jint p4, jint p5);
	static void glDrawTexsvOES(ref<link::java::array<jshort>> p1, jint p2);
	static void glDrawTexsvOES(ref<java::nio::ShortBuffer> p1);
	static void glDrawTexivOES(ref<link::java::array<jint>> p1, jint p2);
	static void glDrawTexivOES(ref<java::nio::IntBuffer> p1);
	static void glDrawTexxvOES(ref<link::java::array<jint>> p1, jint p2);
	static void glDrawTexxvOES(ref<java::nio::IntBuffer> p1);
	static void glDrawTexfOES(jfloat p1, jfloat p2, jfloat p3, jfloat p4, jfloat p5);
	static void glDrawTexfvOES(ref<link::java::array<jfloat>> p1, jint p2);
	static void glDrawTexfvOES(ref<java::nio::FloatBuffer> p1);
	static void glEGLImageTargetTexture2DOES(jint p1, ref<java::nio::Buffer> p2);
	static void glEGLImageTargetRenderbufferStorageOES(jint p1, ref<java::nio::Buffer> p2);
	static void glAlphaFuncxOES(jint p1, jint p2);
	static void glClearColorxOES(jint p1, jint p2, jint p3, jint p4);
	static void glClearDepthxOES(jint p1);
	static void glClipPlanexOES(jint p1, ref<link::java::array<jint>> p2, jint p3);
	static void glClipPlanexOES(jint p1, ref<java::nio::IntBuffer> p2);
	static void glColor4xOES(jint p1, jint p2, jint p3, jint p4);
	static void glDepthRangexOES(jint p1, jint p2);
	static void glFogxOES(jint p1, jint p2);
	static void glFogxvOES(jint p1, ref<link::java::array<jint>> p2, jint p3);
	static void glFogxvOES(jint p1, ref<java::nio::IntBuffer> p2);
	static void glFrustumxOES(jint p1, jint p2, jint p3, jint p4, jint p5, jint p6);
	static void glGetClipPlanexOES(jint p1, ref<link::java::array<jint>> p2, jint p3);
	static void glGetClipPlanexOES(jint p1, ref<java::nio::IntBuffer> p2);
	static void glGetFixedvOES(jint p1, ref<link::java::array<jint>> p2, jint p3);
	static void glGetFixedvOES(jint p1, ref<java::nio::IntBuffer> p2);
	static void glGetLightxvOES(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4);
	static void glGetLightxvOES(jint p1, jint p2, ref<java::nio::IntBuffer> p3);
	static void glGetMaterialxvOES(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4);
	static void glGetMaterialxvOES(jint p1, jint p2, ref<java::nio::IntBuffer> p3);
	static void glGetTexEnvxvOES(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4);
	static void glGetTexEnvxvOES(jint p1, jint p2, ref<java::nio::IntBuffer> p3);
	static void glGetTexParameterxvOES(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4);
	static void glGetTexParameterxvOES(jint p1, jint p2, ref<java::nio::IntBuffer> p3);
	static void glLightModelxOES(jint p1, jint p2);
	static void glLightModelxvOES(jint p1, ref<link::java::array<jint>> p2, jint p3);
	static void glLightModelxvOES(jint p1, ref<java::nio::IntBuffer> p2);
	static void glLightxOES(jint p1, jint p2, jint p3);
	static void glLightxvOES(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4);
	static void glLightxvOES(jint p1, jint p2, ref<java::nio::IntBuffer> p3);
	static void glLineWidthxOES(jint p1);
	static void glLoadMatrixxOES(ref<link::java::array<jint>> p1, jint p2);
	static void glLoadMatrixxOES(ref<java::nio::IntBuffer> p1);
	static void glMaterialxOES(jint p1, jint p2, jint p3);
	static void glMaterialxvOES(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4);
	static void glMaterialxvOES(jint p1, jint p2, ref<java::nio::IntBuffer> p3);
	static void glMultMatrixxOES(ref<link::java::array<jint>> p1, jint p2);
	static void glMultMatrixxOES(ref<java::nio::IntBuffer> p1);
	static void glMultiTexCoord4xOES(jint p1, jint p2, jint p3, jint p4, jint p5);
	static void glNormal3xOES(jint p1, jint p2, jint p3);
	static void glOrthoxOES(jint p1, jint p2, jint p3, jint p4, jint p5, jint p6);
	static void glPointParameterxOES(jint p1, jint p2);
	static void glPointParameterxvOES(jint p1, ref<link::java::array<jint>> p2, jint p3);
	static void glPointParameterxvOES(jint p1, ref<java::nio::IntBuffer> p2);
	static void glPointSizexOES(jint p1);
	static void glPolygonOffsetxOES(jint p1, jint p2);
	static void glRotatexOES(jint p1, jint p2, jint p3, jint p4);
	static void glSampleCoveragexOES(jint p1, jboolean p2);
	static void glScalexOES(jint p1, jint p2, jint p3);
	static void glTexEnvxOES(jint p1, jint p2, jint p3);
	static void glTexEnvxvOES(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4);
	static void glTexEnvxvOES(jint p1, jint p2, ref<java::nio::IntBuffer> p3);
	static void glTexParameterxOES(jint p1, jint p2, jint p3);
	static void glTexParameterxvOES(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4);
	static void glTexParameterxvOES(jint p1, jint p2, ref<java::nio::IntBuffer> p3);
	static void glTranslatexOES(jint p1, jint p2, jint p3);
	static jboolean glIsRenderbufferOES(jint p1);
	static void glBindRenderbufferOES(jint p1, jint p2);
	static void glDeleteRenderbuffersOES(jint p1, ref<link::java::array<jint>> p2, jint p3);
	static void glDeleteRenderbuffersOES(jint p1, ref<java::nio::IntBuffer> p2);
	static void glGenRenderbuffersOES(jint p1, ref<link::java::array<jint>> p2, jint p3);
	static void glGenRenderbuffersOES(jint p1, ref<java::nio::IntBuffer> p2);
	static void glRenderbufferStorageOES(jint p1, jint p2, jint p3, jint p4);
	static void glGetRenderbufferParameterivOES(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4);
	static void glGetRenderbufferParameterivOES(jint p1, jint p2, ref<java::nio::IntBuffer> p3);
	static jboolean glIsFramebufferOES(jint p1);
	static void glBindFramebufferOES(jint p1, jint p2);
	static void glDeleteFramebuffersOES(jint p1, ref<link::java::array<jint>> p2, jint p3);
	static void glDeleteFramebuffersOES(jint p1, ref<java::nio::IntBuffer> p2);
	static void glGenFramebuffersOES(jint p1, ref<link::java::array<jint>> p2, jint p3);
	static void glGenFramebuffersOES(jint p1, ref<java::nio::IntBuffer> p2);
	static jint glCheckFramebufferStatusOES(jint p1);
	static void glFramebufferRenderbufferOES(jint p1, jint p2, jint p3, jint p4);
	static void glFramebufferTexture2DOES(jint p1, jint p2, jint p3, jint p4, jint p5);
	static void glGetFramebufferAttachmentParameterivOES(jint p1, jint p2, jint p3, ref<link::java::array<jint>> p4, jint p5);
	static void glGetFramebufferAttachmentParameterivOES(jint p1, jint p2, jint p3, ref<java::nio::IntBuffer> p4);
	static void glGenerateMipmapOES(jint p1);
	static void glCurrentPaletteMatrixOES(jint p1);
	static void glLoadPaletteFromModelViewMatrixOES();
	static void glMatrixIndexPointerOES(jint size, jint type, jint stride, ref<java::nio::Buffer> pointer);
	static void glWeightPointerOES(jint size, jint type, jint stride, ref<java::nio::Buffer> pointer);
	static void glDepthRangefOES(jfloat p1, jfloat p2);
	static void glFrustumfOES(jfloat p1, jfloat p2, jfloat p3, jfloat p4, jfloat p5, jfloat p6);
	static void glOrthofOES(jfloat p1, jfloat p2, jfloat p3, jfloat p4, jfloat p5, jfloat p6);
	static void glClipPlanefOES(jint p1, ref<link::java::array<jfloat>> p2, jint p3);
	static void glClipPlanefOES(jint p1, ref<java::nio::FloatBuffer> p2);
	static void glGetClipPlanefOES(jint p1, ref<link::java::array<jfloat>> p2, jint p3);
	static void glGetClipPlanefOES(jint p1, ref<java::nio::FloatBuffer> p2);
	static void glClearDepthfOES(jfloat p1);
	static void glTexGenfOES(jint p1, jint p2, jfloat p3);
	static void glTexGenfvOES(jint p1, jint p2, ref<link::java::array<jfloat>> p3, jint p4);
	static void glTexGenfvOES(jint p1, jint p2, ref<java::nio::FloatBuffer> p3);
	static void glTexGeniOES(jint p1, jint p2, jint p3);
	static void glTexGenivOES(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4);
	static void glTexGenivOES(jint p1, jint p2, ref<java::nio::IntBuffer> p3);
	static void glTexGenxOES(jint p1, jint p2, jint p3);
	static void glTexGenxvOES(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4);
	static void glTexGenxvOES(jint p1, jint p2, ref<java::nio::IntBuffer> p3);
	static void glGetTexGenfvOES(jint p1, jint p2, ref<link::java::array<jfloat>> p3, jint p4);
	static void glGetTexGenfvOES(jint p1, jint p2, ref<java::nio::FloatBuffer> p3);
	static void glGetTexGenivOES(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4);
	static void glGetTexGenivOES(jint p1, jint p2, ref<java::nio::IntBuffer> p3);
	static void glGetTexGenxvOES(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4);
	static void glGetTexGenxvOES(jint p1, jint p2, ref<java::nio::IntBuffer> p3);

protected:

	GLES11Ext(handle_type h) : base_(h) {}

};

} // namespace android::opengl
} // namespace scapix::java_api

#include <scapix/java_api/java/nio/Buffer.h>
#include <scapix/java_api/java/nio/FloatBuffer.h>
#include <scapix/java_api/java/nio/IntBuffer.h>
#include <scapix/java_api/java/nio/ShortBuffer.h>

namespace scapix::java_api {
namespace android::opengl {

inline jint GLES11Ext::GL_3DC_XY_AMD_() { return get_static_field<SCAPIX_META_STRING("GL_3DC_XY_AMD"), jint>(); }
inline jint GLES11Ext::GL_3DC_X_AMD_() { return get_static_field<SCAPIX_META_STRING("GL_3DC_X_AMD"), jint>(); }
inline jint GLES11Ext::GL_ATC_RGBA_EXPLICIT_ALPHA_AMD_() { return get_static_field<SCAPIX_META_STRING("GL_ATC_RGBA_EXPLICIT_ALPHA_AMD"), jint>(); }
inline jint GLES11Ext::GL_ATC_RGBA_INTERPOLATED_ALPHA_AMD_() { return get_static_field<SCAPIX_META_STRING("GL_ATC_RGBA_INTERPOLATED_ALPHA_AMD"), jint>(); }
inline jint GLES11Ext::GL_ATC_RGB_AMD_() { return get_static_field<SCAPIX_META_STRING("GL_ATC_RGB_AMD"), jint>(); }
inline jint GLES11Ext::GL_BGRA_() { return get_static_field<SCAPIX_META_STRING("GL_BGRA"), jint>(); }
inline jint GLES11Ext::GL_BLEND_DST_ALPHA_OES_() { return get_static_field<SCAPIX_META_STRING("GL_BLEND_DST_ALPHA_OES"), jint>(); }
inline jint GLES11Ext::GL_BLEND_DST_RGB_OES_() { return get_static_field<SCAPIX_META_STRING("GL_BLEND_DST_RGB_OES"), jint>(); }
inline jint GLES11Ext::GL_BLEND_EQUATION_ALPHA_OES_() { return get_static_field<SCAPIX_META_STRING("GL_BLEND_EQUATION_ALPHA_OES"), jint>(); }
inline jint GLES11Ext::GL_BLEND_EQUATION_OES_() { return get_static_field<SCAPIX_META_STRING("GL_BLEND_EQUATION_OES"), jint>(); }
inline jint GLES11Ext::GL_BLEND_EQUATION_RGB_OES_() { return get_static_field<SCAPIX_META_STRING("GL_BLEND_EQUATION_RGB_OES"), jint>(); }
inline jint GLES11Ext::GL_BLEND_SRC_ALPHA_OES_() { return get_static_field<SCAPIX_META_STRING("GL_BLEND_SRC_ALPHA_OES"), jint>(); }
inline jint GLES11Ext::GL_BLEND_SRC_RGB_OES_() { return get_static_field<SCAPIX_META_STRING("GL_BLEND_SRC_RGB_OES"), jint>(); }
inline jint GLES11Ext::GL_BUFFER_ACCESS_OES_() { return get_static_field<SCAPIX_META_STRING("GL_BUFFER_ACCESS_OES"), jint>(); }
inline jint GLES11Ext::GL_BUFFER_MAPPED_OES_() { return get_static_field<SCAPIX_META_STRING("GL_BUFFER_MAPPED_OES"), jint>(); }
inline jint GLES11Ext::GL_BUFFER_MAP_POINTER_OES_() { return get_static_field<SCAPIX_META_STRING("GL_BUFFER_MAP_POINTER_OES"), jint>(); }
inline jint GLES11Ext::GL_COLOR_ATTACHMENT0_OES_() { return get_static_field<SCAPIX_META_STRING("GL_COLOR_ATTACHMENT0_OES"), jint>(); }
inline jint GLES11Ext::GL_CURRENT_PALETTE_MATRIX_OES_() { return get_static_field<SCAPIX_META_STRING("GL_CURRENT_PALETTE_MATRIX_OES"), jint>(); }
inline jint GLES11Ext::GL_DECR_WRAP_OES_() { return get_static_field<SCAPIX_META_STRING("GL_DECR_WRAP_OES"), jint>(); }
inline jint GLES11Ext::GL_DEPTH24_STENCIL8_OES_() { return get_static_field<SCAPIX_META_STRING("GL_DEPTH24_STENCIL8_OES"), jint>(); }
inline jint GLES11Ext::GL_DEPTH_ATTACHMENT_OES_() { return get_static_field<SCAPIX_META_STRING("GL_DEPTH_ATTACHMENT_OES"), jint>(); }
inline jint GLES11Ext::GL_DEPTH_COMPONENT16_OES_() { return get_static_field<SCAPIX_META_STRING("GL_DEPTH_COMPONENT16_OES"), jint>(); }
inline jint GLES11Ext::GL_DEPTH_COMPONENT24_OES_() { return get_static_field<SCAPIX_META_STRING("GL_DEPTH_COMPONENT24_OES"), jint>(); }
inline jint GLES11Ext::GL_DEPTH_COMPONENT32_OES_() { return get_static_field<SCAPIX_META_STRING("GL_DEPTH_COMPONENT32_OES"), jint>(); }
inline jint GLES11Ext::GL_DEPTH_STENCIL_OES_() { return get_static_field<SCAPIX_META_STRING("GL_DEPTH_STENCIL_OES"), jint>(); }
inline jint GLES11Ext::GL_ETC1_RGB8_OES_() { return get_static_field<SCAPIX_META_STRING("GL_ETC1_RGB8_OES"), jint>(); }
inline jint GLES11Ext::GL_FIXED_OES_() { return get_static_field<SCAPIX_META_STRING("GL_FIXED_OES"), jint>(); }
inline jint GLES11Ext::GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_OES_() { return get_static_field<SCAPIX_META_STRING("GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_OES"), jint>(); }
inline jint GLES11Ext::GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_OES_() { return get_static_field<SCAPIX_META_STRING("GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_OES"), jint>(); }
inline jint GLES11Ext::GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_OES_() { return get_static_field<SCAPIX_META_STRING("GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_OES"), jint>(); }
inline jint GLES11Ext::GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_OES_() { return get_static_field<SCAPIX_META_STRING("GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_OES"), jint>(); }
inline jint GLES11Ext::GL_FRAMEBUFFER_BINDING_OES_() { return get_static_field<SCAPIX_META_STRING("GL_FRAMEBUFFER_BINDING_OES"), jint>(); }
inline jint GLES11Ext::GL_FRAMEBUFFER_COMPLETE_OES_() { return get_static_field<SCAPIX_META_STRING("GL_FRAMEBUFFER_COMPLETE_OES"), jint>(); }
inline jint GLES11Ext::GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_OES_() { return get_static_field<SCAPIX_META_STRING("GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_OES"), jint>(); }
inline jint GLES11Ext::GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_OES_() { return get_static_field<SCAPIX_META_STRING("GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_OES"), jint>(); }
inline jint GLES11Ext::GL_FRAMEBUFFER_INCOMPLETE_FORMATS_OES_() { return get_static_field<SCAPIX_META_STRING("GL_FRAMEBUFFER_INCOMPLETE_FORMATS_OES"), jint>(); }
inline jint GLES11Ext::GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_OES_() { return get_static_field<SCAPIX_META_STRING("GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_OES"), jint>(); }
inline jint GLES11Ext::GL_FRAMEBUFFER_OES_() { return get_static_field<SCAPIX_META_STRING("GL_FRAMEBUFFER_OES"), jint>(); }
inline jint GLES11Ext::GL_FRAMEBUFFER_UNSUPPORTED_OES_() { return get_static_field<SCAPIX_META_STRING("GL_FRAMEBUFFER_UNSUPPORTED_OES"), jint>(); }
inline jint GLES11Ext::GL_FUNC_ADD_OES_() { return get_static_field<SCAPIX_META_STRING("GL_FUNC_ADD_OES"), jint>(); }
inline jint GLES11Ext::GL_FUNC_REVERSE_SUBTRACT_OES_() { return get_static_field<SCAPIX_META_STRING("GL_FUNC_REVERSE_SUBTRACT_OES"), jint>(); }
inline jint GLES11Ext::GL_FUNC_SUBTRACT_OES_() { return get_static_field<SCAPIX_META_STRING("GL_FUNC_SUBTRACT_OES"), jint>(); }
inline jint GLES11Ext::GL_INCR_WRAP_OES_() { return get_static_field<SCAPIX_META_STRING("GL_INCR_WRAP_OES"), jint>(); }
inline jint GLES11Ext::GL_INVALID_FRAMEBUFFER_OPERATION_OES_() { return get_static_field<SCAPIX_META_STRING("GL_INVALID_FRAMEBUFFER_OPERATION_OES"), jint>(); }
inline jint GLES11Ext::GL_MATRIX_INDEX_ARRAY_BUFFER_BINDING_OES_() { return get_static_field<SCAPIX_META_STRING("GL_MATRIX_INDEX_ARRAY_BUFFER_BINDING_OES"), jint>(); }
inline jint GLES11Ext::GL_MATRIX_INDEX_ARRAY_OES_() { return get_static_field<SCAPIX_META_STRING("GL_MATRIX_INDEX_ARRAY_OES"), jint>(); }
inline jint GLES11Ext::GL_MATRIX_INDEX_ARRAY_POINTER_OES_() { return get_static_field<SCAPIX_META_STRING("GL_MATRIX_INDEX_ARRAY_POINTER_OES"), jint>(); }
inline jint GLES11Ext::GL_MATRIX_INDEX_ARRAY_SIZE_OES_() { return get_static_field<SCAPIX_META_STRING("GL_MATRIX_INDEX_ARRAY_SIZE_OES"), jint>(); }
inline jint GLES11Ext::GL_MATRIX_INDEX_ARRAY_STRIDE_OES_() { return get_static_field<SCAPIX_META_STRING("GL_MATRIX_INDEX_ARRAY_STRIDE_OES"), jint>(); }
inline jint GLES11Ext::GL_MATRIX_INDEX_ARRAY_TYPE_OES_() { return get_static_field<SCAPIX_META_STRING("GL_MATRIX_INDEX_ARRAY_TYPE_OES"), jint>(); }
inline jint GLES11Ext::GL_MATRIX_PALETTE_OES_() { return get_static_field<SCAPIX_META_STRING("GL_MATRIX_PALETTE_OES"), jint>(); }
inline jint GLES11Ext::GL_MAX_CUBE_MAP_TEXTURE_SIZE_OES_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_CUBE_MAP_TEXTURE_SIZE_OES"), jint>(); }
inline jint GLES11Ext::GL_MAX_PALETTE_MATRICES_OES_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_PALETTE_MATRICES_OES"), jint>(); }
inline jint GLES11Ext::GL_MAX_RENDERBUFFER_SIZE_OES_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_RENDERBUFFER_SIZE_OES"), jint>(); }
inline jint GLES11Ext::GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT"), jint>(); }
inline jint GLES11Ext::GL_MAX_VERTEX_UNITS_OES_() { return get_static_field<SCAPIX_META_STRING("GL_MAX_VERTEX_UNITS_OES"), jint>(); }
inline jint GLES11Ext::GL_MIRRORED_REPEAT_OES_() { return get_static_field<SCAPIX_META_STRING("GL_MIRRORED_REPEAT_OES"), jint>(); }
inline jint GLES11Ext::GL_MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES_() { return get_static_field<SCAPIX_META_STRING("GL_MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES"), jint>(); }
inline jint GLES11Ext::GL_NONE_OES_() { return get_static_field<SCAPIX_META_STRING("GL_NONE_OES"), jint>(); }
inline jint GLES11Ext::GL_NORMAL_MAP_OES_() { return get_static_field<SCAPIX_META_STRING("GL_NORMAL_MAP_OES"), jint>(); }
inline jint GLES11Ext::GL_PROJECTION_MATRIX_FLOAT_AS_INT_BITS_OES_() { return get_static_field<SCAPIX_META_STRING("GL_PROJECTION_MATRIX_FLOAT_AS_INT_BITS_OES"), jint>(); }
inline jint GLES11Ext::GL_REFLECTION_MAP_OES_() { return get_static_field<SCAPIX_META_STRING("GL_REFLECTION_MAP_OES"), jint>(); }
inline jint GLES11Ext::GL_RENDERBUFFER_ALPHA_SIZE_OES_() { return get_static_field<SCAPIX_META_STRING("GL_RENDERBUFFER_ALPHA_SIZE_OES"), jint>(); }
inline jint GLES11Ext::GL_RENDERBUFFER_BINDING_OES_() { return get_static_field<SCAPIX_META_STRING("GL_RENDERBUFFER_BINDING_OES"), jint>(); }
inline jint GLES11Ext::GL_RENDERBUFFER_BLUE_SIZE_OES_() { return get_static_field<SCAPIX_META_STRING("GL_RENDERBUFFER_BLUE_SIZE_OES"), jint>(); }
inline jint GLES11Ext::GL_RENDERBUFFER_DEPTH_SIZE_OES_() { return get_static_field<SCAPIX_META_STRING("GL_RENDERBUFFER_DEPTH_SIZE_OES"), jint>(); }
inline jint GLES11Ext::GL_RENDERBUFFER_GREEN_SIZE_OES_() { return get_static_field<SCAPIX_META_STRING("GL_RENDERBUFFER_GREEN_SIZE_OES"), jint>(); }
inline jint GLES11Ext::GL_RENDERBUFFER_HEIGHT_OES_() { return get_static_field<SCAPIX_META_STRING("GL_RENDERBUFFER_HEIGHT_OES"), jint>(); }
inline jint GLES11Ext::GL_RENDERBUFFER_INTERNAL_FORMAT_OES_() { return get_static_field<SCAPIX_META_STRING("GL_RENDERBUFFER_INTERNAL_FORMAT_OES"), jint>(); }
inline jint GLES11Ext::GL_RENDERBUFFER_OES_() { return get_static_field<SCAPIX_META_STRING("GL_RENDERBUFFER_OES"), jint>(); }
inline jint GLES11Ext::GL_RENDERBUFFER_RED_SIZE_OES_() { return get_static_field<SCAPIX_META_STRING("GL_RENDERBUFFER_RED_SIZE_OES"), jint>(); }
inline jint GLES11Ext::GL_RENDERBUFFER_STENCIL_SIZE_OES_() { return get_static_field<SCAPIX_META_STRING("GL_RENDERBUFFER_STENCIL_SIZE_OES"), jint>(); }
inline jint GLES11Ext::GL_RENDERBUFFER_WIDTH_OES_() { return get_static_field<SCAPIX_META_STRING("GL_RENDERBUFFER_WIDTH_OES"), jint>(); }
inline jint GLES11Ext::GL_REQUIRED_TEXTURE_IMAGE_UNITS_OES_() { return get_static_field<SCAPIX_META_STRING("GL_REQUIRED_TEXTURE_IMAGE_UNITS_OES"), jint>(); }
inline jint GLES11Ext::GL_RGB565_OES_() { return get_static_field<SCAPIX_META_STRING("GL_RGB565_OES"), jint>(); }
inline jint GLES11Ext::GL_RGB5_A1_OES_() { return get_static_field<SCAPIX_META_STRING("GL_RGB5_A1_OES"), jint>(); }
inline jint GLES11Ext::GL_RGB8_OES_() { return get_static_field<SCAPIX_META_STRING("GL_RGB8_OES"), jint>(); }
inline jint GLES11Ext::GL_RGBA4_OES_() { return get_static_field<SCAPIX_META_STRING("GL_RGBA4_OES"), jint>(); }
inline jint GLES11Ext::GL_RGBA8_OES_() { return get_static_field<SCAPIX_META_STRING("GL_RGBA8_OES"), jint>(); }
inline jint GLES11Ext::GL_SAMPLER_EXTERNAL_OES_() { return get_static_field<SCAPIX_META_STRING("GL_SAMPLER_EXTERNAL_OES"), jint>(); }
inline jint GLES11Ext::GL_STENCIL_ATTACHMENT_OES_() { return get_static_field<SCAPIX_META_STRING("GL_STENCIL_ATTACHMENT_OES"), jint>(); }
inline jint GLES11Ext::GL_STENCIL_INDEX1_OES_() { return get_static_field<SCAPIX_META_STRING("GL_STENCIL_INDEX1_OES"), jint>(); }
inline jint GLES11Ext::GL_STENCIL_INDEX4_OES_() { return get_static_field<SCAPIX_META_STRING("GL_STENCIL_INDEX4_OES"), jint>(); }
inline jint GLES11Ext::GL_STENCIL_INDEX8_OES_() { return get_static_field<SCAPIX_META_STRING("GL_STENCIL_INDEX8_OES"), jint>(); }
inline jint GLES11Ext::GL_TEXTURE_BINDING_CUBE_MAP_OES_() { return get_static_field<SCAPIX_META_STRING("GL_TEXTURE_BINDING_CUBE_MAP_OES"), jint>(); }
inline jint GLES11Ext::GL_TEXTURE_BINDING_EXTERNAL_OES_() { return get_static_field<SCAPIX_META_STRING("GL_TEXTURE_BINDING_EXTERNAL_OES"), jint>(); }
inline jint GLES11Ext::GL_TEXTURE_CROP_RECT_OES_() { return get_static_field<SCAPIX_META_STRING("GL_TEXTURE_CROP_RECT_OES"), jint>(); }
inline jint GLES11Ext::GL_TEXTURE_CUBE_MAP_NEGATIVE_X_OES_() { return get_static_field<SCAPIX_META_STRING("GL_TEXTURE_CUBE_MAP_NEGATIVE_X_OES"), jint>(); }
inline jint GLES11Ext::GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_OES_() { return get_static_field<SCAPIX_META_STRING("GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_OES"), jint>(); }
inline jint GLES11Ext::GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_OES_() { return get_static_field<SCAPIX_META_STRING("GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_OES"), jint>(); }
inline jint GLES11Ext::GL_TEXTURE_CUBE_MAP_OES_() { return get_static_field<SCAPIX_META_STRING("GL_TEXTURE_CUBE_MAP_OES"), jint>(); }
inline jint GLES11Ext::GL_TEXTURE_CUBE_MAP_POSITIVE_X_OES_() { return get_static_field<SCAPIX_META_STRING("GL_TEXTURE_CUBE_MAP_POSITIVE_X_OES"), jint>(); }
inline jint GLES11Ext::GL_TEXTURE_CUBE_MAP_POSITIVE_Y_OES_() { return get_static_field<SCAPIX_META_STRING("GL_TEXTURE_CUBE_MAP_POSITIVE_Y_OES"), jint>(); }
inline jint GLES11Ext::GL_TEXTURE_CUBE_MAP_POSITIVE_Z_OES_() { return get_static_field<SCAPIX_META_STRING("GL_TEXTURE_CUBE_MAP_POSITIVE_Z_OES"), jint>(); }
inline jint GLES11Ext::GL_TEXTURE_EXTERNAL_OES_() { return get_static_field<SCAPIX_META_STRING("GL_TEXTURE_EXTERNAL_OES"), jint>(); }
inline jint GLES11Ext::GL_TEXTURE_GEN_MODE_OES_() { return get_static_field<SCAPIX_META_STRING("GL_TEXTURE_GEN_MODE_OES"), jint>(); }
inline jint GLES11Ext::GL_TEXTURE_GEN_STR_OES_() { return get_static_field<SCAPIX_META_STRING("GL_TEXTURE_GEN_STR_OES"), jint>(); }
inline jint GLES11Ext::GL_TEXTURE_MATRIX_FLOAT_AS_INT_BITS_OES_() { return get_static_field<SCAPIX_META_STRING("GL_TEXTURE_MATRIX_FLOAT_AS_INT_BITS_OES"), jint>(); }
inline jint GLES11Ext::GL_TEXTURE_MAX_ANISOTROPY_EXT_() { return get_static_field<SCAPIX_META_STRING("GL_TEXTURE_MAX_ANISOTROPY_EXT"), jint>(); }
inline jint GLES11Ext::GL_UNSIGNED_INT_24_8_OES_() { return get_static_field<SCAPIX_META_STRING("GL_UNSIGNED_INT_24_8_OES"), jint>(); }
inline jint GLES11Ext::GL_WEIGHT_ARRAY_BUFFER_BINDING_OES_() { return get_static_field<SCAPIX_META_STRING("GL_WEIGHT_ARRAY_BUFFER_BINDING_OES"), jint>(); }
inline jint GLES11Ext::GL_WEIGHT_ARRAY_OES_() { return get_static_field<SCAPIX_META_STRING("GL_WEIGHT_ARRAY_OES"), jint>(); }
inline jint GLES11Ext::GL_WEIGHT_ARRAY_POINTER_OES_() { return get_static_field<SCAPIX_META_STRING("GL_WEIGHT_ARRAY_POINTER_OES"), jint>(); }
inline jint GLES11Ext::GL_WEIGHT_ARRAY_SIZE_OES_() { return get_static_field<SCAPIX_META_STRING("GL_WEIGHT_ARRAY_SIZE_OES"), jint>(); }
inline jint GLES11Ext::GL_WEIGHT_ARRAY_STRIDE_OES_() { return get_static_field<SCAPIX_META_STRING("GL_WEIGHT_ARRAY_STRIDE_OES"), jint>(); }
inline jint GLES11Ext::GL_WEIGHT_ARRAY_TYPE_OES_() { return get_static_field<SCAPIX_META_STRING("GL_WEIGHT_ARRAY_TYPE_OES"), jint>(); }
inline jint GLES11Ext::GL_WRITE_ONLY_OES_() { return get_static_field<SCAPIX_META_STRING("GL_WRITE_ONLY_OES"), jint>(); }
inline ref<GLES11Ext> GLES11Ext::new_object() { return base_::new_object(); }
inline void GLES11Ext::glBlendEquationSeparateOES(jint p1, jint p2) { return call_static_method<SCAPIX_META_STRING("glBlendEquationSeparateOES"), void>(p1, p2); }
inline void GLES11Ext::glBlendFuncSeparateOES(jint p1, jint p2, jint p3, jint p4) { return call_static_method<SCAPIX_META_STRING("glBlendFuncSeparateOES"), void>(p1, p2, p3, p4); }
inline void GLES11Ext::glBlendEquationOES(jint p1) { return call_static_method<SCAPIX_META_STRING("glBlendEquationOES"), void>(p1); }
inline void GLES11Ext::glDrawTexsOES(jshort p1, jshort p2, jshort p3, jshort p4, jshort p5) { return call_static_method<SCAPIX_META_STRING("glDrawTexsOES"), void>(p1, p2, p3, p4, p5); }
inline void GLES11Ext::glDrawTexiOES(jint p1, jint p2, jint p3, jint p4, jint p5) { return call_static_method<SCAPIX_META_STRING("glDrawTexiOES"), void>(p1, p2, p3, p4, p5); }
inline void GLES11Ext::glDrawTexxOES(jint p1, jint p2, jint p3, jint p4, jint p5) { return call_static_method<SCAPIX_META_STRING("glDrawTexxOES"), void>(p1, p2, p3, p4, p5); }
inline void GLES11Ext::glDrawTexsvOES(ref<link::java::array<jshort>> p1, jint p2) { return call_static_method<SCAPIX_META_STRING("glDrawTexsvOES"), void>(p1, p2); }
inline void GLES11Ext::glDrawTexsvOES(ref<java::nio::ShortBuffer> p1) { return call_static_method<SCAPIX_META_STRING("glDrawTexsvOES"), void>(p1); }
inline void GLES11Ext::glDrawTexivOES(ref<link::java::array<jint>> p1, jint p2) { return call_static_method<SCAPIX_META_STRING("glDrawTexivOES"), void>(p1, p2); }
inline void GLES11Ext::glDrawTexivOES(ref<java::nio::IntBuffer> p1) { return call_static_method<SCAPIX_META_STRING("glDrawTexivOES"), void>(p1); }
inline void GLES11Ext::glDrawTexxvOES(ref<link::java::array<jint>> p1, jint p2) { return call_static_method<SCAPIX_META_STRING("glDrawTexxvOES"), void>(p1, p2); }
inline void GLES11Ext::glDrawTexxvOES(ref<java::nio::IntBuffer> p1) { return call_static_method<SCAPIX_META_STRING("glDrawTexxvOES"), void>(p1); }
inline void GLES11Ext::glDrawTexfOES(jfloat p1, jfloat p2, jfloat p3, jfloat p4, jfloat p5) { return call_static_method<SCAPIX_META_STRING("glDrawTexfOES"), void>(p1, p2, p3, p4, p5); }
inline void GLES11Ext::glDrawTexfvOES(ref<link::java::array<jfloat>> p1, jint p2) { return call_static_method<SCAPIX_META_STRING("glDrawTexfvOES"), void>(p1, p2); }
inline void GLES11Ext::glDrawTexfvOES(ref<java::nio::FloatBuffer> p1) { return call_static_method<SCAPIX_META_STRING("glDrawTexfvOES"), void>(p1); }
inline void GLES11Ext::glEGLImageTargetTexture2DOES(jint p1, ref<java::nio::Buffer> p2) { return call_static_method<SCAPIX_META_STRING("glEGLImageTargetTexture2DOES"), void>(p1, p2); }
inline void GLES11Ext::glEGLImageTargetRenderbufferStorageOES(jint p1, ref<java::nio::Buffer> p2) { return call_static_method<SCAPIX_META_STRING("glEGLImageTargetRenderbufferStorageOES"), void>(p1, p2); }
inline void GLES11Ext::glAlphaFuncxOES(jint p1, jint p2) { return call_static_method<SCAPIX_META_STRING("glAlphaFuncxOES"), void>(p1, p2); }
inline void GLES11Ext::glClearColorxOES(jint p1, jint p2, jint p3, jint p4) { return call_static_method<SCAPIX_META_STRING("glClearColorxOES"), void>(p1, p2, p3, p4); }
inline void GLES11Ext::glClearDepthxOES(jint p1) { return call_static_method<SCAPIX_META_STRING("glClearDepthxOES"), void>(p1); }
inline void GLES11Ext::glClipPlanexOES(jint p1, ref<link::java::array<jint>> p2, jint p3) { return call_static_method<SCAPIX_META_STRING("glClipPlanexOES"), void>(p1, p2, p3); }
inline void GLES11Ext::glClipPlanexOES(jint p1, ref<java::nio::IntBuffer> p2) { return call_static_method<SCAPIX_META_STRING("glClipPlanexOES"), void>(p1, p2); }
inline void GLES11Ext::glColor4xOES(jint p1, jint p2, jint p3, jint p4) { return call_static_method<SCAPIX_META_STRING("glColor4xOES"), void>(p1, p2, p3, p4); }
inline void GLES11Ext::glDepthRangexOES(jint p1, jint p2) { return call_static_method<SCAPIX_META_STRING("glDepthRangexOES"), void>(p1, p2); }
inline void GLES11Ext::glFogxOES(jint p1, jint p2) { return call_static_method<SCAPIX_META_STRING("glFogxOES"), void>(p1, p2); }
inline void GLES11Ext::glFogxvOES(jint p1, ref<link::java::array<jint>> p2, jint p3) { return call_static_method<SCAPIX_META_STRING("glFogxvOES"), void>(p1, p2, p3); }
inline void GLES11Ext::glFogxvOES(jint p1, ref<java::nio::IntBuffer> p2) { return call_static_method<SCAPIX_META_STRING("glFogxvOES"), void>(p1, p2); }
inline void GLES11Ext::glFrustumxOES(jint p1, jint p2, jint p3, jint p4, jint p5, jint p6) { return call_static_method<SCAPIX_META_STRING("glFrustumxOES"), void>(p1, p2, p3, p4, p5, p6); }
inline void GLES11Ext::glGetClipPlanexOES(jint p1, ref<link::java::array<jint>> p2, jint p3) { return call_static_method<SCAPIX_META_STRING("glGetClipPlanexOES"), void>(p1, p2, p3); }
inline void GLES11Ext::glGetClipPlanexOES(jint p1, ref<java::nio::IntBuffer> p2) { return call_static_method<SCAPIX_META_STRING("glGetClipPlanexOES"), void>(p1, p2); }
inline void GLES11Ext::glGetFixedvOES(jint p1, ref<link::java::array<jint>> p2, jint p3) { return call_static_method<SCAPIX_META_STRING("glGetFixedvOES"), void>(p1, p2, p3); }
inline void GLES11Ext::glGetFixedvOES(jint p1, ref<java::nio::IntBuffer> p2) { return call_static_method<SCAPIX_META_STRING("glGetFixedvOES"), void>(p1, p2); }
inline void GLES11Ext::glGetLightxvOES(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4) { return call_static_method<SCAPIX_META_STRING("glGetLightxvOES"), void>(p1, p2, p3, p4); }
inline void GLES11Ext::glGetLightxvOES(jint p1, jint p2, ref<java::nio::IntBuffer> p3) { return call_static_method<SCAPIX_META_STRING("glGetLightxvOES"), void>(p1, p2, p3); }
inline void GLES11Ext::glGetMaterialxvOES(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4) { return call_static_method<SCAPIX_META_STRING("glGetMaterialxvOES"), void>(p1, p2, p3, p4); }
inline void GLES11Ext::glGetMaterialxvOES(jint p1, jint p2, ref<java::nio::IntBuffer> p3) { return call_static_method<SCAPIX_META_STRING("glGetMaterialxvOES"), void>(p1, p2, p3); }
inline void GLES11Ext::glGetTexEnvxvOES(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4) { return call_static_method<SCAPIX_META_STRING("glGetTexEnvxvOES"), void>(p1, p2, p3, p4); }
inline void GLES11Ext::glGetTexEnvxvOES(jint p1, jint p2, ref<java::nio::IntBuffer> p3) { return call_static_method<SCAPIX_META_STRING("glGetTexEnvxvOES"), void>(p1, p2, p3); }
inline void GLES11Ext::glGetTexParameterxvOES(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4) { return call_static_method<SCAPIX_META_STRING("glGetTexParameterxvOES"), void>(p1, p2, p3, p4); }
inline void GLES11Ext::glGetTexParameterxvOES(jint p1, jint p2, ref<java::nio::IntBuffer> p3) { return call_static_method<SCAPIX_META_STRING("glGetTexParameterxvOES"), void>(p1, p2, p3); }
inline void GLES11Ext::glLightModelxOES(jint p1, jint p2) { return call_static_method<SCAPIX_META_STRING("glLightModelxOES"), void>(p1, p2); }
inline void GLES11Ext::glLightModelxvOES(jint p1, ref<link::java::array<jint>> p2, jint p3) { return call_static_method<SCAPIX_META_STRING("glLightModelxvOES"), void>(p1, p2, p3); }
inline void GLES11Ext::glLightModelxvOES(jint p1, ref<java::nio::IntBuffer> p2) { return call_static_method<SCAPIX_META_STRING("glLightModelxvOES"), void>(p1, p2); }
inline void GLES11Ext::glLightxOES(jint p1, jint p2, jint p3) { return call_static_method<SCAPIX_META_STRING("glLightxOES"), void>(p1, p2, p3); }
inline void GLES11Ext::glLightxvOES(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4) { return call_static_method<SCAPIX_META_STRING("glLightxvOES"), void>(p1, p2, p3, p4); }
inline void GLES11Ext::glLightxvOES(jint p1, jint p2, ref<java::nio::IntBuffer> p3) { return call_static_method<SCAPIX_META_STRING("glLightxvOES"), void>(p1, p2, p3); }
inline void GLES11Ext::glLineWidthxOES(jint p1) { return call_static_method<SCAPIX_META_STRING("glLineWidthxOES"), void>(p1); }
inline void GLES11Ext::glLoadMatrixxOES(ref<link::java::array<jint>> p1, jint p2) { return call_static_method<SCAPIX_META_STRING("glLoadMatrixxOES"), void>(p1, p2); }
inline void GLES11Ext::glLoadMatrixxOES(ref<java::nio::IntBuffer> p1) { return call_static_method<SCAPIX_META_STRING("glLoadMatrixxOES"), void>(p1); }
inline void GLES11Ext::glMaterialxOES(jint p1, jint p2, jint p3) { return call_static_method<SCAPIX_META_STRING("glMaterialxOES"), void>(p1, p2, p3); }
inline void GLES11Ext::glMaterialxvOES(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4) { return call_static_method<SCAPIX_META_STRING("glMaterialxvOES"), void>(p1, p2, p3, p4); }
inline void GLES11Ext::glMaterialxvOES(jint p1, jint p2, ref<java::nio::IntBuffer> p3) { return call_static_method<SCAPIX_META_STRING("glMaterialxvOES"), void>(p1, p2, p3); }
inline void GLES11Ext::glMultMatrixxOES(ref<link::java::array<jint>> p1, jint p2) { return call_static_method<SCAPIX_META_STRING("glMultMatrixxOES"), void>(p1, p2); }
inline void GLES11Ext::glMultMatrixxOES(ref<java::nio::IntBuffer> p1) { return call_static_method<SCAPIX_META_STRING("glMultMatrixxOES"), void>(p1); }
inline void GLES11Ext::glMultiTexCoord4xOES(jint p1, jint p2, jint p3, jint p4, jint p5) { return call_static_method<SCAPIX_META_STRING("glMultiTexCoord4xOES"), void>(p1, p2, p3, p4, p5); }
inline void GLES11Ext::glNormal3xOES(jint p1, jint p2, jint p3) { return call_static_method<SCAPIX_META_STRING("glNormal3xOES"), void>(p1, p2, p3); }
inline void GLES11Ext::glOrthoxOES(jint p1, jint p2, jint p3, jint p4, jint p5, jint p6) { return call_static_method<SCAPIX_META_STRING("glOrthoxOES"), void>(p1, p2, p3, p4, p5, p6); }
inline void GLES11Ext::glPointParameterxOES(jint p1, jint p2) { return call_static_method<SCAPIX_META_STRING("glPointParameterxOES"), void>(p1, p2); }
inline void GLES11Ext::glPointParameterxvOES(jint p1, ref<link::java::array<jint>> p2, jint p3) { return call_static_method<SCAPIX_META_STRING("glPointParameterxvOES"), void>(p1, p2, p3); }
inline void GLES11Ext::glPointParameterxvOES(jint p1, ref<java::nio::IntBuffer> p2) { return call_static_method<SCAPIX_META_STRING("glPointParameterxvOES"), void>(p1, p2); }
inline void GLES11Ext::glPointSizexOES(jint p1) { return call_static_method<SCAPIX_META_STRING("glPointSizexOES"), void>(p1); }
inline void GLES11Ext::glPolygonOffsetxOES(jint p1, jint p2) { return call_static_method<SCAPIX_META_STRING("glPolygonOffsetxOES"), void>(p1, p2); }
inline void GLES11Ext::glRotatexOES(jint p1, jint p2, jint p3, jint p4) { return call_static_method<SCAPIX_META_STRING("glRotatexOES"), void>(p1, p2, p3, p4); }
inline void GLES11Ext::glSampleCoveragexOES(jint p1, jboolean p2) { return call_static_method<SCAPIX_META_STRING("glSampleCoveragexOES"), void>(p1, p2); }
inline void GLES11Ext::glScalexOES(jint p1, jint p2, jint p3) { return call_static_method<SCAPIX_META_STRING("glScalexOES"), void>(p1, p2, p3); }
inline void GLES11Ext::glTexEnvxOES(jint p1, jint p2, jint p3) { return call_static_method<SCAPIX_META_STRING("glTexEnvxOES"), void>(p1, p2, p3); }
inline void GLES11Ext::glTexEnvxvOES(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4) { return call_static_method<SCAPIX_META_STRING("glTexEnvxvOES"), void>(p1, p2, p3, p4); }
inline void GLES11Ext::glTexEnvxvOES(jint p1, jint p2, ref<java::nio::IntBuffer> p3) { return call_static_method<SCAPIX_META_STRING("glTexEnvxvOES"), void>(p1, p2, p3); }
inline void GLES11Ext::glTexParameterxOES(jint p1, jint p2, jint p3) { return call_static_method<SCAPIX_META_STRING("glTexParameterxOES"), void>(p1, p2, p3); }
inline void GLES11Ext::glTexParameterxvOES(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4) { return call_static_method<SCAPIX_META_STRING("glTexParameterxvOES"), void>(p1, p2, p3, p4); }
inline void GLES11Ext::glTexParameterxvOES(jint p1, jint p2, ref<java::nio::IntBuffer> p3) { return call_static_method<SCAPIX_META_STRING("glTexParameterxvOES"), void>(p1, p2, p3); }
inline void GLES11Ext::glTranslatexOES(jint p1, jint p2, jint p3) { return call_static_method<SCAPIX_META_STRING("glTranslatexOES"), void>(p1, p2, p3); }
inline jboolean GLES11Ext::glIsRenderbufferOES(jint p1) { return call_static_method<SCAPIX_META_STRING("glIsRenderbufferOES"), jboolean>(p1); }
inline void GLES11Ext::glBindRenderbufferOES(jint p1, jint p2) { return call_static_method<SCAPIX_META_STRING("glBindRenderbufferOES"), void>(p1, p2); }
inline void GLES11Ext::glDeleteRenderbuffersOES(jint p1, ref<link::java::array<jint>> p2, jint p3) { return call_static_method<SCAPIX_META_STRING("glDeleteRenderbuffersOES"), void>(p1, p2, p3); }
inline void GLES11Ext::glDeleteRenderbuffersOES(jint p1, ref<java::nio::IntBuffer> p2) { return call_static_method<SCAPIX_META_STRING("glDeleteRenderbuffersOES"), void>(p1, p2); }
inline void GLES11Ext::glGenRenderbuffersOES(jint p1, ref<link::java::array<jint>> p2, jint p3) { return call_static_method<SCAPIX_META_STRING("glGenRenderbuffersOES"), void>(p1, p2, p3); }
inline void GLES11Ext::glGenRenderbuffersOES(jint p1, ref<java::nio::IntBuffer> p2) { return call_static_method<SCAPIX_META_STRING("glGenRenderbuffersOES"), void>(p1, p2); }
inline void GLES11Ext::glRenderbufferStorageOES(jint p1, jint p2, jint p3, jint p4) { return call_static_method<SCAPIX_META_STRING("glRenderbufferStorageOES"), void>(p1, p2, p3, p4); }
inline void GLES11Ext::glGetRenderbufferParameterivOES(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4) { return call_static_method<SCAPIX_META_STRING("glGetRenderbufferParameterivOES"), void>(p1, p2, p3, p4); }
inline void GLES11Ext::glGetRenderbufferParameterivOES(jint p1, jint p2, ref<java::nio::IntBuffer> p3) { return call_static_method<SCAPIX_META_STRING("glGetRenderbufferParameterivOES"), void>(p1, p2, p3); }
inline jboolean GLES11Ext::glIsFramebufferOES(jint p1) { return call_static_method<SCAPIX_META_STRING("glIsFramebufferOES"), jboolean>(p1); }
inline void GLES11Ext::glBindFramebufferOES(jint p1, jint p2) { return call_static_method<SCAPIX_META_STRING("glBindFramebufferOES"), void>(p1, p2); }
inline void GLES11Ext::glDeleteFramebuffersOES(jint p1, ref<link::java::array<jint>> p2, jint p3) { return call_static_method<SCAPIX_META_STRING("glDeleteFramebuffersOES"), void>(p1, p2, p3); }
inline void GLES11Ext::glDeleteFramebuffersOES(jint p1, ref<java::nio::IntBuffer> p2) { return call_static_method<SCAPIX_META_STRING("glDeleteFramebuffersOES"), void>(p1, p2); }
inline void GLES11Ext::glGenFramebuffersOES(jint p1, ref<link::java::array<jint>> p2, jint p3) { return call_static_method<SCAPIX_META_STRING("glGenFramebuffersOES"), void>(p1, p2, p3); }
inline void GLES11Ext::glGenFramebuffersOES(jint p1, ref<java::nio::IntBuffer> p2) { return call_static_method<SCAPIX_META_STRING("glGenFramebuffersOES"), void>(p1, p2); }
inline jint GLES11Ext::glCheckFramebufferStatusOES(jint p1) { return call_static_method<SCAPIX_META_STRING("glCheckFramebufferStatusOES"), jint>(p1); }
inline void GLES11Ext::glFramebufferRenderbufferOES(jint p1, jint p2, jint p3, jint p4) { return call_static_method<SCAPIX_META_STRING("glFramebufferRenderbufferOES"), void>(p1, p2, p3, p4); }
inline void GLES11Ext::glFramebufferTexture2DOES(jint p1, jint p2, jint p3, jint p4, jint p5) { return call_static_method<SCAPIX_META_STRING("glFramebufferTexture2DOES"), void>(p1, p2, p3, p4, p5); }
inline void GLES11Ext::glGetFramebufferAttachmentParameterivOES(jint p1, jint p2, jint p3, ref<link::java::array<jint>> p4, jint p5) { return call_static_method<SCAPIX_META_STRING("glGetFramebufferAttachmentParameterivOES"), void>(p1, p2, p3, p4, p5); }
inline void GLES11Ext::glGetFramebufferAttachmentParameterivOES(jint p1, jint p2, jint p3, ref<java::nio::IntBuffer> p4) { return call_static_method<SCAPIX_META_STRING("glGetFramebufferAttachmentParameterivOES"), void>(p1, p2, p3, p4); }
inline void GLES11Ext::glGenerateMipmapOES(jint p1) { return call_static_method<SCAPIX_META_STRING("glGenerateMipmapOES"), void>(p1); }
inline void GLES11Ext::glCurrentPaletteMatrixOES(jint p1) { return call_static_method<SCAPIX_META_STRING("glCurrentPaletteMatrixOES"), void>(p1); }
inline void GLES11Ext::glLoadPaletteFromModelViewMatrixOES() { return call_static_method<SCAPIX_META_STRING("glLoadPaletteFromModelViewMatrixOES"), void>(); }
inline void GLES11Ext::glMatrixIndexPointerOES(jint size, jint type, jint stride, ref<java::nio::Buffer> pointer) { return call_static_method<SCAPIX_META_STRING("glMatrixIndexPointerOES"), void>(size, type, stride, pointer); }
inline void GLES11Ext::glWeightPointerOES(jint size, jint type, jint stride, ref<java::nio::Buffer> pointer) { return call_static_method<SCAPIX_META_STRING("glWeightPointerOES"), void>(size, type, stride, pointer); }
inline void GLES11Ext::glDepthRangefOES(jfloat p1, jfloat p2) { return call_static_method<SCAPIX_META_STRING("glDepthRangefOES"), void>(p1, p2); }
inline void GLES11Ext::glFrustumfOES(jfloat p1, jfloat p2, jfloat p3, jfloat p4, jfloat p5, jfloat p6) { return call_static_method<SCAPIX_META_STRING("glFrustumfOES"), void>(p1, p2, p3, p4, p5, p6); }
inline void GLES11Ext::glOrthofOES(jfloat p1, jfloat p2, jfloat p3, jfloat p4, jfloat p5, jfloat p6) { return call_static_method<SCAPIX_META_STRING("glOrthofOES"), void>(p1, p2, p3, p4, p5, p6); }
inline void GLES11Ext::glClipPlanefOES(jint p1, ref<link::java::array<jfloat>> p2, jint p3) { return call_static_method<SCAPIX_META_STRING("glClipPlanefOES"), void>(p1, p2, p3); }
inline void GLES11Ext::glClipPlanefOES(jint p1, ref<java::nio::FloatBuffer> p2) { return call_static_method<SCAPIX_META_STRING("glClipPlanefOES"), void>(p1, p2); }
inline void GLES11Ext::glGetClipPlanefOES(jint p1, ref<link::java::array<jfloat>> p2, jint p3) { return call_static_method<SCAPIX_META_STRING("glGetClipPlanefOES"), void>(p1, p2, p3); }
inline void GLES11Ext::glGetClipPlanefOES(jint p1, ref<java::nio::FloatBuffer> p2) { return call_static_method<SCAPIX_META_STRING("glGetClipPlanefOES"), void>(p1, p2); }
inline void GLES11Ext::glClearDepthfOES(jfloat p1) { return call_static_method<SCAPIX_META_STRING("glClearDepthfOES"), void>(p1); }
inline void GLES11Ext::glTexGenfOES(jint p1, jint p2, jfloat p3) { return call_static_method<SCAPIX_META_STRING("glTexGenfOES"), void>(p1, p2, p3); }
inline void GLES11Ext::glTexGenfvOES(jint p1, jint p2, ref<link::java::array<jfloat>> p3, jint p4) { return call_static_method<SCAPIX_META_STRING("glTexGenfvOES"), void>(p1, p2, p3, p4); }
inline void GLES11Ext::glTexGenfvOES(jint p1, jint p2, ref<java::nio::FloatBuffer> p3) { return call_static_method<SCAPIX_META_STRING("glTexGenfvOES"), void>(p1, p2, p3); }
inline void GLES11Ext::glTexGeniOES(jint p1, jint p2, jint p3) { return call_static_method<SCAPIX_META_STRING("glTexGeniOES"), void>(p1, p2, p3); }
inline void GLES11Ext::glTexGenivOES(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4) { return call_static_method<SCAPIX_META_STRING("glTexGenivOES"), void>(p1, p2, p3, p4); }
inline void GLES11Ext::glTexGenivOES(jint p1, jint p2, ref<java::nio::IntBuffer> p3) { return call_static_method<SCAPIX_META_STRING("glTexGenivOES"), void>(p1, p2, p3); }
inline void GLES11Ext::glTexGenxOES(jint p1, jint p2, jint p3) { return call_static_method<SCAPIX_META_STRING("glTexGenxOES"), void>(p1, p2, p3); }
inline void GLES11Ext::glTexGenxvOES(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4) { return call_static_method<SCAPIX_META_STRING("glTexGenxvOES"), void>(p1, p2, p3, p4); }
inline void GLES11Ext::glTexGenxvOES(jint p1, jint p2, ref<java::nio::IntBuffer> p3) { return call_static_method<SCAPIX_META_STRING("glTexGenxvOES"), void>(p1, p2, p3); }
inline void GLES11Ext::glGetTexGenfvOES(jint p1, jint p2, ref<link::java::array<jfloat>> p3, jint p4) { return call_static_method<SCAPIX_META_STRING("glGetTexGenfvOES"), void>(p1, p2, p3, p4); }
inline void GLES11Ext::glGetTexGenfvOES(jint p1, jint p2, ref<java::nio::FloatBuffer> p3) { return call_static_method<SCAPIX_META_STRING("glGetTexGenfvOES"), void>(p1, p2, p3); }
inline void GLES11Ext::glGetTexGenivOES(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4) { return call_static_method<SCAPIX_META_STRING("glGetTexGenivOES"), void>(p1, p2, p3, p4); }
inline void GLES11Ext::glGetTexGenivOES(jint p1, jint p2, ref<java::nio::IntBuffer> p3) { return call_static_method<SCAPIX_META_STRING("glGetTexGenivOES"), void>(p1, p2, p3); }
inline void GLES11Ext::glGetTexGenxvOES(jint p1, jint p2, ref<link::java::array<jint>> p3, jint p4) { return call_static_method<SCAPIX_META_STRING("glGetTexGenxvOES"), void>(p1, p2, p3, p4); }
inline void GLES11Ext::glGetTexGenxvOES(jint p1, jint p2, ref<java::nio::IntBuffer> p3) { return call_static_method<SCAPIX_META_STRING("glGetTexGenxvOES"), void>(p1, p2, p3); }

} // namespace android::opengl
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_OPENGL_GLES11EXT_H
