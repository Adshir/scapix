// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_OPENGL_GLU_H
#define SCAPIX_ANDROID_OPENGL_GLU_H

namespace scapix::java_api {

namespace java::lang { class String; }
namespace javax::microedition::khronos::opengles { class GL10; }

namespace android::opengl {

class GLU : public object_base<SCAPIX_META_STRING("android/opengl/GLU"),
	java::lang::Object>
{
public:

	static ref<GLU> new_object();
	static ref<java::lang::String> gluErrorString(jint error);
	static void gluLookAt(ref<javax::microedition::khronos::opengles::GL10> gl, jfloat eyeX, jfloat eyeY, jfloat eyeZ, jfloat centerX, jfloat centerY, jfloat centerZ, jfloat upX, jfloat upY, jfloat upZ);
	static void gluOrtho2D(ref<javax::microedition::khronos::opengles::GL10> gl, jfloat left, jfloat right, jfloat bottom, jfloat top);
	static void gluPerspective(ref<javax::microedition::khronos::opengles::GL10> gl, jfloat fovy, jfloat aspect, jfloat zNear, jfloat zFar);
	static jint gluProject(jfloat objX, jfloat objY, jfloat objZ, ref<link::java::array<jfloat>> model, jint modelOffset, ref<link::java::array<jfloat>> project, jint projectOffset, ref<link::java::array<jint>> view, jint viewOffset, ref<link::java::array<jfloat>> win, jint winOffset);
	static jint gluUnProject(jfloat winX, jfloat winY, jfloat winZ, ref<link::java::array<jfloat>> model, jint modelOffset, ref<link::java::array<jfloat>> project, jint projectOffset, ref<link::java::array<jint>> view, jint viewOffset, ref<link::java::array<jfloat>> obj, jint objOffset);

protected:

	GLU(handle_type h) : base_(h) {}

};

} // namespace android::opengl
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/javax/microedition/khronos/opengles/GL10.h>

namespace scapix::java_api {
namespace android::opengl {

inline ref<GLU> GLU::new_object() { return base_::new_object(); }
inline ref<java::lang::String> GLU::gluErrorString(jint error) { return call_static_method<SCAPIX_META_STRING("gluErrorString"), ref<java::lang::String>>(error); }
inline void GLU::gluLookAt(ref<javax::microedition::khronos::opengles::GL10> gl, jfloat eyeX, jfloat eyeY, jfloat eyeZ, jfloat centerX, jfloat centerY, jfloat centerZ, jfloat upX, jfloat upY, jfloat upZ) { return call_static_method<SCAPIX_META_STRING("gluLookAt"), void>(gl, eyeX, eyeY, eyeZ, centerX, centerY, centerZ, upX, upY, upZ); }
inline void GLU::gluOrtho2D(ref<javax::microedition::khronos::opengles::GL10> gl, jfloat left, jfloat right, jfloat bottom, jfloat top) { return call_static_method<SCAPIX_META_STRING("gluOrtho2D"), void>(gl, left, right, bottom, top); }
inline void GLU::gluPerspective(ref<javax::microedition::khronos::opengles::GL10> gl, jfloat fovy, jfloat aspect, jfloat zNear, jfloat zFar) { return call_static_method<SCAPIX_META_STRING("gluPerspective"), void>(gl, fovy, aspect, zNear, zFar); }
inline jint GLU::gluProject(jfloat objX, jfloat objY, jfloat objZ, ref<link::java::array<jfloat>> model, jint modelOffset, ref<link::java::array<jfloat>> project, jint projectOffset, ref<link::java::array<jint>> view, jint viewOffset, ref<link::java::array<jfloat>> win, jint winOffset) { return call_static_method<SCAPIX_META_STRING("gluProject"), jint>(objX, objY, objZ, model, modelOffset, project, projectOffset, view, viewOffset, win, winOffset); }
inline jint GLU::gluUnProject(jfloat winX, jfloat winY, jfloat winZ, ref<link::java::array<jfloat>> model, jint modelOffset, ref<link::java::array<jfloat>> project, jint projectOffset, ref<link::java::array<jint>> view, jint viewOffset, ref<link::java::array<jfloat>> obj, jint objOffset) { return call_static_method<SCAPIX_META_STRING("gluUnProject"), jint>(winX, winY, winZ, model, modelOffset, project, projectOffset, view, viewOffset, obj, objOffset); }

} // namespace android::opengl
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_OPENGL_GLU_H
