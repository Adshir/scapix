// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_OPENGL_ETC1UTIL_ETC1TEXTURE_H
#define SCAPIX_ANDROID_OPENGL_ETC1UTIL_ETC1TEXTURE_H

namespace scapix::java_api {

namespace java::nio { class ByteBuffer; }

namespace android::opengl {

class ETC1Util_ETC1Texture : public object_base<SCAPIX_META_STRING("android/opengl/ETC1Util$ETC1Texture"),
	java::lang::Object>
{
public:

	static ref<ETC1Util_ETC1Texture> new_object(jint width, jint height, ref<java::nio::ByteBuffer> data);
	jint getWidth();
	jint getHeight();
	ref<java::nio::ByteBuffer> getData();

protected:

	ETC1Util_ETC1Texture(handle_type h) : base_(h) {}

};

} // namespace android::opengl
} // namespace scapix::java_api

#include <scapix/java_api/java/nio/ByteBuffer.h>

namespace scapix::java_api {
namespace android::opengl {

inline ref<ETC1Util_ETC1Texture> ETC1Util_ETC1Texture::new_object(jint width, jint height, ref<java::nio::ByteBuffer> data) { return base_::new_object(width, height, data); }
inline jint ETC1Util_ETC1Texture::getWidth() { return call_method<SCAPIX_META_STRING("getWidth"), jint>(); }
inline jint ETC1Util_ETC1Texture::getHeight() { return call_method<SCAPIX_META_STRING("getHeight"), jint>(); }
inline ref<java::nio::ByteBuffer> ETC1Util_ETC1Texture::getData() { return call_method<SCAPIX_META_STRING("getData"), ref<java::nio::ByteBuffer>>(); }

} // namespace android::opengl
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_OPENGL_ETC1UTIL_ETC1TEXTURE_H
