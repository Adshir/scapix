// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/Cloneable.h>

#ifndef SCAPIX_ANDROID_ANIMATION_PROPERTYVALUESHOLDER_H
#define SCAPIX_ANDROID_ANIMATION_PROPERTYVALUESHOLDER_H

namespace scapix::java_api {

namespace android::animation { class Keyframe; }
namespace android::animation { class TypeConverter; }
namespace android::animation { class TypeEvaluator; }
namespace android::graphics { class Path; }
namespace android::util { class Property; }
namespace java::lang { class String; }

namespace android::animation {

class PropertyValuesHolder : public object_base<SCAPIX_META_STRING("android/animation/PropertyValuesHolder"),
	java::lang::Object,
	java::lang::Cloneable>
{
public:

	static ref<android::animation::PropertyValuesHolder> ofInt(ref<java::lang::String> propertyName, ref<link::java::array<jint>> values);
	static ref<android::animation::PropertyValuesHolder> ofInt(ref<android::util::Property> property, ref<link::java::array<jint>> values);
	static ref<android::animation::PropertyValuesHolder> ofMultiInt(ref<java::lang::String> propertyName, ref<link::java::array<link::java::array<jint>>> values);
	static ref<android::animation::PropertyValuesHolder> ofMultiInt(ref<java::lang::String> propertyName, ref<android::graphics::Path> path);
	static ref<android::animation::PropertyValuesHolder> ofMultiInt(ref<java::lang::String> propertyName, ref<android::animation::TypeConverter> converter, ref<android::animation::TypeEvaluator> evaluator, ref<link::java::array<java::lang::Object>> values);
	static ref<android::animation::PropertyValuesHolder> ofMultiInt(ref<java::lang::String> propertyName, ref<android::animation::TypeConverter> converter, ref<android::animation::TypeEvaluator> evaluator, ref<link::java::array<android::animation::Keyframe>> values);
	static ref<android::animation::PropertyValuesHolder> ofFloat(ref<java::lang::String> propertyName, ref<link::java::array<jfloat>> values);
	static ref<android::animation::PropertyValuesHolder> ofFloat(ref<android::util::Property> property, ref<link::java::array<jfloat>> values);
	static ref<android::animation::PropertyValuesHolder> ofMultiFloat(ref<java::lang::String> propertyName, ref<link::java::array<link::java::array<jfloat>>> values);
	static ref<android::animation::PropertyValuesHolder> ofMultiFloat(ref<java::lang::String> propertyName, ref<android::graphics::Path> path);
	static ref<android::animation::PropertyValuesHolder> ofMultiFloat(ref<java::lang::String> propertyName, ref<android::animation::TypeConverter> converter, ref<android::animation::TypeEvaluator> evaluator, ref<link::java::array<java::lang::Object>> values);
	static ref<android::animation::PropertyValuesHolder> ofMultiFloat(ref<java::lang::String> propertyName, ref<android::animation::TypeConverter> converter, ref<android::animation::TypeEvaluator> evaluator, ref<link::java::array<android::animation::Keyframe>> values);
	static ref<android::animation::PropertyValuesHolder> ofObject(ref<java::lang::String> propertyName, ref<android::animation::TypeEvaluator> evaluator, ref<link::java::array<java::lang::Object>> values);
	static ref<android::animation::PropertyValuesHolder> ofObject(ref<java::lang::String> propertyName, ref<android::animation::TypeConverter> converter, ref<android::graphics::Path> path);
	static ref<android::animation::PropertyValuesHolder> ofObject(ref<android::util::Property> property, ref<android::animation::TypeEvaluator> evaluator, ref<link::java::array<java::lang::Object>> values);
	static ref<android::animation::PropertyValuesHolder> ofObject(ref<android::util::Property> property, ref<android::animation::TypeConverter> converter, ref<android::animation::TypeEvaluator> evaluator, ref<link::java::array<java::lang::Object>> values);
	static ref<android::animation::PropertyValuesHolder> ofObject(ref<android::util::Property> property, ref<android::animation::TypeConverter> converter, ref<android::graphics::Path> path);
	static ref<android::animation::PropertyValuesHolder> ofKeyframe(ref<java::lang::String> propertyName, ref<link::java::array<android::animation::Keyframe>> values);
	static ref<android::animation::PropertyValuesHolder> ofKeyframe(ref<android::util::Property> property, ref<link::java::array<android::animation::Keyframe>> values);
	void setIntValues(ref<link::java::array<jint>> values);
	void setFloatValues(ref<link::java::array<jfloat>> values);
	void setKeyframes(ref<link::java::array<android::animation::Keyframe>> values);
	void setObjectValues(ref<link::java::array<java::lang::Object>> values);
	void setConverter(ref<android::animation::TypeConverter> converter);
	ref<android::animation::PropertyValuesHolder> clone();
	void setEvaluator(ref<android::animation::TypeEvaluator> evaluator);
	void setPropertyName(ref<java::lang::String> propertyName);
	void setProperty(ref<android::util::Property> property);
	ref<java::lang::String> getPropertyName();
	ref<java::lang::String> toString();

protected:

	PropertyValuesHolder(handle_type h) : base_(h) {}

};

} // namespace android::animation
} // namespace scapix::java_api

#include <scapix/java_api/android/animation/Keyframe.h>
#include <scapix/java_api/android/animation/TypeConverter.h>
#include <scapix/java_api/android/animation/TypeEvaluator.h>
#include <scapix/java_api/android/graphics/Path.h>
#include <scapix/java_api/android/util/Property.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::animation {

inline ref<android::animation::PropertyValuesHolder> PropertyValuesHolder::ofInt(ref<java::lang::String> propertyName, ref<link::java::array<jint>> values) { return call_static_method<SCAPIX_META_STRING("ofInt"), ref<android::animation::PropertyValuesHolder>>(propertyName, values); }
inline ref<android::animation::PropertyValuesHolder> PropertyValuesHolder::ofInt(ref<android::util::Property> property, ref<link::java::array<jint>> values) { return call_static_method<SCAPIX_META_STRING("ofInt"), ref<android::animation::PropertyValuesHolder>>(property, values); }
inline ref<android::animation::PropertyValuesHolder> PropertyValuesHolder::ofMultiInt(ref<java::lang::String> propertyName, ref<link::java::array<link::java::array<jint>>> values) { return call_static_method<SCAPIX_META_STRING("ofMultiInt"), ref<android::animation::PropertyValuesHolder>>(propertyName, values); }
inline ref<android::animation::PropertyValuesHolder> PropertyValuesHolder::ofMultiInt(ref<java::lang::String> propertyName, ref<android::graphics::Path> path) { return call_static_method<SCAPIX_META_STRING("ofMultiInt"), ref<android::animation::PropertyValuesHolder>>(propertyName, path); }
inline ref<android::animation::PropertyValuesHolder> PropertyValuesHolder::ofMultiInt(ref<java::lang::String> propertyName, ref<android::animation::TypeConverter> converter, ref<android::animation::TypeEvaluator> evaluator, ref<link::java::array<java::lang::Object>> values) { return call_static_method<SCAPIX_META_STRING("ofMultiInt"), ref<android::animation::PropertyValuesHolder>>(propertyName, converter, evaluator, values); }
inline ref<android::animation::PropertyValuesHolder> PropertyValuesHolder::ofMultiInt(ref<java::lang::String> propertyName, ref<android::animation::TypeConverter> converter, ref<android::animation::TypeEvaluator> evaluator, ref<link::java::array<android::animation::Keyframe>> values) { return call_static_method<SCAPIX_META_STRING("ofMultiInt"), ref<android::animation::PropertyValuesHolder>>(propertyName, converter, evaluator, values); }
inline ref<android::animation::PropertyValuesHolder> PropertyValuesHolder::ofFloat(ref<java::lang::String> propertyName, ref<link::java::array<jfloat>> values) { return call_static_method<SCAPIX_META_STRING("ofFloat"), ref<android::animation::PropertyValuesHolder>>(propertyName, values); }
inline ref<android::animation::PropertyValuesHolder> PropertyValuesHolder::ofFloat(ref<android::util::Property> property, ref<link::java::array<jfloat>> values) { return call_static_method<SCAPIX_META_STRING("ofFloat"), ref<android::animation::PropertyValuesHolder>>(property, values); }
inline ref<android::animation::PropertyValuesHolder> PropertyValuesHolder::ofMultiFloat(ref<java::lang::String> propertyName, ref<link::java::array<link::java::array<jfloat>>> values) { return call_static_method<SCAPIX_META_STRING("ofMultiFloat"), ref<android::animation::PropertyValuesHolder>>(propertyName, values); }
inline ref<android::animation::PropertyValuesHolder> PropertyValuesHolder::ofMultiFloat(ref<java::lang::String> propertyName, ref<android::graphics::Path> path) { return call_static_method<SCAPIX_META_STRING("ofMultiFloat"), ref<android::animation::PropertyValuesHolder>>(propertyName, path); }
inline ref<android::animation::PropertyValuesHolder> PropertyValuesHolder::ofMultiFloat(ref<java::lang::String> propertyName, ref<android::animation::TypeConverter> converter, ref<android::animation::TypeEvaluator> evaluator, ref<link::java::array<java::lang::Object>> values) { return call_static_method<SCAPIX_META_STRING("ofMultiFloat"), ref<android::animation::PropertyValuesHolder>>(propertyName, converter, evaluator, values); }
inline ref<android::animation::PropertyValuesHolder> PropertyValuesHolder::ofMultiFloat(ref<java::lang::String> propertyName, ref<android::animation::TypeConverter> converter, ref<android::animation::TypeEvaluator> evaluator, ref<link::java::array<android::animation::Keyframe>> values) { return call_static_method<SCAPIX_META_STRING("ofMultiFloat"), ref<android::animation::PropertyValuesHolder>>(propertyName, converter, evaluator, values); }
inline ref<android::animation::PropertyValuesHolder> PropertyValuesHolder::ofObject(ref<java::lang::String> propertyName, ref<android::animation::TypeEvaluator> evaluator, ref<link::java::array<java::lang::Object>> values) { return call_static_method<SCAPIX_META_STRING("ofObject"), ref<android::animation::PropertyValuesHolder>>(propertyName, evaluator, values); }
inline ref<android::animation::PropertyValuesHolder> PropertyValuesHolder::ofObject(ref<java::lang::String> propertyName, ref<android::animation::TypeConverter> converter, ref<android::graphics::Path> path) { return call_static_method<SCAPIX_META_STRING("ofObject"), ref<android::animation::PropertyValuesHolder>>(propertyName, converter, path); }
inline ref<android::animation::PropertyValuesHolder> PropertyValuesHolder::ofObject(ref<android::util::Property> property, ref<android::animation::TypeEvaluator> evaluator, ref<link::java::array<java::lang::Object>> values) { return call_static_method<SCAPIX_META_STRING("ofObject"), ref<android::animation::PropertyValuesHolder>>(property, evaluator, values); }
inline ref<android::animation::PropertyValuesHolder> PropertyValuesHolder::ofObject(ref<android::util::Property> property, ref<android::animation::TypeConverter> converter, ref<android::animation::TypeEvaluator> evaluator, ref<link::java::array<java::lang::Object>> values) { return call_static_method<SCAPIX_META_STRING("ofObject"), ref<android::animation::PropertyValuesHolder>>(property, converter, evaluator, values); }
inline ref<android::animation::PropertyValuesHolder> PropertyValuesHolder::ofObject(ref<android::util::Property> property, ref<android::animation::TypeConverter> converter, ref<android::graphics::Path> path) { return call_static_method<SCAPIX_META_STRING("ofObject"), ref<android::animation::PropertyValuesHolder>>(property, converter, path); }
inline ref<android::animation::PropertyValuesHolder> PropertyValuesHolder::ofKeyframe(ref<java::lang::String> propertyName, ref<link::java::array<android::animation::Keyframe>> values) { return call_static_method<SCAPIX_META_STRING("ofKeyframe"), ref<android::animation::PropertyValuesHolder>>(propertyName, values); }
inline ref<android::animation::PropertyValuesHolder> PropertyValuesHolder::ofKeyframe(ref<android::util::Property> property, ref<link::java::array<android::animation::Keyframe>> values) { return call_static_method<SCAPIX_META_STRING("ofKeyframe"), ref<android::animation::PropertyValuesHolder>>(property, values); }
inline void PropertyValuesHolder::setIntValues(ref<link::java::array<jint>> values) { return call_method<SCAPIX_META_STRING("setIntValues"), void>(values); }
inline void PropertyValuesHolder::setFloatValues(ref<link::java::array<jfloat>> values) { return call_method<SCAPIX_META_STRING("setFloatValues"), void>(values); }
inline void PropertyValuesHolder::setKeyframes(ref<link::java::array<android::animation::Keyframe>> values) { return call_method<SCAPIX_META_STRING("setKeyframes"), void>(values); }
inline void PropertyValuesHolder::setObjectValues(ref<link::java::array<java::lang::Object>> values) { return call_method<SCAPIX_META_STRING("setObjectValues"), void>(values); }
inline void PropertyValuesHolder::setConverter(ref<android::animation::TypeConverter> converter) { return call_method<SCAPIX_META_STRING("setConverter"), void>(converter); }
inline ref<android::animation::PropertyValuesHolder> PropertyValuesHolder::clone() { return call_method<SCAPIX_META_STRING("clone"), ref<android::animation::PropertyValuesHolder>>(); }
inline void PropertyValuesHolder::setEvaluator(ref<android::animation::TypeEvaluator> evaluator) { return call_method<SCAPIX_META_STRING("setEvaluator"), void>(evaluator); }
inline void PropertyValuesHolder::setPropertyName(ref<java::lang::String> propertyName) { return call_method<SCAPIX_META_STRING("setPropertyName"), void>(propertyName); }
inline void PropertyValuesHolder::setProperty(ref<android::util::Property> property) { return call_method<SCAPIX_META_STRING("setProperty"), void>(property); }
inline ref<java::lang::String> PropertyValuesHolder::getPropertyName() { return call_method<SCAPIX_META_STRING("getPropertyName"), ref<java::lang::String>>(); }
inline ref<java::lang::String> PropertyValuesHolder::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }

} // namespace android::animation
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_ANIMATION_PROPERTYVALUESHOLDER_H
