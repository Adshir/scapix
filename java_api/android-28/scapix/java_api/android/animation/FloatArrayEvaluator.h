// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/animation/TypeEvaluator.h>

#ifndef SCAPIX_ANDROID_ANIMATION_FLOATARRAYEVALUATOR_H
#define SCAPIX_ANDROID_ANIMATION_FLOATARRAYEVALUATOR_H

namespace scapix::java_api {
namespace android::animation {

class FloatArrayEvaluator : public object_base<SCAPIX_META_STRING("android/animation/FloatArrayEvaluator"),
	java::lang::Object,
	android::animation::TypeEvaluator>
{
public:

	static ref<FloatArrayEvaluator> new_object();
	static ref<FloatArrayEvaluator> new_object(ref<link::java::array<jfloat>> reuseArray);
	ref<link::java::array<jfloat>> evaluate(jfloat fraction, ref<link::java::array<jfloat>> startValue, ref<link::java::array<jfloat>> endValue);

protected:

	FloatArrayEvaluator(handle_type h) : base_(h) {}

};

} // namespace android::animation
} // namespace scapix::java_api


namespace scapix::java_api {
namespace android::animation {

inline ref<FloatArrayEvaluator> FloatArrayEvaluator::new_object() { return base_::new_object(); }
inline ref<FloatArrayEvaluator> FloatArrayEvaluator::new_object(ref<link::java::array<jfloat>> reuseArray) { return base_::new_object(reuseArray); }
inline ref<link::java::array<jfloat>> FloatArrayEvaluator::evaluate(jfloat fraction, ref<link::java::array<jfloat>> startValue, ref<link::java::array<jfloat>> endValue) { return call_method<SCAPIX_META_STRING("evaluate"), ref<link::java::array<jfloat>>>(fraction, startValue, endValue); }

} // namespace android::animation
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_ANIMATION_FLOATARRAYEVALUATOR_H
