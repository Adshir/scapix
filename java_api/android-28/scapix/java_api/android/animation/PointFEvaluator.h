// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/animation/TypeEvaluator.h>

#ifndef SCAPIX_ANDROID_ANIMATION_POINTFEVALUATOR_H
#define SCAPIX_ANDROID_ANIMATION_POINTFEVALUATOR_H

namespace scapix::java_api {

namespace android::graphics { class PointF; }

namespace android::animation {

class PointFEvaluator : public object_base<SCAPIX_META_STRING("android/animation/PointFEvaluator"),
	java::lang::Object,
	android::animation::TypeEvaluator>
{
public:

	static ref<PointFEvaluator> new_object();
	static ref<PointFEvaluator> new_object(ref<android::graphics::PointF> reuse);
	ref<android::graphics::PointF> evaluate(jfloat fraction, ref<android::graphics::PointF> startValue, ref<android::graphics::PointF> endValue);

protected:

	PointFEvaluator(handle_type h) : base_(h) {}

};

} // namespace android::animation
} // namespace scapix::java_api

#include <scapix/java_api/android/graphics/PointF.h>

namespace scapix::java_api {
namespace android::animation {

inline ref<PointFEvaluator> PointFEvaluator::new_object() { return base_::new_object(); }
inline ref<PointFEvaluator> PointFEvaluator::new_object(ref<android::graphics::PointF> reuse) { return base_::new_object(reuse); }
inline ref<android::graphics::PointF> PointFEvaluator::evaluate(jfloat fraction, ref<android::graphics::PointF> startValue, ref<android::graphics::PointF> endValue) { return call_method<SCAPIX_META_STRING("evaluate"), ref<android::graphics::PointF>>(fraction, startValue, endValue); }

} // namespace android::animation
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_ANIMATION_POINTFEVALUATOR_H
