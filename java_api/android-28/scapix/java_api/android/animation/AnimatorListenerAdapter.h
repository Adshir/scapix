// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/animation/Animator_AnimatorListener.h>
#include <scapix/java_api/android/animation/Animator_AnimatorPauseListener.h>

#ifndef SCAPIX_ANDROID_ANIMATION_ANIMATORLISTENERADAPTER_H
#define SCAPIX_ANDROID_ANIMATION_ANIMATORLISTENERADAPTER_H

namespace scapix::java_api {

namespace android::animation { class Animator; }

namespace android::animation {

class AnimatorListenerAdapter : public object_base<SCAPIX_META_STRING("android/animation/AnimatorListenerAdapter"),
	java::lang::Object,
	android::animation::Animator_AnimatorListener,
	android::animation::Animator_AnimatorPauseListener>
{
public:

	static ref<AnimatorListenerAdapter> new_object();
	void onAnimationCancel(ref<android::animation::Animator> animation);
	void onAnimationEnd(ref<android::animation::Animator> animation);
	void onAnimationRepeat(ref<android::animation::Animator> animation);
	void onAnimationStart(ref<android::animation::Animator> animation);
	void onAnimationPause(ref<android::animation::Animator> animation);
	void onAnimationResume(ref<android::animation::Animator> animation);

protected:

	AnimatorListenerAdapter(handle_type h) : base_(h) {}

};

} // namespace android::animation
} // namespace scapix::java_api

#include <scapix/java_api/android/animation/Animator.h>

namespace scapix::java_api {
namespace android::animation {

inline ref<AnimatorListenerAdapter> AnimatorListenerAdapter::new_object() { return base_::new_object(); }
inline void AnimatorListenerAdapter::onAnimationCancel(ref<android::animation::Animator> animation) { return call_method<SCAPIX_META_STRING("onAnimationCancel"), void>(animation); }
inline void AnimatorListenerAdapter::onAnimationEnd(ref<android::animation::Animator> animation) { return call_method<SCAPIX_META_STRING("onAnimationEnd"), void>(animation); }
inline void AnimatorListenerAdapter::onAnimationRepeat(ref<android::animation::Animator> animation) { return call_method<SCAPIX_META_STRING("onAnimationRepeat"), void>(animation); }
inline void AnimatorListenerAdapter::onAnimationStart(ref<android::animation::Animator> animation) { return call_method<SCAPIX_META_STRING("onAnimationStart"), void>(animation); }
inline void AnimatorListenerAdapter::onAnimationPause(ref<android::animation::Animator> animation) { return call_method<SCAPIX_META_STRING("onAnimationPause"), void>(animation); }
inline void AnimatorListenerAdapter::onAnimationResume(ref<android::animation::Animator> animation) { return call_method<SCAPIX_META_STRING("onAnimationResume"), void>(animation); }

} // namespace android::animation
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_ANIMATION_ANIMATORLISTENERADAPTER_H
