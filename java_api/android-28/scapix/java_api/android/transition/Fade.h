// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/transition/Visibility.h>

#ifndef SCAPIX_ANDROID_TRANSITION_FADE_H
#define SCAPIX_ANDROID_TRANSITION_FADE_H

namespace scapix::java_api {

namespace android::animation { class Animator; }
namespace android::content { class Context; }
namespace android::transition { class TransitionValues; }
namespace android::util { class AttributeSet; }
namespace android::view { class View; }
namespace android::view { class ViewGroup; }

namespace android::transition {

class Fade : public object_base<SCAPIX_META_STRING("android/transition/Fade"),
	android::transition::Visibility>
{
public:

	static jint IN_();
	static jint OUT_();

	static ref<Fade> new_object();
	static ref<Fade> new_object(jint fadingMode);
	static ref<Fade> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs);
	void captureStartValues(ref<android::transition::TransitionValues> transitionValues);
	ref<android::animation::Animator> onAppear(ref<android::view::ViewGroup> sceneRoot, ref<android::view::View> view, ref<android::transition::TransitionValues> startValues, ref<android::transition::TransitionValues> endValues);
	ref<android::animation::Animator> onDisappear(ref<android::view::ViewGroup> sceneRoot, ref<android::view::View> view, ref<android::transition::TransitionValues> startValues, ref<android::transition::TransitionValues> endValues);

protected:

	Fade(handle_type h) : base_(h) {}

};

} // namespace android::transition
} // namespace scapix::java_api

#include <scapix/java_api/android/animation/Animator.h>
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/transition/TransitionValues.h>
#include <scapix/java_api/android/util/AttributeSet.h>
#include <scapix/java_api/android/view/View.h>
#include <scapix/java_api/android/view/ViewGroup.h>

namespace scapix::java_api {
namespace android::transition {

inline jint Fade::IN_() { return get_static_field<SCAPIX_META_STRING("IN"), jint>(); }
inline jint Fade::OUT_() { return get_static_field<SCAPIX_META_STRING("OUT"), jint>(); }
inline ref<Fade> Fade::new_object() { return base_::new_object(); }
inline ref<Fade> Fade::new_object(jint fadingMode) { return base_::new_object(fadingMode); }
inline ref<Fade> Fade::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs) { return base_::new_object(context, attrs); }
inline void Fade::captureStartValues(ref<android::transition::TransitionValues> transitionValues) { return call_method<SCAPIX_META_STRING("captureStartValues"), void>(transitionValues); }
inline ref<android::animation::Animator> Fade::onAppear(ref<android::view::ViewGroup> sceneRoot, ref<android::view::View> view, ref<android::transition::TransitionValues> startValues, ref<android::transition::TransitionValues> endValues) { return call_method<SCAPIX_META_STRING("onAppear"), ref<android::animation::Animator>>(sceneRoot, view, startValues, endValues); }
inline ref<android::animation::Animator> Fade::onDisappear(ref<android::view::ViewGroup> sceneRoot, ref<android::view::View> view, ref<android::transition::TransitionValues> startValues, ref<android::transition::TransitionValues> endValues) { return call_method<SCAPIX_META_STRING("onDisappear"), ref<android::animation::Animator>>(sceneRoot, view, startValues, endValues); }

} // namespace android::transition
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_TRANSITION_FADE_H
