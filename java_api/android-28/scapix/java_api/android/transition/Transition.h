// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/Cloneable.h>

#ifndef SCAPIX_ANDROID_TRANSITION_TRANSITION_H
#define SCAPIX_ANDROID_TRANSITION_TRANSITION_H

namespace scapix::java_api {

namespace android::animation { class Animator; }
namespace android::animation { class TimeInterpolator; }
namespace android::content { class Context; }
namespace android::graphics { class Rect; }
namespace android::transition { class PathMotion; }
namespace android::transition { class Transition_EpicenterCallback; }
namespace android::transition { class Transition_TransitionListener; }
namespace android::transition { class TransitionPropagation; }
namespace android::transition { class TransitionValues; }
namespace android::util { class AttributeSet; }
namespace android::view { class View; }
namespace android::view { class ViewGroup; }
namespace java::lang { class Class; }
namespace java::lang { class String; }
namespace java::util { class List; }

namespace android::transition {

class Transition : public object_base<SCAPIX_META_STRING("android/transition/Transition"),
	java::lang::Object,
	java::lang::Cloneable>
{
public:

	using TransitionListener = Transition_TransitionListener;
	using EpicenterCallback = Transition_EpicenterCallback;

	static jint MATCH_ID_();
	static jint MATCH_INSTANCE_();
	static jint MATCH_ITEM_ID_();
	static jint MATCH_NAME_();

	static ref<Transition> new_object();
	static ref<Transition> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs);
	ref<android::transition::Transition> setDuration(jlong duration);
	jlong getDuration();
	ref<android::transition::Transition> setStartDelay(jlong startDelay);
	jlong getStartDelay();
	ref<android::transition::Transition> setInterpolator(ref<android::animation::TimeInterpolator> interpolator);
	ref<android::animation::TimeInterpolator> getInterpolator();
	ref<link::java::array<java::lang::String>> getTransitionProperties();
	ref<android::animation::Animator> createAnimator(ref<android::view::ViewGroup> sceneRoot, ref<android::transition::TransitionValues> startValues, ref<android::transition::TransitionValues> endValues);
	void setMatchOrder(ref<link::java::array<jint>> matches);
	void captureStartValues(ref<android::transition::TransitionValues> p1);
	void captureEndValues(ref<android::transition::TransitionValues> p1);
	ref<android::transition::Transition> addTarget(jint targetId);
	ref<android::transition::Transition> addTarget(ref<java::lang::String> targetName);
	ref<android::transition::Transition> addTarget(ref<java::lang::Class> targetType);
	ref<android::transition::Transition> removeTarget(jint targetId);
	ref<android::transition::Transition> removeTarget(ref<java::lang::String> targetName);
	ref<android::transition::Transition> excludeTarget(jint targetId, jboolean exclude);
	ref<android::transition::Transition> excludeTarget(ref<java::lang::String> targetName, jboolean exclude);
	ref<android::transition::Transition> excludeChildren(jint targetId, jboolean exclude);
	ref<android::transition::Transition> excludeTarget(ref<android::view::View> target, jboolean exclude);
	ref<android::transition::Transition> excludeChildren(ref<android::view::View> target, jboolean exclude);
	ref<android::transition::Transition> excludeTarget(ref<java::lang::Class> type, jboolean exclude);
	ref<android::transition::Transition> excludeChildren(ref<java::lang::Class> type, jboolean exclude);
	ref<android::transition::Transition> addTarget(ref<android::view::View> target);
	ref<android::transition::Transition> removeTarget(ref<android::view::View> target);
	ref<android::transition::Transition> removeTarget(ref<java::lang::Class> target);
	ref<java::util::List> getTargetIds();
	ref<java::util::List> getTargets();
	ref<java::util::List> getTargetNames();
	ref<java::util::List> getTargetTypes();
	ref<android::transition::TransitionValues> getTransitionValues(ref<android::view::View> view, jboolean start);
	jboolean isTransitionRequired(ref<android::transition::TransitionValues> startValues, ref<android::transition::TransitionValues> endValues);
	ref<android::transition::Transition> addListener(ref<android::transition::Transition_TransitionListener> listener);
	ref<android::transition::Transition> removeListener(ref<android::transition::Transition_TransitionListener> listener);
	void setEpicenterCallback(ref<android::transition::Transition_EpicenterCallback> epicenterCallback);
	ref<android::transition::Transition_EpicenterCallback> getEpicenterCallback();
	ref<android::graphics::Rect> getEpicenter();
	void setPathMotion(ref<android::transition::PathMotion> pathMotion);
	ref<android::transition::PathMotion> getPathMotion();
	void setPropagation(ref<android::transition::TransitionPropagation> transitionPropagation);
	ref<android::transition::TransitionPropagation> getPropagation();
	jboolean canRemoveViews();
	ref<java::lang::String> toString();
	ref<android::transition::Transition> clone();
	ref<java::lang::String> getName();

protected:

	Transition(handle_type h) : base_(h) {}

};

} // namespace android::transition
} // namespace scapix::java_api

#include <scapix/java_api/android/animation/Animator.h>
#include <scapix/java_api/android/animation/TimeInterpolator.h>
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/graphics/Rect.h>
#include <scapix/java_api/android/transition/PathMotion.h>
#include <scapix/java_api/android/transition/Transition_EpicenterCallback.h>
#include <scapix/java_api/android/transition/Transition_TransitionListener.h>
#include <scapix/java_api/android/transition/TransitionPropagation.h>
#include <scapix/java_api/android/transition/TransitionValues.h>
#include <scapix/java_api/android/util/AttributeSet.h>
#include <scapix/java_api/android/view/View.h>
#include <scapix/java_api/android/view/ViewGroup.h>
#include <scapix/java_api/java/lang/Class.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/List.h>

namespace scapix::java_api {
namespace android::transition {

inline jint Transition::MATCH_ID_() { return get_static_field<SCAPIX_META_STRING("MATCH_ID"), jint>(); }
inline jint Transition::MATCH_INSTANCE_() { return get_static_field<SCAPIX_META_STRING("MATCH_INSTANCE"), jint>(); }
inline jint Transition::MATCH_ITEM_ID_() { return get_static_field<SCAPIX_META_STRING("MATCH_ITEM_ID"), jint>(); }
inline jint Transition::MATCH_NAME_() { return get_static_field<SCAPIX_META_STRING("MATCH_NAME"), jint>(); }
inline ref<Transition> Transition::new_object() { return base_::new_object(); }
inline ref<Transition> Transition::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs) { return base_::new_object(context, attrs); }
inline ref<android::transition::Transition> Transition::setDuration(jlong duration) { return call_method<SCAPIX_META_STRING("setDuration"), ref<android::transition::Transition>>(duration); }
inline jlong Transition::getDuration() { return call_method<SCAPIX_META_STRING("getDuration"), jlong>(); }
inline ref<android::transition::Transition> Transition::setStartDelay(jlong startDelay) { return call_method<SCAPIX_META_STRING("setStartDelay"), ref<android::transition::Transition>>(startDelay); }
inline jlong Transition::getStartDelay() { return call_method<SCAPIX_META_STRING("getStartDelay"), jlong>(); }
inline ref<android::transition::Transition> Transition::setInterpolator(ref<android::animation::TimeInterpolator> interpolator) { return call_method<SCAPIX_META_STRING("setInterpolator"), ref<android::transition::Transition>>(interpolator); }
inline ref<android::animation::TimeInterpolator> Transition::getInterpolator() { return call_method<SCAPIX_META_STRING("getInterpolator"), ref<android::animation::TimeInterpolator>>(); }
inline ref<link::java::array<java::lang::String>> Transition::getTransitionProperties() { return call_method<SCAPIX_META_STRING("getTransitionProperties"), ref<link::java::array<java::lang::String>>>(); }
inline ref<android::animation::Animator> Transition::createAnimator(ref<android::view::ViewGroup> sceneRoot, ref<android::transition::TransitionValues> startValues, ref<android::transition::TransitionValues> endValues) { return call_method<SCAPIX_META_STRING("createAnimator"), ref<android::animation::Animator>>(sceneRoot, startValues, endValues); }
inline void Transition::setMatchOrder(ref<link::java::array<jint>> matches) { return call_method<SCAPIX_META_STRING("setMatchOrder"), void>(matches); }
inline void Transition::captureStartValues(ref<android::transition::TransitionValues> p1) { return call_method<SCAPIX_META_STRING("captureStartValues"), void>(p1); }
inline void Transition::captureEndValues(ref<android::transition::TransitionValues> p1) { return call_method<SCAPIX_META_STRING("captureEndValues"), void>(p1); }
inline ref<android::transition::Transition> Transition::addTarget(jint targetId) { return call_method<SCAPIX_META_STRING("addTarget"), ref<android::transition::Transition>>(targetId); }
inline ref<android::transition::Transition> Transition::addTarget(ref<java::lang::String> targetName) { return call_method<SCAPIX_META_STRING("addTarget"), ref<android::transition::Transition>>(targetName); }
inline ref<android::transition::Transition> Transition::addTarget(ref<java::lang::Class> targetType) { return call_method<SCAPIX_META_STRING("addTarget"), ref<android::transition::Transition>>(targetType); }
inline ref<android::transition::Transition> Transition::removeTarget(jint targetId) { return call_method<SCAPIX_META_STRING("removeTarget"), ref<android::transition::Transition>>(targetId); }
inline ref<android::transition::Transition> Transition::removeTarget(ref<java::lang::String> targetName) { return call_method<SCAPIX_META_STRING("removeTarget"), ref<android::transition::Transition>>(targetName); }
inline ref<android::transition::Transition> Transition::excludeTarget(jint targetId, jboolean exclude) { return call_method<SCAPIX_META_STRING("excludeTarget"), ref<android::transition::Transition>>(targetId, exclude); }
inline ref<android::transition::Transition> Transition::excludeTarget(ref<java::lang::String> targetName, jboolean exclude) { return call_method<SCAPIX_META_STRING("excludeTarget"), ref<android::transition::Transition>>(targetName, exclude); }
inline ref<android::transition::Transition> Transition::excludeChildren(jint targetId, jboolean exclude) { return call_method<SCAPIX_META_STRING("excludeChildren"), ref<android::transition::Transition>>(targetId, exclude); }
inline ref<android::transition::Transition> Transition::excludeTarget(ref<android::view::View> target, jboolean exclude) { return call_method<SCAPIX_META_STRING("excludeTarget"), ref<android::transition::Transition>>(target, exclude); }
inline ref<android::transition::Transition> Transition::excludeChildren(ref<android::view::View> target, jboolean exclude) { return call_method<SCAPIX_META_STRING("excludeChildren"), ref<android::transition::Transition>>(target, exclude); }
inline ref<android::transition::Transition> Transition::excludeTarget(ref<java::lang::Class> type, jboolean exclude) { return call_method<SCAPIX_META_STRING("excludeTarget"), ref<android::transition::Transition>>(type, exclude); }
inline ref<android::transition::Transition> Transition::excludeChildren(ref<java::lang::Class> type, jboolean exclude) { return call_method<SCAPIX_META_STRING("excludeChildren"), ref<android::transition::Transition>>(type, exclude); }
inline ref<android::transition::Transition> Transition::addTarget(ref<android::view::View> target) { return call_method<SCAPIX_META_STRING("addTarget"), ref<android::transition::Transition>>(target); }
inline ref<android::transition::Transition> Transition::removeTarget(ref<android::view::View> target) { return call_method<SCAPIX_META_STRING("removeTarget"), ref<android::transition::Transition>>(target); }
inline ref<android::transition::Transition> Transition::removeTarget(ref<java::lang::Class> target) { return call_method<SCAPIX_META_STRING("removeTarget"), ref<android::transition::Transition>>(target); }
inline ref<java::util::List> Transition::getTargetIds() { return call_method<SCAPIX_META_STRING("getTargetIds"), ref<java::util::List>>(); }
inline ref<java::util::List> Transition::getTargets() { return call_method<SCAPIX_META_STRING("getTargets"), ref<java::util::List>>(); }
inline ref<java::util::List> Transition::getTargetNames() { return call_method<SCAPIX_META_STRING("getTargetNames"), ref<java::util::List>>(); }
inline ref<java::util::List> Transition::getTargetTypes() { return call_method<SCAPIX_META_STRING("getTargetTypes"), ref<java::util::List>>(); }
inline ref<android::transition::TransitionValues> Transition::getTransitionValues(ref<android::view::View> view, jboolean start) { return call_method<SCAPIX_META_STRING("getTransitionValues"), ref<android::transition::TransitionValues>>(view, start); }
inline jboolean Transition::isTransitionRequired(ref<android::transition::TransitionValues> startValues, ref<android::transition::TransitionValues> endValues) { return call_method<SCAPIX_META_STRING("isTransitionRequired"), jboolean>(startValues, endValues); }
inline ref<android::transition::Transition> Transition::addListener(ref<android::transition::Transition_TransitionListener> listener) { return call_method<SCAPIX_META_STRING("addListener"), ref<android::transition::Transition>>(listener); }
inline ref<android::transition::Transition> Transition::removeListener(ref<android::transition::Transition_TransitionListener> listener) { return call_method<SCAPIX_META_STRING("removeListener"), ref<android::transition::Transition>>(listener); }
inline void Transition::setEpicenterCallback(ref<android::transition::Transition_EpicenterCallback> epicenterCallback) { return call_method<SCAPIX_META_STRING("setEpicenterCallback"), void>(epicenterCallback); }
inline ref<android::transition::Transition_EpicenterCallback> Transition::getEpicenterCallback() { return call_method<SCAPIX_META_STRING("getEpicenterCallback"), ref<android::transition::Transition_EpicenterCallback>>(); }
inline ref<android::graphics::Rect> Transition::getEpicenter() { return call_method<SCAPIX_META_STRING("getEpicenter"), ref<android::graphics::Rect>>(); }
inline void Transition::setPathMotion(ref<android::transition::PathMotion> pathMotion) { return call_method<SCAPIX_META_STRING("setPathMotion"), void>(pathMotion); }
inline ref<android::transition::PathMotion> Transition::getPathMotion() { return call_method<SCAPIX_META_STRING("getPathMotion"), ref<android::transition::PathMotion>>(); }
inline void Transition::setPropagation(ref<android::transition::TransitionPropagation> transitionPropagation) { return call_method<SCAPIX_META_STRING("setPropagation"), void>(transitionPropagation); }
inline ref<android::transition::TransitionPropagation> Transition::getPropagation() { return call_method<SCAPIX_META_STRING("getPropagation"), ref<android::transition::TransitionPropagation>>(); }
inline jboolean Transition::canRemoveViews() { return call_method<SCAPIX_META_STRING("canRemoveViews"), jboolean>(); }
inline ref<java::lang::String> Transition::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }
inline ref<android::transition::Transition> Transition::clone() { return call_method<SCAPIX_META_STRING("clone"), ref<android::transition::Transition>>(); }
inline ref<java::lang::String> Transition::getName() { return call_method<SCAPIX_META_STRING("getName"), ref<java::lang::String>>(); }

} // namespace android::transition
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_TRANSITION_TRANSITION_H
