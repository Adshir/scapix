// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/security/spec/AlgorithmParameterSpec.h>

#ifndef SCAPIX_ANDROID_SECURITY_KEYPAIRGENERATORSPEC_H
#define SCAPIX_ANDROID_SECURITY_KEYPAIRGENERATORSPEC_H

namespace scapix::java_api {

namespace android::content { class Context; }
namespace java::lang { class String; }
namespace java::math { class BigInteger; }
namespace java::util { class Date; }
namespace javax::security::auth::x500 { class X500Principal; }
namespace android::security { class KeyPairGeneratorSpec_Builder; }

namespace android::security {

class KeyPairGeneratorSpec : public object_base<SCAPIX_META_STRING("android/security/KeyPairGeneratorSpec"),
	java::lang::Object,
	java::security::spec::AlgorithmParameterSpec>
{
public:

	using Builder = KeyPairGeneratorSpec_Builder;

	ref<android::content::Context> getContext();
	ref<java::lang::String> getKeystoreAlias();
	ref<java::lang::String> getKeyType();
	jint getKeySize();
	ref<java::security::spec::AlgorithmParameterSpec> getAlgorithmParameterSpec();
	ref<javax::security::auth::x500::X500Principal> getSubjectDN();
	ref<java::math::BigInteger> getSerialNumber();
	ref<java::util::Date> getStartDate();
	ref<java::util::Date> getEndDate();
	jboolean isEncryptionRequired();

protected:

	KeyPairGeneratorSpec(handle_type h) : base_(h) {}

};

} // namespace android::security
} // namespace scapix::java_api

#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/math/BigInteger.h>
#include <scapix/java_api/java/util/Date.h>
#include <scapix/java_api/javax/security/auth/x500/X500Principal.h>

namespace scapix::java_api {
namespace android::security {

inline ref<android::content::Context> KeyPairGeneratorSpec::getContext() { return call_method<SCAPIX_META_STRING("getContext"), ref<android::content::Context>>(); }
inline ref<java::lang::String> KeyPairGeneratorSpec::getKeystoreAlias() { return call_method<SCAPIX_META_STRING("getKeystoreAlias"), ref<java::lang::String>>(); }
inline ref<java::lang::String> KeyPairGeneratorSpec::getKeyType() { return call_method<SCAPIX_META_STRING("getKeyType"), ref<java::lang::String>>(); }
inline jint KeyPairGeneratorSpec::getKeySize() { return call_method<SCAPIX_META_STRING("getKeySize"), jint>(); }
inline ref<java::security::spec::AlgorithmParameterSpec> KeyPairGeneratorSpec::getAlgorithmParameterSpec() { return call_method<SCAPIX_META_STRING("getAlgorithmParameterSpec"), ref<java::security::spec::AlgorithmParameterSpec>>(); }
inline ref<javax::security::auth::x500::X500Principal> KeyPairGeneratorSpec::getSubjectDN() { return call_method<SCAPIX_META_STRING("getSubjectDN"), ref<javax::security::auth::x500::X500Principal>>(); }
inline ref<java::math::BigInteger> KeyPairGeneratorSpec::getSerialNumber() { return call_method<SCAPIX_META_STRING("getSerialNumber"), ref<java::math::BigInteger>>(); }
inline ref<java::util::Date> KeyPairGeneratorSpec::getStartDate() { return call_method<SCAPIX_META_STRING("getStartDate"), ref<java::util::Date>>(); }
inline ref<java::util::Date> KeyPairGeneratorSpec::getEndDate() { return call_method<SCAPIX_META_STRING("getEndDate"), ref<java::util::Date>>(); }
inline jboolean KeyPairGeneratorSpec::isEncryptionRequired() { return call_method<SCAPIX_META_STRING("isEncryptionRequired"), jboolean>(); }

} // namespace android::security
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_SECURITY_KEYPAIRGENERATORSPEC_H
