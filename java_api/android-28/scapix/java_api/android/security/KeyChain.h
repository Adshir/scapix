// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_SECURITY_KEYCHAIN_H
#define SCAPIX_ANDROID_SECURITY_KEYCHAIN_H

namespace scapix::java_api {

namespace android::app { class Activity; }
namespace android::content { class Context; }
namespace android::content { class Intent; }
namespace android::net { class Uri; }
namespace android::security { class KeyChainAliasCallback; }
namespace java::lang { class String; }
namespace java::security { class Principal; }
namespace java::security { class PrivateKey; }
namespace java::security::cert { class X509Certificate; }

namespace android::security {

class KeyChain : public object_base<SCAPIX_META_STRING("android/security/KeyChain"),
	java::lang::Object>
{
public:

	static ref<java::lang::String> ACTION_KEYCHAIN_CHANGED_();
	static ref<java::lang::String> ACTION_KEY_ACCESS_CHANGED_();
	static ref<java::lang::String> ACTION_STORAGE_CHANGED_();
	static ref<java::lang::String> ACTION_TRUST_STORE_CHANGED_();
	static ref<java::lang::String> EXTRA_CERTIFICATE_();
	static ref<java::lang::String> EXTRA_KEY_ACCESSIBLE_();
	static ref<java::lang::String> EXTRA_KEY_ALIAS_();
	static ref<java::lang::String> EXTRA_NAME_();
	static ref<java::lang::String> EXTRA_PKCS12_();

	static ref<KeyChain> new_object();
	static ref<android::content::Intent> createInstallIntent();
	static void choosePrivateKeyAlias(ref<android::app::Activity> activity, ref<android::security::KeyChainAliasCallback> response, ref<link::java::array<java::lang::String>> keyTypes, ref<link::java::array<java::security::Principal>> issuers, ref<java::lang::String> host, jint port, ref<java::lang::String> alias);
	static void choosePrivateKeyAlias(ref<android::app::Activity> activity, ref<android::security::KeyChainAliasCallback> response, ref<link::java::array<java::lang::String>> keyTypes, ref<link::java::array<java::security::Principal>> issuers, ref<android::net::Uri> uri, ref<java::lang::String> alias);
	static ref<java::security::PrivateKey> getPrivateKey(ref<android::content::Context> context, ref<java::lang::String> alias);
	static ref<link::java::array<java::security::cert::X509Certificate>> getCertificateChain(ref<android::content::Context> context, ref<java::lang::String> alias);
	static jboolean isKeyAlgorithmSupported(ref<java::lang::String> algorithm);
	static jboolean isBoundKeyAlgorithm(ref<java::lang::String> algorithm);

protected:

	KeyChain(handle_type h) : base_(h) {}

};

} // namespace android::security
} // namespace scapix::java_api

#include <scapix/java_api/android/app/Activity.h>
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/content/Intent.h>
#include <scapix/java_api/android/net/Uri.h>
#include <scapix/java_api/android/security/KeyChainAliasCallback.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/security/Principal.h>
#include <scapix/java_api/java/security/PrivateKey.h>
#include <scapix/java_api/java/security/cert/X509Certificate.h>

namespace scapix::java_api {
namespace android::security {

inline ref<java::lang::String> KeyChain::ACTION_KEYCHAIN_CHANGED_() { return get_static_field<SCAPIX_META_STRING("ACTION_KEYCHAIN_CHANGED"), ref<java::lang::String>>(); }
inline ref<java::lang::String> KeyChain::ACTION_KEY_ACCESS_CHANGED_() { return get_static_field<SCAPIX_META_STRING("ACTION_KEY_ACCESS_CHANGED"), ref<java::lang::String>>(); }
inline ref<java::lang::String> KeyChain::ACTION_STORAGE_CHANGED_() { return get_static_field<SCAPIX_META_STRING("ACTION_STORAGE_CHANGED"), ref<java::lang::String>>(); }
inline ref<java::lang::String> KeyChain::ACTION_TRUST_STORE_CHANGED_() { return get_static_field<SCAPIX_META_STRING("ACTION_TRUST_STORE_CHANGED"), ref<java::lang::String>>(); }
inline ref<java::lang::String> KeyChain::EXTRA_CERTIFICATE_() { return get_static_field<SCAPIX_META_STRING("EXTRA_CERTIFICATE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> KeyChain::EXTRA_KEY_ACCESSIBLE_() { return get_static_field<SCAPIX_META_STRING("EXTRA_KEY_ACCESSIBLE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> KeyChain::EXTRA_KEY_ALIAS_() { return get_static_field<SCAPIX_META_STRING("EXTRA_KEY_ALIAS"), ref<java::lang::String>>(); }
inline ref<java::lang::String> KeyChain::EXTRA_NAME_() { return get_static_field<SCAPIX_META_STRING("EXTRA_NAME"), ref<java::lang::String>>(); }
inline ref<java::lang::String> KeyChain::EXTRA_PKCS12_() { return get_static_field<SCAPIX_META_STRING("EXTRA_PKCS12"), ref<java::lang::String>>(); }
inline ref<KeyChain> KeyChain::new_object() { return base_::new_object(); }
inline ref<android::content::Intent> KeyChain::createInstallIntent() { return call_static_method<SCAPIX_META_STRING("createInstallIntent"), ref<android::content::Intent>>(); }
inline void KeyChain::choosePrivateKeyAlias(ref<android::app::Activity> activity, ref<android::security::KeyChainAliasCallback> response, ref<link::java::array<java::lang::String>> keyTypes, ref<link::java::array<java::security::Principal>> issuers, ref<java::lang::String> host, jint port, ref<java::lang::String> alias) { return call_static_method<SCAPIX_META_STRING("choosePrivateKeyAlias"), void>(activity, response, keyTypes, issuers, host, port, alias); }
inline void KeyChain::choosePrivateKeyAlias(ref<android::app::Activity> activity, ref<android::security::KeyChainAliasCallback> response, ref<link::java::array<java::lang::String>> keyTypes, ref<link::java::array<java::security::Principal>> issuers, ref<android::net::Uri> uri, ref<java::lang::String> alias) { return call_static_method<SCAPIX_META_STRING("choosePrivateKeyAlias"), void>(activity, response, keyTypes, issuers, uri, alias); }
inline ref<java::security::PrivateKey> KeyChain::getPrivateKey(ref<android::content::Context> context, ref<java::lang::String> alias) { return call_static_method<SCAPIX_META_STRING("getPrivateKey"), ref<java::security::PrivateKey>>(context, alias); }
inline ref<link::java::array<java::security::cert::X509Certificate>> KeyChain::getCertificateChain(ref<android::content::Context> context, ref<java::lang::String> alias) { return call_static_method<SCAPIX_META_STRING("getCertificateChain"), ref<link::java::array<java::security::cert::X509Certificate>>>(context, alias); }
inline jboolean KeyChain::isKeyAlgorithmSupported(ref<java::lang::String> algorithm) { return call_static_method<SCAPIX_META_STRING("isKeyAlgorithmSupported"), jboolean>(algorithm); }
inline jboolean KeyChain::isBoundKeyAlgorithm(ref<java::lang::String> algorithm) { return call_static_method<SCAPIX_META_STRING("isBoundKeyAlgorithm"), jboolean>(algorithm); }

} // namespace android::security
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_SECURITY_KEYCHAIN_H
