// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/security/spec/AlgorithmParameterSpec.h>

#ifndef SCAPIX_ANDROID_SECURITY_KEYSTORE_KEYGENPARAMETERSPEC_H
#define SCAPIX_ANDROID_SECURITY_KEYSTORE_KEYGENPARAMETERSPEC_H

namespace scapix::java_api {

namespace java::lang { class String; }
namespace java::math { class BigInteger; }
namespace java::util { class Date; }
namespace javax::security::auth::x500 { class X500Principal; }
namespace android::security::keystore { class KeyGenParameterSpec_Builder; }

namespace android::security::keystore {

class KeyGenParameterSpec : public object_base<SCAPIX_META_STRING("android/security/keystore/KeyGenParameterSpec"),
	java::lang::Object,
	java::security::spec::AlgorithmParameterSpec>
{
public:

	using Builder = KeyGenParameterSpec_Builder;

	ref<java::lang::String> getKeystoreAlias();
	jint getKeySize();
	ref<java::security::spec::AlgorithmParameterSpec> getAlgorithmParameterSpec();
	ref<javax::security::auth::x500::X500Principal> getCertificateSubject();
	ref<java::math::BigInteger> getCertificateSerialNumber();
	ref<java::util::Date> getCertificateNotBefore();
	ref<java::util::Date> getCertificateNotAfter();
	ref<java::util::Date> getKeyValidityStart();
	ref<java::util::Date> getKeyValidityForConsumptionEnd();
	ref<java::util::Date> getKeyValidityForOriginationEnd();
	jint getPurposes();
	ref<link::java::array<java::lang::String>> getDigests();
	jboolean isDigestsSpecified();
	ref<link::java::array<java::lang::String>> getEncryptionPaddings();
	ref<link::java::array<java::lang::String>> getSignaturePaddings();
	ref<link::java::array<java::lang::String>> getBlockModes();
	jboolean isRandomizedEncryptionRequired();
	jboolean isUserAuthenticationRequired();
	jboolean isUserConfirmationRequired();
	jint getUserAuthenticationValidityDurationSeconds();
	jboolean isUserPresenceRequired();
	ref<link::java::array<jbyte>> getAttestationChallenge();
	jboolean isUserAuthenticationValidWhileOnBody();
	jboolean isInvalidatedByBiometricEnrollment();
	jboolean isStrongBoxBacked();
	jboolean isUnlockedDeviceRequired();

protected:

	KeyGenParameterSpec(handle_type h) : base_(h) {}

};

} // namespace android::security::keystore
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/math/BigInteger.h>
#include <scapix/java_api/java/util/Date.h>
#include <scapix/java_api/javax/security/auth/x500/X500Principal.h>

namespace scapix::java_api {
namespace android::security::keystore {

inline ref<java::lang::String> KeyGenParameterSpec::getKeystoreAlias() { return call_method<SCAPIX_META_STRING("getKeystoreAlias"), ref<java::lang::String>>(); }
inline jint KeyGenParameterSpec::getKeySize() { return call_method<SCAPIX_META_STRING("getKeySize"), jint>(); }
inline ref<java::security::spec::AlgorithmParameterSpec> KeyGenParameterSpec::getAlgorithmParameterSpec() { return call_method<SCAPIX_META_STRING("getAlgorithmParameterSpec"), ref<java::security::spec::AlgorithmParameterSpec>>(); }
inline ref<javax::security::auth::x500::X500Principal> KeyGenParameterSpec::getCertificateSubject() { return call_method<SCAPIX_META_STRING("getCertificateSubject"), ref<javax::security::auth::x500::X500Principal>>(); }
inline ref<java::math::BigInteger> KeyGenParameterSpec::getCertificateSerialNumber() { return call_method<SCAPIX_META_STRING("getCertificateSerialNumber"), ref<java::math::BigInteger>>(); }
inline ref<java::util::Date> KeyGenParameterSpec::getCertificateNotBefore() { return call_method<SCAPIX_META_STRING("getCertificateNotBefore"), ref<java::util::Date>>(); }
inline ref<java::util::Date> KeyGenParameterSpec::getCertificateNotAfter() { return call_method<SCAPIX_META_STRING("getCertificateNotAfter"), ref<java::util::Date>>(); }
inline ref<java::util::Date> KeyGenParameterSpec::getKeyValidityStart() { return call_method<SCAPIX_META_STRING("getKeyValidityStart"), ref<java::util::Date>>(); }
inline ref<java::util::Date> KeyGenParameterSpec::getKeyValidityForConsumptionEnd() { return call_method<SCAPIX_META_STRING("getKeyValidityForConsumptionEnd"), ref<java::util::Date>>(); }
inline ref<java::util::Date> KeyGenParameterSpec::getKeyValidityForOriginationEnd() { return call_method<SCAPIX_META_STRING("getKeyValidityForOriginationEnd"), ref<java::util::Date>>(); }
inline jint KeyGenParameterSpec::getPurposes() { return call_method<SCAPIX_META_STRING("getPurposes"), jint>(); }
inline ref<link::java::array<java::lang::String>> KeyGenParameterSpec::getDigests() { return call_method<SCAPIX_META_STRING("getDigests"), ref<link::java::array<java::lang::String>>>(); }
inline jboolean KeyGenParameterSpec::isDigestsSpecified() { return call_method<SCAPIX_META_STRING("isDigestsSpecified"), jboolean>(); }
inline ref<link::java::array<java::lang::String>> KeyGenParameterSpec::getEncryptionPaddings() { return call_method<SCAPIX_META_STRING("getEncryptionPaddings"), ref<link::java::array<java::lang::String>>>(); }
inline ref<link::java::array<java::lang::String>> KeyGenParameterSpec::getSignaturePaddings() { return call_method<SCAPIX_META_STRING("getSignaturePaddings"), ref<link::java::array<java::lang::String>>>(); }
inline ref<link::java::array<java::lang::String>> KeyGenParameterSpec::getBlockModes() { return call_method<SCAPIX_META_STRING("getBlockModes"), ref<link::java::array<java::lang::String>>>(); }
inline jboolean KeyGenParameterSpec::isRandomizedEncryptionRequired() { return call_method<SCAPIX_META_STRING("isRandomizedEncryptionRequired"), jboolean>(); }
inline jboolean KeyGenParameterSpec::isUserAuthenticationRequired() { return call_method<SCAPIX_META_STRING("isUserAuthenticationRequired"), jboolean>(); }
inline jboolean KeyGenParameterSpec::isUserConfirmationRequired() { return call_method<SCAPIX_META_STRING("isUserConfirmationRequired"), jboolean>(); }
inline jint KeyGenParameterSpec::getUserAuthenticationValidityDurationSeconds() { return call_method<SCAPIX_META_STRING("getUserAuthenticationValidityDurationSeconds"), jint>(); }
inline jboolean KeyGenParameterSpec::isUserPresenceRequired() { return call_method<SCAPIX_META_STRING("isUserPresenceRequired"), jboolean>(); }
inline ref<link::java::array<jbyte>> KeyGenParameterSpec::getAttestationChallenge() { return call_method<SCAPIX_META_STRING("getAttestationChallenge"), ref<link::java::array<jbyte>>>(); }
inline jboolean KeyGenParameterSpec::isUserAuthenticationValidWhileOnBody() { return call_method<SCAPIX_META_STRING("isUserAuthenticationValidWhileOnBody"), jboolean>(); }
inline jboolean KeyGenParameterSpec::isInvalidatedByBiometricEnrollment() { return call_method<SCAPIX_META_STRING("isInvalidatedByBiometricEnrollment"), jboolean>(); }
inline jboolean KeyGenParameterSpec::isStrongBoxBacked() { return call_method<SCAPIX_META_STRING("isStrongBoxBacked"), jboolean>(); }
inline jboolean KeyGenParameterSpec::isUnlockedDeviceRequired() { return call_method<SCAPIX_META_STRING("isUnlockedDeviceRequired"), jboolean>(); }

} // namespace android::security::keystore
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_SECURITY_KEYSTORE_KEYGENPARAMETERSPEC_H
