// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/security/KeyStore_ProtectionParameter.h>

#ifndef SCAPIX_ANDROID_SECURITY_KEYSTORE_KEYPROTECTION_H
#define SCAPIX_ANDROID_SECURITY_KEYSTORE_KEYPROTECTION_H

namespace scapix::java_api {

namespace java::lang { class String; }
namespace java::util { class Date; }
namespace android::security::keystore { class KeyProtection_Builder; }

namespace android::security::keystore {

class KeyProtection : public object_base<SCAPIX_META_STRING("android/security/keystore/KeyProtection"),
	java::lang::Object,
	java::security::KeyStore_ProtectionParameter>
{
public:

	using Builder = KeyProtection_Builder;

	ref<java::util::Date> getKeyValidityStart();
	ref<java::util::Date> getKeyValidityForConsumptionEnd();
	ref<java::util::Date> getKeyValidityForOriginationEnd();
	jint getPurposes();
	ref<link::java::array<java::lang::String>> getEncryptionPaddings();
	ref<link::java::array<java::lang::String>> getSignaturePaddings();
	ref<link::java::array<java::lang::String>> getDigests();
	jboolean isDigestsSpecified();
	ref<link::java::array<java::lang::String>> getBlockModes();
	jboolean isRandomizedEncryptionRequired();
	jboolean isUserAuthenticationRequired();
	jboolean isUserConfirmationRequired();
	jint getUserAuthenticationValidityDurationSeconds();
	jboolean isUserPresenceRequired();
	jboolean isUserAuthenticationValidWhileOnBody();
	jboolean isInvalidatedByBiometricEnrollment();
	jboolean isUnlockedDeviceRequired();

protected:

	KeyProtection(handle_type h) : base_(h) {}

};

} // namespace android::security::keystore
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Date.h>

namespace scapix::java_api {
namespace android::security::keystore {

inline ref<java::util::Date> KeyProtection::getKeyValidityStart() { return call_method<SCAPIX_META_STRING("getKeyValidityStart"), ref<java::util::Date>>(); }
inline ref<java::util::Date> KeyProtection::getKeyValidityForConsumptionEnd() { return call_method<SCAPIX_META_STRING("getKeyValidityForConsumptionEnd"), ref<java::util::Date>>(); }
inline ref<java::util::Date> KeyProtection::getKeyValidityForOriginationEnd() { return call_method<SCAPIX_META_STRING("getKeyValidityForOriginationEnd"), ref<java::util::Date>>(); }
inline jint KeyProtection::getPurposes() { return call_method<SCAPIX_META_STRING("getPurposes"), jint>(); }
inline ref<link::java::array<java::lang::String>> KeyProtection::getEncryptionPaddings() { return call_method<SCAPIX_META_STRING("getEncryptionPaddings"), ref<link::java::array<java::lang::String>>>(); }
inline ref<link::java::array<java::lang::String>> KeyProtection::getSignaturePaddings() { return call_method<SCAPIX_META_STRING("getSignaturePaddings"), ref<link::java::array<java::lang::String>>>(); }
inline ref<link::java::array<java::lang::String>> KeyProtection::getDigests() { return call_method<SCAPIX_META_STRING("getDigests"), ref<link::java::array<java::lang::String>>>(); }
inline jboolean KeyProtection::isDigestsSpecified() { return call_method<SCAPIX_META_STRING("isDigestsSpecified"), jboolean>(); }
inline ref<link::java::array<java::lang::String>> KeyProtection::getBlockModes() { return call_method<SCAPIX_META_STRING("getBlockModes"), ref<link::java::array<java::lang::String>>>(); }
inline jboolean KeyProtection::isRandomizedEncryptionRequired() { return call_method<SCAPIX_META_STRING("isRandomizedEncryptionRequired"), jboolean>(); }
inline jboolean KeyProtection::isUserAuthenticationRequired() { return call_method<SCAPIX_META_STRING("isUserAuthenticationRequired"), jboolean>(); }
inline jboolean KeyProtection::isUserConfirmationRequired() { return call_method<SCAPIX_META_STRING("isUserConfirmationRequired"), jboolean>(); }
inline jint KeyProtection::getUserAuthenticationValidityDurationSeconds() { return call_method<SCAPIX_META_STRING("getUserAuthenticationValidityDurationSeconds"), jint>(); }
inline jboolean KeyProtection::isUserPresenceRequired() { return call_method<SCAPIX_META_STRING("isUserPresenceRequired"), jboolean>(); }
inline jboolean KeyProtection::isUserAuthenticationValidWhileOnBody() { return call_method<SCAPIX_META_STRING("isUserAuthenticationValidWhileOnBody"), jboolean>(); }
inline jboolean KeyProtection::isInvalidatedByBiometricEnrollment() { return call_method<SCAPIX_META_STRING("isInvalidatedByBiometricEnrollment"), jboolean>(); }
inline jboolean KeyProtection::isUnlockedDeviceRequired() { return call_method<SCAPIX_META_STRING("isUnlockedDeviceRequired"), jboolean>(); }

} // namespace android::security::keystore
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_SECURITY_KEYSTORE_KEYPROTECTION_H
