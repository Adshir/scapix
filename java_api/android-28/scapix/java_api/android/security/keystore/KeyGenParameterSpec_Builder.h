// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_SECURITY_KEYSTORE_KEYGENPARAMETERSPEC_BUILDER_H
#define SCAPIX_ANDROID_SECURITY_KEYSTORE_KEYGENPARAMETERSPEC_BUILDER_H

namespace scapix::java_api {

namespace android::security::keystore { class KeyGenParameterSpec; }
namespace java::lang { class String; }
namespace java::math { class BigInteger; }
namespace java::security::spec { class AlgorithmParameterSpec; }
namespace java::util { class Date; }
namespace javax::security::auth::x500 { class X500Principal; }

namespace android::security::keystore {

class KeyGenParameterSpec_Builder : public object_base<SCAPIX_META_STRING("android/security/keystore/KeyGenParameterSpec$Builder"),
	java::lang::Object>
{
public:

	static ref<KeyGenParameterSpec_Builder> new_object(ref<java::lang::String> keystoreAlias, jint purposes);
	ref<android::security::keystore::KeyGenParameterSpec_Builder> setKeySize(jint keySize);
	ref<android::security::keystore::KeyGenParameterSpec_Builder> setAlgorithmParameterSpec(ref<java::security::spec::AlgorithmParameterSpec> spec);
	ref<android::security::keystore::KeyGenParameterSpec_Builder> setCertificateSubject(ref<javax::security::auth::x500::X500Principal> subject);
	ref<android::security::keystore::KeyGenParameterSpec_Builder> setCertificateSerialNumber(ref<java::math::BigInteger> serialNumber);
	ref<android::security::keystore::KeyGenParameterSpec_Builder> setCertificateNotBefore(ref<java::util::Date> date);
	ref<android::security::keystore::KeyGenParameterSpec_Builder> setCertificateNotAfter(ref<java::util::Date> date);
	ref<android::security::keystore::KeyGenParameterSpec_Builder> setKeyValidityStart(ref<java::util::Date> startDate);
	ref<android::security::keystore::KeyGenParameterSpec_Builder> setKeyValidityEnd(ref<java::util::Date> endDate);
	ref<android::security::keystore::KeyGenParameterSpec_Builder> setKeyValidityForOriginationEnd(ref<java::util::Date> endDate);
	ref<android::security::keystore::KeyGenParameterSpec_Builder> setKeyValidityForConsumptionEnd(ref<java::util::Date> endDate);
	ref<android::security::keystore::KeyGenParameterSpec_Builder> setDigests(ref<link::java::array<java::lang::String>> digests);
	ref<android::security::keystore::KeyGenParameterSpec_Builder> setEncryptionPaddings(ref<link::java::array<java::lang::String>> paddings);
	ref<android::security::keystore::KeyGenParameterSpec_Builder> setSignaturePaddings(ref<link::java::array<java::lang::String>> paddings);
	ref<android::security::keystore::KeyGenParameterSpec_Builder> setBlockModes(ref<link::java::array<java::lang::String>> blockModes);
	ref<android::security::keystore::KeyGenParameterSpec_Builder> setRandomizedEncryptionRequired(jboolean required);
	ref<android::security::keystore::KeyGenParameterSpec_Builder> setUserAuthenticationRequired(jboolean required);
	ref<android::security::keystore::KeyGenParameterSpec_Builder> setUserConfirmationRequired(jboolean required);
	ref<android::security::keystore::KeyGenParameterSpec_Builder> setUserAuthenticationValidityDurationSeconds(jint seconds);
	ref<android::security::keystore::KeyGenParameterSpec_Builder> setUserPresenceRequired(jboolean required);
	ref<android::security::keystore::KeyGenParameterSpec_Builder> setAttestationChallenge(ref<link::java::array<jbyte>> attestationChallenge);
	ref<android::security::keystore::KeyGenParameterSpec_Builder> setUserAuthenticationValidWhileOnBody(jboolean remainsValid);
	ref<android::security::keystore::KeyGenParameterSpec_Builder> setInvalidatedByBiometricEnrollment(jboolean invalidateKey);
	ref<android::security::keystore::KeyGenParameterSpec_Builder> setIsStrongBoxBacked(jboolean isStrongBoxBacked);
	ref<android::security::keystore::KeyGenParameterSpec_Builder> setUnlockedDeviceRequired(jboolean unlockedDeviceRequired);
	ref<android::security::keystore::KeyGenParameterSpec> build();

protected:

	KeyGenParameterSpec_Builder(handle_type h) : base_(h) {}

};

} // namespace android::security::keystore
} // namespace scapix::java_api

#include <scapix/java_api/android/security/keystore/KeyGenParameterSpec.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/math/BigInteger.h>
#include <scapix/java_api/java/security/spec/AlgorithmParameterSpec.h>
#include <scapix/java_api/java/util/Date.h>
#include <scapix/java_api/javax/security/auth/x500/X500Principal.h>

namespace scapix::java_api {
namespace android::security::keystore {

inline ref<KeyGenParameterSpec_Builder> KeyGenParameterSpec_Builder::new_object(ref<java::lang::String> keystoreAlias, jint purposes) { return base_::new_object(keystoreAlias, purposes); }
inline ref<android::security::keystore::KeyGenParameterSpec_Builder> KeyGenParameterSpec_Builder::setKeySize(jint keySize) { return call_method<SCAPIX_META_STRING("setKeySize"), ref<android::security::keystore::KeyGenParameterSpec_Builder>>(keySize); }
inline ref<android::security::keystore::KeyGenParameterSpec_Builder> KeyGenParameterSpec_Builder::setAlgorithmParameterSpec(ref<java::security::spec::AlgorithmParameterSpec> spec) { return call_method<SCAPIX_META_STRING("setAlgorithmParameterSpec"), ref<android::security::keystore::KeyGenParameterSpec_Builder>>(spec); }
inline ref<android::security::keystore::KeyGenParameterSpec_Builder> KeyGenParameterSpec_Builder::setCertificateSubject(ref<javax::security::auth::x500::X500Principal> subject) { return call_method<SCAPIX_META_STRING("setCertificateSubject"), ref<android::security::keystore::KeyGenParameterSpec_Builder>>(subject); }
inline ref<android::security::keystore::KeyGenParameterSpec_Builder> KeyGenParameterSpec_Builder::setCertificateSerialNumber(ref<java::math::BigInteger> serialNumber) { return call_method<SCAPIX_META_STRING("setCertificateSerialNumber"), ref<android::security::keystore::KeyGenParameterSpec_Builder>>(serialNumber); }
inline ref<android::security::keystore::KeyGenParameterSpec_Builder> KeyGenParameterSpec_Builder::setCertificateNotBefore(ref<java::util::Date> date) { return call_method<SCAPIX_META_STRING("setCertificateNotBefore"), ref<android::security::keystore::KeyGenParameterSpec_Builder>>(date); }
inline ref<android::security::keystore::KeyGenParameterSpec_Builder> KeyGenParameterSpec_Builder::setCertificateNotAfter(ref<java::util::Date> date) { return call_method<SCAPIX_META_STRING("setCertificateNotAfter"), ref<android::security::keystore::KeyGenParameterSpec_Builder>>(date); }
inline ref<android::security::keystore::KeyGenParameterSpec_Builder> KeyGenParameterSpec_Builder::setKeyValidityStart(ref<java::util::Date> startDate) { return call_method<SCAPIX_META_STRING("setKeyValidityStart"), ref<android::security::keystore::KeyGenParameterSpec_Builder>>(startDate); }
inline ref<android::security::keystore::KeyGenParameterSpec_Builder> KeyGenParameterSpec_Builder::setKeyValidityEnd(ref<java::util::Date> endDate) { return call_method<SCAPIX_META_STRING("setKeyValidityEnd"), ref<android::security::keystore::KeyGenParameterSpec_Builder>>(endDate); }
inline ref<android::security::keystore::KeyGenParameterSpec_Builder> KeyGenParameterSpec_Builder::setKeyValidityForOriginationEnd(ref<java::util::Date> endDate) { return call_method<SCAPIX_META_STRING("setKeyValidityForOriginationEnd"), ref<android::security::keystore::KeyGenParameterSpec_Builder>>(endDate); }
inline ref<android::security::keystore::KeyGenParameterSpec_Builder> KeyGenParameterSpec_Builder::setKeyValidityForConsumptionEnd(ref<java::util::Date> endDate) { return call_method<SCAPIX_META_STRING("setKeyValidityForConsumptionEnd"), ref<android::security::keystore::KeyGenParameterSpec_Builder>>(endDate); }
inline ref<android::security::keystore::KeyGenParameterSpec_Builder> KeyGenParameterSpec_Builder::setDigests(ref<link::java::array<java::lang::String>> digests) { return call_method<SCAPIX_META_STRING("setDigests"), ref<android::security::keystore::KeyGenParameterSpec_Builder>>(digests); }
inline ref<android::security::keystore::KeyGenParameterSpec_Builder> KeyGenParameterSpec_Builder::setEncryptionPaddings(ref<link::java::array<java::lang::String>> paddings) { return call_method<SCAPIX_META_STRING("setEncryptionPaddings"), ref<android::security::keystore::KeyGenParameterSpec_Builder>>(paddings); }
inline ref<android::security::keystore::KeyGenParameterSpec_Builder> KeyGenParameterSpec_Builder::setSignaturePaddings(ref<link::java::array<java::lang::String>> paddings) { return call_method<SCAPIX_META_STRING("setSignaturePaddings"), ref<android::security::keystore::KeyGenParameterSpec_Builder>>(paddings); }
inline ref<android::security::keystore::KeyGenParameterSpec_Builder> KeyGenParameterSpec_Builder::setBlockModes(ref<link::java::array<java::lang::String>> blockModes) { return call_method<SCAPIX_META_STRING("setBlockModes"), ref<android::security::keystore::KeyGenParameterSpec_Builder>>(blockModes); }
inline ref<android::security::keystore::KeyGenParameterSpec_Builder> KeyGenParameterSpec_Builder::setRandomizedEncryptionRequired(jboolean required) { return call_method<SCAPIX_META_STRING("setRandomizedEncryptionRequired"), ref<android::security::keystore::KeyGenParameterSpec_Builder>>(required); }
inline ref<android::security::keystore::KeyGenParameterSpec_Builder> KeyGenParameterSpec_Builder::setUserAuthenticationRequired(jboolean required) { return call_method<SCAPIX_META_STRING("setUserAuthenticationRequired"), ref<android::security::keystore::KeyGenParameterSpec_Builder>>(required); }
inline ref<android::security::keystore::KeyGenParameterSpec_Builder> KeyGenParameterSpec_Builder::setUserConfirmationRequired(jboolean required) { return call_method<SCAPIX_META_STRING("setUserConfirmationRequired"), ref<android::security::keystore::KeyGenParameterSpec_Builder>>(required); }
inline ref<android::security::keystore::KeyGenParameterSpec_Builder> KeyGenParameterSpec_Builder::setUserAuthenticationValidityDurationSeconds(jint seconds) { return call_method<SCAPIX_META_STRING("setUserAuthenticationValidityDurationSeconds"), ref<android::security::keystore::KeyGenParameterSpec_Builder>>(seconds); }
inline ref<android::security::keystore::KeyGenParameterSpec_Builder> KeyGenParameterSpec_Builder::setUserPresenceRequired(jboolean required) { return call_method<SCAPIX_META_STRING("setUserPresenceRequired"), ref<android::security::keystore::KeyGenParameterSpec_Builder>>(required); }
inline ref<android::security::keystore::KeyGenParameterSpec_Builder> KeyGenParameterSpec_Builder::setAttestationChallenge(ref<link::java::array<jbyte>> attestationChallenge) { return call_method<SCAPIX_META_STRING("setAttestationChallenge"), ref<android::security::keystore::KeyGenParameterSpec_Builder>>(attestationChallenge); }
inline ref<android::security::keystore::KeyGenParameterSpec_Builder> KeyGenParameterSpec_Builder::setUserAuthenticationValidWhileOnBody(jboolean remainsValid) { return call_method<SCAPIX_META_STRING("setUserAuthenticationValidWhileOnBody"), ref<android::security::keystore::KeyGenParameterSpec_Builder>>(remainsValid); }
inline ref<android::security::keystore::KeyGenParameterSpec_Builder> KeyGenParameterSpec_Builder::setInvalidatedByBiometricEnrollment(jboolean invalidateKey) { return call_method<SCAPIX_META_STRING("setInvalidatedByBiometricEnrollment"), ref<android::security::keystore::KeyGenParameterSpec_Builder>>(invalidateKey); }
inline ref<android::security::keystore::KeyGenParameterSpec_Builder> KeyGenParameterSpec_Builder::setIsStrongBoxBacked(jboolean isStrongBoxBacked) { return call_method<SCAPIX_META_STRING("setIsStrongBoxBacked"), ref<android::security::keystore::KeyGenParameterSpec_Builder>>(isStrongBoxBacked); }
inline ref<android::security::keystore::KeyGenParameterSpec_Builder> KeyGenParameterSpec_Builder::setUnlockedDeviceRequired(jboolean unlockedDeviceRequired) { return call_method<SCAPIX_META_STRING("setUnlockedDeviceRequired"), ref<android::security::keystore::KeyGenParameterSpec_Builder>>(unlockedDeviceRequired); }
inline ref<android::security::keystore::KeyGenParameterSpec> KeyGenParameterSpec_Builder::build() { return call_method<SCAPIX_META_STRING("build"), ref<android::security::keystore::KeyGenParameterSpec>>(); }

} // namespace android::security::keystore
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_SECURITY_KEYSTORE_KEYGENPARAMETERSPEC_BUILDER_H
