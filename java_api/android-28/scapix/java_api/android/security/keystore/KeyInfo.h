// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/security/spec/KeySpec.h>

#ifndef SCAPIX_ANDROID_SECURITY_KEYSTORE_KEYINFO_H
#define SCAPIX_ANDROID_SECURITY_KEYSTORE_KEYINFO_H

namespace scapix::java_api {

namespace java::lang { class String; }
namespace java::util { class Date; }

namespace android::security::keystore {

class KeyInfo : public object_base<SCAPIX_META_STRING("android/security/keystore/KeyInfo"),
	java::lang::Object,
	java::security::spec::KeySpec>
{
public:

	ref<java::lang::String> getKeystoreAlias();
	jboolean isInsideSecureHardware();
	jint getOrigin();
	jint getKeySize();
	ref<java::util::Date> getKeyValidityStart();
	ref<java::util::Date> getKeyValidityForConsumptionEnd();
	ref<java::util::Date> getKeyValidityForOriginationEnd();
	jint getPurposes();
	ref<link::java::array<java::lang::String>> getBlockModes();
	ref<link::java::array<java::lang::String>> getEncryptionPaddings();
	ref<link::java::array<java::lang::String>> getSignaturePaddings();
	ref<link::java::array<java::lang::String>> getDigests();
	jboolean isUserAuthenticationRequired();
	jboolean isUserConfirmationRequired();
	jint getUserAuthenticationValidityDurationSeconds();
	jboolean isUserAuthenticationRequirementEnforcedBySecureHardware();
	jboolean isUserAuthenticationValidWhileOnBody();
	jboolean isInvalidatedByBiometricEnrollment();
	jboolean isTrustedUserPresenceRequired();

protected:

	KeyInfo(handle_type h) : base_(h) {}

};

} // namespace android::security::keystore
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Date.h>

namespace scapix::java_api {
namespace android::security::keystore {

inline ref<java::lang::String> KeyInfo::getKeystoreAlias() { return call_method<SCAPIX_META_STRING("getKeystoreAlias"), ref<java::lang::String>>(); }
inline jboolean KeyInfo::isInsideSecureHardware() { return call_method<SCAPIX_META_STRING("isInsideSecureHardware"), jboolean>(); }
inline jint KeyInfo::getOrigin() { return call_method<SCAPIX_META_STRING("getOrigin"), jint>(); }
inline jint KeyInfo::getKeySize() { return call_method<SCAPIX_META_STRING("getKeySize"), jint>(); }
inline ref<java::util::Date> KeyInfo::getKeyValidityStart() { return call_method<SCAPIX_META_STRING("getKeyValidityStart"), ref<java::util::Date>>(); }
inline ref<java::util::Date> KeyInfo::getKeyValidityForConsumptionEnd() { return call_method<SCAPIX_META_STRING("getKeyValidityForConsumptionEnd"), ref<java::util::Date>>(); }
inline ref<java::util::Date> KeyInfo::getKeyValidityForOriginationEnd() { return call_method<SCAPIX_META_STRING("getKeyValidityForOriginationEnd"), ref<java::util::Date>>(); }
inline jint KeyInfo::getPurposes() { return call_method<SCAPIX_META_STRING("getPurposes"), jint>(); }
inline ref<link::java::array<java::lang::String>> KeyInfo::getBlockModes() { return call_method<SCAPIX_META_STRING("getBlockModes"), ref<link::java::array<java::lang::String>>>(); }
inline ref<link::java::array<java::lang::String>> KeyInfo::getEncryptionPaddings() { return call_method<SCAPIX_META_STRING("getEncryptionPaddings"), ref<link::java::array<java::lang::String>>>(); }
inline ref<link::java::array<java::lang::String>> KeyInfo::getSignaturePaddings() { return call_method<SCAPIX_META_STRING("getSignaturePaddings"), ref<link::java::array<java::lang::String>>>(); }
inline ref<link::java::array<java::lang::String>> KeyInfo::getDigests() { return call_method<SCAPIX_META_STRING("getDigests"), ref<link::java::array<java::lang::String>>>(); }
inline jboolean KeyInfo::isUserAuthenticationRequired() { return call_method<SCAPIX_META_STRING("isUserAuthenticationRequired"), jboolean>(); }
inline jboolean KeyInfo::isUserConfirmationRequired() { return call_method<SCAPIX_META_STRING("isUserConfirmationRequired"), jboolean>(); }
inline jint KeyInfo::getUserAuthenticationValidityDurationSeconds() { return call_method<SCAPIX_META_STRING("getUserAuthenticationValidityDurationSeconds"), jint>(); }
inline jboolean KeyInfo::isUserAuthenticationRequirementEnforcedBySecureHardware() { return call_method<SCAPIX_META_STRING("isUserAuthenticationRequirementEnforcedBySecureHardware"), jboolean>(); }
inline jboolean KeyInfo::isUserAuthenticationValidWhileOnBody() { return call_method<SCAPIX_META_STRING("isUserAuthenticationValidWhileOnBody"), jboolean>(); }
inline jboolean KeyInfo::isInvalidatedByBiometricEnrollment() { return call_method<SCAPIX_META_STRING("isInvalidatedByBiometricEnrollment"), jboolean>(); }
inline jboolean KeyInfo::isTrustedUserPresenceRequired() { return call_method<SCAPIX_META_STRING("isTrustedUserPresenceRequired"), jboolean>(); }

} // namespace android::security::keystore
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_SECURITY_KEYSTORE_KEYINFO_H
