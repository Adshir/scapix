// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_SECURITY_KEYSTORE_KEYPROTECTION_BUILDER_H
#define SCAPIX_ANDROID_SECURITY_KEYSTORE_KEYPROTECTION_BUILDER_H

namespace scapix::java_api {

namespace android::security::keystore { class KeyProtection; }
namespace java::lang { class String; }
namespace java::util { class Date; }

namespace android::security::keystore {

class KeyProtection_Builder : public object_base<SCAPIX_META_STRING("android/security/keystore/KeyProtection$Builder"),
	java::lang::Object>
{
public:

	static ref<KeyProtection_Builder> new_object(jint purposes);
	ref<android::security::keystore::KeyProtection_Builder> setKeyValidityStart(ref<java::util::Date> startDate);
	ref<android::security::keystore::KeyProtection_Builder> setKeyValidityEnd(ref<java::util::Date> endDate);
	ref<android::security::keystore::KeyProtection_Builder> setKeyValidityForOriginationEnd(ref<java::util::Date> endDate);
	ref<android::security::keystore::KeyProtection_Builder> setKeyValidityForConsumptionEnd(ref<java::util::Date> endDate);
	ref<android::security::keystore::KeyProtection_Builder> setEncryptionPaddings(ref<link::java::array<java::lang::String>> paddings);
	ref<android::security::keystore::KeyProtection_Builder> setSignaturePaddings(ref<link::java::array<java::lang::String>> paddings);
	ref<android::security::keystore::KeyProtection_Builder> setDigests(ref<link::java::array<java::lang::String>> digests);
	ref<android::security::keystore::KeyProtection_Builder> setBlockModes(ref<link::java::array<java::lang::String>> blockModes);
	ref<android::security::keystore::KeyProtection_Builder> setRandomizedEncryptionRequired(jboolean required);
	ref<android::security::keystore::KeyProtection_Builder> setUserAuthenticationRequired(jboolean required);
	ref<android::security::keystore::KeyProtection_Builder> setUserConfirmationRequired(jboolean required);
	ref<android::security::keystore::KeyProtection_Builder> setUserAuthenticationValidityDurationSeconds(jint seconds);
	ref<android::security::keystore::KeyProtection_Builder> setUserPresenceRequired(jboolean required);
	ref<android::security::keystore::KeyProtection_Builder> setUserAuthenticationValidWhileOnBody(jboolean remainsValid);
	ref<android::security::keystore::KeyProtection_Builder> setInvalidatedByBiometricEnrollment(jboolean invalidateKey);
	ref<android::security::keystore::KeyProtection_Builder> setUnlockedDeviceRequired(jboolean unlockedDeviceRequired);
	ref<android::security::keystore::KeyProtection> build();

protected:

	KeyProtection_Builder(handle_type h) : base_(h) {}

};

} // namespace android::security::keystore
} // namespace scapix::java_api

#include <scapix/java_api/android/security/keystore/KeyProtection.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Date.h>

namespace scapix::java_api {
namespace android::security::keystore {

inline ref<KeyProtection_Builder> KeyProtection_Builder::new_object(jint purposes) { return base_::new_object(purposes); }
inline ref<android::security::keystore::KeyProtection_Builder> KeyProtection_Builder::setKeyValidityStart(ref<java::util::Date> startDate) { return call_method<SCAPIX_META_STRING("setKeyValidityStart"), ref<android::security::keystore::KeyProtection_Builder>>(startDate); }
inline ref<android::security::keystore::KeyProtection_Builder> KeyProtection_Builder::setKeyValidityEnd(ref<java::util::Date> endDate) { return call_method<SCAPIX_META_STRING("setKeyValidityEnd"), ref<android::security::keystore::KeyProtection_Builder>>(endDate); }
inline ref<android::security::keystore::KeyProtection_Builder> KeyProtection_Builder::setKeyValidityForOriginationEnd(ref<java::util::Date> endDate) { return call_method<SCAPIX_META_STRING("setKeyValidityForOriginationEnd"), ref<android::security::keystore::KeyProtection_Builder>>(endDate); }
inline ref<android::security::keystore::KeyProtection_Builder> KeyProtection_Builder::setKeyValidityForConsumptionEnd(ref<java::util::Date> endDate) { return call_method<SCAPIX_META_STRING("setKeyValidityForConsumptionEnd"), ref<android::security::keystore::KeyProtection_Builder>>(endDate); }
inline ref<android::security::keystore::KeyProtection_Builder> KeyProtection_Builder::setEncryptionPaddings(ref<link::java::array<java::lang::String>> paddings) { return call_method<SCAPIX_META_STRING("setEncryptionPaddings"), ref<android::security::keystore::KeyProtection_Builder>>(paddings); }
inline ref<android::security::keystore::KeyProtection_Builder> KeyProtection_Builder::setSignaturePaddings(ref<link::java::array<java::lang::String>> paddings) { return call_method<SCAPIX_META_STRING("setSignaturePaddings"), ref<android::security::keystore::KeyProtection_Builder>>(paddings); }
inline ref<android::security::keystore::KeyProtection_Builder> KeyProtection_Builder::setDigests(ref<link::java::array<java::lang::String>> digests) { return call_method<SCAPIX_META_STRING("setDigests"), ref<android::security::keystore::KeyProtection_Builder>>(digests); }
inline ref<android::security::keystore::KeyProtection_Builder> KeyProtection_Builder::setBlockModes(ref<link::java::array<java::lang::String>> blockModes) { return call_method<SCAPIX_META_STRING("setBlockModes"), ref<android::security::keystore::KeyProtection_Builder>>(blockModes); }
inline ref<android::security::keystore::KeyProtection_Builder> KeyProtection_Builder::setRandomizedEncryptionRequired(jboolean required) { return call_method<SCAPIX_META_STRING("setRandomizedEncryptionRequired"), ref<android::security::keystore::KeyProtection_Builder>>(required); }
inline ref<android::security::keystore::KeyProtection_Builder> KeyProtection_Builder::setUserAuthenticationRequired(jboolean required) { return call_method<SCAPIX_META_STRING("setUserAuthenticationRequired"), ref<android::security::keystore::KeyProtection_Builder>>(required); }
inline ref<android::security::keystore::KeyProtection_Builder> KeyProtection_Builder::setUserConfirmationRequired(jboolean required) { return call_method<SCAPIX_META_STRING("setUserConfirmationRequired"), ref<android::security::keystore::KeyProtection_Builder>>(required); }
inline ref<android::security::keystore::KeyProtection_Builder> KeyProtection_Builder::setUserAuthenticationValidityDurationSeconds(jint seconds) { return call_method<SCAPIX_META_STRING("setUserAuthenticationValidityDurationSeconds"), ref<android::security::keystore::KeyProtection_Builder>>(seconds); }
inline ref<android::security::keystore::KeyProtection_Builder> KeyProtection_Builder::setUserPresenceRequired(jboolean required) { return call_method<SCAPIX_META_STRING("setUserPresenceRequired"), ref<android::security::keystore::KeyProtection_Builder>>(required); }
inline ref<android::security::keystore::KeyProtection_Builder> KeyProtection_Builder::setUserAuthenticationValidWhileOnBody(jboolean remainsValid) { return call_method<SCAPIX_META_STRING("setUserAuthenticationValidWhileOnBody"), ref<android::security::keystore::KeyProtection_Builder>>(remainsValid); }
inline ref<android::security::keystore::KeyProtection_Builder> KeyProtection_Builder::setInvalidatedByBiometricEnrollment(jboolean invalidateKey) { return call_method<SCAPIX_META_STRING("setInvalidatedByBiometricEnrollment"), ref<android::security::keystore::KeyProtection_Builder>>(invalidateKey); }
inline ref<android::security::keystore::KeyProtection_Builder> KeyProtection_Builder::setUnlockedDeviceRequired(jboolean unlockedDeviceRequired) { return call_method<SCAPIX_META_STRING("setUnlockedDeviceRequired"), ref<android::security::keystore::KeyProtection_Builder>>(unlockedDeviceRequired); }
inline ref<android::security::keystore::KeyProtection> KeyProtection_Builder::build() { return call_method<SCAPIX_META_STRING("build"), ref<android::security::keystore::KeyProtection>>(); }

} // namespace android::security::keystore
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_SECURITY_KEYSTORE_KEYPROTECTION_BUILDER_H
