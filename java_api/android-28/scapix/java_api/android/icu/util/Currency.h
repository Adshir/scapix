// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/icu/util/MeasureUnit.h>

#ifndef SCAPIX_ANDROID_ICU_UTIL_CURRENCY_H
#define SCAPIX_ANDROID_ICU_UTIL_CURRENCY_H

namespace scapix::java_api {

namespace android::icu::util { class Currency_CurrencyUsage; }
namespace android::icu::util { class ULocale; }
namespace java::lang { class String; }
namespace java::util { class Date; }
namespace java::util { class Locale; }
namespace java::util { class Set; }

namespace android::icu::util {

class Currency : public object_base<SCAPIX_META_STRING("android/icu/util/Currency"),
	android::icu::util::MeasureUnit>
{
public:

	using CurrencyUsage = Currency_CurrencyUsage;

	static jint LONG_NAME_();
	static jint PLURAL_LONG_NAME_();
	static jint SYMBOL_NAME_();

	static ref<android::icu::util::Currency> getInstance(ref<java::util::Locale> locale);
	static ref<android::icu::util::Currency> getInstance(ref<android::icu::util::ULocale> locale);
	static ref<link::java::array<java::lang::String>> getAvailableCurrencyCodes(ref<android::icu::util::ULocale> loc, ref<java::util::Date> d);
	static ref<link::java::array<java::lang::String>> getAvailableCurrencyCodes(ref<java::util::Locale> loc, ref<java::util::Date> d);
	static ref<java::util::Set> getAvailableCurrencies();
	static ref<android::icu::util::Currency> getInstance(ref<java::lang::String> theISOCode);
	static ref<link::java::array<java::util::Locale>> getAvailableLocales();
	static ref<link::java::array<android::icu::util::ULocale>> getAvailableULocales();
	static ref<link::java::array<java::lang::String>> getKeywordValuesForLocale(ref<java::lang::String> key, ref<android::icu::util::ULocale> locale, jboolean commonlyUsed);
	ref<java::lang::String> getCurrencyCode();
	jint getNumericCode();
	ref<java::lang::String> getSymbol();
	ref<java::lang::String> getSymbol(ref<java::util::Locale> loc);
	ref<java::lang::String> getSymbol(ref<android::icu::util::ULocale> uloc);
	ref<java::lang::String> getName(ref<java::util::Locale> locale, jint nameStyle, ref<link::java::array<jboolean>> isChoiceFormat);
	ref<java::lang::String> getName(ref<android::icu::util::ULocale> locale, jint nameStyle, ref<link::java::array<jboolean>> isChoiceFormat);
	ref<java::lang::String> getName(ref<java::util::Locale> locale, jint nameStyle, ref<java::lang::String> pluralCount, ref<link::java::array<jboolean>> isChoiceFormat);
	ref<java::lang::String> getName(ref<android::icu::util::ULocale> locale, jint nameStyle, ref<java::lang::String> pluralCount, ref<link::java::array<jboolean>> isChoiceFormat);
	ref<java::lang::String> getDisplayName();
	ref<java::lang::String> getDisplayName(ref<java::util::Locale> locale);
	jint getDefaultFractionDigits();
	jint getDefaultFractionDigits(ref<android::icu::util::Currency_CurrencyUsage> Usage);
	jdouble getRoundingIncrement();
	jdouble getRoundingIncrement(ref<android::icu::util::Currency_CurrencyUsage> Usage);
	ref<java::lang::String> toString();
	static jboolean isAvailable(ref<java::lang::String> code, ref<java::util::Date> from, ref<java::util::Date> to);

protected:

	Currency(handle_type h) : base_(h) {}

};

} // namespace android::icu::util
} // namespace scapix::java_api

#include <scapix/java_api/android/icu/util/Currency_CurrencyUsage.h>
#include <scapix/java_api/android/icu/util/ULocale.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Date.h>
#include <scapix/java_api/java/util/Locale.h>
#include <scapix/java_api/java/util/Set.h>

namespace scapix::java_api {
namespace android::icu::util {

inline jint Currency::LONG_NAME_() { return get_static_field<SCAPIX_META_STRING("LONG_NAME"), jint>(); }
inline jint Currency::PLURAL_LONG_NAME_() { return get_static_field<SCAPIX_META_STRING("PLURAL_LONG_NAME"), jint>(); }
inline jint Currency::SYMBOL_NAME_() { return get_static_field<SCAPIX_META_STRING("SYMBOL_NAME"), jint>(); }
inline ref<android::icu::util::Currency> Currency::getInstance(ref<java::util::Locale> locale) { return call_static_method<SCAPIX_META_STRING("getInstance"), ref<android::icu::util::Currency>>(locale); }
inline ref<android::icu::util::Currency> Currency::getInstance(ref<android::icu::util::ULocale> locale) { return call_static_method<SCAPIX_META_STRING("getInstance"), ref<android::icu::util::Currency>>(locale); }
inline ref<link::java::array<java::lang::String>> Currency::getAvailableCurrencyCodes(ref<android::icu::util::ULocale> loc, ref<java::util::Date> d) { return call_static_method<SCAPIX_META_STRING("getAvailableCurrencyCodes"), ref<link::java::array<java::lang::String>>>(loc, d); }
inline ref<link::java::array<java::lang::String>> Currency::getAvailableCurrencyCodes(ref<java::util::Locale> loc, ref<java::util::Date> d) { return call_static_method<SCAPIX_META_STRING("getAvailableCurrencyCodes"), ref<link::java::array<java::lang::String>>>(loc, d); }
inline ref<java::util::Set> Currency::getAvailableCurrencies() { return call_static_method<SCAPIX_META_STRING("getAvailableCurrencies"), ref<java::util::Set>>(); }
inline ref<android::icu::util::Currency> Currency::getInstance(ref<java::lang::String> theISOCode) { return call_static_method<SCAPIX_META_STRING("getInstance"), ref<android::icu::util::Currency>>(theISOCode); }
inline ref<link::java::array<java::util::Locale>> Currency::getAvailableLocales() { return call_static_method<SCAPIX_META_STRING("getAvailableLocales"), ref<link::java::array<java::util::Locale>>>(); }
inline ref<link::java::array<android::icu::util::ULocale>> Currency::getAvailableULocales() { return call_static_method<SCAPIX_META_STRING("getAvailableULocales"), ref<link::java::array<android::icu::util::ULocale>>>(); }
inline ref<link::java::array<java::lang::String>> Currency::getKeywordValuesForLocale(ref<java::lang::String> key, ref<android::icu::util::ULocale> locale, jboolean commonlyUsed) { return call_static_method<SCAPIX_META_STRING("getKeywordValuesForLocale"), ref<link::java::array<java::lang::String>>>(key, locale, commonlyUsed); }
inline ref<java::lang::String> Currency::getCurrencyCode() { return call_method<SCAPIX_META_STRING("getCurrencyCode"), ref<java::lang::String>>(); }
inline jint Currency::getNumericCode() { return call_method<SCAPIX_META_STRING("getNumericCode"), jint>(); }
inline ref<java::lang::String> Currency::getSymbol() { return call_method<SCAPIX_META_STRING("getSymbol"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Currency::getSymbol(ref<java::util::Locale> loc) { return call_method<SCAPIX_META_STRING("getSymbol"), ref<java::lang::String>>(loc); }
inline ref<java::lang::String> Currency::getSymbol(ref<android::icu::util::ULocale> uloc) { return call_method<SCAPIX_META_STRING("getSymbol"), ref<java::lang::String>>(uloc); }
inline ref<java::lang::String> Currency::getName(ref<java::util::Locale> locale, jint nameStyle, ref<link::java::array<jboolean>> isChoiceFormat) { return call_method<SCAPIX_META_STRING("getName"), ref<java::lang::String>>(locale, nameStyle, isChoiceFormat); }
inline ref<java::lang::String> Currency::getName(ref<android::icu::util::ULocale> locale, jint nameStyle, ref<link::java::array<jboolean>> isChoiceFormat) { return call_method<SCAPIX_META_STRING("getName"), ref<java::lang::String>>(locale, nameStyle, isChoiceFormat); }
inline ref<java::lang::String> Currency::getName(ref<java::util::Locale> locale, jint nameStyle, ref<java::lang::String> pluralCount, ref<link::java::array<jboolean>> isChoiceFormat) { return call_method<SCAPIX_META_STRING("getName"), ref<java::lang::String>>(locale, nameStyle, pluralCount, isChoiceFormat); }
inline ref<java::lang::String> Currency::getName(ref<android::icu::util::ULocale> locale, jint nameStyle, ref<java::lang::String> pluralCount, ref<link::java::array<jboolean>> isChoiceFormat) { return call_method<SCAPIX_META_STRING("getName"), ref<java::lang::String>>(locale, nameStyle, pluralCount, isChoiceFormat); }
inline ref<java::lang::String> Currency::getDisplayName() { return call_method<SCAPIX_META_STRING("getDisplayName"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Currency::getDisplayName(ref<java::util::Locale> locale) { return call_method<SCAPIX_META_STRING("getDisplayName"), ref<java::lang::String>>(locale); }
inline jint Currency::getDefaultFractionDigits() { return call_method<SCAPIX_META_STRING("getDefaultFractionDigits"), jint>(); }
inline jint Currency::getDefaultFractionDigits(ref<android::icu::util::Currency_CurrencyUsage> Usage) { return call_method<SCAPIX_META_STRING("getDefaultFractionDigits"), jint>(Usage); }
inline jdouble Currency::getRoundingIncrement() { return call_method<SCAPIX_META_STRING("getRoundingIncrement"), jdouble>(); }
inline jdouble Currency::getRoundingIncrement(ref<android::icu::util::Currency_CurrencyUsage> Usage) { return call_method<SCAPIX_META_STRING("getRoundingIncrement"), jdouble>(Usage); }
inline ref<java::lang::String> Currency::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }
inline jboolean Currency::isAvailable(ref<java::lang::String> code, ref<java::util::Date> from, ref<java::util::Date> to) { return call_static_method<SCAPIX_META_STRING("isAvailable"), jboolean>(code, from, to); }

} // namespace android::icu::util
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_ICU_UTIL_CURRENCY_H
