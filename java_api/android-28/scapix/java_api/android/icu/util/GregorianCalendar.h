// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/icu/util/Calendar.h>

#ifndef SCAPIX_ANDROID_ICU_UTIL_GREGORIANCALENDAR_H
#define SCAPIX_ANDROID_ICU_UTIL_GREGORIANCALENDAR_H

namespace scapix::java_api {

namespace android::icu::util { class TimeZone; }
namespace android::icu::util { class ULocale; }
namespace java::lang { class String; }
namespace java::util { class Date; }
namespace java::util { class Locale; }

namespace android::icu::util {

class GregorianCalendar : public object_base<SCAPIX_META_STRING("android/icu/util/GregorianCalendar"),
	android::icu::util::Calendar>
{
public:

	static jint AD_();
	static jint BC_();

	static ref<GregorianCalendar> new_object();
	static ref<GregorianCalendar> new_object(ref<android::icu::util::TimeZone> zone);
	static ref<GregorianCalendar> new_object(ref<java::util::Locale> aLocale);
	static ref<GregorianCalendar> new_object(ref<android::icu::util::ULocale> locale);
	static ref<GregorianCalendar> new_object(ref<android::icu::util::TimeZone> zone, ref<java::util::Locale> aLocale);
	static ref<GregorianCalendar> new_object(ref<android::icu::util::TimeZone> zone, ref<android::icu::util::ULocale> locale);
	static ref<GregorianCalendar> new_object(jint year, jint month, jint date);
	static ref<GregorianCalendar> new_object(jint year, jint month, jint date, jint hour, jint minute);
	static ref<GregorianCalendar> new_object(jint year, jint month, jint date, jint hour, jint minute, jint second);
	void setGregorianChange(ref<java::util::Date> date);
	ref<java::util::Date> getGregorianChange();
	jboolean isLeapYear(jint year);
	jboolean isEquivalentTo(ref<android::icu::util::Calendar> other);
	jint hashCode();
	void roll(jint field, jint amount);
	jint getActualMinimum(jint field);
	jint getActualMaximum(jint field);
	ref<java::lang::String> getType();

protected:

	GregorianCalendar(handle_type h) : base_(h) {}

};

} // namespace android::icu::util
} // namespace scapix::java_api

#include <scapix/java_api/android/icu/util/TimeZone.h>
#include <scapix/java_api/android/icu/util/ULocale.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Date.h>
#include <scapix/java_api/java/util/Locale.h>

namespace scapix::java_api {
namespace android::icu::util {

inline jint GregorianCalendar::AD_() { return get_static_field<SCAPIX_META_STRING("AD"), jint>(); }
inline jint GregorianCalendar::BC_() { return get_static_field<SCAPIX_META_STRING("BC"), jint>(); }
inline ref<GregorianCalendar> GregorianCalendar::new_object() { return base_::new_object(); }
inline ref<GregorianCalendar> GregorianCalendar::new_object(ref<android::icu::util::TimeZone> zone) { return base_::new_object(zone); }
inline ref<GregorianCalendar> GregorianCalendar::new_object(ref<java::util::Locale> aLocale) { return base_::new_object(aLocale); }
inline ref<GregorianCalendar> GregorianCalendar::new_object(ref<android::icu::util::ULocale> locale) { return base_::new_object(locale); }
inline ref<GregorianCalendar> GregorianCalendar::new_object(ref<android::icu::util::TimeZone> zone, ref<java::util::Locale> aLocale) { return base_::new_object(zone, aLocale); }
inline ref<GregorianCalendar> GregorianCalendar::new_object(ref<android::icu::util::TimeZone> zone, ref<android::icu::util::ULocale> locale) { return base_::new_object(zone, locale); }
inline ref<GregorianCalendar> GregorianCalendar::new_object(jint year, jint month, jint date) { return base_::new_object(year, month, date); }
inline ref<GregorianCalendar> GregorianCalendar::new_object(jint year, jint month, jint date, jint hour, jint minute) { return base_::new_object(year, month, date, hour, minute); }
inline ref<GregorianCalendar> GregorianCalendar::new_object(jint year, jint month, jint date, jint hour, jint minute, jint second) { return base_::new_object(year, month, date, hour, minute, second); }
inline void GregorianCalendar::setGregorianChange(ref<java::util::Date> date) { return call_method<SCAPIX_META_STRING("setGregorianChange"), void>(date); }
inline ref<java::util::Date> GregorianCalendar::getGregorianChange() { return call_method<SCAPIX_META_STRING("getGregorianChange"), ref<java::util::Date>>(); }
inline jboolean GregorianCalendar::isLeapYear(jint year) { return call_method<SCAPIX_META_STRING("isLeapYear"), jboolean>(year); }
inline jboolean GregorianCalendar::isEquivalentTo(ref<android::icu::util::Calendar> other) { return call_method<SCAPIX_META_STRING("isEquivalentTo"), jboolean>(other); }
inline jint GregorianCalendar::hashCode() { return call_method<SCAPIX_META_STRING("hashCode"), jint>(); }
inline void GregorianCalendar::roll(jint field, jint amount) { return call_method<SCAPIX_META_STRING("roll"), void>(field, amount); }
inline jint GregorianCalendar::getActualMinimum(jint field) { return call_method<SCAPIX_META_STRING("getActualMinimum"), jint>(field); }
inline jint GregorianCalendar::getActualMaximum(jint field) { return call_method<SCAPIX_META_STRING("getActualMaximum"), jint>(field); }
inline ref<java::lang::String> GregorianCalendar::getType() { return call_method<SCAPIX_META_STRING("getType"), ref<java::lang::String>>(); }

} // namespace android::icu::util
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_ICU_UTIL_GREGORIANCALENDAR_H
