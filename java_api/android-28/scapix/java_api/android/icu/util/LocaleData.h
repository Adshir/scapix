// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_ICU_UTIL_LOCALEDATA_H
#define SCAPIX_ANDROID_ICU_UTIL_LOCALEDATA_H

namespace scapix::java_api {

namespace android::icu::util { class LocaleData_MeasurementSystem; }
namespace android::icu::util { class LocaleData_PaperSize; }
namespace android::icu::util { class ULocale; }
namespace android::icu::util { class VersionInfo; }
namespace java::lang { class String; }

namespace android::icu::util {

class LocaleData : public object_base<SCAPIX_META_STRING("android/icu/util/LocaleData"),
	java::lang::Object>
{
public:

	using PaperSize = LocaleData_PaperSize;
	using MeasurementSystem = LocaleData_MeasurementSystem;

	static jint ALT_QUOTATION_END_();
	static jint ALT_QUOTATION_START_();
	static jint QUOTATION_END_();
	static jint QUOTATION_START_();

	static ref<android::icu::util::LocaleData> getInstance(ref<android::icu::util::ULocale> locale);
	static ref<android::icu::util::LocaleData> getInstance();
	void setNoSubstitute(jboolean setting);
	jboolean getNoSubstitute();
	ref<java::lang::String> getDelimiter(jint type);
	static ref<android::icu::util::LocaleData_MeasurementSystem> getMeasurementSystem(ref<android::icu::util::ULocale> locale);
	static ref<android::icu::util::LocaleData_PaperSize> getPaperSize(ref<android::icu::util::ULocale> locale);
	static ref<android::icu::util::VersionInfo> getCLDRVersion();

protected:

	LocaleData(handle_type h) : base_(h) {}

};

} // namespace android::icu::util
} // namespace scapix::java_api

#include <scapix/java_api/android/icu/util/LocaleData_MeasurementSystem.h>
#include <scapix/java_api/android/icu/util/LocaleData_PaperSize.h>
#include <scapix/java_api/android/icu/util/ULocale.h>
#include <scapix/java_api/android/icu/util/VersionInfo.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::icu::util {

inline jint LocaleData::ALT_QUOTATION_END_() { return get_static_field<SCAPIX_META_STRING("ALT_QUOTATION_END"), jint>(); }
inline jint LocaleData::ALT_QUOTATION_START_() { return get_static_field<SCAPIX_META_STRING("ALT_QUOTATION_START"), jint>(); }
inline jint LocaleData::QUOTATION_END_() { return get_static_field<SCAPIX_META_STRING("QUOTATION_END"), jint>(); }
inline jint LocaleData::QUOTATION_START_() { return get_static_field<SCAPIX_META_STRING("QUOTATION_START"), jint>(); }
inline ref<android::icu::util::LocaleData> LocaleData::getInstance(ref<android::icu::util::ULocale> locale) { return call_static_method<SCAPIX_META_STRING("getInstance"), ref<android::icu::util::LocaleData>>(locale); }
inline ref<android::icu::util::LocaleData> LocaleData::getInstance() { return call_static_method<SCAPIX_META_STRING("getInstance"), ref<android::icu::util::LocaleData>>(); }
inline void LocaleData::setNoSubstitute(jboolean setting) { return call_method<SCAPIX_META_STRING("setNoSubstitute"), void>(setting); }
inline jboolean LocaleData::getNoSubstitute() { return call_method<SCAPIX_META_STRING("getNoSubstitute"), jboolean>(); }
inline ref<java::lang::String> LocaleData::getDelimiter(jint type) { return call_method<SCAPIX_META_STRING("getDelimiter"), ref<java::lang::String>>(type); }
inline ref<android::icu::util::LocaleData_MeasurementSystem> LocaleData::getMeasurementSystem(ref<android::icu::util::ULocale> locale) { return call_static_method<SCAPIX_META_STRING("getMeasurementSystem"), ref<android::icu::util::LocaleData_MeasurementSystem>>(locale); }
inline ref<android::icu::util::LocaleData_PaperSize> LocaleData::getPaperSize(ref<android::icu::util::ULocale> locale) { return call_static_method<SCAPIX_META_STRING("getPaperSize"), ref<android::icu::util::LocaleData_PaperSize>>(locale); }
inline ref<android::icu::util::VersionInfo> LocaleData::getCLDRVersion() { return call_static_method<SCAPIX_META_STRING("getCLDRVersion"), ref<android::icu::util::VersionInfo>>(); }

} // namespace android::icu::util
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_ICU_UTIL_LOCALEDATA_H
