// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/util/Comparator.h>
#include <scapix/java_api/android/icu/util/Freezable.h>
#include <scapix/java_api/java/lang/Cloneable.h>

#ifndef SCAPIX_ANDROID_ICU_TEXT_COLLATOR_H
#define SCAPIX_ANDROID_ICU_TEXT_COLLATOR_H

namespace scapix::java_api {

namespace android::icu::text { class CollationKey; }
namespace android::icu::text { class UnicodeSet; }
namespace android::icu::util { class ULocale; }
namespace android::icu::util { class VersionInfo; }
namespace java::lang { class String; }
namespace java::util { class Locale; }
namespace android::icu::text { class Collator_ReorderCodes; }

namespace android::icu::text {

class Collator : public object_base<SCAPIX_META_STRING("android/icu/text/Collator"),
	java::lang::Object,
	java::util::Comparator,
	android::icu::util::Freezable,
	java::lang::Cloneable>
{
public:

	using ReorderCodes = Collator_ReorderCodes;

	static jint CANONICAL_DECOMPOSITION_();
	static jint FULL_DECOMPOSITION_();
	static jint IDENTICAL_();
	static jint NO_DECOMPOSITION_();
	static jint PRIMARY_();
	static jint QUATERNARY_();
	static jint SECONDARY_();
	static jint TERTIARY_();

	jboolean equals(ref<java::lang::Object> obj);
	jint hashCode();
	void setStrength(jint newStrength);
	void setDecomposition(jint decomposition);
	void setReorderCodes(ref<link::java::array<jint>> order);
	static ref<android::icu::text::Collator> getInstance();
	ref<java::lang::Object> clone();
	static ref<android::icu::text::Collator> getInstance(ref<android::icu::util::ULocale> locale);
	static ref<android::icu::text::Collator> getInstance(ref<java::util::Locale> locale);
	static ref<link::java::array<java::util::Locale>> getAvailableLocales();
	static ref<link::java::array<android::icu::util::ULocale>> getAvailableULocales();
	static ref<link::java::array<java::lang::String>> getKeywords();
	static ref<link::java::array<java::lang::String>> getKeywordValues(ref<java::lang::String> keyword);
	static ref<link::java::array<java::lang::String>> getKeywordValuesForLocale(ref<java::lang::String> key, ref<android::icu::util::ULocale> locale, jboolean commonlyUsed);
	static ref<android::icu::util::ULocale> getFunctionalEquivalent(ref<java::lang::String> keyword, ref<android::icu::util::ULocale> locID, ref<link::java::array<jboolean>> isAvailable);
	static ref<android::icu::util::ULocale> getFunctionalEquivalent(ref<java::lang::String> keyword, ref<android::icu::util::ULocale> locID);
	static ref<java::lang::String> getDisplayName(ref<java::util::Locale> objectLocale, ref<java::util::Locale> displayLocale);
	static ref<java::lang::String> getDisplayName(ref<android::icu::util::ULocale> objectLocale, ref<android::icu::util::ULocale> displayLocale);
	static ref<java::lang::String> getDisplayName(ref<java::util::Locale> objectLocale);
	static ref<java::lang::String> getDisplayName(ref<android::icu::util::ULocale> objectLocale);
	jint getStrength();
	jint getDecomposition();
	jboolean equals(ref<java::lang::String> source, ref<java::lang::String> target);
	ref<android::icu::text::UnicodeSet> getTailoredSet();
	jint compare(ref<java::lang::String> p1, ref<java::lang::String> p2);
	jint compare(ref<java::lang::Object> source, ref<java::lang::Object> target);
	ref<android::icu::text::CollationKey> getCollationKey(ref<java::lang::String> p1);
	ref<android::icu::text::Collator> setMaxVariable(jint group);
	jint getMaxVariable();
	jint getVariableTop();
	ref<android::icu::util::VersionInfo> getVersion();
	ref<android::icu::util::VersionInfo> getUCAVersion();
	ref<link::java::array<jint>> getReorderCodes();
	static ref<link::java::array<jint>> getEquivalentReorderCodes(jint reorderCode);
	jboolean isFrozen();
	ref<android::icu::text::Collator> freeze();
	ref<android::icu::text::Collator> cloneAsThawed();

protected:

	Collator(handle_type h) : base_(h) {}

};

} // namespace android::icu::text
} // namespace scapix::java_api

#include <scapix/java_api/android/icu/text/CollationKey.h>
#include <scapix/java_api/android/icu/text/UnicodeSet.h>
#include <scapix/java_api/android/icu/util/ULocale.h>
#include <scapix/java_api/android/icu/util/VersionInfo.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Locale.h>

namespace scapix::java_api {
namespace android::icu::text {

inline jint Collator::CANONICAL_DECOMPOSITION_() { return get_static_field<SCAPIX_META_STRING("CANONICAL_DECOMPOSITION"), jint>(); }
inline jint Collator::FULL_DECOMPOSITION_() { return get_static_field<SCAPIX_META_STRING("FULL_DECOMPOSITION"), jint>(); }
inline jint Collator::IDENTICAL_() { return get_static_field<SCAPIX_META_STRING("IDENTICAL"), jint>(); }
inline jint Collator::NO_DECOMPOSITION_() { return get_static_field<SCAPIX_META_STRING("NO_DECOMPOSITION"), jint>(); }
inline jint Collator::PRIMARY_() { return get_static_field<SCAPIX_META_STRING("PRIMARY"), jint>(); }
inline jint Collator::QUATERNARY_() { return get_static_field<SCAPIX_META_STRING("QUATERNARY"), jint>(); }
inline jint Collator::SECONDARY_() { return get_static_field<SCAPIX_META_STRING("SECONDARY"), jint>(); }
inline jint Collator::TERTIARY_() { return get_static_field<SCAPIX_META_STRING("TERTIARY"), jint>(); }
inline jboolean Collator::equals(ref<java::lang::Object> obj) { return call_method<SCAPIX_META_STRING("equals"), jboolean>(obj); }
inline jint Collator::hashCode() { return call_method<SCAPIX_META_STRING("hashCode"), jint>(); }
inline void Collator::setStrength(jint newStrength) { return call_method<SCAPIX_META_STRING("setStrength"), void>(newStrength); }
inline void Collator::setDecomposition(jint decomposition) { return call_method<SCAPIX_META_STRING("setDecomposition"), void>(decomposition); }
inline void Collator::setReorderCodes(ref<link::java::array<jint>> order) { return call_method<SCAPIX_META_STRING("setReorderCodes"), void>(order); }
inline ref<android::icu::text::Collator> Collator::getInstance() { return call_static_method<SCAPIX_META_STRING("getInstance"), ref<android::icu::text::Collator>>(); }
inline ref<java::lang::Object> Collator::clone() { return call_method<SCAPIX_META_STRING("clone"), ref<java::lang::Object>>(); }
inline ref<android::icu::text::Collator> Collator::getInstance(ref<android::icu::util::ULocale> locale) { return call_static_method<SCAPIX_META_STRING("getInstance"), ref<android::icu::text::Collator>>(locale); }
inline ref<android::icu::text::Collator> Collator::getInstance(ref<java::util::Locale> locale) { return call_static_method<SCAPIX_META_STRING("getInstance"), ref<android::icu::text::Collator>>(locale); }
inline ref<link::java::array<java::util::Locale>> Collator::getAvailableLocales() { return call_static_method<SCAPIX_META_STRING("getAvailableLocales"), ref<link::java::array<java::util::Locale>>>(); }
inline ref<link::java::array<android::icu::util::ULocale>> Collator::getAvailableULocales() { return call_static_method<SCAPIX_META_STRING("getAvailableULocales"), ref<link::java::array<android::icu::util::ULocale>>>(); }
inline ref<link::java::array<java::lang::String>> Collator::getKeywords() { return call_static_method<SCAPIX_META_STRING("getKeywords"), ref<link::java::array<java::lang::String>>>(); }
inline ref<link::java::array<java::lang::String>> Collator::getKeywordValues(ref<java::lang::String> keyword) { return call_static_method<SCAPIX_META_STRING("getKeywordValues"), ref<link::java::array<java::lang::String>>>(keyword); }
inline ref<link::java::array<java::lang::String>> Collator::getKeywordValuesForLocale(ref<java::lang::String> key, ref<android::icu::util::ULocale> locale, jboolean commonlyUsed) { return call_static_method<SCAPIX_META_STRING("getKeywordValuesForLocale"), ref<link::java::array<java::lang::String>>>(key, locale, commonlyUsed); }
inline ref<android::icu::util::ULocale> Collator::getFunctionalEquivalent(ref<java::lang::String> keyword, ref<android::icu::util::ULocale> locID, ref<link::java::array<jboolean>> isAvailable) { return call_static_method<SCAPIX_META_STRING("getFunctionalEquivalent"), ref<android::icu::util::ULocale>>(keyword, locID, isAvailable); }
inline ref<android::icu::util::ULocale> Collator::getFunctionalEquivalent(ref<java::lang::String> keyword, ref<android::icu::util::ULocale> locID) { return call_static_method<SCAPIX_META_STRING("getFunctionalEquivalent"), ref<android::icu::util::ULocale>>(keyword, locID); }
inline ref<java::lang::String> Collator::getDisplayName(ref<java::util::Locale> objectLocale, ref<java::util::Locale> displayLocale) { return call_static_method<SCAPIX_META_STRING("getDisplayName"), ref<java::lang::String>>(objectLocale, displayLocale); }
inline ref<java::lang::String> Collator::getDisplayName(ref<android::icu::util::ULocale> objectLocale, ref<android::icu::util::ULocale> displayLocale) { return call_static_method<SCAPIX_META_STRING("getDisplayName"), ref<java::lang::String>>(objectLocale, displayLocale); }
inline ref<java::lang::String> Collator::getDisplayName(ref<java::util::Locale> objectLocale) { return call_static_method<SCAPIX_META_STRING("getDisplayName"), ref<java::lang::String>>(objectLocale); }
inline ref<java::lang::String> Collator::getDisplayName(ref<android::icu::util::ULocale> objectLocale) { return call_static_method<SCAPIX_META_STRING("getDisplayName"), ref<java::lang::String>>(objectLocale); }
inline jint Collator::getStrength() { return call_method<SCAPIX_META_STRING("getStrength"), jint>(); }
inline jint Collator::getDecomposition() { return call_method<SCAPIX_META_STRING("getDecomposition"), jint>(); }
inline jboolean Collator::equals(ref<java::lang::String> source, ref<java::lang::String> target) { return call_method<SCAPIX_META_STRING("equals"), jboolean>(source, target); }
inline ref<android::icu::text::UnicodeSet> Collator::getTailoredSet() { return call_method<SCAPIX_META_STRING("getTailoredSet"), ref<android::icu::text::UnicodeSet>>(); }
inline jint Collator::compare(ref<java::lang::String> p1, ref<java::lang::String> p2) { return call_method<SCAPIX_META_STRING("compare"), jint>(p1, p2); }
inline jint Collator::compare(ref<java::lang::Object> source, ref<java::lang::Object> target) { return call_method<SCAPIX_META_STRING("compare"), jint>(source, target); }
inline ref<android::icu::text::CollationKey> Collator::getCollationKey(ref<java::lang::String> p1) { return call_method<SCAPIX_META_STRING("getCollationKey"), ref<android::icu::text::CollationKey>>(p1); }
inline ref<android::icu::text::Collator> Collator::setMaxVariable(jint group) { return call_method<SCAPIX_META_STRING("setMaxVariable"), ref<android::icu::text::Collator>>(group); }
inline jint Collator::getMaxVariable() { return call_method<SCAPIX_META_STRING("getMaxVariable"), jint>(); }
inline jint Collator::getVariableTop() { return call_method<SCAPIX_META_STRING("getVariableTop"), jint>(); }
inline ref<android::icu::util::VersionInfo> Collator::getVersion() { return call_method<SCAPIX_META_STRING("getVersion"), ref<android::icu::util::VersionInfo>>(); }
inline ref<android::icu::util::VersionInfo> Collator::getUCAVersion() { return call_method<SCAPIX_META_STRING("getUCAVersion"), ref<android::icu::util::VersionInfo>>(); }
inline ref<link::java::array<jint>> Collator::getReorderCodes() { return call_method<SCAPIX_META_STRING("getReorderCodes"), ref<link::java::array<jint>>>(); }
inline ref<link::java::array<jint>> Collator::getEquivalentReorderCodes(jint reorderCode) { return call_static_method<SCAPIX_META_STRING("getEquivalentReorderCodes"), ref<link::java::array<jint>>>(reorderCode); }
inline jboolean Collator::isFrozen() { return call_method<SCAPIX_META_STRING("isFrozen"), jboolean>(); }
inline ref<android::icu::text::Collator> Collator::freeze() { return call_method<SCAPIX_META_STRING("freeze"), ref<android::icu::text::Collator>>(); }
inline ref<android::icu::text::Collator> Collator::cloneAsThawed() { return call_method<SCAPIX_META_STRING("cloneAsThawed"), ref<android::icu::text::Collator>>(); }

} // namespace android::icu::text
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_ICU_TEXT_COLLATOR_H
