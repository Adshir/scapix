// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_ICU_TEXT_SCIENTIFICNUMBERFORMATTER_H
#define SCAPIX_ANDROID_ICU_TEXT_SCIENTIFICNUMBERFORMATTER_H

namespace scapix::java_api {

namespace android::icu::text { class DecimalFormat; }
namespace android::icu::util { class ULocale; }
namespace java::lang { class String; }

namespace android::icu::text {

class ScientificNumberFormatter : public object_base<SCAPIX_META_STRING("android/icu/text/ScientificNumberFormatter"),
	java::lang::Object>
{
public:

	static ref<android::icu::text::ScientificNumberFormatter> getSuperscriptInstance(ref<android::icu::util::ULocale> locale);
	static ref<android::icu::text::ScientificNumberFormatter> getSuperscriptInstance(ref<android::icu::text::DecimalFormat> df);
	static ref<android::icu::text::ScientificNumberFormatter> getMarkupInstance(ref<android::icu::util::ULocale> locale, ref<java::lang::String> beginMarkup, ref<java::lang::String> endMarkup);
	static ref<android::icu::text::ScientificNumberFormatter> getMarkupInstance(ref<android::icu::text::DecimalFormat> df, ref<java::lang::String> beginMarkup, ref<java::lang::String> endMarkup);
	ref<java::lang::String> format(ref<java::lang::Object> number);

protected:

	ScientificNumberFormatter(handle_type h) : base_(h) {}

};

} // namespace android::icu::text
} // namespace scapix::java_api

#include <scapix/java_api/android/icu/text/DecimalFormat.h>
#include <scapix/java_api/android/icu/util/ULocale.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::icu::text {

inline ref<android::icu::text::ScientificNumberFormatter> ScientificNumberFormatter::getSuperscriptInstance(ref<android::icu::util::ULocale> locale) { return call_static_method<SCAPIX_META_STRING("getSuperscriptInstance"), ref<android::icu::text::ScientificNumberFormatter>>(locale); }
inline ref<android::icu::text::ScientificNumberFormatter> ScientificNumberFormatter::getSuperscriptInstance(ref<android::icu::text::DecimalFormat> df) { return call_static_method<SCAPIX_META_STRING("getSuperscriptInstance"), ref<android::icu::text::ScientificNumberFormatter>>(df); }
inline ref<android::icu::text::ScientificNumberFormatter> ScientificNumberFormatter::getMarkupInstance(ref<android::icu::util::ULocale> locale, ref<java::lang::String> beginMarkup, ref<java::lang::String> endMarkup) { return call_static_method<SCAPIX_META_STRING("getMarkupInstance"), ref<android::icu::text::ScientificNumberFormatter>>(locale, beginMarkup, endMarkup); }
inline ref<android::icu::text::ScientificNumberFormatter> ScientificNumberFormatter::getMarkupInstance(ref<android::icu::text::DecimalFormat> df, ref<java::lang::String> beginMarkup, ref<java::lang::String> endMarkup) { return call_static_method<SCAPIX_META_STRING("getMarkupInstance"), ref<android::icu::text::ScientificNumberFormatter>>(df, beginMarkup, endMarkup); }
inline ref<java::lang::String> ScientificNumberFormatter::format(ref<java::lang::Object> number) { return call_method<SCAPIX_META_STRING("format"), ref<java::lang::String>>(number); }

} // namespace android::icu::text
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_ICU_TEXT_SCIENTIFICNUMBERFORMATTER_H
