// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/Cloneable.h>
#include <scapix/java_api/java/io/Serializable.h>

#ifndef SCAPIX_ANDROID_ICU_TEXT_CURRENCYPLURALINFO_H
#define SCAPIX_ANDROID_ICU_TEXT_CURRENCYPLURALINFO_H

namespace scapix::java_api {

namespace android::icu::text { class PluralRules; }
namespace android::icu::util { class ULocale; }
namespace java::lang { class String; }
namespace java::util { class Locale; }

namespace android::icu::text {

class CurrencyPluralInfo : public object_base<SCAPIX_META_STRING("android/icu/text/CurrencyPluralInfo"),
	java::lang::Object,
	java::lang::Cloneable,
	java::io::Serializable>
{
public:

	static ref<CurrencyPluralInfo> new_object();
	static ref<CurrencyPluralInfo> new_object(ref<java::util::Locale> locale);
	static ref<CurrencyPluralInfo> new_object(ref<android::icu::util::ULocale> locale);
	static ref<android::icu::text::CurrencyPluralInfo> getInstance();
	static ref<android::icu::text::CurrencyPluralInfo> getInstance(ref<java::util::Locale> locale);
	static ref<android::icu::text::CurrencyPluralInfo> getInstance(ref<android::icu::util::ULocale> locale);
	ref<android::icu::text::PluralRules> getPluralRules();
	ref<java::lang::String> getCurrencyPluralPattern(ref<java::lang::String> pluralCount);
	ref<android::icu::util::ULocale> getLocale();
	void setPluralRules(ref<java::lang::String> ruleDescription);
	void setCurrencyPluralPattern(ref<java::lang::String> pluralCount, ref<java::lang::String> pattern);
	void setLocale(ref<android::icu::util::ULocale> loc);
	ref<java::lang::Object> clone();
	jboolean equals(ref<java::lang::Object> a);
	jint hashCode();

protected:

	CurrencyPluralInfo(handle_type h) : base_(h) {}

};

} // namespace android::icu::text
} // namespace scapix::java_api

#include <scapix/java_api/android/icu/text/PluralRules.h>
#include <scapix/java_api/android/icu/util/ULocale.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Locale.h>

namespace scapix::java_api {
namespace android::icu::text {

inline ref<CurrencyPluralInfo> CurrencyPluralInfo::new_object() { return base_::new_object(); }
inline ref<CurrencyPluralInfo> CurrencyPluralInfo::new_object(ref<java::util::Locale> locale) { return base_::new_object(locale); }
inline ref<CurrencyPluralInfo> CurrencyPluralInfo::new_object(ref<android::icu::util::ULocale> locale) { return base_::new_object(locale); }
inline ref<android::icu::text::CurrencyPluralInfo> CurrencyPluralInfo::getInstance() { return call_static_method<SCAPIX_META_STRING("getInstance"), ref<android::icu::text::CurrencyPluralInfo>>(); }
inline ref<android::icu::text::CurrencyPluralInfo> CurrencyPluralInfo::getInstance(ref<java::util::Locale> locale) { return call_static_method<SCAPIX_META_STRING("getInstance"), ref<android::icu::text::CurrencyPluralInfo>>(locale); }
inline ref<android::icu::text::CurrencyPluralInfo> CurrencyPluralInfo::getInstance(ref<android::icu::util::ULocale> locale) { return call_static_method<SCAPIX_META_STRING("getInstance"), ref<android::icu::text::CurrencyPluralInfo>>(locale); }
inline ref<android::icu::text::PluralRules> CurrencyPluralInfo::getPluralRules() { return call_method<SCAPIX_META_STRING("getPluralRules"), ref<android::icu::text::PluralRules>>(); }
inline ref<java::lang::String> CurrencyPluralInfo::getCurrencyPluralPattern(ref<java::lang::String> pluralCount) { return call_method<SCAPIX_META_STRING("getCurrencyPluralPattern"), ref<java::lang::String>>(pluralCount); }
inline ref<android::icu::util::ULocale> CurrencyPluralInfo::getLocale() { return call_method<SCAPIX_META_STRING("getLocale"), ref<android::icu::util::ULocale>>(); }
inline void CurrencyPluralInfo::setPluralRules(ref<java::lang::String> ruleDescription) { return call_method<SCAPIX_META_STRING("setPluralRules"), void>(ruleDescription); }
inline void CurrencyPluralInfo::setCurrencyPluralPattern(ref<java::lang::String> pluralCount, ref<java::lang::String> pattern) { return call_method<SCAPIX_META_STRING("setCurrencyPluralPattern"), void>(pluralCount, pattern); }
inline void CurrencyPluralInfo::setLocale(ref<android::icu::util::ULocale> loc) { return call_method<SCAPIX_META_STRING("setLocale"), void>(loc); }
inline ref<java::lang::Object> CurrencyPluralInfo::clone() { return call_method<SCAPIX_META_STRING("clone"), ref<java::lang::Object>>(); }
inline jboolean CurrencyPluralInfo::equals(ref<java::lang::Object> a) { return call_method<SCAPIX_META_STRING("equals"), jboolean>(a); }
inline jint CurrencyPluralInfo::hashCode() { return call_method<SCAPIX_META_STRING("hashCode"), jint>(); }

} // namespace android::icu::text
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_ICU_TEXT_CURRENCYPLURALINFO_H
