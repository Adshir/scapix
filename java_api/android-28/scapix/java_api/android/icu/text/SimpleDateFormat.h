// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/icu/text/DateFormat.h>

#ifndef SCAPIX_ANDROID_ICU_TEXT_SIMPLEDATEFORMAT_H
#define SCAPIX_ANDROID_ICU_TEXT_SIMPLEDATEFORMAT_H

namespace scapix::java_api {

namespace android::icu::text { class DateFormatSymbols; }
namespace android::icu::text { class DisplayContext; }
namespace android::icu::text { class NumberFormat; }
namespace android::icu::text { class TimeZoneFormat; }
namespace android::icu::util { class Calendar; }
namespace android::icu::util { class ULocale; }
namespace java::lang { class Object; }
namespace java::lang { class String; }
namespace java::lang { class StringBuffer; }
namespace java::text { class AttributedCharacterIterator; }
namespace java::text { class FieldPosition; }
namespace java::text { class ParsePosition; }
namespace java::util { class Date; }
namespace java::util { class Locale; }

namespace android::icu::text {

class SimpleDateFormat : public object_base<SCAPIX_META_STRING("android/icu/text/SimpleDateFormat"),
	android::icu::text::DateFormat>
{
public:

	static ref<SimpleDateFormat> new_object();
	static ref<SimpleDateFormat> new_object(ref<java::lang::String> pattern);
	static ref<SimpleDateFormat> new_object(ref<java::lang::String> pattern, ref<java::util::Locale> loc);
	static ref<SimpleDateFormat> new_object(ref<java::lang::String> pattern, ref<android::icu::util::ULocale> loc);
	static ref<SimpleDateFormat> new_object(ref<java::lang::String> pattern, ref<java::lang::String> override, ref<android::icu::util::ULocale> loc);
	static ref<SimpleDateFormat> new_object(ref<java::lang::String> pattern, ref<android::icu::text::DateFormatSymbols> formatData);
	void set2DigitYearStart(ref<java::util::Date> startDate);
	ref<java::util::Date> get2DigitYearStart();
	void setContext(ref<android::icu::text::DisplayContext> context);
	ref<java::lang::StringBuffer> format(ref<android::icu::util::Calendar> cal, ref<java::lang::StringBuffer> toAppendTo, ref<java::text::FieldPosition> pos);
	void setNumberFormat(ref<android::icu::text::NumberFormat> newNumberFormat);
	void parse(ref<java::lang::String> text, ref<android::icu::util::Calendar> cal, ref<java::text::ParsePosition> parsePos);
	ref<java::lang::String> toPattern();
	ref<java::lang::String> toLocalizedPattern();
	void applyPattern(ref<java::lang::String> pat);
	void applyLocalizedPattern(ref<java::lang::String> pat);
	ref<android::icu::text::DateFormatSymbols> getDateFormatSymbols();
	void setDateFormatSymbols(ref<android::icu::text::DateFormatSymbols> newFormatSymbols);
	ref<android::icu::text::TimeZoneFormat> getTimeZoneFormat();
	void setTimeZoneFormat(ref<android::icu::text::TimeZoneFormat> tzfmt);
	ref<java::lang::Object> clone();
	jint hashCode();
	jboolean equals(ref<java::lang::Object> obj);
	ref<java::text::AttributedCharacterIterator> formatToCharacterIterator(ref<java::lang::Object> obj);
	void setNumberFormat(ref<java::lang::String> fields, ref<android::icu::text::NumberFormat> overrideNF);
	ref<android::icu::text::NumberFormat> getNumberFormat(jchar field);

protected:

	SimpleDateFormat(handle_type h) : base_(h) {}

};

} // namespace android::icu::text
} // namespace scapix::java_api

#include <scapix/java_api/android/icu/text/DateFormatSymbols.h>
#include <scapix/java_api/android/icu/text/DisplayContext.h>
#include <scapix/java_api/android/icu/text/NumberFormat.h>
#include <scapix/java_api/android/icu/text/TimeZoneFormat.h>
#include <scapix/java_api/android/icu/util/Calendar.h>
#include <scapix/java_api/android/icu/util/ULocale.h>
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/lang/StringBuffer.h>
#include <scapix/java_api/java/text/AttributedCharacterIterator.h>
#include <scapix/java_api/java/text/FieldPosition.h>
#include <scapix/java_api/java/text/ParsePosition.h>
#include <scapix/java_api/java/util/Date.h>
#include <scapix/java_api/java/util/Locale.h>

namespace scapix::java_api {
namespace android::icu::text {

inline ref<SimpleDateFormat> SimpleDateFormat::new_object() { return base_::new_object(); }
inline ref<SimpleDateFormat> SimpleDateFormat::new_object(ref<java::lang::String> pattern) { return base_::new_object(pattern); }
inline ref<SimpleDateFormat> SimpleDateFormat::new_object(ref<java::lang::String> pattern, ref<java::util::Locale> loc) { return base_::new_object(pattern, loc); }
inline ref<SimpleDateFormat> SimpleDateFormat::new_object(ref<java::lang::String> pattern, ref<android::icu::util::ULocale> loc) { return base_::new_object(pattern, loc); }
inline ref<SimpleDateFormat> SimpleDateFormat::new_object(ref<java::lang::String> pattern, ref<java::lang::String> override, ref<android::icu::util::ULocale> loc) { return base_::new_object(pattern, override, loc); }
inline ref<SimpleDateFormat> SimpleDateFormat::new_object(ref<java::lang::String> pattern, ref<android::icu::text::DateFormatSymbols> formatData) { return base_::new_object(pattern, formatData); }
inline void SimpleDateFormat::set2DigitYearStart(ref<java::util::Date> startDate) { return call_method<SCAPIX_META_STRING("set2DigitYearStart"), void>(startDate); }
inline ref<java::util::Date> SimpleDateFormat::get2DigitYearStart() { return call_method<SCAPIX_META_STRING("get2DigitYearStart"), ref<java::util::Date>>(); }
inline void SimpleDateFormat::setContext(ref<android::icu::text::DisplayContext> context) { return call_method<SCAPIX_META_STRING("setContext"), void>(context); }
inline ref<java::lang::StringBuffer> SimpleDateFormat::format(ref<android::icu::util::Calendar> cal, ref<java::lang::StringBuffer> toAppendTo, ref<java::text::FieldPosition> pos) { return call_method<SCAPIX_META_STRING("format"), ref<java::lang::StringBuffer>>(cal, toAppendTo, pos); }
inline void SimpleDateFormat::setNumberFormat(ref<android::icu::text::NumberFormat> newNumberFormat) { return call_method<SCAPIX_META_STRING("setNumberFormat"), void>(newNumberFormat); }
inline void SimpleDateFormat::parse(ref<java::lang::String> text, ref<android::icu::util::Calendar> cal, ref<java::text::ParsePosition> parsePos) { return call_method<SCAPIX_META_STRING("parse"), void>(text, cal, parsePos); }
inline ref<java::lang::String> SimpleDateFormat::toPattern() { return call_method<SCAPIX_META_STRING("toPattern"), ref<java::lang::String>>(); }
inline ref<java::lang::String> SimpleDateFormat::toLocalizedPattern() { return call_method<SCAPIX_META_STRING("toLocalizedPattern"), ref<java::lang::String>>(); }
inline void SimpleDateFormat::applyPattern(ref<java::lang::String> pat) { return call_method<SCAPIX_META_STRING("applyPattern"), void>(pat); }
inline void SimpleDateFormat::applyLocalizedPattern(ref<java::lang::String> pat) { return call_method<SCAPIX_META_STRING("applyLocalizedPattern"), void>(pat); }
inline ref<android::icu::text::DateFormatSymbols> SimpleDateFormat::getDateFormatSymbols() { return call_method<SCAPIX_META_STRING("getDateFormatSymbols"), ref<android::icu::text::DateFormatSymbols>>(); }
inline void SimpleDateFormat::setDateFormatSymbols(ref<android::icu::text::DateFormatSymbols> newFormatSymbols) { return call_method<SCAPIX_META_STRING("setDateFormatSymbols"), void>(newFormatSymbols); }
inline ref<android::icu::text::TimeZoneFormat> SimpleDateFormat::getTimeZoneFormat() { return call_method<SCAPIX_META_STRING("getTimeZoneFormat"), ref<android::icu::text::TimeZoneFormat>>(); }
inline void SimpleDateFormat::setTimeZoneFormat(ref<android::icu::text::TimeZoneFormat> tzfmt) { return call_method<SCAPIX_META_STRING("setTimeZoneFormat"), void>(tzfmt); }
inline ref<java::lang::Object> SimpleDateFormat::clone() { return call_method<SCAPIX_META_STRING("clone"), ref<java::lang::Object>>(); }
inline jint SimpleDateFormat::hashCode() { return call_method<SCAPIX_META_STRING("hashCode"), jint>(); }
inline jboolean SimpleDateFormat::equals(ref<java::lang::Object> obj) { return call_method<SCAPIX_META_STRING("equals"), jboolean>(obj); }
inline ref<java::text::AttributedCharacterIterator> SimpleDateFormat::formatToCharacterIterator(ref<java::lang::Object> obj) { return call_method<SCAPIX_META_STRING("formatToCharacterIterator"), ref<java::text::AttributedCharacterIterator>>(obj); }
inline void SimpleDateFormat::setNumberFormat(ref<java::lang::String> fields, ref<android::icu::text::NumberFormat> overrideNF) { return call_method<SCAPIX_META_STRING("setNumberFormat"), void>(fields, overrideNF); }
inline ref<android::icu::text::NumberFormat> SimpleDateFormat::getNumberFormat(jchar field) { return call_method<SCAPIX_META_STRING("getNumberFormat"), ref<android::icu::text::NumberFormat>>(field); }

} // namespace android::icu::text
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_ICU_TEXT_SIMPLEDATEFORMAT_H
