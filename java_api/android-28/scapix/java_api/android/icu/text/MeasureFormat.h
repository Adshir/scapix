// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/icu/text/UFormat.h>

#ifndef SCAPIX_ANDROID_ICU_TEXT_MEASUREFORMAT_H
#define SCAPIX_ANDROID_ICU_TEXT_MEASUREFORMAT_H

namespace scapix::java_api {

namespace android::icu::text { class MeasureFormat_FormatWidth; }
namespace android::icu::text { class NumberFormat; }
namespace android::icu::util { class Measure; }
namespace android::icu::util { class MeasureUnit; }
namespace android::icu::util { class ULocale; }
namespace java::lang { class Object; }
namespace java::lang { class String; }
namespace java::lang { class StringBuffer; }
namespace java::lang { class StringBuilder; }
namespace java::text { class FieldPosition; }
namespace java::text { class ParsePosition; }
namespace java::util { class Locale; }

namespace android::icu::text {

class MeasureFormat : public object_base<SCAPIX_META_STRING("android/icu/text/MeasureFormat"),
	android::icu::text::UFormat>
{
public:

	using FormatWidth = MeasureFormat_FormatWidth;

	static ref<android::icu::text::MeasureFormat> getInstance(ref<android::icu::util::ULocale> locale, ref<android::icu::text::MeasureFormat_FormatWidth> formatWidth);
	static ref<android::icu::text::MeasureFormat> getInstance(ref<java::util::Locale> locale, ref<android::icu::text::MeasureFormat_FormatWidth> formatWidth);
	static ref<android::icu::text::MeasureFormat> getInstance(ref<android::icu::util::ULocale> locale, ref<android::icu::text::MeasureFormat_FormatWidth> formatWidth, ref<android::icu::text::NumberFormat> format);
	static ref<android::icu::text::MeasureFormat> getInstance(ref<java::util::Locale> locale, ref<android::icu::text::MeasureFormat_FormatWidth> formatWidth, ref<android::icu::text::NumberFormat> format);
	ref<java::lang::StringBuffer> format(ref<java::lang::Object> obj, ref<java::lang::StringBuffer> toAppendTo, ref<java::text::FieldPosition> pos);
	ref<android::icu::util::Measure> parseObject(ref<java::lang::String> source, ref<java::text::ParsePosition> pos);
	ref<java::lang::String> formatMeasures(ref<link::java::array<android::icu::util::Measure>> measures);
	ref<java::lang::StringBuilder> formatMeasurePerUnit(ref<android::icu::util::Measure> measure, ref<android::icu::util::MeasureUnit> perUnit, ref<java::lang::StringBuilder> appendTo, ref<java::text::FieldPosition> pos);
	ref<java::lang::StringBuilder> formatMeasures(ref<java::lang::StringBuilder> appendTo, ref<java::text::FieldPosition> fieldPosition, ref<link::java::array<android::icu::util::Measure>> measures);
	ref<java::lang::String> getUnitDisplayName(ref<android::icu::util::MeasureUnit> unit);
	jboolean equals(ref<java::lang::Object> other);
	jint hashCode();
	ref<android::icu::text::MeasureFormat_FormatWidth> getWidth();
	ref<android::icu::util::ULocale> getLocale();
	ref<android::icu::text::NumberFormat> getNumberFormat();
	static ref<android::icu::text::MeasureFormat> getCurrencyFormat(ref<android::icu::util::ULocale> locale);
	static ref<android::icu::text::MeasureFormat> getCurrencyFormat(ref<java::util::Locale> locale);
	static ref<android::icu::text::MeasureFormat> getCurrencyFormat();

protected:

	MeasureFormat(handle_type h) : base_(h) {}

};

} // namespace android::icu::text
} // namespace scapix::java_api

#include <scapix/java_api/android/icu/text/MeasureFormat_FormatWidth.h>
#include <scapix/java_api/android/icu/text/NumberFormat.h>
#include <scapix/java_api/android/icu/util/Measure.h>
#include <scapix/java_api/android/icu/util/MeasureUnit.h>
#include <scapix/java_api/android/icu/util/ULocale.h>
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/lang/StringBuffer.h>
#include <scapix/java_api/java/lang/StringBuilder.h>
#include <scapix/java_api/java/text/FieldPosition.h>
#include <scapix/java_api/java/text/ParsePosition.h>
#include <scapix/java_api/java/util/Locale.h>

namespace scapix::java_api {
namespace android::icu::text {

inline ref<android::icu::text::MeasureFormat> MeasureFormat::getInstance(ref<android::icu::util::ULocale> locale, ref<android::icu::text::MeasureFormat_FormatWidth> formatWidth) { return call_static_method<SCAPIX_META_STRING("getInstance"), ref<android::icu::text::MeasureFormat>>(locale, formatWidth); }
inline ref<android::icu::text::MeasureFormat> MeasureFormat::getInstance(ref<java::util::Locale> locale, ref<android::icu::text::MeasureFormat_FormatWidth> formatWidth) { return call_static_method<SCAPIX_META_STRING("getInstance"), ref<android::icu::text::MeasureFormat>>(locale, formatWidth); }
inline ref<android::icu::text::MeasureFormat> MeasureFormat::getInstance(ref<android::icu::util::ULocale> locale, ref<android::icu::text::MeasureFormat_FormatWidth> formatWidth, ref<android::icu::text::NumberFormat> format) { return call_static_method<SCAPIX_META_STRING("getInstance"), ref<android::icu::text::MeasureFormat>>(locale, formatWidth, format); }
inline ref<android::icu::text::MeasureFormat> MeasureFormat::getInstance(ref<java::util::Locale> locale, ref<android::icu::text::MeasureFormat_FormatWidth> formatWidth, ref<android::icu::text::NumberFormat> format) { return call_static_method<SCAPIX_META_STRING("getInstance"), ref<android::icu::text::MeasureFormat>>(locale, formatWidth, format); }
inline ref<java::lang::StringBuffer> MeasureFormat::format(ref<java::lang::Object> obj, ref<java::lang::StringBuffer> toAppendTo, ref<java::text::FieldPosition> pos) { return call_method<SCAPIX_META_STRING("format"), ref<java::lang::StringBuffer>>(obj, toAppendTo, pos); }
inline ref<android::icu::util::Measure> MeasureFormat::parseObject(ref<java::lang::String> source, ref<java::text::ParsePosition> pos) { return call_method<SCAPIX_META_STRING("parseObject"), ref<android::icu::util::Measure>>(source, pos); }
inline ref<java::lang::String> MeasureFormat::formatMeasures(ref<link::java::array<android::icu::util::Measure>> measures) { return call_method<SCAPIX_META_STRING("formatMeasures"), ref<java::lang::String>>(measures); }
inline ref<java::lang::StringBuilder> MeasureFormat::formatMeasurePerUnit(ref<android::icu::util::Measure> measure, ref<android::icu::util::MeasureUnit> perUnit, ref<java::lang::StringBuilder> appendTo, ref<java::text::FieldPosition> pos) { return call_method<SCAPIX_META_STRING("formatMeasurePerUnit"), ref<java::lang::StringBuilder>>(measure, perUnit, appendTo, pos); }
inline ref<java::lang::StringBuilder> MeasureFormat::formatMeasures(ref<java::lang::StringBuilder> appendTo, ref<java::text::FieldPosition> fieldPosition, ref<link::java::array<android::icu::util::Measure>> measures) { return call_method<SCAPIX_META_STRING("formatMeasures"), ref<java::lang::StringBuilder>>(appendTo, fieldPosition, measures); }
inline ref<java::lang::String> MeasureFormat::getUnitDisplayName(ref<android::icu::util::MeasureUnit> unit) { return call_method<SCAPIX_META_STRING("getUnitDisplayName"), ref<java::lang::String>>(unit); }
inline jboolean MeasureFormat::equals(ref<java::lang::Object> other) { return call_method<SCAPIX_META_STRING("equals"), jboolean>(other); }
inline jint MeasureFormat::hashCode() { return call_method<SCAPIX_META_STRING("hashCode"), jint>(); }
inline ref<android::icu::text::MeasureFormat_FormatWidth> MeasureFormat::getWidth() { return call_method<SCAPIX_META_STRING("getWidth"), ref<android::icu::text::MeasureFormat_FormatWidth>>(); }
inline ref<android::icu::util::ULocale> MeasureFormat::getLocale() { return call_method<SCAPIX_META_STRING("getLocale"), ref<android::icu::util::ULocale>>(); }
inline ref<android::icu::text::NumberFormat> MeasureFormat::getNumberFormat() { return call_method<SCAPIX_META_STRING("getNumberFormat"), ref<android::icu::text::NumberFormat>>(); }
inline ref<android::icu::text::MeasureFormat> MeasureFormat::getCurrencyFormat(ref<android::icu::util::ULocale> locale) { return call_static_method<SCAPIX_META_STRING("getCurrencyFormat"), ref<android::icu::text::MeasureFormat>>(locale); }
inline ref<android::icu::text::MeasureFormat> MeasureFormat::getCurrencyFormat(ref<java::util::Locale> locale) { return call_static_method<SCAPIX_META_STRING("getCurrencyFormat"), ref<android::icu::text::MeasureFormat>>(locale); }
inline ref<android::icu::text::MeasureFormat> MeasureFormat::getCurrencyFormat() { return call_static_method<SCAPIX_META_STRING("getCurrencyFormat"), ref<android::icu::text::MeasureFormat>>(); }

} // namespace android::icu::text
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_ICU_TEXT_MEASUREFORMAT_H
