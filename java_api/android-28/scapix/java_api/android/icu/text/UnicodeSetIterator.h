// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_ICU_TEXT_UNICODESETITERATOR_H
#define SCAPIX_ANDROID_ICU_TEXT_UNICODESETITERATOR_H

namespace scapix::java_api {

namespace android::icu::text { class UnicodeSet; }
namespace java::lang { class String; }

namespace android::icu::text {

class UnicodeSetIterator : public object_base<SCAPIX_META_STRING("android/icu/text/UnicodeSetIterator"),
	java::lang::Object>
{
public:

	static jint IS_STRING_();
	static void IS_STRING_(jint);
	jint codepoint();
	void codepoint(jint);
	jint codepointEnd();
	void codepointEnd(jint);
	ref<java::lang::String> string();
	void string(ref<java::lang::String>);

	static ref<UnicodeSetIterator> new_object(ref<android::icu::text::UnicodeSet> set);
	static ref<UnicodeSetIterator> new_object();
	jboolean next();
	jboolean nextRange();
	void reset(ref<android::icu::text::UnicodeSet> uset);
	void reset();
	ref<java::lang::String> getString();

protected:

	UnicodeSetIterator(handle_type h) : base_(h) {}

};

} // namespace android::icu::text
} // namespace scapix::java_api

#include <scapix/java_api/android/icu/text/UnicodeSet.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::icu::text {

inline jint UnicodeSetIterator::IS_STRING_() { return get_static_field<SCAPIX_META_STRING("IS_STRING"), jint>(); }
inline void UnicodeSetIterator::IS_STRING_(jint v) { set_static_field<SCAPIX_META_STRING("IS_STRING"), jint>(v); }
inline jint UnicodeSetIterator::codepoint() { return get_field<SCAPIX_META_STRING("codepoint"), jint>(); }
inline void UnicodeSetIterator::codepoint(jint v) { set_field<SCAPIX_META_STRING("codepoint"), jint>(v); }
inline jint UnicodeSetIterator::codepointEnd() { return get_field<SCAPIX_META_STRING("codepointEnd"), jint>(); }
inline void UnicodeSetIterator::codepointEnd(jint v) { set_field<SCAPIX_META_STRING("codepointEnd"), jint>(v); }
inline ref<java::lang::String> UnicodeSetIterator::string() { return get_field<SCAPIX_META_STRING("string"), ref<java::lang::String>>(); }
inline void UnicodeSetIterator::string(ref<java::lang::String> v) { set_field<SCAPIX_META_STRING("string"), ref<java::lang::String>>(v); }
inline ref<UnicodeSetIterator> UnicodeSetIterator::new_object(ref<android::icu::text::UnicodeSet> set) { return base_::new_object(set); }
inline ref<UnicodeSetIterator> UnicodeSetIterator::new_object() { return base_::new_object(); }
inline jboolean UnicodeSetIterator::next() { return call_method<SCAPIX_META_STRING("next"), jboolean>(); }
inline jboolean UnicodeSetIterator::nextRange() { return call_method<SCAPIX_META_STRING("nextRange"), jboolean>(); }
inline void UnicodeSetIterator::reset(ref<android::icu::text::UnicodeSet> uset) { return call_method<SCAPIX_META_STRING("reset"), void>(uset); }
inline void UnicodeSetIterator::reset() { return call_method<SCAPIX_META_STRING("reset"), void>(); }
inline ref<java::lang::String> UnicodeSetIterator::getString() { return call_method<SCAPIX_META_STRING("getString"), ref<java::lang::String>>(); }

} // namespace android::icu::text
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_ICU_TEXT_UNICODESETITERATOR_H
