// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/Cloneable.h>
#include <scapix/java_api/java/io/Serializable.h>

#ifndef SCAPIX_ANDROID_ICU_TEXT_DECIMALFORMATSYMBOLS_H
#define SCAPIX_ANDROID_ICU_TEXT_DECIMALFORMATSYMBOLS_H

namespace scapix::java_api {

namespace android::icu::util { class Currency; }
namespace android::icu::util { class ULocale; }
namespace java::lang { class String; }
namespace java::util { class Locale; }

namespace android::icu::text {

class DecimalFormatSymbols : public object_base<SCAPIX_META_STRING("android/icu/text/DecimalFormatSymbols"),
	java::lang::Object,
	java::lang::Cloneable,
	java::io::Serializable>
{
public:

	static jint CURRENCY_SPC_CURRENCY_MATCH_();
	static jint CURRENCY_SPC_INSERT_();
	static jint CURRENCY_SPC_SURROUNDING_MATCH_();

	static ref<DecimalFormatSymbols> new_object();
	static ref<DecimalFormatSymbols> new_object(ref<java::util::Locale> locale);
	static ref<DecimalFormatSymbols> new_object(ref<android::icu::util::ULocale> locale);
	static ref<android::icu::text::DecimalFormatSymbols> getInstance();
	static ref<android::icu::text::DecimalFormatSymbols> getInstance(ref<java::util::Locale> locale);
	static ref<android::icu::text::DecimalFormatSymbols> getInstance(ref<android::icu::util::ULocale> locale);
	static ref<link::java::array<java::util::Locale>> getAvailableLocales();
	jchar getZeroDigit();
	ref<link::java::array<jchar>> getDigits();
	void setZeroDigit(jchar zeroDigit);
	ref<link::java::array<java::lang::String>> getDigitStrings();
	void setDigitStrings(ref<link::java::array<java::lang::String>> digitStrings);
	jchar getSignificantDigit();
	void setSignificantDigit(jchar sigDigit);
	jchar getGroupingSeparator();
	void setGroupingSeparator(jchar groupingSeparator);
	ref<java::lang::String> getGroupingSeparatorString();
	void setGroupingSeparatorString(ref<java::lang::String> groupingSeparatorString);
	jchar getDecimalSeparator();
	void setDecimalSeparator(jchar decimalSeparator);
	ref<java::lang::String> getDecimalSeparatorString();
	void setDecimalSeparatorString(ref<java::lang::String> decimalSeparatorString);
	jchar getPerMill();
	void setPerMill(jchar perMill);
	ref<java::lang::String> getPerMillString();
	void setPerMillString(ref<java::lang::String> perMillString);
	jchar getPercent();
	void setPercent(jchar percent);
	ref<java::lang::String> getPercentString();
	void setPercentString(ref<java::lang::String> percentString);
	jchar getDigit();
	void setDigit(jchar digit);
	jchar getPatternSeparator();
	void setPatternSeparator(jchar patternSeparator);
	ref<java::lang::String> getInfinity();
	void setInfinity(ref<java::lang::String> infinity);
	ref<java::lang::String> getNaN();
	void setNaN(ref<java::lang::String> NaN);
	jchar getMinusSign();
	void setMinusSign(jchar minusSign);
	ref<java::lang::String> getMinusSignString();
	void setMinusSignString(ref<java::lang::String> minusSignString);
	jchar getPlusSign();
	void setPlusSign(jchar plus);
	ref<java::lang::String> getPlusSignString();
	void setPlusSignString(ref<java::lang::String> plusSignString);
	ref<java::lang::String> getCurrencySymbol();
	void setCurrencySymbol(ref<java::lang::String> currency);
	ref<java::lang::String> getInternationalCurrencySymbol();
	void setInternationalCurrencySymbol(ref<java::lang::String> currency);
	ref<android::icu::util::Currency> getCurrency();
	void setCurrency(ref<android::icu::util::Currency> currency);
	jchar getMonetaryDecimalSeparator();
	void setMonetaryDecimalSeparator(jchar sep);
	ref<java::lang::String> getMonetaryDecimalSeparatorString();
	void setMonetaryDecimalSeparatorString(ref<java::lang::String> sep);
	jchar getMonetaryGroupingSeparator();
	void setMonetaryGroupingSeparator(jchar sep);
	ref<java::lang::String> getMonetaryGroupingSeparatorString();
	void setMonetaryGroupingSeparatorString(ref<java::lang::String> sep);
	ref<java::lang::String> getExponentMultiplicationSign();
	void setExponentMultiplicationSign(ref<java::lang::String> exponentMultiplicationSign);
	ref<java::lang::String> getExponentSeparator();
	void setExponentSeparator(ref<java::lang::String> exp);
	jchar getPadEscape();
	void setPadEscape(jchar c);
	ref<java::lang::String> getPatternForCurrencySpacing(jint itemType, jboolean beforeCurrency);
	void setPatternForCurrencySpacing(jint itemType, jboolean beforeCurrency, ref<java::lang::String> pattern);
	ref<java::util::Locale> getLocale();
	ref<android::icu::util::ULocale> getULocale();
	ref<java::lang::Object> clone();
	jboolean equals(ref<java::lang::Object> obj);
	jint hashCode();

protected:

	DecimalFormatSymbols(handle_type h) : base_(h) {}

};

} // namespace android::icu::text
} // namespace scapix::java_api

#include <scapix/java_api/android/icu/util/Currency.h>
#include <scapix/java_api/android/icu/util/ULocale.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Locale.h>

namespace scapix::java_api {
namespace android::icu::text {

inline jint DecimalFormatSymbols::CURRENCY_SPC_CURRENCY_MATCH_() { return get_static_field<SCAPIX_META_STRING("CURRENCY_SPC_CURRENCY_MATCH"), jint>(); }
inline jint DecimalFormatSymbols::CURRENCY_SPC_INSERT_() { return get_static_field<SCAPIX_META_STRING("CURRENCY_SPC_INSERT"), jint>(); }
inline jint DecimalFormatSymbols::CURRENCY_SPC_SURROUNDING_MATCH_() { return get_static_field<SCAPIX_META_STRING("CURRENCY_SPC_SURROUNDING_MATCH"), jint>(); }
inline ref<DecimalFormatSymbols> DecimalFormatSymbols::new_object() { return base_::new_object(); }
inline ref<DecimalFormatSymbols> DecimalFormatSymbols::new_object(ref<java::util::Locale> locale) { return base_::new_object(locale); }
inline ref<DecimalFormatSymbols> DecimalFormatSymbols::new_object(ref<android::icu::util::ULocale> locale) { return base_::new_object(locale); }
inline ref<android::icu::text::DecimalFormatSymbols> DecimalFormatSymbols::getInstance() { return call_static_method<SCAPIX_META_STRING("getInstance"), ref<android::icu::text::DecimalFormatSymbols>>(); }
inline ref<android::icu::text::DecimalFormatSymbols> DecimalFormatSymbols::getInstance(ref<java::util::Locale> locale) { return call_static_method<SCAPIX_META_STRING("getInstance"), ref<android::icu::text::DecimalFormatSymbols>>(locale); }
inline ref<android::icu::text::DecimalFormatSymbols> DecimalFormatSymbols::getInstance(ref<android::icu::util::ULocale> locale) { return call_static_method<SCAPIX_META_STRING("getInstance"), ref<android::icu::text::DecimalFormatSymbols>>(locale); }
inline ref<link::java::array<java::util::Locale>> DecimalFormatSymbols::getAvailableLocales() { return call_static_method<SCAPIX_META_STRING("getAvailableLocales"), ref<link::java::array<java::util::Locale>>>(); }
inline jchar DecimalFormatSymbols::getZeroDigit() { return call_method<SCAPIX_META_STRING("getZeroDigit"), jchar>(); }
inline ref<link::java::array<jchar>> DecimalFormatSymbols::getDigits() { return call_method<SCAPIX_META_STRING("getDigits"), ref<link::java::array<jchar>>>(); }
inline void DecimalFormatSymbols::setZeroDigit(jchar zeroDigit) { return call_method<SCAPIX_META_STRING("setZeroDigit"), void>(zeroDigit); }
inline ref<link::java::array<java::lang::String>> DecimalFormatSymbols::getDigitStrings() { return call_method<SCAPIX_META_STRING("getDigitStrings"), ref<link::java::array<java::lang::String>>>(); }
inline void DecimalFormatSymbols::setDigitStrings(ref<link::java::array<java::lang::String>> digitStrings) { return call_method<SCAPIX_META_STRING("setDigitStrings"), void>(digitStrings); }
inline jchar DecimalFormatSymbols::getSignificantDigit() { return call_method<SCAPIX_META_STRING("getSignificantDigit"), jchar>(); }
inline void DecimalFormatSymbols::setSignificantDigit(jchar sigDigit) { return call_method<SCAPIX_META_STRING("setSignificantDigit"), void>(sigDigit); }
inline jchar DecimalFormatSymbols::getGroupingSeparator() { return call_method<SCAPIX_META_STRING("getGroupingSeparator"), jchar>(); }
inline void DecimalFormatSymbols::setGroupingSeparator(jchar groupingSeparator) { return call_method<SCAPIX_META_STRING("setGroupingSeparator"), void>(groupingSeparator); }
inline ref<java::lang::String> DecimalFormatSymbols::getGroupingSeparatorString() { return call_method<SCAPIX_META_STRING("getGroupingSeparatorString"), ref<java::lang::String>>(); }
inline void DecimalFormatSymbols::setGroupingSeparatorString(ref<java::lang::String> groupingSeparatorString) { return call_method<SCAPIX_META_STRING("setGroupingSeparatorString"), void>(groupingSeparatorString); }
inline jchar DecimalFormatSymbols::getDecimalSeparator() { return call_method<SCAPIX_META_STRING("getDecimalSeparator"), jchar>(); }
inline void DecimalFormatSymbols::setDecimalSeparator(jchar decimalSeparator) { return call_method<SCAPIX_META_STRING("setDecimalSeparator"), void>(decimalSeparator); }
inline ref<java::lang::String> DecimalFormatSymbols::getDecimalSeparatorString() { return call_method<SCAPIX_META_STRING("getDecimalSeparatorString"), ref<java::lang::String>>(); }
inline void DecimalFormatSymbols::setDecimalSeparatorString(ref<java::lang::String> decimalSeparatorString) { return call_method<SCAPIX_META_STRING("setDecimalSeparatorString"), void>(decimalSeparatorString); }
inline jchar DecimalFormatSymbols::getPerMill() { return call_method<SCAPIX_META_STRING("getPerMill"), jchar>(); }
inline void DecimalFormatSymbols::setPerMill(jchar perMill) { return call_method<SCAPIX_META_STRING("setPerMill"), void>(perMill); }
inline ref<java::lang::String> DecimalFormatSymbols::getPerMillString() { return call_method<SCAPIX_META_STRING("getPerMillString"), ref<java::lang::String>>(); }
inline void DecimalFormatSymbols::setPerMillString(ref<java::lang::String> perMillString) { return call_method<SCAPIX_META_STRING("setPerMillString"), void>(perMillString); }
inline jchar DecimalFormatSymbols::getPercent() { return call_method<SCAPIX_META_STRING("getPercent"), jchar>(); }
inline void DecimalFormatSymbols::setPercent(jchar percent) { return call_method<SCAPIX_META_STRING("setPercent"), void>(percent); }
inline ref<java::lang::String> DecimalFormatSymbols::getPercentString() { return call_method<SCAPIX_META_STRING("getPercentString"), ref<java::lang::String>>(); }
inline void DecimalFormatSymbols::setPercentString(ref<java::lang::String> percentString) { return call_method<SCAPIX_META_STRING("setPercentString"), void>(percentString); }
inline jchar DecimalFormatSymbols::getDigit() { return call_method<SCAPIX_META_STRING("getDigit"), jchar>(); }
inline void DecimalFormatSymbols::setDigit(jchar digit) { return call_method<SCAPIX_META_STRING("setDigit"), void>(digit); }
inline jchar DecimalFormatSymbols::getPatternSeparator() { return call_method<SCAPIX_META_STRING("getPatternSeparator"), jchar>(); }
inline void DecimalFormatSymbols::setPatternSeparator(jchar patternSeparator) { return call_method<SCAPIX_META_STRING("setPatternSeparator"), void>(patternSeparator); }
inline ref<java::lang::String> DecimalFormatSymbols::getInfinity() { return call_method<SCAPIX_META_STRING("getInfinity"), ref<java::lang::String>>(); }
inline void DecimalFormatSymbols::setInfinity(ref<java::lang::String> infinity) { return call_method<SCAPIX_META_STRING("setInfinity"), void>(infinity); }
inline ref<java::lang::String> DecimalFormatSymbols::getNaN() { return call_method<SCAPIX_META_STRING("getNaN"), ref<java::lang::String>>(); }
inline void DecimalFormatSymbols::setNaN(ref<java::lang::String> NaN) { return call_method<SCAPIX_META_STRING("setNaN"), void>(NaN); }
inline jchar DecimalFormatSymbols::getMinusSign() { return call_method<SCAPIX_META_STRING("getMinusSign"), jchar>(); }
inline void DecimalFormatSymbols::setMinusSign(jchar minusSign) { return call_method<SCAPIX_META_STRING("setMinusSign"), void>(minusSign); }
inline ref<java::lang::String> DecimalFormatSymbols::getMinusSignString() { return call_method<SCAPIX_META_STRING("getMinusSignString"), ref<java::lang::String>>(); }
inline void DecimalFormatSymbols::setMinusSignString(ref<java::lang::String> minusSignString) { return call_method<SCAPIX_META_STRING("setMinusSignString"), void>(minusSignString); }
inline jchar DecimalFormatSymbols::getPlusSign() { return call_method<SCAPIX_META_STRING("getPlusSign"), jchar>(); }
inline void DecimalFormatSymbols::setPlusSign(jchar plus) { return call_method<SCAPIX_META_STRING("setPlusSign"), void>(plus); }
inline ref<java::lang::String> DecimalFormatSymbols::getPlusSignString() { return call_method<SCAPIX_META_STRING("getPlusSignString"), ref<java::lang::String>>(); }
inline void DecimalFormatSymbols::setPlusSignString(ref<java::lang::String> plusSignString) { return call_method<SCAPIX_META_STRING("setPlusSignString"), void>(plusSignString); }
inline ref<java::lang::String> DecimalFormatSymbols::getCurrencySymbol() { return call_method<SCAPIX_META_STRING("getCurrencySymbol"), ref<java::lang::String>>(); }
inline void DecimalFormatSymbols::setCurrencySymbol(ref<java::lang::String> currency) { return call_method<SCAPIX_META_STRING("setCurrencySymbol"), void>(currency); }
inline ref<java::lang::String> DecimalFormatSymbols::getInternationalCurrencySymbol() { return call_method<SCAPIX_META_STRING("getInternationalCurrencySymbol"), ref<java::lang::String>>(); }
inline void DecimalFormatSymbols::setInternationalCurrencySymbol(ref<java::lang::String> currency) { return call_method<SCAPIX_META_STRING("setInternationalCurrencySymbol"), void>(currency); }
inline ref<android::icu::util::Currency> DecimalFormatSymbols::getCurrency() { return call_method<SCAPIX_META_STRING("getCurrency"), ref<android::icu::util::Currency>>(); }
inline void DecimalFormatSymbols::setCurrency(ref<android::icu::util::Currency> currency) { return call_method<SCAPIX_META_STRING("setCurrency"), void>(currency); }
inline jchar DecimalFormatSymbols::getMonetaryDecimalSeparator() { return call_method<SCAPIX_META_STRING("getMonetaryDecimalSeparator"), jchar>(); }
inline void DecimalFormatSymbols::setMonetaryDecimalSeparator(jchar sep) { return call_method<SCAPIX_META_STRING("setMonetaryDecimalSeparator"), void>(sep); }
inline ref<java::lang::String> DecimalFormatSymbols::getMonetaryDecimalSeparatorString() { return call_method<SCAPIX_META_STRING("getMonetaryDecimalSeparatorString"), ref<java::lang::String>>(); }
inline void DecimalFormatSymbols::setMonetaryDecimalSeparatorString(ref<java::lang::String> sep) { return call_method<SCAPIX_META_STRING("setMonetaryDecimalSeparatorString"), void>(sep); }
inline jchar DecimalFormatSymbols::getMonetaryGroupingSeparator() { return call_method<SCAPIX_META_STRING("getMonetaryGroupingSeparator"), jchar>(); }
inline void DecimalFormatSymbols::setMonetaryGroupingSeparator(jchar sep) { return call_method<SCAPIX_META_STRING("setMonetaryGroupingSeparator"), void>(sep); }
inline ref<java::lang::String> DecimalFormatSymbols::getMonetaryGroupingSeparatorString() { return call_method<SCAPIX_META_STRING("getMonetaryGroupingSeparatorString"), ref<java::lang::String>>(); }
inline void DecimalFormatSymbols::setMonetaryGroupingSeparatorString(ref<java::lang::String> sep) { return call_method<SCAPIX_META_STRING("setMonetaryGroupingSeparatorString"), void>(sep); }
inline ref<java::lang::String> DecimalFormatSymbols::getExponentMultiplicationSign() { return call_method<SCAPIX_META_STRING("getExponentMultiplicationSign"), ref<java::lang::String>>(); }
inline void DecimalFormatSymbols::setExponentMultiplicationSign(ref<java::lang::String> exponentMultiplicationSign) { return call_method<SCAPIX_META_STRING("setExponentMultiplicationSign"), void>(exponentMultiplicationSign); }
inline ref<java::lang::String> DecimalFormatSymbols::getExponentSeparator() { return call_method<SCAPIX_META_STRING("getExponentSeparator"), ref<java::lang::String>>(); }
inline void DecimalFormatSymbols::setExponentSeparator(ref<java::lang::String> exp) { return call_method<SCAPIX_META_STRING("setExponentSeparator"), void>(exp); }
inline jchar DecimalFormatSymbols::getPadEscape() { return call_method<SCAPIX_META_STRING("getPadEscape"), jchar>(); }
inline void DecimalFormatSymbols::setPadEscape(jchar c) { return call_method<SCAPIX_META_STRING("setPadEscape"), void>(c); }
inline ref<java::lang::String> DecimalFormatSymbols::getPatternForCurrencySpacing(jint itemType, jboolean beforeCurrency) { return call_method<SCAPIX_META_STRING("getPatternForCurrencySpacing"), ref<java::lang::String>>(itemType, beforeCurrency); }
inline void DecimalFormatSymbols::setPatternForCurrencySpacing(jint itemType, jboolean beforeCurrency, ref<java::lang::String> pattern) { return call_method<SCAPIX_META_STRING("setPatternForCurrencySpacing"), void>(itemType, beforeCurrency, pattern); }
inline ref<java::util::Locale> DecimalFormatSymbols::getLocale() { return call_method<SCAPIX_META_STRING("getLocale"), ref<java::util::Locale>>(); }
inline ref<android::icu::util::ULocale> DecimalFormatSymbols::getULocale() { return call_method<SCAPIX_META_STRING("getULocale"), ref<android::icu::util::ULocale>>(); }
inline ref<java::lang::Object> DecimalFormatSymbols::clone() { return call_method<SCAPIX_META_STRING("clone"), ref<java::lang::Object>>(); }
inline jboolean DecimalFormatSymbols::equals(ref<java::lang::Object> obj) { return call_method<SCAPIX_META_STRING("equals"), jboolean>(obj); }
inline jint DecimalFormatSymbols::hashCode() { return call_method<SCAPIX_META_STRING("hashCode"), jint>(); }

} // namespace android::icu::text
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_ICU_TEXT_DECIMALFORMATSYMBOLS_H
