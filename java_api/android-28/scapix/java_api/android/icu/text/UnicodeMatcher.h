// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_ICU_TEXT_UNICODEMATCHER_H
#define SCAPIX_ANDROID_ICU_TEXT_UNICODEMATCHER_H

namespace scapix::java_api {

namespace android::icu::text { class Replaceable; }
namespace android::icu::text { class UnicodeSet; }
namespace java::lang { class String; }

namespace android::icu::text {

class UnicodeMatcher : public object_base<SCAPIX_META_STRING("android/icu/text/UnicodeMatcher"),
	java::lang::Object>
{
public:

	static jchar ETHER_();
	static jint U_MATCH_();
	static jint U_MISMATCH_();
	static jint U_PARTIAL_MATCH_();

	jint matches(ref<android::icu::text::Replaceable> p1, ref<link::java::array<jint>> p2, jint p3, jboolean p4);
	ref<java::lang::String> toPattern(jboolean p1);
	jboolean matchesIndexValue(jint p1);
	void addMatchSetTo(ref<android::icu::text::UnicodeSet> p1);

protected:

	UnicodeMatcher(handle_type h) : base_(h) {}

};

} // namespace android::icu::text
} // namespace scapix::java_api

#include <scapix/java_api/android/icu/text/Replaceable.h>
#include <scapix/java_api/android/icu/text/UnicodeSet.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::icu::text {

inline jchar UnicodeMatcher::ETHER_() { return get_static_field<SCAPIX_META_STRING("ETHER"), jchar>(); }
inline jint UnicodeMatcher::U_MATCH_() { return get_static_field<SCAPIX_META_STRING("U_MATCH"), jint>(); }
inline jint UnicodeMatcher::U_MISMATCH_() { return get_static_field<SCAPIX_META_STRING("U_MISMATCH"), jint>(); }
inline jint UnicodeMatcher::U_PARTIAL_MATCH_() { return get_static_field<SCAPIX_META_STRING("U_PARTIAL_MATCH"), jint>(); }
inline jint UnicodeMatcher::matches(ref<android::icu::text::Replaceable> p1, ref<link::java::array<jint>> p2, jint p3, jboolean p4) { return call_method<SCAPIX_META_STRING("matches"), jint>(p1, p2, p3, p4); }
inline ref<java::lang::String> UnicodeMatcher::toPattern(jboolean p1) { return call_method<SCAPIX_META_STRING("toPattern"), ref<java::lang::String>>(p1); }
inline jboolean UnicodeMatcher::matchesIndexValue(jint p1) { return call_method<SCAPIX_META_STRING("matchesIndexValue"), jboolean>(p1); }
inline void UnicodeMatcher::addMatchSetTo(ref<android::icu::text::UnicodeSet> p1) { return call_method<SCAPIX_META_STRING("addMatchSetTo"), void>(p1); }

} // namespace android::icu::text
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_ICU_TEXT_UNICODEMATCHER_H
