// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_ICU_TEXT_UNICODESETSPANNER_H
#define SCAPIX_ANDROID_ICU_TEXT_UNICODESETSPANNER_H

namespace scapix::java_api {

namespace android::icu::text { class UnicodeSet; }
namespace android::icu::text { class UnicodeSet_SpanCondition; }
namespace android::icu::text { class UnicodeSetSpanner_CountMethod; }
namespace android::icu::text { class UnicodeSetSpanner_TrimOption; }
namespace java::lang { class CharSequence; }
namespace java::lang { class String; }

namespace android::icu::text {

class UnicodeSetSpanner : public object_base<SCAPIX_META_STRING("android/icu/text/UnicodeSetSpanner"),
	java::lang::Object>
{
public:

	using TrimOption = UnicodeSetSpanner_TrimOption;
	using CountMethod = UnicodeSetSpanner_CountMethod;

	static ref<UnicodeSetSpanner> new_object(ref<android::icu::text::UnicodeSet> source);
	ref<android::icu::text::UnicodeSet> getUnicodeSet();
	jboolean equals(ref<java::lang::Object> other);
	jint hashCode();
	jint countIn(ref<java::lang::CharSequence> sequence);
	jint countIn(ref<java::lang::CharSequence> sequence, ref<android::icu::text::UnicodeSetSpanner_CountMethod> countMethod);
	jint countIn(ref<java::lang::CharSequence> sequence, ref<android::icu::text::UnicodeSetSpanner_CountMethod> countMethod, ref<android::icu::text::UnicodeSet_SpanCondition> spanCondition);
	ref<java::lang::String> deleteFrom(ref<java::lang::CharSequence> sequence);
	ref<java::lang::String> deleteFrom(ref<java::lang::CharSequence> sequence, ref<android::icu::text::UnicodeSet_SpanCondition> spanCondition);
	ref<java::lang::String> replaceFrom(ref<java::lang::CharSequence> sequence, ref<java::lang::CharSequence> replacement);
	ref<java::lang::String> replaceFrom(ref<java::lang::CharSequence> sequence, ref<java::lang::CharSequence> replacement, ref<android::icu::text::UnicodeSetSpanner_CountMethod> countMethod);
	ref<java::lang::String> replaceFrom(ref<java::lang::CharSequence> sequence, ref<java::lang::CharSequence> replacement, ref<android::icu::text::UnicodeSetSpanner_CountMethod> countMethod, ref<android::icu::text::UnicodeSet_SpanCondition> spanCondition);
	ref<java::lang::CharSequence> trim(ref<java::lang::CharSequence> sequence);
	ref<java::lang::CharSequence> trim(ref<java::lang::CharSequence> sequence, ref<android::icu::text::UnicodeSetSpanner_TrimOption> trimOption);
	ref<java::lang::CharSequence> trim(ref<java::lang::CharSequence> sequence, ref<android::icu::text::UnicodeSetSpanner_TrimOption> trimOption, ref<android::icu::text::UnicodeSet_SpanCondition> spanCondition);

protected:

	UnicodeSetSpanner(handle_type h) : base_(h) {}

};

} // namespace android::icu::text
} // namespace scapix::java_api

#include <scapix/java_api/android/icu/text/UnicodeSet.h>
#include <scapix/java_api/android/icu/text/UnicodeSet_SpanCondition.h>
#include <scapix/java_api/android/icu/text/UnicodeSetSpanner_CountMethod.h>
#include <scapix/java_api/android/icu/text/UnicodeSetSpanner_TrimOption.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::icu::text {

inline ref<UnicodeSetSpanner> UnicodeSetSpanner::new_object(ref<android::icu::text::UnicodeSet> source) { return base_::new_object(source); }
inline ref<android::icu::text::UnicodeSet> UnicodeSetSpanner::getUnicodeSet() { return call_method<SCAPIX_META_STRING("getUnicodeSet"), ref<android::icu::text::UnicodeSet>>(); }
inline jboolean UnicodeSetSpanner::equals(ref<java::lang::Object> other) { return call_method<SCAPIX_META_STRING("equals"), jboolean>(other); }
inline jint UnicodeSetSpanner::hashCode() { return call_method<SCAPIX_META_STRING("hashCode"), jint>(); }
inline jint UnicodeSetSpanner::countIn(ref<java::lang::CharSequence> sequence) { return call_method<SCAPIX_META_STRING("countIn"), jint>(sequence); }
inline jint UnicodeSetSpanner::countIn(ref<java::lang::CharSequence> sequence, ref<android::icu::text::UnicodeSetSpanner_CountMethod> countMethod) { return call_method<SCAPIX_META_STRING("countIn"), jint>(sequence, countMethod); }
inline jint UnicodeSetSpanner::countIn(ref<java::lang::CharSequence> sequence, ref<android::icu::text::UnicodeSetSpanner_CountMethod> countMethod, ref<android::icu::text::UnicodeSet_SpanCondition> spanCondition) { return call_method<SCAPIX_META_STRING("countIn"), jint>(sequence, countMethod, spanCondition); }
inline ref<java::lang::String> UnicodeSetSpanner::deleteFrom(ref<java::lang::CharSequence> sequence) { return call_method<SCAPIX_META_STRING("deleteFrom"), ref<java::lang::String>>(sequence); }
inline ref<java::lang::String> UnicodeSetSpanner::deleteFrom(ref<java::lang::CharSequence> sequence, ref<android::icu::text::UnicodeSet_SpanCondition> spanCondition) { return call_method<SCAPIX_META_STRING("deleteFrom"), ref<java::lang::String>>(sequence, spanCondition); }
inline ref<java::lang::String> UnicodeSetSpanner::replaceFrom(ref<java::lang::CharSequence> sequence, ref<java::lang::CharSequence> replacement) { return call_method<SCAPIX_META_STRING("replaceFrom"), ref<java::lang::String>>(sequence, replacement); }
inline ref<java::lang::String> UnicodeSetSpanner::replaceFrom(ref<java::lang::CharSequence> sequence, ref<java::lang::CharSequence> replacement, ref<android::icu::text::UnicodeSetSpanner_CountMethod> countMethod) { return call_method<SCAPIX_META_STRING("replaceFrom"), ref<java::lang::String>>(sequence, replacement, countMethod); }
inline ref<java::lang::String> UnicodeSetSpanner::replaceFrom(ref<java::lang::CharSequence> sequence, ref<java::lang::CharSequence> replacement, ref<android::icu::text::UnicodeSetSpanner_CountMethod> countMethod, ref<android::icu::text::UnicodeSet_SpanCondition> spanCondition) { return call_method<SCAPIX_META_STRING("replaceFrom"), ref<java::lang::String>>(sequence, replacement, countMethod, spanCondition); }
inline ref<java::lang::CharSequence> UnicodeSetSpanner::trim(ref<java::lang::CharSequence> sequence) { return call_method<SCAPIX_META_STRING("trim"), ref<java::lang::CharSequence>>(sequence); }
inline ref<java::lang::CharSequence> UnicodeSetSpanner::trim(ref<java::lang::CharSequence> sequence, ref<android::icu::text::UnicodeSetSpanner_TrimOption> trimOption) { return call_method<SCAPIX_META_STRING("trim"), ref<java::lang::CharSequence>>(sequence, trimOption); }
inline ref<java::lang::CharSequence> UnicodeSetSpanner::trim(ref<java::lang::CharSequence> sequence, ref<android::icu::text::UnicodeSetSpanner_TrimOption> trimOption, ref<android::icu::text::UnicodeSet_SpanCondition> spanCondition) { return call_method<SCAPIX_META_STRING("trim"), ref<java::lang::CharSequence>>(sequence, trimOption, spanCondition); }

} // namespace android::icu::text
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_ICU_TEXT_UNICODESETSPANNER_H
