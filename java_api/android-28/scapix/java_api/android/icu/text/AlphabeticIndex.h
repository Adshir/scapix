// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/Iterable.h>

#ifndef SCAPIX_ANDROID_ICU_TEXT_ALPHABETICINDEX_H
#define SCAPIX_ANDROID_ICU_TEXT_ALPHABETICINDEX_H

namespace scapix::java_api {

namespace android::icu::text { class AlphabeticIndex_ImmutableIndex; }
namespace android::icu::text { class RuleBasedCollator; }
namespace android::icu::text { class UnicodeSet; }
namespace android::icu::util { class ULocale; }
namespace java::lang { class CharSequence; }
namespace java::lang { class String; }
namespace java::util { class Iterator; }
namespace java::util { class List; }
namespace java::util { class Locale; }
namespace android::icu::text { class AlphabeticIndex_Record; }
namespace android::icu::text { class AlphabeticIndex_Bucket; }

namespace android::icu::text {

class AlphabeticIndex : public object_base<SCAPIX_META_STRING("android/icu/text/AlphabeticIndex"),
	java::lang::Object,
	java::lang::Iterable>
{
public:

	using Record = AlphabeticIndex_Record;
	using ImmutableIndex = AlphabeticIndex_ImmutableIndex;
	using Bucket = AlphabeticIndex_Bucket;

	static ref<AlphabeticIndex> new_object(ref<android::icu::util::ULocale> locale);
	static ref<AlphabeticIndex> new_object(ref<java::util::Locale> locale);
	static ref<AlphabeticIndex> new_object(ref<android::icu::text::RuleBasedCollator> collator);
	ref<android::icu::text::AlphabeticIndex> addLabels(ref<android::icu::text::UnicodeSet> additions);
	ref<android::icu::text::AlphabeticIndex> addLabels(ref<link::java::array<android::icu::util::ULocale>> additions);
	ref<android::icu::text::AlphabeticIndex> addLabels(ref<link::java::array<java::util::Locale>> additions);
	ref<android::icu::text::AlphabeticIndex> setOverflowLabel(ref<java::lang::String> overflowLabel);
	ref<java::lang::String> getUnderflowLabel();
	ref<android::icu::text::AlphabeticIndex> setUnderflowLabel(ref<java::lang::String> underflowLabel);
	ref<java::lang::String> getOverflowLabel();
	ref<android::icu::text::AlphabeticIndex> setInflowLabel(ref<java::lang::String> inflowLabel);
	ref<java::lang::String> getInflowLabel();
	jint getMaxLabelCount();
	ref<android::icu::text::AlphabeticIndex> setMaxLabelCount(jint maxLabelCount);
	ref<android::icu::text::AlphabeticIndex_ImmutableIndex> buildImmutableIndex();
	ref<java::util::List> getBucketLabels();
	ref<android::icu::text::RuleBasedCollator> getCollator();
	ref<android::icu::text::AlphabeticIndex> addRecord(ref<java::lang::CharSequence> name, ref<java::lang::Object> data);
	jint getBucketIndex(ref<java::lang::CharSequence> name);
	ref<android::icu::text::AlphabeticIndex> clearRecords();
	jint getBucketCount();
	jint getRecordCount();
	ref<java::util::Iterator> iterator();

protected:

	AlphabeticIndex(handle_type h) : base_(h) {}

};

} // namespace android::icu::text
} // namespace scapix::java_api

#include <scapix/java_api/android/icu/text/AlphabeticIndex_ImmutableIndex.h>
#include <scapix/java_api/android/icu/text/RuleBasedCollator.h>
#include <scapix/java_api/android/icu/text/UnicodeSet.h>
#include <scapix/java_api/android/icu/util/ULocale.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Iterator.h>
#include <scapix/java_api/java/util/List.h>
#include <scapix/java_api/java/util/Locale.h>

namespace scapix::java_api {
namespace android::icu::text {

inline ref<AlphabeticIndex> AlphabeticIndex::new_object(ref<android::icu::util::ULocale> locale) { return base_::new_object(locale); }
inline ref<AlphabeticIndex> AlphabeticIndex::new_object(ref<java::util::Locale> locale) { return base_::new_object(locale); }
inline ref<AlphabeticIndex> AlphabeticIndex::new_object(ref<android::icu::text::RuleBasedCollator> collator) { return base_::new_object(collator); }
inline ref<android::icu::text::AlphabeticIndex> AlphabeticIndex::addLabels(ref<android::icu::text::UnicodeSet> additions) { return call_method<SCAPIX_META_STRING("addLabels"), ref<android::icu::text::AlphabeticIndex>>(additions); }
inline ref<android::icu::text::AlphabeticIndex> AlphabeticIndex::addLabels(ref<link::java::array<android::icu::util::ULocale>> additions) { return call_method<SCAPIX_META_STRING("addLabels"), ref<android::icu::text::AlphabeticIndex>>(additions); }
inline ref<android::icu::text::AlphabeticIndex> AlphabeticIndex::addLabels(ref<link::java::array<java::util::Locale>> additions) { return call_method<SCAPIX_META_STRING("addLabels"), ref<android::icu::text::AlphabeticIndex>>(additions); }
inline ref<android::icu::text::AlphabeticIndex> AlphabeticIndex::setOverflowLabel(ref<java::lang::String> overflowLabel) { return call_method<SCAPIX_META_STRING("setOverflowLabel"), ref<android::icu::text::AlphabeticIndex>>(overflowLabel); }
inline ref<java::lang::String> AlphabeticIndex::getUnderflowLabel() { return call_method<SCAPIX_META_STRING("getUnderflowLabel"), ref<java::lang::String>>(); }
inline ref<android::icu::text::AlphabeticIndex> AlphabeticIndex::setUnderflowLabel(ref<java::lang::String> underflowLabel) { return call_method<SCAPIX_META_STRING("setUnderflowLabel"), ref<android::icu::text::AlphabeticIndex>>(underflowLabel); }
inline ref<java::lang::String> AlphabeticIndex::getOverflowLabel() { return call_method<SCAPIX_META_STRING("getOverflowLabel"), ref<java::lang::String>>(); }
inline ref<android::icu::text::AlphabeticIndex> AlphabeticIndex::setInflowLabel(ref<java::lang::String> inflowLabel) { return call_method<SCAPIX_META_STRING("setInflowLabel"), ref<android::icu::text::AlphabeticIndex>>(inflowLabel); }
inline ref<java::lang::String> AlphabeticIndex::getInflowLabel() { return call_method<SCAPIX_META_STRING("getInflowLabel"), ref<java::lang::String>>(); }
inline jint AlphabeticIndex::getMaxLabelCount() { return call_method<SCAPIX_META_STRING("getMaxLabelCount"), jint>(); }
inline ref<android::icu::text::AlphabeticIndex> AlphabeticIndex::setMaxLabelCount(jint maxLabelCount) { return call_method<SCAPIX_META_STRING("setMaxLabelCount"), ref<android::icu::text::AlphabeticIndex>>(maxLabelCount); }
inline ref<android::icu::text::AlphabeticIndex_ImmutableIndex> AlphabeticIndex::buildImmutableIndex() { return call_method<SCAPIX_META_STRING("buildImmutableIndex"), ref<android::icu::text::AlphabeticIndex_ImmutableIndex>>(); }
inline ref<java::util::List> AlphabeticIndex::getBucketLabels() { return call_method<SCAPIX_META_STRING("getBucketLabels"), ref<java::util::List>>(); }
inline ref<android::icu::text::RuleBasedCollator> AlphabeticIndex::getCollator() { return call_method<SCAPIX_META_STRING("getCollator"), ref<android::icu::text::RuleBasedCollator>>(); }
inline ref<android::icu::text::AlphabeticIndex> AlphabeticIndex::addRecord(ref<java::lang::CharSequence> name, ref<java::lang::Object> data) { return call_method<SCAPIX_META_STRING("addRecord"), ref<android::icu::text::AlphabeticIndex>>(name, data); }
inline jint AlphabeticIndex::getBucketIndex(ref<java::lang::CharSequence> name) { return call_method<SCAPIX_META_STRING("getBucketIndex"), jint>(name); }
inline ref<android::icu::text::AlphabeticIndex> AlphabeticIndex::clearRecords() { return call_method<SCAPIX_META_STRING("clearRecords"), ref<android::icu::text::AlphabeticIndex>>(); }
inline jint AlphabeticIndex::getBucketCount() { return call_method<SCAPIX_META_STRING("getBucketCount"), jint>(); }
inline jint AlphabeticIndex::getRecordCount() { return call_method<SCAPIX_META_STRING("getRecordCount"), jint>(); }
inline ref<java::util::Iterator> AlphabeticIndex::iterator() { return call_method<SCAPIX_META_STRING("iterator"), ref<java::util::Iterator>>(); }

} // namespace android::icu::text
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_ICU_TEXT_ALPHABETICINDEX_H
