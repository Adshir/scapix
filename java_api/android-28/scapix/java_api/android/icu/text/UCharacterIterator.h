// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/Cloneable.h>

#ifndef SCAPIX_ANDROID_ICU_TEXT_UCHARACTERITERATOR_H
#define SCAPIX_ANDROID_ICU_TEXT_UCHARACTERITERATOR_H

namespace scapix::java_api {

namespace android::icu::text { class Replaceable; }
namespace java::lang { class String; }
namespace java::lang { class StringBuffer; }
namespace java::text { class CharacterIterator; }

namespace android::icu::text {

class UCharacterIterator : public object_base<SCAPIX_META_STRING("android/icu/text/UCharacterIterator"),
	java::lang::Object,
	java::lang::Cloneable>
{
public:

	static jint DONE_();

	static ref<android::icu::text::UCharacterIterator> getInstance(ref<android::icu::text::Replaceable> source);
	static ref<android::icu::text::UCharacterIterator> getInstance(ref<java::lang::String> source);
	static ref<android::icu::text::UCharacterIterator> getInstance(ref<link::java::array<jchar>> source);
	static ref<android::icu::text::UCharacterIterator> getInstance(ref<link::java::array<jchar>> source, jint start, jint limit);
	static ref<android::icu::text::UCharacterIterator> getInstance(ref<java::lang::StringBuffer> source);
	static ref<android::icu::text::UCharacterIterator> getInstance(ref<java::text::CharacterIterator> source);
	ref<java::text::CharacterIterator> getCharacterIterator();
	jint current();
	jint currentCodePoint();
	jint getLength();
	jint getIndex();
	jint next();
	jint nextCodePoint();
	jint previous();
	jint previousCodePoint();
	void setIndex(jint p1);
	void setToLimit();
	void setToStart();
	jint getText(ref<link::java::array<jchar>> p1, jint p2);
	jint getText(ref<link::java::array<jchar>> fillIn);
	ref<java::lang::String> getText();
	jint moveIndex(jint delta);
	jint moveCodePointIndex(jint delta);
	ref<java::lang::Object> clone();

protected:

	UCharacterIterator(handle_type h) : base_(h) {}

};

} // namespace android::icu::text
} // namespace scapix::java_api

#include <scapix/java_api/android/icu/text/Replaceable.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/lang/StringBuffer.h>
#include <scapix/java_api/java/text/CharacterIterator.h>

namespace scapix::java_api {
namespace android::icu::text {

inline jint UCharacterIterator::DONE_() { return get_static_field<SCAPIX_META_STRING("DONE"), jint>(); }
inline ref<android::icu::text::UCharacterIterator> UCharacterIterator::getInstance(ref<android::icu::text::Replaceable> source) { return call_static_method<SCAPIX_META_STRING("getInstance"), ref<android::icu::text::UCharacterIterator>>(source); }
inline ref<android::icu::text::UCharacterIterator> UCharacterIterator::getInstance(ref<java::lang::String> source) { return call_static_method<SCAPIX_META_STRING("getInstance"), ref<android::icu::text::UCharacterIterator>>(source); }
inline ref<android::icu::text::UCharacterIterator> UCharacterIterator::getInstance(ref<link::java::array<jchar>> source) { return call_static_method<SCAPIX_META_STRING("getInstance"), ref<android::icu::text::UCharacterIterator>>(source); }
inline ref<android::icu::text::UCharacterIterator> UCharacterIterator::getInstance(ref<link::java::array<jchar>> source, jint start, jint limit) { return call_static_method<SCAPIX_META_STRING("getInstance"), ref<android::icu::text::UCharacterIterator>>(source, start, limit); }
inline ref<android::icu::text::UCharacterIterator> UCharacterIterator::getInstance(ref<java::lang::StringBuffer> source) { return call_static_method<SCAPIX_META_STRING("getInstance"), ref<android::icu::text::UCharacterIterator>>(source); }
inline ref<android::icu::text::UCharacterIterator> UCharacterIterator::getInstance(ref<java::text::CharacterIterator> source) { return call_static_method<SCAPIX_META_STRING("getInstance"), ref<android::icu::text::UCharacterIterator>>(source); }
inline ref<java::text::CharacterIterator> UCharacterIterator::getCharacterIterator() { return call_method<SCAPIX_META_STRING("getCharacterIterator"), ref<java::text::CharacterIterator>>(); }
inline jint UCharacterIterator::current() { return call_method<SCAPIX_META_STRING("current"), jint>(); }
inline jint UCharacterIterator::currentCodePoint() { return call_method<SCAPIX_META_STRING("currentCodePoint"), jint>(); }
inline jint UCharacterIterator::getLength() { return call_method<SCAPIX_META_STRING("getLength"), jint>(); }
inline jint UCharacterIterator::getIndex() { return call_method<SCAPIX_META_STRING("getIndex"), jint>(); }
inline jint UCharacterIterator::next() { return call_method<SCAPIX_META_STRING("next"), jint>(); }
inline jint UCharacterIterator::nextCodePoint() { return call_method<SCAPIX_META_STRING("nextCodePoint"), jint>(); }
inline jint UCharacterIterator::previous() { return call_method<SCAPIX_META_STRING("previous"), jint>(); }
inline jint UCharacterIterator::previousCodePoint() { return call_method<SCAPIX_META_STRING("previousCodePoint"), jint>(); }
inline void UCharacterIterator::setIndex(jint p1) { return call_method<SCAPIX_META_STRING("setIndex"), void>(p1); }
inline void UCharacterIterator::setToLimit() { return call_method<SCAPIX_META_STRING("setToLimit"), void>(); }
inline void UCharacterIterator::setToStart() { return call_method<SCAPIX_META_STRING("setToStart"), void>(); }
inline jint UCharacterIterator::getText(ref<link::java::array<jchar>> p1, jint p2) { return call_method<SCAPIX_META_STRING("getText"), jint>(p1, p2); }
inline jint UCharacterIterator::getText(ref<link::java::array<jchar>> fillIn) { return call_method<SCAPIX_META_STRING("getText"), jint>(fillIn); }
inline ref<java::lang::String> UCharacterIterator::getText() { return call_method<SCAPIX_META_STRING("getText"), ref<java::lang::String>>(); }
inline jint UCharacterIterator::moveIndex(jint delta) { return call_method<SCAPIX_META_STRING("moveIndex"), jint>(delta); }
inline jint UCharacterIterator::moveCodePointIndex(jint delta) { return call_method<SCAPIX_META_STRING("moveCodePointIndex"), jint>(delta); }
inline ref<java::lang::Object> UCharacterIterator::clone() { return call_method<SCAPIX_META_STRING("clone"), ref<java::lang::Object>>(); }

} // namespace android::icu::text
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_ICU_TEXT_UCHARACTERITERATOR_H
