// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_ICU_TEXT_COLLATIONELEMENTITERATOR_H
#define SCAPIX_ANDROID_ICU_TEXT_COLLATIONELEMENTITERATOR_H

namespace scapix::java_api {

namespace android::icu::text { class UCharacterIterator; }
namespace java::lang { class String; }
namespace java::text { class CharacterIterator; }

namespace android::icu::text {

class CollationElementIterator : public object_base<SCAPIX_META_STRING("android/icu/text/CollationElementIterator"),
	java::lang::Object>
{
public:

	static jint IGNORABLE_();
	static jint NULLORDER_();

	static jint primaryOrder(jint ce);
	static jint secondaryOrder(jint ce);
	static jint tertiaryOrder(jint ce);
	jint getOffset();
	jint next();
	jint previous();
	void reset();
	void setOffset(jint newOffset);
	void setText(ref<java::lang::String> source);
	void setText(ref<android::icu::text::UCharacterIterator> source);
	void setText(ref<java::text::CharacterIterator> source);
	jint getMaxExpansion(jint ce);
	jboolean equals(ref<java::lang::Object> that);
	jint hashCode();

protected:

	CollationElementIterator(handle_type h) : base_(h) {}

};

} // namespace android::icu::text
} // namespace scapix::java_api

#include <scapix/java_api/android/icu/text/UCharacterIterator.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/text/CharacterIterator.h>

namespace scapix::java_api {
namespace android::icu::text {

inline jint CollationElementIterator::IGNORABLE_() { return get_static_field<SCAPIX_META_STRING("IGNORABLE"), jint>(); }
inline jint CollationElementIterator::NULLORDER_() { return get_static_field<SCAPIX_META_STRING("NULLORDER"), jint>(); }
inline jint CollationElementIterator::primaryOrder(jint ce) { return call_static_method<SCAPIX_META_STRING("primaryOrder"), jint>(ce); }
inline jint CollationElementIterator::secondaryOrder(jint ce) { return call_static_method<SCAPIX_META_STRING("secondaryOrder"), jint>(ce); }
inline jint CollationElementIterator::tertiaryOrder(jint ce) { return call_static_method<SCAPIX_META_STRING("tertiaryOrder"), jint>(ce); }
inline jint CollationElementIterator::getOffset() { return call_method<SCAPIX_META_STRING("getOffset"), jint>(); }
inline jint CollationElementIterator::next() { return call_method<SCAPIX_META_STRING("next"), jint>(); }
inline jint CollationElementIterator::previous() { return call_method<SCAPIX_META_STRING("previous"), jint>(); }
inline void CollationElementIterator::reset() { return call_method<SCAPIX_META_STRING("reset"), void>(); }
inline void CollationElementIterator::setOffset(jint newOffset) { return call_method<SCAPIX_META_STRING("setOffset"), void>(newOffset); }
inline void CollationElementIterator::setText(ref<java::lang::String> source) { return call_method<SCAPIX_META_STRING("setText"), void>(source); }
inline void CollationElementIterator::setText(ref<android::icu::text::UCharacterIterator> source) { return call_method<SCAPIX_META_STRING("setText"), void>(source); }
inline void CollationElementIterator::setText(ref<java::text::CharacterIterator> source) { return call_method<SCAPIX_META_STRING("setText"), void>(source); }
inline jint CollationElementIterator::getMaxExpansion(jint ce) { return call_method<SCAPIX_META_STRING("getMaxExpansion"), jint>(ce); }
inline jboolean CollationElementIterator::equals(ref<java::lang::Object> that) { return call_method<SCAPIX_META_STRING("equals"), jboolean>(that); }
inline jint CollationElementIterator::hashCode() { return call_method<SCAPIX_META_STRING("hashCode"), jint>(); }

} // namespace android::icu::text
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_ICU_TEXT_COLLATIONELEMENTITERATOR_H
