// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/Cloneable.h>

#ifndef SCAPIX_ANDROID_ICU_TEXT_BREAKITERATOR_H
#define SCAPIX_ANDROID_ICU_TEXT_BREAKITERATOR_H

namespace scapix::java_api {

namespace android::icu::util { class ULocale; }
namespace java::lang { class String; }
namespace java::text { class CharacterIterator; }
namespace java::util { class Locale; }

namespace android::icu::text {

class BreakIterator : public object_base<SCAPIX_META_STRING("android/icu/text/BreakIterator"),
	java::lang::Object,
	java::lang::Cloneable>
{
public:

	static jint DONE_();
	static jint KIND_CHARACTER_();
	static jint KIND_LINE_();
	static jint KIND_SENTENCE_();
	static jint KIND_TITLE_();
	static jint KIND_WORD_();
	static jint WORD_IDEO_();
	static jint WORD_IDEO_LIMIT_();
	static jint WORD_KANA_();
	static jint WORD_KANA_LIMIT_();
	static jint WORD_LETTER_();
	static jint WORD_LETTER_LIMIT_();
	static jint WORD_NONE_();
	static jint WORD_NONE_LIMIT_();
	static jint WORD_NUMBER_();
	static jint WORD_NUMBER_LIMIT_();

	ref<java::lang::Object> clone();
	jint first();
	jint last();
	jint next(jint p1);
	jint next();
	jint previous();
	jint following(jint p1);
	jint preceding(jint offset);
	jboolean isBoundary(jint offset);
	jint current();
	jint getRuleStatus();
	jint getRuleStatusVec(ref<link::java::array<jint>> fillInArray);
	ref<java::text::CharacterIterator> getText();
	void setText(ref<java::lang::String> newText);
	void setText(ref<java::text::CharacterIterator> p1);
	static ref<android::icu::text::BreakIterator> getWordInstance();
	static ref<android::icu::text::BreakIterator> getWordInstance(ref<java::util::Locale> where);
	static ref<android::icu::text::BreakIterator> getWordInstance(ref<android::icu::util::ULocale> where);
	static ref<android::icu::text::BreakIterator> getLineInstance();
	static ref<android::icu::text::BreakIterator> getLineInstance(ref<java::util::Locale> where);
	static ref<android::icu::text::BreakIterator> getLineInstance(ref<android::icu::util::ULocale> where);
	static ref<android::icu::text::BreakIterator> getCharacterInstance();
	static ref<android::icu::text::BreakIterator> getCharacterInstance(ref<java::util::Locale> where);
	static ref<android::icu::text::BreakIterator> getCharacterInstance(ref<android::icu::util::ULocale> where);
	static ref<android::icu::text::BreakIterator> getSentenceInstance();
	static ref<android::icu::text::BreakIterator> getSentenceInstance(ref<java::util::Locale> where);
	static ref<android::icu::text::BreakIterator> getSentenceInstance(ref<android::icu::util::ULocale> where);
	static ref<android::icu::text::BreakIterator> getTitleInstance();
	static ref<android::icu::text::BreakIterator> getTitleInstance(ref<java::util::Locale> where);
	static ref<android::icu::text::BreakIterator> getTitleInstance(ref<android::icu::util::ULocale> where);
	static ref<link::java::array<java::util::Locale>> getAvailableLocales();

protected:

	BreakIterator(handle_type h) : base_(h) {}

};

} // namespace android::icu::text
} // namespace scapix::java_api

#include <scapix/java_api/android/icu/util/ULocale.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/text/CharacterIterator.h>
#include <scapix/java_api/java/util/Locale.h>

namespace scapix::java_api {
namespace android::icu::text {

inline jint BreakIterator::DONE_() { return get_static_field<SCAPIX_META_STRING("DONE"), jint>(); }
inline jint BreakIterator::KIND_CHARACTER_() { return get_static_field<SCAPIX_META_STRING("KIND_CHARACTER"), jint>(); }
inline jint BreakIterator::KIND_LINE_() { return get_static_field<SCAPIX_META_STRING("KIND_LINE"), jint>(); }
inline jint BreakIterator::KIND_SENTENCE_() { return get_static_field<SCAPIX_META_STRING("KIND_SENTENCE"), jint>(); }
inline jint BreakIterator::KIND_TITLE_() { return get_static_field<SCAPIX_META_STRING("KIND_TITLE"), jint>(); }
inline jint BreakIterator::KIND_WORD_() { return get_static_field<SCAPIX_META_STRING("KIND_WORD"), jint>(); }
inline jint BreakIterator::WORD_IDEO_() { return get_static_field<SCAPIX_META_STRING("WORD_IDEO"), jint>(); }
inline jint BreakIterator::WORD_IDEO_LIMIT_() { return get_static_field<SCAPIX_META_STRING("WORD_IDEO_LIMIT"), jint>(); }
inline jint BreakIterator::WORD_KANA_() { return get_static_field<SCAPIX_META_STRING("WORD_KANA"), jint>(); }
inline jint BreakIterator::WORD_KANA_LIMIT_() { return get_static_field<SCAPIX_META_STRING("WORD_KANA_LIMIT"), jint>(); }
inline jint BreakIterator::WORD_LETTER_() { return get_static_field<SCAPIX_META_STRING("WORD_LETTER"), jint>(); }
inline jint BreakIterator::WORD_LETTER_LIMIT_() { return get_static_field<SCAPIX_META_STRING("WORD_LETTER_LIMIT"), jint>(); }
inline jint BreakIterator::WORD_NONE_() { return get_static_field<SCAPIX_META_STRING("WORD_NONE"), jint>(); }
inline jint BreakIterator::WORD_NONE_LIMIT_() { return get_static_field<SCAPIX_META_STRING("WORD_NONE_LIMIT"), jint>(); }
inline jint BreakIterator::WORD_NUMBER_() { return get_static_field<SCAPIX_META_STRING("WORD_NUMBER"), jint>(); }
inline jint BreakIterator::WORD_NUMBER_LIMIT_() { return get_static_field<SCAPIX_META_STRING("WORD_NUMBER_LIMIT"), jint>(); }
inline ref<java::lang::Object> BreakIterator::clone() { return call_method<SCAPIX_META_STRING("clone"), ref<java::lang::Object>>(); }
inline jint BreakIterator::first() { return call_method<SCAPIX_META_STRING("first"), jint>(); }
inline jint BreakIterator::last() { return call_method<SCAPIX_META_STRING("last"), jint>(); }
inline jint BreakIterator::next(jint p1) { return call_method<SCAPIX_META_STRING("next"), jint>(p1); }
inline jint BreakIterator::next() { return call_method<SCAPIX_META_STRING("next"), jint>(); }
inline jint BreakIterator::previous() { return call_method<SCAPIX_META_STRING("previous"), jint>(); }
inline jint BreakIterator::following(jint p1) { return call_method<SCAPIX_META_STRING("following"), jint>(p1); }
inline jint BreakIterator::preceding(jint offset) { return call_method<SCAPIX_META_STRING("preceding"), jint>(offset); }
inline jboolean BreakIterator::isBoundary(jint offset) { return call_method<SCAPIX_META_STRING("isBoundary"), jboolean>(offset); }
inline jint BreakIterator::current() { return call_method<SCAPIX_META_STRING("current"), jint>(); }
inline jint BreakIterator::getRuleStatus() { return call_method<SCAPIX_META_STRING("getRuleStatus"), jint>(); }
inline jint BreakIterator::getRuleStatusVec(ref<link::java::array<jint>> fillInArray) { return call_method<SCAPIX_META_STRING("getRuleStatusVec"), jint>(fillInArray); }
inline ref<java::text::CharacterIterator> BreakIterator::getText() { return call_method<SCAPIX_META_STRING("getText"), ref<java::text::CharacterIterator>>(); }
inline void BreakIterator::setText(ref<java::lang::String> newText) { return call_method<SCAPIX_META_STRING("setText"), void>(newText); }
inline void BreakIterator::setText(ref<java::text::CharacterIterator> p1) { return call_method<SCAPIX_META_STRING("setText"), void>(p1); }
inline ref<android::icu::text::BreakIterator> BreakIterator::getWordInstance() { return call_static_method<SCAPIX_META_STRING("getWordInstance"), ref<android::icu::text::BreakIterator>>(); }
inline ref<android::icu::text::BreakIterator> BreakIterator::getWordInstance(ref<java::util::Locale> where) { return call_static_method<SCAPIX_META_STRING("getWordInstance"), ref<android::icu::text::BreakIterator>>(where); }
inline ref<android::icu::text::BreakIterator> BreakIterator::getWordInstance(ref<android::icu::util::ULocale> where) { return call_static_method<SCAPIX_META_STRING("getWordInstance"), ref<android::icu::text::BreakIterator>>(where); }
inline ref<android::icu::text::BreakIterator> BreakIterator::getLineInstance() { return call_static_method<SCAPIX_META_STRING("getLineInstance"), ref<android::icu::text::BreakIterator>>(); }
inline ref<android::icu::text::BreakIterator> BreakIterator::getLineInstance(ref<java::util::Locale> where) { return call_static_method<SCAPIX_META_STRING("getLineInstance"), ref<android::icu::text::BreakIterator>>(where); }
inline ref<android::icu::text::BreakIterator> BreakIterator::getLineInstance(ref<android::icu::util::ULocale> where) { return call_static_method<SCAPIX_META_STRING("getLineInstance"), ref<android::icu::text::BreakIterator>>(where); }
inline ref<android::icu::text::BreakIterator> BreakIterator::getCharacterInstance() { return call_static_method<SCAPIX_META_STRING("getCharacterInstance"), ref<android::icu::text::BreakIterator>>(); }
inline ref<android::icu::text::BreakIterator> BreakIterator::getCharacterInstance(ref<java::util::Locale> where) { return call_static_method<SCAPIX_META_STRING("getCharacterInstance"), ref<android::icu::text::BreakIterator>>(where); }
inline ref<android::icu::text::BreakIterator> BreakIterator::getCharacterInstance(ref<android::icu::util::ULocale> where) { return call_static_method<SCAPIX_META_STRING("getCharacterInstance"), ref<android::icu::text::BreakIterator>>(where); }
inline ref<android::icu::text::BreakIterator> BreakIterator::getSentenceInstance() { return call_static_method<SCAPIX_META_STRING("getSentenceInstance"), ref<android::icu::text::BreakIterator>>(); }
inline ref<android::icu::text::BreakIterator> BreakIterator::getSentenceInstance(ref<java::util::Locale> where) { return call_static_method<SCAPIX_META_STRING("getSentenceInstance"), ref<android::icu::text::BreakIterator>>(where); }
inline ref<android::icu::text::BreakIterator> BreakIterator::getSentenceInstance(ref<android::icu::util::ULocale> where) { return call_static_method<SCAPIX_META_STRING("getSentenceInstance"), ref<android::icu::text::BreakIterator>>(where); }
inline ref<android::icu::text::BreakIterator> BreakIterator::getTitleInstance() { return call_static_method<SCAPIX_META_STRING("getTitleInstance"), ref<android::icu::text::BreakIterator>>(); }
inline ref<android::icu::text::BreakIterator> BreakIterator::getTitleInstance(ref<java::util::Locale> where) { return call_static_method<SCAPIX_META_STRING("getTitleInstance"), ref<android::icu::text::BreakIterator>>(where); }
inline ref<android::icu::text::BreakIterator> BreakIterator::getTitleInstance(ref<android::icu::util::ULocale> where) { return call_static_method<SCAPIX_META_STRING("getTitleInstance"), ref<android::icu::text::BreakIterator>>(where); }
inline ref<link::java::array<java::util::Locale>> BreakIterator::getAvailableLocales() { return call_static_method<SCAPIX_META_STRING("getAvailableLocales"), ref<link::java::array<java::util::Locale>>>(); }

} // namespace android::icu::text
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_ICU_TEXT_BREAKITERATOR_H
