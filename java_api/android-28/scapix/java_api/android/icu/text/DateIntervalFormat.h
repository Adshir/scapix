// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/icu/text/UFormat.h>

#ifndef SCAPIX_ANDROID_ICU_TEXT_DATEINTERVALFORMAT_H
#define SCAPIX_ANDROID_ICU_TEXT_DATEINTERVALFORMAT_H

namespace scapix::java_api {

namespace android::icu::text { class DateFormat; }
namespace android::icu::text { class DateIntervalInfo; }
namespace android::icu::util { class Calendar; }
namespace android::icu::util { class DateInterval; }
namespace android::icu::util { class TimeZone; }
namespace android::icu::util { class ULocale; }
namespace java::lang { class Object; }
namespace java::lang { class String; }
namespace java::lang { class StringBuffer; }
namespace java::text { class FieldPosition; }
namespace java::text { class ParsePosition; }
namespace java::util { class Locale; }

namespace android::icu::text {

class DateIntervalFormat : public object_base<SCAPIX_META_STRING("android/icu/text/DateIntervalFormat"),
	android::icu::text::UFormat>
{
public:

	static ref<android::icu::text::DateIntervalFormat> getInstance(ref<java::lang::String> skeleton);
	static ref<android::icu::text::DateIntervalFormat> getInstance(ref<java::lang::String> skeleton, ref<java::util::Locale> locale);
	static ref<android::icu::text::DateIntervalFormat> getInstance(ref<java::lang::String> skeleton, ref<android::icu::util::ULocale> locale);
	static ref<android::icu::text::DateIntervalFormat> getInstance(ref<java::lang::String> skeleton, ref<android::icu::text::DateIntervalInfo> dtitvinf);
	static ref<android::icu::text::DateIntervalFormat> getInstance(ref<java::lang::String> skeleton, ref<java::util::Locale> locale, ref<android::icu::text::DateIntervalInfo> dtitvinf);
	static ref<android::icu::text::DateIntervalFormat> getInstance(ref<java::lang::String> skeleton, ref<android::icu::util::ULocale> locale, ref<android::icu::text::DateIntervalInfo> dtitvinf);
	ref<java::lang::Object> clone();
	ref<java::lang::StringBuffer> format(ref<java::lang::Object> obj, ref<java::lang::StringBuffer> appendTo, ref<java::text::FieldPosition> fieldPosition);
	ref<java::lang::StringBuffer> format(ref<android::icu::util::DateInterval> dtInterval, ref<java::lang::StringBuffer> appendTo, ref<java::text::FieldPosition> fieldPosition);
	ref<java::lang::StringBuffer> format(ref<android::icu::util::Calendar> fromCalendar, ref<android::icu::util::Calendar> toCalendar, ref<java::lang::StringBuffer> appendTo, ref<java::text::FieldPosition> pos);
	ref<java::lang::Object> parseObject(ref<java::lang::String> source, ref<java::text::ParsePosition> parse_pos);
	ref<android::icu::text::DateIntervalInfo> getDateIntervalInfo();
	void setDateIntervalInfo(ref<android::icu::text::DateIntervalInfo> newItvPattern);
	ref<android::icu::util::TimeZone> getTimeZone();
	void setTimeZone(ref<android::icu::util::TimeZone> zone);
	ref<android::icu::text::DateFormat> getDateFormat();

protected:

	DateIntervalFormat(handle_type h) : base_(h) {}

};

} // namespace android::icu::text
} // namespace scapix::java_api

#include <scapix/java_api/android/icu/text/DateFormat.h>
#include <scapix/java_api/android/icu/text/DateIntervalInfo.h>
#include <scapix/java_api/android/icu/util/Calendar.h>
#include <scapix/java_api/android/icu/util/DateInterval.h>
#include <scapix/java_api/android/icu/util/TimeZone.h>
#include <scapix/java_api/android/icu/util/ULocale.h>
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/lang/StringBuffer.h>
#include <scapix/java_api/java/text/FieldPosition.h>
#include <scapix/java_api/java/text/ParsePosition.h>
#include <scapix/java_api/java/util/Locale.h>

namespace scapix::java_api {
namespace android::icu::text {

inline ref<android::icu::text::DateIntervalFormat> DateIntervalFormat::getInstance(ref<java::lang::String> skeleton) { return call_static_method<SCAPIX_META_STRING("getInstance"), ref<android::icu::text::DateIntervalFormat>>(skeleton); }
inline ref<android::icu::text::DateIntervalFormat> DateIntervalFormat::getInstance(ref<java::lang::String> skeleton, ref<java::util::Locale> locale) { return call_static_method<SCAPIX_META_STRING("getInstance"), ref<android::icu::text::DateIntervalFormat>>(skeleton, locale); }
inline ref<android::icu::text::DateIntervalFormat> DateIntervalFormat::getInstance(ref<java::lang::String> skeleton, ref<android::icu::util::ULocale> locale) { return call_static_method<SCAPIX_META_STRING("getInstance"), ref<android::icu::text::DateIntervalFormat>>(skeleton, locale); }
inline ref<android::icu::text::DateIntervalFormat> DateIntervalFormat::getInstance(ref<java::lang::String> skeleton, ref<android::icu::text::DateIntervalInfo> dtitvinf) { return call_static_method<SCAPIX_META_STRING("getInstance"), ref<android::icu::text::DateIntervalFormat>>(skeleton, dtitvinf); }
inline ref<android::icu::text::DateIntervalFormat> DateIntervalFormat::getInstance(ref<java::lang::String> skeleton, ref<java::util::Locale> locale, ref<android::icu::text::DateIntervalInfo> dtitvinf) { return call_static_method<SCAPIX_META_STRING("getInstance"), ref<android::icu::text::DateIntervalFormat>>(skeleton, locale, dtitvinf); }
inline ref<android::icu::text::DateIntervalFormat> DateIntervalFormat::getInstance(ref<java::lang::String> skeleton, ref<android::icu::util::ULocale> locale, ref<android::icu::text::DateIntervalInfo> dtitvinf) { return call_static_method<SCAPIX_META_STRING("getInstance"), ref<android::icu::text::DateIntervalFormat>>(skeleton, locale, dtitvinf); }
inline ref<java::lang::Object> DateIntervalFormat::clone() { return call_method<SCAPIX_META_STRING("clone"), ref<java::lang::Object>>(); }
inline ref<java::lang::StringBuffer> DateIntervalFormat::format(ref<java::lang::Object> obj, ref<java::lang::StringBuffer> appendTo, ref<java::text::FieldPosition> fieldPosition) { return call_method<SCAPIX_META_STRING("format"), ref<java::lang::StringBuffer>>(obj, appendTo, fieldPosition); }
inline ref<java::lang::StringBuffer> DateIntervalFormat::format(ref<android::icu::util::DateInterval> dtInterval, ref<java::lang::StringBuffer> appendTo, ref<java::text::FieldPosition> fieldPosition) { return call_method<SCAPIX_META_STRING("format"), ref<java::lang::StringBuffer>>(dtInterval, appendTo, fieldPosition); }
inline ref<java::lang::StringBuffer> DateIntervalFormat::format(ref<android::icu::util::Calendar> fromCalendar, ref<android::icu::util::Calendar> toCalendar, ref<java::lang::StringBuffer> appendTo, ref<java::text::FieldPosition> pos) { return call_method<SCAPIX_META_STRING("format"), ref<java::lang::StringBuffer>>(fromCalendar, toCalendar, appendTo, pos); }
inline ref<java::lang::Object> DateIntervalFormat::parseObject(ref<java::lang::String> source, ref<java::text::ParsePosition> parse_pos) { return call_method<SCAPIX_META_STRING("parseObject"), ref<java::lang::Object>>(source, parse_pos); }
inline ref<android::icu::text::DateIntervalInfo> DateIntervalFormat::getDateIntervalInfo() { return call_method<SCAPIX_META_STRING("getDateIntervalInfo"), ref<android::icu::text::DateIntervalInfo>>(); }
inline void DateIntervalFormat::setDateIntervalInfo(ref<android::icu::text::DateIntervalInfo> newItvPattern) { return call_method<SCAPIX_META_STRING("setDateIntervalInfo"), void>(newItvPattern); }
inline ref<android::icu::util::TimeZone> DateIntervalFormat::getTimeZone() { return call_method<SCAPIX_META_STRING("getTimeZone"), ref<android::icu::util::TimeZone>>(); }
inline void DateIntervalFormat::setTimeZone(ref<android::icu::util::TimeZone> zone) { return call_method<SCAPIX_META_STRING("setTimeZone"), void>(zone); }
inline ref<android::icu::text::DateFormat> DateIntervalFormat::getDateFormat() { return call_method<SCAPIX_META_STRING("getDateFormat"), ref<android::icu::text::DateFormat>>(); }

} // namespace android::icu::text
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_ICU_TEXT_DATEINTERVALFORMAT_H
