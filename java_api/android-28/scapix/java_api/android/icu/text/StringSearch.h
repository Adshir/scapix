// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/icu/text/SearchIterator.h>

#ifndef SCAPIX_ANDROID_ICU_TEXT_STRINGSEARCH_H
#define SCAPIX_ANDROID_ICU_TEXT_STRINGSEARCH_H

namespace scapix::java_api {

namespace android::icu::text { class BreakIterator; }
namespace android::icu::text { class RuleBasedCollator; }
namespace android::icu::util { class ULocale; }
namespace java::lang { class String; }
namespace java::text { class CharacterIterator; }
namespace java::util { class Locale; }

namespace android::icu::text {

class StringSearch : public object_base<SCAPIX_META_STRING("android/icu/text/StringSearch"),
	android::icu::text::SearchIterator>
{
public:

	static ref<StringSearch> new_object(ref<java::lang::String> pattern, ref<java::text::CharacterIterator> target, ref<android::icu::text::RuleBasedCollator> collator, ref<android::icu::text::BreakIterator> breakiter);
	static ref<StringSearch> new_object(ref<java::lang::String> pattern, ref<java::text::CharacterIterator> target, ref<android::icu::text::RuleBasedCollator> collator);
	static ref<StringSearch> new_object(ref<java::lang::String> pattern, ref<java::text::CharacterIterator> target, ref<java::util::Locale> locale);
	static ref<StringSearch> new_object(ref<java::lang::String> pattern, ref<java::text::CharacterIterator> target, ref<android::icu::util::ULocale> locale);
	static ref<StringSearch> new_object(ref<java::lang::String> pattern, ref<java::lang::String> target);
	ref<android::icu::text::RuleBasedCollator> getCollator();
	void setCollator(ref<android::icu::text::RuleBasedCollator> collator);
	ref<java::lang::String> getPattern();
	void setPattern(ref<java::lang::String> pattern);
	jboolean isCanonical();
	void setCanonical(jboolean allowCanonical);
	void setTarget(ref<java::text::CharacterIterator> text);
	jint getIndex();
	void setIndex(jint position);
	void reset();

protected:

	StringSearch(handle_type h) : base_(h) {}

};

} // namespace android::icu::text
} // namespace scapix::java_api

#include <scapix/java_api/android/icu/text/BreakIterator.h>
#include <scapix/java_api/android/icu/text/RuleBasedCollator.h>
#include <scapix/java_api/android/icu/util/ULocale.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/text/CharacterIterator.h>
#include <scapix/java_api/java/util/Locale.h>

namespace scapix::java_api {
namespace android::icu::text {

inline ref<StringSearch> StringSearch::new_object(ref<java::lang::String> pattern, ref<java::text::CharacterIterator> target, ref<android::icu::text::RuleBasedCollator> collator, ref<android::icu::text::BreakIterator> breakiter) { return base_::new_object(pattern, target, collator, breakiter); }
inline ref<StringSearch> StringSearch::new_object(ref<java::lang::String> pattern, ref<java::text::CharacterIterator> target, ref<android::icu::text::RuleBasedCollator> collator) { return base_::new_object(pattern, target, collator); }
inline ref<StringSearch> StringSearch::new_object(ref<java::lang::String> pattern, ref<java::text::CharacterIterator> target, ref<java::util::Locale> locale) { return base_::new_object(pattern, target, locale); }
inline ref<StringSearch> StringSearch::new_object(ref<java::lang::String> pattern, ref<java::text::CharacterIterator> target, ref<android::icu::util::ULocale> locale) { return base_::new_object(pattern, target, locale); }
inline ref<StringSearch> StringSearch::new_object(ref<java::lang::String> pattern, ref<java::lang::String> target) { return base_::new_object(pattern, target); }
inline ref<android::icu::text::RuleBasedCollator> StringSearch::getCollator() { return call_method<SCAPIX_META_STRING("getCollator"), ref<android::icu::text::RuleBasedCollator>>(); }
inline void StringSearch::setCollator(ref<android::icu::text::RuleBasedCollator> collator) { return call_method<SCAPIX_META_STRING("setCollator"), void>(collator); }
inline ref<java::lang::String> StringSearch::getPattern() { return call_method<SCAPIX_META_STRING("getPattern"), ref<java::lang::String>>(); }
inline void StringSearch::setPattern(ref<java::lang::String> pattern) { return call_method<SCAPIX_META_STRING("setPattern"), void>(pattern); }
inline jboolean StringSearch::isCanonical() { return call_method<SCAPIX_META_STRING("isCanonical"), jboolean>(); }
inline void StringSearch::setCanonical(jboolean allowCanonical) { return call_method<SCAPIX_META_STRING("setCanonical"), void>(allowCanonical); }
inline void StringSearch::setTarget(ref<java::text::CharacterIterator> text) { return call_method<SCAPIX_META_STRING("setTarget"), void>(text); }
inline jint StringSearch::getIndex() { return call_method<SCAPIX_META_STRING("getIndex"), jint>(); }
inline void StringSearch::setIndex(jint position) { return call_method<SCAPIX_META_STRING("setIndex"), void>(position); }
inline void StringSearch::reset() { return call_method<SCAPIX_META_STRING("reset"), void>(); }

} // namespace android::icu::text
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_ICU_TEXT_STRINGSEARCH_H
