// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/io/Serializable.h>

#ifndef SCAPIX_ANDROID_ICU_TEXT_PLURALRULES_H
#define SCAPIX_ANDROID_ICU_TEXT_PLURALRULES_H

namespace scapix::java_api {

namespace android::icu::text { class PluralRules_PluralType; }
namespace android::icu::util { class ULocale; }
namespace java::lang { class String; }
namespace java::util { class Collection; }
namespace java::util { class Locale; }
namespace java::util { class Set; }

namespace android::icu::text {

class PluralRules : public object_base<SCAPIX_META_STRING("android/icu/text/PluralRules"),
	java::lang::Object,
	java::io::Serializable>
{
public:

	using PluralType = PluralRules_PluralType;

	static ref<android::icu::text::PluralRules> DEFAULT_();
	static ref<java::lang::String> KEYWORD_FEW_();
	static ref<java::lang::String> KEYWORD_MANY_();
	static ref<java::lang::String> KEYWORD_ONE_();
	static ref<java::lang::String> KEYWORD_OTHER_();
	static ref<java::lang::String> KEYWORD_TWO_();
	static ref<java::lang::String> KEYWORD_ZERO_();
	static jdouble NO_UNIQUE_VALUE_();

	static ref<android::icu::text::PluralRules> parseDescription(ref<java::lang::String> description);
	static ref<android::icu::text::PluralRules> createRules(ref<java::lang::String> description);
	static ref<android::icu::text::PluralRules> forLocale(ref<android::icu::util::ULocale> locale);
	static ref<android::icu::text::PluralRules> forLocale(ref<java::util::Locale> locale);
	static ref<android::icu::text::PluralRules> forLocale(ref<android::icu::util::ULocale> locale, ref<android::icu::text::PluralRules_PluralType> type);
	static ref<android::icu::text::PluralRules> forLocale(ref<java::util::Locale> locale, ref<android::icu::text::PluralRules_PluralType> type);
	jint hashCode();
	ref<java::lang::String> select(jdouble number);
	ref<java::util::Set> getKeywords();
	jdouble getUniqueKeywordValue(ref<java::lang::String> keyword);
	ref<java::util::Collection> getAllKeywordValues(ref<java::lang::String> keyword);
	ref<java::util::Collection> getSamples(ref<java::lang::String> keyword);
	ref<java::lang::String> toString();
	jboolean equals(ref<java::lang::Object> rhs);
	jboolean equals(ref<android::icu::text::PluralRules> rhs);

protected:

	PluralRules(handle_type h) : base_(h) {}

};

} // namespace android::icu::text
} // namespace scapix::java_api

#include <scapix/java_api/android/icu/text/PluralRules_PluralType.h>
#include <scapix/java_api/android/icu/util/ULocale.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Collection.h>
#include <scapix/java_api/java/util/Locale.h>
#include <scapix/java_api/java/util/Set.h>

namespace scapix::java_api {
namespace android::icu::text {

inline ref<android::icu::text::PluralRules> PluralRules::DEFAULT_() { return get_static_field<SCAPIX_META_STRING("DEFAULT"), ref<android::icu::text::PluralRules>>(); }
inline ref<java::lang::String> PluralRules::KEYWORD_FEW_() { return get_static_field<SCAPIX_META_STRING("KEYWORD_FEW"), ref<java::lang::String>>(); }
inline ref<java::lang::String> PluralRules::KEYWORD_MANY_() { return get_static_field<SCAPIX_META_STRING("KEYWORD_MANY"), ref<java::lang::String>>(); }
inline ref<java::lang::String> PluralRules::KEYWORD_ONE_() { return get_static_field<SCAPIX_META_STRING("KEYWORD_ONE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> PluralRules::KEYWORD_OTHER_() { return get_static_field<SCAPIX_META_STRING("KEYWORD_OTHER"), ref<java::lang::String>>(); }
inline ref<java::lang::String> PluralRules::KEYWORD_TWO_() { return get_static_field<SCAPIX_META_STRING("KEYWORD_TWO"), ref<java::lang::String>>(); }
inline ref<java::lang::String> PluralRules::KEYWORD_ZERO_() { return get_static_field<SCAPIX_META_STRING("KEYWORD_ZERO"), ref<java::lang::String>>(); }
inline jdouble PluralRules::NO_UNIQUE_VALUE_() { return get_static_field<SCAPIX_META_STRING("NO_UNIQUE_VALUE"), jdouble>(); }
inline ref<android::icu::text::PluralRules> PluralRules::parseDescription(ref<java::lang::String> description) { return call_static_method<SCAPIX_META_STRING("parseDescription"), ref<android::icu::text::PluralRules>>(description); }
inline ref<android::icu::text::PluralRules> PluralRules::createRules(ref<java::lang::String> description) { return call_static_method<SCAPIX_META_STRING("createRules"), ref<android::icu::text::PluralRules>>(description); }
inline ref<android::icu::text::PluralRules> PluralRules::forLocale(ref<android::icu::util::ULocale> locale) { return call_static_method<SCAPIX_META_STRING("forLocale"), ref<android::icu::text::PluralRules>>(locale); }
inline ref<android::icu::text::PluralRules> PluralRules::forLocale(ref<java::util::Locale> locale) { return call_static_method<SCAPIX_META_STRING("forLocale"), ref<android::icu::text::PluralRules>>(locale); }
inline ref<android::icu::text::PluralRules> PluralRules::forLocale(ref<android::icu::util::ULocale> locale, ref<android::icu::text::PluralRules_PluralType> type) { return call_static_method<SCAPIX_META_STRING("forLocale"), ref<android::icu::text::PluralRules>>(locale, type); }
inline ref<android::icu::text::PluralRules> PluralRules::forLocale(ref<java::util::Locale> locale, ref<android::icu::text::PluralRules_PluralType> type) { return call_static_method<SCAPIX_META_STRING("forLocale"), ref<android::icu::text::PluralRules>>(locale, type); }
inline jint PluralRules::hashCode() { return call_method<SCAPIX_META_STRING("hashCode"), jint>(); }
inline ref<java::lang::String> PluralRules::select(jdouble number) { return call_method<SCAPIX_META_STRING("select"), ref<java::lang::String>>(number); }
inline ref<java::util::Set> PluralRules::getKeywords() { return call_method<SCAPIX_META_STRING("getKeywords"), ref<java::util::Set>>(); }
inline jdouble PluralRules::getUniqueKeywordValue(ref<java::lang::String> keyword) { return call_method<SCAPIX_META_STRING("getUniqueKeywordValue"), jdouble>(keyword); }
inline ref<java::util::Collection> PluralRules::getAllKeywordValues(ref<java::lang::String> keyword) { return call_method<SCAPIX_META_STRING("getAllKeywordValues"), ref<java::util::Collection>>(keyword); }
inline ref<java::util::Collection> PluralRules::getSamples(ref<java::lang::String> keyword) { return call_method<SCAPIX_META_STRING("getSamples"), ref<java::util::Collection>>(keyword); }
inline ref<java::lang::String> PluralRules::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }
inline jboolean PluralRules::equals(ref<java::lang::Object> rhs) { return call_method<SCAPIX_META_STRING("equals"), jboolean>(rhs); }
inline jboolean PluralRules::equals(ref<android::icu::text::PluralRules> rhs) { return call_method<SCAPIX_META_STRING("equals"), jboolean>(rhs); }

} // namespace android::icu::text
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_ICU_TEXT_PLURALRULES_H
