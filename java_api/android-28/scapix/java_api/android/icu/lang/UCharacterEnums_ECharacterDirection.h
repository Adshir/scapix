// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_ICU_LANG_UCHARACTERENUMS_ECHARACTERDIRECTION_H
#define SCAPIX_ANDROID_ICU_LANG_UCHARACTERENUMS_ECHARACTERDIRECTION_H

namespace scapix::java_api {


namespace android::icu::lang {

class UCharacterEnums_ECharacterDirection : public object_base<SCAPIX_META_STRING("android/icu/lang/UCharacterEnums$ECharacterDirection"),
	java::lang::Object>
{
public:

	static jint ARABIC_NUMBER_();
	static jint BLOCK_SEPARATOR_();
	static jint BOUNDARY_NEUTRAL_();
	static jint COMMON_NUMBER_SEPARATOR_();
	static jbyte DIRECTIONALITY_ARABIC_NUMBER_();
	static jbyte DIRECTIONALITY_BOUNDARY_NEUTRAL_();
	static jbyte DIRECTIONALITY_COMMON_NUMBER_SEPARATOR_();
	static jbyte DIRECTIONALITY_EUROPEAN_NUMBER_();
	static jbyte DIRECTIONALITY_EUROPEAN_NUMBER_SEPARATOR_();
	static jbyte DIRECTIONALITY_EUROPEAN_NUMBER_TERMINATOR_();
	static jbyte DIRECTIONALITY_LEFT_TO_RIGHT_();
	static jbyte DIRECTIONALITY_LEFT_TO_RIGHT_EMBEDDING_();
	static jbyte DIRECTIONALITY_LEFT_TO_RIGHT_OVERRIDE_();
	static jbyte DIRECTIONALITY_NONSPACING_MARK_();
	static jbyte DIRECTIONALITY_OTHER_NEUTRALS_();
	static jbyte DIRECTIONALITY_PARAGRAPH_SEPARATOR_();
	static jbyte DIRECTIONALITY_POP_DIRECTIONAL_FORMAT_();
	static jbyte DIRECTIONALITY_RIGHT_TO_LEFT_();
	static jbyte DIRECTIONALITY_RIGHT_TO_LEFT_ARABIC_();
	static jbyte DIRECTIONALITY_RIGHT_TO_LEFT_EMBEDDING_();
	static jbyte DIRECTIONALITY_RIGHT_TO_LEFT_OVERRIDE_();
	static jbyte DIRECTIONALITY_SEGMENT_SEPARATOR_();
	static jbyte DIRECTIONALITY_UNDEFINED_();
	static jbyte DIRECTIONALITY_WHITESPACE_();
	static jint DIR_NON_SPACING_MARK_();
	static jint EUROPEAN_NUMBER_();
	static jint EUROPEAN_NUMBER_SEPARATOR_();
	static jint EUROPEAN_NUMBER_TERMINATOR_();
	static jbyte FIRST_STRONG_ISOLATE_();
	static jint LEFT_TO_RIGHT_();
	static jint LEFT_TO_RIGHT_EMBEDDING_();
	static jbyte LEFT_TO_RIGHT_ISOLATE_();
	static jint LEFT_TO_RIGHT_OVERRIDE_();
	static jint OTHER_NEUTRAL_();
	static jint POP_DIRECTIONAL_FORMAT_();
	static jbyte POP_DIRECTIONAL_ISOLATE_();
	static jint RIGHT_TO_LEFT_();
	static jint RIGHT_TO_LEFT_ARABIC_();
	static jint RIGHT_TO_LEFT_EMBEDDING_();
	static jbyte RIGHT_TO_LEFT_ISOLATE_();
	static jint RIGHT_TO_LEFT_OVERRIDE_();
	static jint SEGMENT_SEPARATOR_();
	static jint WHITE_SPACE_NEUTRAL_();


protected:

	UCharacterEnums_ECharacterDirection(handle_type h) : base_(h) {}

};

} // namespace android::icu::lang
} // namespace scapix::java_api


namespace scapix::java_api {
namespace android::icu::lang {

inline jint UCharacterEnums_ECharacterDirection::ARABIC_NUMBER_() { return get_static_field<SCAPIX_META_STRING("ARABIC_NUMBER"), jint>(); }
inline jint UCharacterEnums_ECharacterDirection::BLOCK_SEPARATOR_() { return get_static_field<SCAPIX_META_STRING("BLOCK_SEPARATOR"), jint>(); }
inline jint UCharacterEnums_ECharacterDirection::BOUNDARY_NEUTRAL_() { return get_static_field<SCAPIX_META_STRING("BOUNDARY_NEUTRAL"), jint>(); }
inline jint UCharacterEnums_ECharacterDirection::COMMON_NUMBER_SEPARATOR_() { return get_static_field<SCAPIX_META_STRING("COMMON_NUMBER_SEPARATOR"), jint>(); }
inline jbyte UCharacterEnums_ECharacterDirection::DIRECTIONALITY_ARABIC_NUMBER_() { return get_static_field<SCAPIX_META_STRING("DIRECTIONALITY_ARABIC_NUMBER"), jbyte>(); }
inline jbyte UCharacterEnums_ECharacterDirection::DIRECTIONALITY_BOUNDARY_NEUTRAL_() { return get_static_field<SCAPIX_META_STRING("DIRECTIONALITY_BOUNDARY_NEUTRAL"), jbyte>(); }
inline jbyte UCharacterEnums_ECharacterDirection::DIRECTIONALITY_COMMON_NUMBER_SEPARATOR_() { return get_static_field<SCAPIX_META_STRING("DIRECTIONALITY_COMMON_NUMBER_SEPARATOR"), jbyte>(); }
inline jbyte UCharacterEnums_ECharacterDirection::DIRECTIONALITY_EUROPEAN_NUMBER_() { return get_static_field<SCAPIX_META_STRING("DIRECTIONALITY_EUROPEAN_NUMBER"), jbyte>(); }
inline jbyte UCharacterEnums_ECharacterDirection::DIRECTIONALITY_EUROPEAN_NUMBER_SEPARATOR_() { return get_static_field<SCAPIX_META_STRING("DIRECTIONALITY_EUROPEAN_NUMBER_SEPARATOR"), jbyte>(); }
inline jbyte UCharacterEnums_ECharacterDirection::DIRECTIONALITY_EUROPEAN_NUMBER_TERMINATOR_() { return get_static_field<SCAPIX_META_STRING("DIRECTIONALITY_EUROPEAN_NUMBER_TERMINATOR"), jbyte>(); }
inline jbyte UCharacterEnums_ECharacterDirection::DIRECTIONALITY_LEFT_TO_RIGHT_() { return get_static_field<SCAPIX_META_STRING("DIRECTIONALITY_LEFT_TO_RIGHT"), jbyte>(); }
inline jbyte UCharacterEnums_ECharacterDirection::DIRECTIONALITY_LEFT_TO_RIGHT_EMBEDDING_() { return get_static_field<SCAPIX_META_STRING("DIRECTIONALITY_LEFT_TO_RIGHT_EMBEDDING"), jbyte>(); }
inline jbyte UCharacterEnums_ECharacterDirection::DIRECTIONALITY_LEFT_TO_RIGHT_OVERRIDE_() { return get_static_field<SCAPIX_META_STRING("DIRECTIONALITY_LEFT_TO_RIGHT_OVERRIDE"), jbyte>(); }
inline jbyte UCharacterEnums_ECharacterDirection::DIRECTIONALITY_NONSPACING_MARK_() { return get_static_field<SCAPIX_META_STRING("DIRECTIONALITY_NONSPACING_MARK"), jbyte>(); }
inline jbyte UCharacterEnums_ECharacterDirection::DIRECTIONALITY_OTHER_NEUTRALS_() { return get_static_field<SCAPIX_META_STRING("DIRECTIONALITY_OTHER_NEUTRALS"), jbyte>(); }
inline jbyte UCharacterEnums_ECharacterDirection::DIRECTIONALITY_PARAGRAPH_SEPARATOR_() { return get_static_field<SCAPIX_META_STRING("DIRECTIONALITY_PARAGRAPH_SEPARATOR"), jbyte>(); }
inline jbyte UCharacterEnums_ECharacterDirection::DIRECTIONALITY_POP_DIRECTIONAL_FORMAT_() { return get_static_field<SCAPIX_META_STRING("DIRECTIONALITY_POP_DIRECTIONAL_FORMAT"), jbyte>(); }
inline jbyte UCharacterEnums_ECharacterDirection::DIRECTIONALITY_RIGHT_TO_LEFT_() { return get_static_field<SCAPIX_META_STRING("DIRECTIONALITY_RIGHT_TO_LEFT"), jbyte>(); }
inline jbyte UCharacterEnums_ECharacterDirection::DIRECTIONALITY_RIGHT_TO_LEFT_ARABIC_() { return get_static_field<SCAPIX_META_STRING("DIRECTIONALITY_RIGHT_TO_LEFT_ARABIC"), jbyte>(); }
inline jbyte UCharacterEnums_ECharacterDirection::DIRECTIONALITY_RIGHT_TO_LEFT_EMBEDDING_() { return get_static_field<SCAPIX_META_STRING("DIRECTIONALITY_RIGHT_TO_LEFT_EMBEDDING"), jbyte>(); }
inline jbyte UCharacterEnums_ECharacterDirection::DIRECTIONALITY_RIGHT_TO_LEFT_OVERRIDE_() { return get_static_field<SCAPIX_META_STRING("DIRECTIONALITY_RIGHT_TO_LEFT_OVERRIDE"), jbyte>(); }
inline jbyte UCharacterEnums_ECharacterDirection::DIRECTIONALITY_SEGMENT_SEPARATOR_() { return get_static_field<SCAPIX_META_STRING("DIRECTIONALITY_SEGMENT_SEPARATOR"), jbyte>(); }
inline jbyte UCharacterEnums_ECharacterDirection::DIRECTIONALITY_UNDEFINED_() { return get_static_field<SCAPIX_META_STRING("DIRECTIONALITY_UNDEFINED"), jbyte>(); }
inline jbyte UCharacterEnums_ECharacterDirection::DIRECTIONALITY_WHITESPACE_() { return get_static_field<SCAPIX_META_STRING("DIRECTIONALITY_WHITESPACE"), jbyte>(); }
inline jint UCharacterEnums_ECharacterDirection::DIR_NON_SPACING_MARK_() { return get_static_field<SCAPIX_META_STRING("DIR_NON_SPACING_MARK"), jint>(); }
inline jint UCharacterEnums_ECharacterDirection::EUROPEAN_NUMBER_() { return get_static_field<SCAPIX_META_STRING("EUROPEAN_NUMBER"), jint>(); }
inline jint UCharacterEnums_ECharacterDirection::EUROPEAN_NUMBER_SEPARATOR_() { return get_static_field<SCAPIX_META_STRING("EUROPEAN_NUMBER_SEPARATOR"), jint>(); }
inline jint UCharacterEnums_ECharacterDirection::EUROPEAN_NUMBER_TERMINATOR_() { return get_static_field<SCAPIX_META_STRING("EUROPEAN_NUMBER_TERMINATOR"), jint>(); }
inline jbyte UCharacterEnums_ECharacterDirection::FIRST_STRONG_ISOLATE_() { return get_static_field<SCAPIX_META_STRING("FIRST_STRONG_ISOLATE"), jbyte>(); }
inline jint UCharacterEnums_ECharacterDirection::LEFT_TO_RIGHT_() { return get_static_field<SCAPIX_META_STRING("LEFT_TO_RIGHT"), jint>(); }
inline jint UCharacterEnums_ECharacterDirection::LEFT_TO_RIGHT_EMBEDDING_() { return get_static_field<SCAPIX_META_STRING("LEFT_TO_RIGHT_EMBEDDING"), jint>(); }
inline jbyte UCharacterEnums_ECharacterDirection::LEFT_TO_RIGHT_ISOLATE_() { return get_static_field<SCAPIX_META_STRING("LEFT_TO_RIGHT_ISOLATE"), jbyte>(); }
inline jint UCharacterEnums_ECharacterDirection::LEFT_TO_RIGHT_OVERRIDE_() { return get_static_field<SCAPIX_META_STRING("LEFT_TO_RIGHT_OVERRIDE"), jint>(); }
inline jint UCharacterEnums_ECharacterDirection::OTHER_NEUTRAL_() { return get_static_field<SCAPIX_META_STRING("OTHER_NEUTRAL"), jint>(); }
inline jint UCharacterEnums_ECharacterDirection::POP_DIRECTIONAL_FORMAT_() { return get_static_field<SCAPIX_META_STRING("POP_DIRECTIONAL_FORMAT"), jint>(); }
inline jbyte UCharacterEnums_ECharacterDirection::POP_DIRECTIONAL_ISOLATE_() { return get_static_field<SCAPIX_META_STRING("POP_DIRECTIONAL_ISOLATE"), jbyte>(); }
inline jint UCharacterEnums_ECharacterDirection::RIGHT_TO_LEFT_() { return get_static_field<SCAPIX_META_STRING("RIGHT_TO_LEFT"), jint>(); }
inline jint UCharacterEnums_ECharacterDirection::RIGHT_TO_LEFT_ARABIC_() { return get_static_field<SCAPIX_META_STRING("RIGHT_TO_LEFT_ARABIC"), jint>(); }
inline jint UCharacterEnums_ECharacterDirection::RIGHT_TO_LEFT_EMBEDDING_() { return get_static_field<SCAPIX_META_STRING("RIGHT_TO_LEFT_EMBEDDING"), jint>(); }
inline jbyte UCharacterEnums_ECharacterDirection::RIGHT_TO_LEFT_ISOLATE_() { return get_static_field<SCAPIX_META_STRING("RIGHT_TO_LEFT_ISOLATE"), jbyte>(); }
inline jint UCharacterEnums_ECharacterDirection::RIGHT_TO_LEFT_OVERRIDE_() { return get_static_field<SCAPIX_META_STRING("RIGHT_TO_LEFT_OVERRIDE"), jint>(); }
inline jint UCharacterEnums_ECharacterDirection::SEGMENT_SEPARATOR_() { return get_static_field<SCAPIX_META_STRING("SEGMENT_SEPARATOR"), jint>(); }
inline jint UCharacterEnums_ECharacterDirection::WHITE_SPACE_NEUTRAL_() { return get_static_field<SCAPIX_META_STRING("WHITE_SPACE_NEUTRAL"), jint>(); }

} // namespace android::icu::lang
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_ICU_LANG_UCHARACTERENUMS_ECHARACTERDIRECTION_H
