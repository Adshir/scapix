// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_ICU_LANG_UPROPERTY_H
#define SCAPIX_ANDROID_ICU_LANG_UPROPERTY_H

namespace scapix::java_api {

namespace android::icu::lang { class UProperty_NameChoice; }

namespace android::icu::lang {

class UProperty : public object_base<SCAPIX_META_STRING("android/icu/lang/UProperty"),
	java::lang::Object>
{
public:

	using NameChoice = UProperty_NameChoice;

	static jint AGE_();
	static jint ALPHABETIC_();
	static jint ASCII_HEX_DIGIT_();
	static jint BIDI_CLASS_();
	static jint BIDI_CONTROL_();
	static jint BIDI_MIRRORED_();
	static jint BIDI_MIRRORING_GLYPH_();
	static jint BIDI_PAIRED_BRACKET_();
	static jint BIDI_PAIRED_BRACKET_TYPE_();
	static jint BINARY_START_();
	static jint BLOCK_();
	static jint CANONICAL_COMBINING_CLASS_();
	static jint CASED_();
	static jint CASE_FOLDING_();
	static jint CASE_IGNORABLE_();
	static jint CASE_SENSITIVE_();
	static jint CHANGES_WHEN_CASEFOLDED_();
	static jint CHANGES_WHEN_CASEMAPPED_();
	static jint CHANGES_WHEN_LOWERCASED_();
	static jint CHANGES_WHEN_NFKC_CASEFOLDED_();
	static jint CHANGES_WHEN_TITLECASED_();
	static jint CHANGES_WHEN_UPPERCASED_();
	static jint DASH_();
	static jint DECOMPOSITION_TYPE_();
	static jint DEFAULT_IGNORABLE_CODE_POINT_();
	static jint DEPRECATED_();
	static jint DIACRITIC_();
	static jint DOUBLE_START_();
	static jint EAST_ASIAN_WIDTH_();
	static jint EMOJI_();
	static jint EMOJI_COMPONENT_();
	static jint EMOJI_MODIFIER_();
	static jint EMOJI_MODIFIER_BASE_();
	static jint EMOJI_PRESENTATION_();
	static jint EXTENDER_();
	static jint FULL_COMPOSITION_EXCLUSION_();
	static jint GENERAL_CATEGORY_();
	static jint GENERAL_CATEGORY_MASK_();
	static jint GRAPHEME_BASE_();
	static jint GRAPHEME_CLUSTER_BREAK_();
	static jint GRAPHEME_EXTEND_();
	static jint GRAPHEME_LINK_();
	static jint HANGUL_SYLLABLE_TYPE_();
	static jint HEX_DIGIT_();
	static jint HYPHEN_();
	static jint IDEOGRAPHIC_();
	static jint IDS_BINARY_OPERATOR_();
	static jint IDS_TRINARY_OPERATOR_();
	static jint ID_CONTINUE_();
	static jint ID_START_();
	static jint INT_START_();
	static jint JOINING_GROUP_();
	static jint JOINING_TYPE_();
	static jint JOIN_CONTROL_();
	static jint LEAD_CANONICAL_COMBINING_CLASS_();
	static jint LINE_BREAK_();
	static jint LOGICAL_ORDER_EXCEPTION_();
	static jint LOWERCASE_();
	static jint LOWERCASE_MAPPING_();
	static jint MASK_START_();
	static jint MATH_();
	static jint NAME_();
	static jint NFC_INERT_();
	static jint NFC_QUICK_CHECK_();
	static jint NFD_INERT_();
	static jint NFD_QUICK_CHECK_();
	static jint NFKC_INERT_();
	static jint NFKC_QUICK_CHECK_();
	static jint NFKD_INERT_();
	static jint NFKD_QUICK_CHECK_();
	static jint NONCHARACTER_CODE_POINT_();
	static jint NUMERIC_TYPE_();
	static jint NUMERIC_VALUE_();
	static jint OTHER_PROPERTY_START_();
	static jint PATTERN_SYNTAX_();
	static jint PATTERN_WHITE_SPACE_();
	static jint POSIX_ALNUM_();
	static jint POSIX_BLANK_();
	static jint POSIX_GRAPH_();
	static jint POSIX_PRINT_();
	static jint POSIX_XDIGIT_();
	static jint PREPENDED_CONCATENATION_MARK_();
	static jint QUOTATION_MARK_();
	static jint RADICAL_();
	static jint REGIONAL_INDICATOR_();
	static jint SCRIPT_();
	static jint SCRIPT_EXTENSIONS_();
	static jint SEGMENT_STARTER_();
	static jint SENTENCE_BREAK_();
	static jint SIMPLE_CASE_FOLDING_();
	static jint SIMPLE_LOWERCASE_MAPPING_();
	static jint SIMPLE_TITLECASE_MAPPING_();
	static jint SIMPLE_UPPERCASE_MAPPING_();
	static jint SOFT_DOTTED_();
	static jint STRING_START_();
	static jint S_TERM_();
	static jint TERMINAL_PUNCTUATION_();
	static jint TITLECASE_MAPPING_();
	static jint TRAIL_CANONICAL_COMBINING_CLASS_();
	static jint UNIFIED_IDEOGRAPH_();
	static jint UPPERCASE_();
	static jint UPPERCASE_MAPPING_();
	static jint VARIATION_SELECTOR_();
	static jint WHITE_SPACE_();
	static jint WORD_BREAK_();
	static jint XID_CONTINUE_();
	static jint XID_START_();


protected:

	UProperty(handle_type h) : base_(h) {}

};

} // namespace android::icu::lang
} // namespace scapix::java_api


namespace scapix::java_api {
namespace android::icu::lang {

inline jint UProperty::AGE_() { return get_static_field<SCAPIX_META_STRING("AGE"), jint>(); }
inline jint UProperty::ALPHABETIC_() { return get_static_field<SCAPIX_META_STRING("ALPHABETIC"), jint>(); }
inline jint UProperty::ASCII_HEX_DIGIT_() { return get_static_field<SCAPIX_META_STRING("ASCII_HEX_DIGIT"), jint>(); }
inline jint UProperty::BIDI_CLASS_() { return get_static_field<SCAPIX_META_STRING("BIDI_CLASS"), jint>(); }
inline jint UProperty::BIDI_CONTROL_() { return get_static_field<SCAPIX_META_STRING("BIDI_CONTROL"), jint>(); }
inline jint UProperty::BIDI_MIRRORED_() { return get_static_field<SCAPIX_META_STRING("BIDI_MIRRORED"), jint>(); }
inline jint UProperty::BIDI_MIRRORING_GLYPH_() { return get_static_field<SCAPIX_META_STRING("BIDI_MIRRORING_GLYPH"), jint>(); }
inline jint UProperty::BIDI_PAIRED_BRACKET_() { return get_static_field<SCAPIX_META_STRING("BIDI_PAIRED_BRACKET"), jint>(); }
inline jint UProperty::BIDI_PAIRED_BRACKET_TYPE_() { return get_static_field<SCAPIX_META_STRING("BIDI_PAIRED_BRACKET_TYPE"), jint>(); }
inline jint UProperty::BINARY_START_() { return get_static_field<SCAPIX_META_STRING("BINARY_START"), jint>(); }
inline jint UProperty::BLOCK_() { return get_static_field<SCAPIX_META_STRING("BLOCK"), jint>(); }
inline jint UProperty::CANONICAL_COMBINING_CLASS_() { return get_static_field<SCAPIX_META_STRING("CANONICAL_COMBINING_CLASS"), jint>(); }
inline jint UProperty::CASED_() { return get_static_field<SCAPIX_META_STRING("CASED"), jint>(); }
inline jint UProperty::CASE_FOLDING_() { return get_static_field<SCAPIX_META_STRING("CASE_FOLDING"), jint>(); }
inline jint UProperty::CASE_IGNORABLE_() { return get_static_field<SCAPIX_META_STRING("CASE_IGNORABLE"), jint>(); }
inline jint UProperty::CASE_SENSITIVE_() { return get_static_field<SCAPIX_META_STRING("CASE_SENSITIVE"), jint>(); }
inline jint UProperty::CHANGES_WHEN_CASEFOLDED_() { return get_static_field<SCAPIX_META_STRING("CHANGES_WHEN_CASEFOLDED"), jint>(); }
inline jint UProperty::CHANGES_WHEN_CASEMAPPED_() { return get_static_field<SCAPIX_META_STRING("CHANGES_WHEN_CASEMAPPED"), jint>(); }
inline jint UProperty::CHANGES_WHEN_LOWERCASED_() { return get_static_field<SCAPIX_META_STRING("CHANGES_WHEN_LOWERCASED"), jint>(); }
inline jint UProperty::CHANGES_WHEN_NFKC_CASEFOLDED_() { return get_static_field<SCAPIX_META_STRING("CHANGES_WHEN_NFKC_CASEFOLDED"), jint>(); }
inline jint UProperty::CHANGES_WHEN_TITLECASED_() { return get_static_field<SCAPIX_META_STRING("CHANGES_WHEN_TITLECASED"), jint>(); }
inline jint UProperty::CHANGES_WHEN_UPPERCASED_() { return get_static_field<SCAPIX_META_STRING("CHANGES_WHEN_UPPERCASED"), jint>(); }
inline jint UProperty::DASH_() { return get_static_field<SCAPIX_META_STRING("DASH"), jint>(); }
inline jint UProperty::DECOMPOSITION_TYPE_() { return get_static_field<SCAPIX_META_STRING("DECOMPOSITION_TYPE"), jint>(); }
inline jint UProperty::DEFAULT_IGNORABLE_CODE_POINT_() { return get_static_field<SCAPIX_META_STRING("DEFAULT_IGNORABLE_CODE_POINT"), jint>(); }
inline jint UProperty::DEPRECATED_() { return get_static_field<SCAPIX_META_STRING("DEPRECATED"), jint>(); }
inline jint UProperty::DIACRITIC_() { return get_static_field<SCAPIX_META_STRING("DIACRITIC"), jint>(); }
inline jint UProperty::DOUBLE_START_() { return get_static_field<SCAPIX_META_STRING("DOUBLE_START"), jint>(); }
inline jint UProperty::EAST_ASIAN_WIDTH_() { return get_static_field<SCAPIX_META_STRING("EAST_ASIAN_WIDTH"), jint>(); }
inline jint UProperty::EMOJI_() { return get_static_field<SCAPIX_META_STRING("EMOJI"), jint>(); }
inline jint UProperty::EMOJI_COMPONENT_() { return get_static_field<SCAPIX_META_STRING("EMOJI_COMPONENT"), jint>(); }
inline jint UProperty::EMOJI_MODIFIER_() { return get_static_field<SCAPIX_META_STRING("EMOJI_MODIFIER"), jint>(); }
inline jint UProperty::EMOJI_MODIFIER_BASE_() { return get_static_field<SCAPIX_META_STRING("EMOJI_MODIFIER_BASE"), jint>(); }
inline jint UProperty::EMOJI_PRESENTATION_() { return get_static_field<SCAPIX_META_STRING("EMOJI_PRESENTATION"), jint>(); }
inline jint UProperty::EXTENDER_() { return get_static_field<SCAPIX_META_STRING("EXTENDER"), jint>(); }
inline jint UProperty::FULL_COMPOSITION_EXCLUSION_() { return get_static_field<SCAPIX_META_STRING("FULL_COMPOSITION_EXCLUSION"), jint>(); }
inline jint UProperty::GENERAL_CATEGORY_() { return get_static_field<SCAPIX_META_STRING("GENERAL_CATEGORY"), jint>(); }
inline jint UProperty::GENERAL_CATEGORY_MASK_() { return get_static_field<SCAPIX_META_STRING("GENERAL_CATEGORY_MASK"), jint>(); }
inline jint UProperty::GRAPHEME_BASE_() { return get_static_field<SCAPIX_META_STRING("GRAPHEME_BASE"), jint>(); }
inline jint UProperty::GRAPHEME_CLUSTER_BREAK_() { return get_static_field<SCAPIX_META_STRING("GRAPHEME_CLUSTER_BREAK"), jint>(); }
inline jint UProperty::GRAPHEME_EXTEND_() { return get_static_field<SCAPIX_META_STRING("GRAPHEME_EXTEND"), jint>(); }
inline jint UProperty::GRAPHEME_LINK_() { return get_static_field<SCAPIX_META_STRING("GRAPHEME_LINK"), jint>(); }
inline jint UProperty::HANGUL_SYLLABLE_TYPE_() { return get_static_field<SCAPIX_META_STRING("HANGUL_SYLLABLE_TYPE"), jint>(); }
inline jint UProperty::HEX_DIGIT_() { return get_static_field<SCAPIX_META_STRING("HEX_DIGIT"), jint>(); }
inline jint UProperty::HYPHEN_() { return get_static_field<SCAPIX_META_STRING("HYPHEN"), jint>(); }
inline jint UProperty::IDEOGRAPHIC_() { return get_static_field<SCAPIX_META_STRING("IDEOGRAPHIC"), jint>(); }
inline jint UProperty::IDS_BINARY_OPERATOR_() { return get_static_field<SCAPIX_META_STRING("IDS_BINARY_OPERATOR"), jint>(); }
inline jint UProperty::IDS_TRINARY_OPERATOR_() { return get_static_field<SCAPIX_META_STRING("IDS_TRINARY_OPERATOR"), jint>(); }
inline jint UProperty::ID_CONTINUE_() { return get_static_field<SCAPIX_META_STRING("ID_CONTINUE"), jint>(); }
inline jint UProperty::ID_START_() { return get_static_field<SCAPIX_META_STRING("ID_START"), jint>(); }
inline jint UProperty::INT_START_() { return get_static_field<SCAPIX_META_STRING("INT_START"), jint>(); }
inline jint UProperty::JOINING_GROUP_() { return get_static_field<SCAPIX_META_STRING("JOINING_GROUP"), jint>(); }
inline jint UProperty::JOINING_TYPE_() { return get_static_field<SCAPIX_META_STRING("JOINING_TYPE"), jint>(); }
inline jint UProperty::JOIN_CONTROL_() { return get_static_field<SCAPIX_META_STRING("JOIN_CONTROL"), jint>(); }
inline jint UProperty::LEAD_CANONICAL_COMBINING_CLASS_() { return get_static_field<SCAPIX_META_STRING("LEAD_CANONICAL_COMBINING_CLASS"), jint>(); }
inline jint UProperty::LINE_BREAK_() { return get_static_field<SCAPIX_META_STRING("LINE_BREAK"), jint>(); }
inline jint UProperty::LOGICAL_ORDER_EXCEPTION_() { return get_static_field<SCAPIX_META_STRING("LOGICAL_ORDER_EXCEPTION"), jint>(); }
inline jint UProperty::LOWERCASE_() { return get_static_field<SCAPIX_META_STRING("LOWERCASE"), jint>(); }
inline jint UProperty::LOWERCASE_MAPPING_() { return get_static_field<SCAPIX_META_STRING("LOWERCASE_MAPPING"), jint>(); }
inline jint UProperty::MASK_START_() { return get_static_field<SCAPIX_META_STRING("MASK_START"), jint>(); }
inline jint UProperty::MATH_() { return get_static_field<SCAPIX_META_STRING("MATH"), jint>(); }
inline jint UProperty::NAME_() { return get_static_field<SCAPIX_META_STRING("NAME"), jint>(); }
inline jint UProperty::NFC_INERT_() { return get_static_field<SCAPIX_META_STRING("NFC_INERT"), jint>(); }
inline jint UProperty::NFC_QUICK_CHECK_() { return get_static_field<SCAPIX_META_STRING("NFC_QUICK_CHECK"), jint>(); }
inline jint UProperty::NFD_INERT_() { return get_static_field<SCAPIX_META_STRING("NFD_INERT"), jint>(); }
inline jint UProperty::NFD_QUICK_CHECK_() { return get_static_field<SCAPIX_META_STRING("NFD_QUICK_CHECK"), jint>(); }
inline jint UProperty::NFKC_INERT_() { return get_static_field<SCAPIX_META_STRING("NFKC_INERT"), jint>(); }
inline jint UProperty::NFKC_QUICK_CHECK_() { return get_static_field<SCAPIX_META_STRING("NFKC_QUICK_CHECK"), jint>(); }
inline jint UProperty::NFKD_INERT_() { return get_static_field<SCAPIX_META_STRING("NFKD_INERT"), jint>(); }
inline jint UProperty::NFKD_QUICK_CHECK_() { return get_static_field<SCAPIX_META_STRING("NFKD_QUICK_CHECK"), jint>(); }
inline jint UProperty::NONCHARACTER_CODE_POINT_() { return get_static_field<SCAPIX_META_STRING("NONCHARACTER_CODE_POINT"), jint>(); }
inline jint UProperty::NUMERIC_TYPE_() { return get_static_field<SCAPIX_META_STRING("NUMERIC_TYPE"), jint>(); }
inline jint UProperty::NUMERIC_VALUE_() { return get_static_field<SCAPIX_META_STRING("NUMERIC_VALUE"), jint>(); }
inline jint UProperty::OTHER_PROPERTY_START_() { return get_static_field<SCAPIX_META_STRING("OTHER_PROPERTY_START"), jint>(); }
inline jint UProperty::PATTERN_SYNTAX_() { return get_static_field<SCAPIX_META_STRING("PATTERN_SYNTAX"), jint>(); }
inline jint UProperty::PATTERN_WHITE_SPACE_() { return get_static_field<SCAPIX_META_STRING("PATTERN_WHITE_SPACE"), jint>(); }
inline jint UProperty::POSIX_ALNUM_() { return get_static_field<SCAPIX_META_STRING("POSIX_ALNUM"), jint>(); }
inline jint UProperty::POSIX_BLANK_() { return get_static_field<SCAPIX_META_STRING("POSIX_BLANK"), jint>(); }
inline jint UProperty::POSIX_GRAPH_() { return get_static_field<SCAPIX_META_STRING("POSIX_GRAPH"), jint>(); }
inline jint UProperty::POSIX_PRINT_() { return get_static_field<SCAPIX_META_STRING("POSIX_PRINT"), jint>(); }
inline jint UProperty::POSIX_XDIGIT_() { return get_static_field<SCAPIX_META_STRING("POSIX_XDIGIT"), jint>(); }
inline jint UProperty::PREPENDED_CONCATENATION_MARK_() { return get_static_field<SCAPIX_META_STRING("PREPENDED_CONCATENATION_MARK"), jint>(); }
inline jint UProperty::QUOTATION_MARK_() { return get_static_field<SCAPIX_META_STRING("QUOTATION_MARK"), jint>(); }
inline jint UProperty::RADICAL_() { return get_static_field<SCAPIX_META_STRING("RADICAL"), jint>(); }
inline jint UProperty::REGIONAL_INDICATOR_() { return get_static_field<SCAPIX_META_STRING("REGIONAL_INDICATOR"), jint>(); }
inline jint UProperty::SCRIPT_() { return get_static_field<SCAPIX_META_STRING("SCRIPT"), jint>(); }
inline jint UProperty::SCRIPT_EXTENSIONS_() { return get_static_field<SCAPIX_META_STRING("SCRIPT_EXTENSIONS"), jint>(); }
inline jint UProperty::SEGMENT_STARTER_() { return get_static_field<SCAPIX_META_STRING("SEGMENT_STARTER"), jint>(); }
inline jint UProperty::SENTENCE_BREAK_() { return get_static_field<SCAPIX_META_STRING("SENTENCE_BREAK"), jint>(); }
inline jint UProperty::SIMPLE_CASE_FOLDING_() { return get_static_field<SCAPIX_META_STRING("SIMPLE_CASE_FOLDING"), jint>(); }
inline jint UProperty::SIMPLE_LOWERCASE_MAPPING_() { return get_static_field<SCAPIX_META_STRING("SIMPLE_LOWERCASE_MAPPING"), jint>(); }
inline jint UProperty::SIMPLE_TITLECASE_MAPPING_() { return get_static_field<SCAPIX_META_STRING("SIMPLE_TITLECASE_MAPPING"), jint>(); }
inline jint UProperty::SIMPLE_UPPERCASE_MAPPING_() { return get_static_field<SCAPIX_META_STRING("SIMPLE_UPPERCASE_MAPPING"), jint>(); }
inline jint UProperty::SOFT_DOTTED_() { return get_static_field<SCAPIX_META_STRING("SOFT_DOTTED"), jint>(); }
inline jint UProperty::STRING_START_() { return get_static_field<SCAPIX_META_STRING("STRING_START"), jint>(); }
inline jint UProperty::S_TERM_() { return get_static_field<SCAPIX_META_STRING("S_TERM"), jint>(); }
inline jint UProperty::TERMINAL_PUNCTUATION_() { return get_static_field<SCAPIX_META_STRING("TERMINAL_PUNCTUATION"), jint>(); }
inline jint UProperty::TITLECASE_MAPPING_() { return get_static_field<SCAPIX_META_STRING("TITLECASE_MAPPING"), jint>(); }
inline jint UProperty::TRAIL_CANONICAL_COMBINING_CLASS_() { return get_static_field<SCAPIX_META_STRING("TRAIL_CANONICAL_COMBINING_CLASS"), jint>(); }
inline jint UProperty::UNIFIED_IDEOGRAPH_() { return get_static_field<SCAPIX_META_STRING("UNIFIED_IDEOGRAPH"), jint>(); }
inline jint UProperty::UPPERCASE_() { return get_static_field<SCAPIX_META_STRING("UPPERCASE"), jint>(); }
inline jint UProperty::UPPERCASE_MAPPING_() { return get_static_field<SCAPIX_META_STRING("UPPERCASE_MAPPING"), jint>(); }
inline jint UProperty::VARIATION_SELECTOR_() { return get_static_field<SCAPIX_META_STRING("VARIATION_SELECTOR"), jint>(); }
inline jint UProperty::WHITE_SPACE_() { return get_static_field<SCAPIX_META_STRING("WHITE_SPACE"), jint>(); }
inline jint UProperty::WORD_BREAK_() { return get_static_field<SCAPIX_META_STRING("WORD_BREAK"), jint>(); }
inline jint UProperty::XID_CONTINUE_() { return get_static_field<SCAPIX_META_STRING("XID_CONTINUE"), jint>(); }
inline jint UProperty::XID_START_() { return get_static_field<SCAPIX_META_STRING("XID_START"), jint>(); }

} // namespace android::icu::lang
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_ICU_LANG_UPROPERTY_H
