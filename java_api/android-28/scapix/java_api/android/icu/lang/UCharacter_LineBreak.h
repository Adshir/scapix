// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_ICU_LANG_UCHARACTER_LINEBREAK_H
#define SCAPIX_ANDROID_ICU_LANG_UCHARACTER_LINEBREAK_H

namespace scapix::java_api {


namespace android::icu::lang {

class UCharacter_LineBreak : public object_base<SCAPIX_META_STRING("android/icu/lang/UCharacter$LineBreak"),
	java::lang::Object>
{
public:

	static jint ALPHABETIC_();
	static jint AMBIGUOUS_();
	static jint BREAK_AFTER_();
	static jint BREAK_BEFORE_();
	static jint BREAK_BOTH_();
	static jint BREAK_SYMBOLS_();
	static jint CARRIAGE_RETURN_();
	static jint CLOSE_PARENTHESIS_();
	static jint CLOSE_PUNCTUATION_();
	static jint COMBINING_MARK_();
	static jint COMPLEX_CONTEXT_();
	static jint CONDITIONAL_JAPANESE_STARTER_();
	static jint CONTINGENT_BREAK_();
	static jint EXCLAMATION_();
	static jint E_BASE_();
	static jint E_MODIFIER_();
	static jint GLUE_();
	static jint H2_();
	static jint H3_();
	static jint HEBREW_LETTER_();
	static jint HYPHEN_();
	static jint IDEOGRAPHIC_();
	static jint INFIX_NUMERIC_();
	static jint INSEPARABLE_();
	static jint INSEPERABLE_();
	static jint JL_();
	static jint JT_();
	static jint JV_();
	static jint LINE_FEED_();
	static jint MANDATORY_BREAK_();
	static jint NEXT_LINE_();
	static jint NONSTARTER_();
	static jint NUMERIC_();
	static jint OPEN_PUNCTUATION_();
	static jint POSTFIX_NUMERIC_();
	static jint PREFIX_NUMERIC_();
	static jint QUOTATION_();
	static jint REGIONAL_INDICATOR_();
	static jint SPACE_();
	static jint SURROGATE_();
	static jint UNKNOWN_();
	static jint WORD_JOINER_();
	static jint ZWJ_();
	static jint ZWSPACE_();


protected:

	UCharacter_LineBreak(handle_type h) : base_(h) {}

};

} // namespace android::icu::lang
} // namespace scapix::java_api


namespace scapix::java_api {
namespace android::icu::lang {

inline jint UCharacter_LineBreak::ALPHABETIC_() { return get_static_field<SCAPIX_META_STRING("ALPHABETIC"), jint>(); }
inline jint UCharacter_LineBreak::AMBIGUOUS_() { return get_static_field<SCAPIX_META_STRING("AMBIGUOUS"), jint>(); }
inline jint UCharacter_LineBreak::BREAK_AFTER_() { return get_static_field<SCAPIX_META_STRING("BREAK_AFTER"), jint>(); }
inline jint UCharacter_LineBreak::BREAK_BEFORE_() { return get_static_field<SCAPIX_META_STRING("BREAK_BEFORE"), jint>(); }
inline jint UCharacter_LineBreak::BREAK_BOTH_() { return get_static_field<SCAPIX_META_STRING("BREAK_BOTH"), jint>(); }
inline jint UCharacter_LineBreak::BREAK_SYMBOLS_() { return get_static_field<SCAPIX_META_STRING("BREAK_SYMBOLS"), jint>(); }
inline jint UCharacter_LineBreak::CARRIAGE_RETURN_() { return get_static_field<SCAPIX_META_STRING("CARRIAGE_RETURN"), jint>(); }
inline jint UCharacter_LineBreak::CLOSE_PARENTHESIS_() { return get_static_field<SCAPIX_META_STRING("CLOSE_PARENTHESIS"), jint>(); }
inline jint UCharacter_LineBreak::CLOSE_PUNCTUATION_() { return get_static_field<SCAPIX_META_STRING("CLOSE_PUNCTUATION"), jint>(); }
inline jint UCharacter_LineBreak::COMBINING_MARK_() { return get_static_field<SCAPIX_META_STRING("COMBINING_MARK"), jint>(); }
inline jint UCharacter_LineBreak::COMPLEX_CONTEXT_() { return get_static_field<SCAPIX_META_STRING("COMPLEX_CONTEXT"), jint>(); }
inline jint UCharacter_LineBreak::CONDITIONAL_JAPANESE_STARTER_() { return get_static_field<SCAPIX_META_STRING("CONDITIONAL_JAPANESE_STARTER"), jint>(); }
inline jint UCharacter_LineBreak::CONTINGENT_BREAK_() { return get_static_field<SCAPIX_META_STRING("CONTINGENT_BREAK"), jint>(); }
inline jint UCharacter_LineBreak::EXCLAMATION_() { return get_static_field<SCAPIX_META_STRING("EXCLAMATION"), jint>(); }
inline jint UCharacter_LineBreak::E_BASE_() { return get_static_field<SCAPIX_META_STRING("E_BASE"), jint>(); }
inline jint UCharacter_LineBreak::E_MODIFIER_() { return get_static_field<SCAPIX_META_STRING("E_MODIFIER"), jint>(); }
inline jint UCharacter_LineBreak::GLUE_() { return get_static_field<SCAPIX_META_STRING("GLUE"), jint>(); }
inline jint UCharacter_LineBreak::H2_() { return get_static_field<SCAPIX_META_STRING("H2"), jint>(); }
inline jint UCharacter_LineBreak::H3_() { return get_static_field<SCAPIX_META_STRING("H3"), jint>(); }
inline jint UCharacter_LineBreak::HEBREW_LETTER_() { return get_static_field<SCAPIX_META_STRING("HEBREW_LETTER"), jint>(); }
inline jint UCharacter_LineBreak::HYPHEN_() { return get_static_field<SCAPIX_META_STRING("HYPHEN"), jint>(); }
inline jint UCharacter_LineBreak::IDEOGRAPHIC_() { return get_static_field<SCAPIX_META_STRING("IDEOGRAPHIC"), jint>(); }
inline jint UCharacter_LineBreak::INFIX_NUMERIC_() { return get_static_field<SCAPIX_META_STRING("INFIX_NUMERIC"), jint>(); }
inline jint UCharacter_LineBreak::INSEPARABLE_() { return get_static_field<SCAPIX_META_STRING("INSEPARABLE"), jint>(); }
inline jint UCharacter_LineBreak::INSEPERABLE_() { return get_static_field<SCAPIX_META_STRING("INSEPERABLE"), jint>(); }
inline jint UCharacter_LineBreak::JL_() { return get_static_field<SCAPIX_META_STRING("JL"), jint>(); }
inline jint UCharacter_LineBreak::JT_() { return get_static_field<SCAPIX_META_STRING("JT"), jint>(); }
inline jint UCharacter_LineBreak::JV_() { return get_static_field<SCAPIX_META_STRING("JV"), jint>(); }
inline jint UCharacter_LineBreak::LINE_FEED_() { return get_static_field<SCAPIX_META_STRING("LINE_FEED"), jint>(); }
inline jint UCharacter_LineBreak::MANDATORY_BREAK_() { return get_static_field<SCAPIX_META_STRING("MANDATORY_BREAK"), jint>(); }
inline jint UCharacter_LineBreak::NEXT_LINE_() { return get_static_field<SCAPIX_META_STRING("NEXT_LINE"), jint>(); }
inline jint UCharacter_LineBreak::NONSTARTER_() { return get_static_field<SCAPIX_META_STRING("NONSTARTER"), jint>(); }
inline jint UCharacter_LineBreak::NUMERIC_() { return get_static_field<SCAPIX_META_STRING("NUMERIC"), jint>(); }
inline jint UCharacter_LineBreak::OPEN_PUNCTUATION_() { return get_static_field<SCAPIX_META_STRING("OPEN_PUNCTUATION"), jint>(); }
inline jint UCharacter_LineBreak::POSTFIX_NUMERIC_() { return get_static_field<SCAPIX_META_STRING("POSTFIX_NUMERIC"), jint>(); }
inline jint UCharacter_LineBreak::PREFIX_NUMERIC_() { return get_static_field<SCAPIX_META_STRING("PREFIX_NUMERIC"), jint>(); }
inline jint UCharacter_LineBreak::QUOTATION_() { return get_static_field<SCAPIX_META_STRING("QUOTATION"), jint>(); }
inline jint UCharacter_LineBreak::REGIONAL_INDICATOR_() { return get_static_field<SCAPIX_META_STRING("REGIONAL_INDICATOR"), jint>(); }
inline jint UCharacter_LineBreak::SPACE_() { return get_static_field<SCAPIX_META_STRING("SPACE"), jint>(); }
inline jint UCharacter_LineBreak::SURROGATE_() { return get_static_field<SCAPIX_META_STRING("SURROGATE"), jint>(); }
inline jint UCharacter_LineBreak::UNKNOWN_() { return get_static_field<SCAPIX_META_STRING("UNKNOWN"), jint>(); }
inline jint UCharacter_LineBreak::WORD_JOINER_() { return get_static_field<SCAPIX_META_STRING("WORD_JOINER"), jint>(); }
inline jint UCharacter_LineBreak::ZWJ_() { return get_static_field<SCAPIX_META_STRING("ZWJ"), jint>(); }
inline jint UCharacter_LineBreak::ZWSPACE_() { return get_static_field<SCAPIX_META_STRING("ZWSPACE"), jint>(); }

} // namespace android::icu::lang
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_ICU_LANG_UCHARACTER_LINEBREAK_H
