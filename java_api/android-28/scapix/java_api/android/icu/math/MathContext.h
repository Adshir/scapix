// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/io/Serializable.h>

#ifndef SCAPIX_ANDROID_ICU_MATH_MATHCONTEXT_H
#define SCAPIX_ANDROID_ICU_MATH_MATHCONTEXT_H

namespace scapix::java_api {

namespace java::lang { class String; }

namespace android::icu::math {

class MathContext : public object_base<SCAPIX_META_STRING("android/icu/math/MathContext"),
	java::lang::Object,
	java::io::Serializable>
{
public:

	static ref<android::icu::math::MathContext> DEFAULT_();
	static jint ENGINEERING_();
	static jint PLAIN_();
	static jint ROUND_CEILING_();
	static jint ROUND_DOWN_();
	static jint ROUND_FLOOR_();
	static jint ROUND_HALF_DOWN_();
	static jint ROUND_HALF_EVEN_();
	static jint ROUND_HALF_UP_();
	static jint ROUND_UNNECESSARY_();
	static jint ROUND_UP_();
	static jint SCIENTIFIC_();

	static ref<MathContext> new_object(jint setdigits);
	static ref<MathContext> new_object(jint setdigits, jint setform);
	static ref<MathContext> new_object(jint setdigits, jint setform, jboolean setlostdigits);
	static ref<MathContext> new_object(jint setdigits, jint setform, jboolean setlostdigits, jint setroundingmode);
	jint getDigits();
	jint getForm();
	jboolean getLostDigits();
	jint getRoundingMode();
	ref<java::lang::String> toString();

protected:

	MathContext(handle_type h) : base_(h) {}

};

} // namespace android::icu::math
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::icu::math {

inline ref<android::icu::math::MathContext> MathContext::DEFAULT_() { return get_static_field<SCAPIX_META_STRING("DEFAULT"), ref<android::icu::math::MathContext>>(); }
inline jint MathContext::ENGINEERING_() { return get_static_field<SCAPIX_META_STRING("ENGINEERING"), jint>(); }
inline jint MathContext::PLAIN_() { return get_static_field<SCAPIX_META_STRING("PLAIN"), jint>(); }
inline jint MathContext::ROUND_CEILING_() { return get_static_field<SCAPIX_META_STRING("ROUND_CEILING"), jint>(); }
inline jint MathContext::ROUND_DOWN_() { return get_static_field<SCAPIX_META_STRING("ROUND_DOWN"), jint>(); }
inline jint MathContext::ROUND_FLOOR_() { return get_static_field<SCAPIX_META_STRING("ROUND_FLOOR"), jint>(); }
inline jint MathContext::ROUND_HALF_DOWN_() { return get_static_field<SCAPIX_META_STRING("ROUND_HALF_DOWN"), jint>(); }
inline jint MathContext::ROUND_HALF_EVEN_() { return get_static_field<SCAPIX_META_STRING("ROUND_HALF_EVEN"), jint>(); }
inline jint MathContext::ROUND_HALF_UP_() { return get_static_field<SCAPIX_META_STRING("ROUND_HALF_UP"), jint>(); }
inline jint MathContext::ROUND_UNNECESSARY_() { return get_static_field<SCAPIX_META_STRING("ROUND_UNNECESSARY"), jint>(); }
inline jint MathContext::ROUND_UP_() { return get_static_field<SCAPIX_META_STRING("ROUND_UP"), jint>(); }
inline jint MathContext::SCIENTIFIC_() { return get_static_field<SCAPIX_META_STRING("SCIENTIFIC"), jint>(); }
inline ref<MathContext> MathContext::new_object(jint setdigits) { return base_::new_object(setdigits); }
inline ref<MathContext> MathContext::new_object(jint setdigits, jint setform) { return base_::new_object(setdigits, setform); }
inline ref<MathContext> MathContext::new_object(jint setdigits, jint setform, jboolean setlostdigits) { return base_::new_object(setdigits, setform, setlostdigits); }
inline ref<MathContext> MathContext::new_object(jint setdigits, jint setform, jboolean setlostdigits, jint setroundingmode) { return base_::new_object(setdigits, setform, setlostdigits, setroundingmode); }
inline jint MathContext::getDigits() { return call_method<SCAPIX_META_STRING("getDigits"), jint>(); }
inline jint MathContext::getForm() { return call_method<SCAPIX_META_STRING("getForm"), jint>(); }
inline jboolean MathContext::getLostDigits() { return call_method<SCAPIX_META_STRING("getLostDigits"), jboolean>(); }
inline jint MathContext::getRoundingMode() { return call_method<SCAPIX_META_STRING("getRoundingMode"), jint>(); }
inline ref<java::lang::String> MathContext::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }

} // namespace android::icu::math
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_ICU_MATH_MATHCONTEXT_H
