// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/view/ViewGroup.h>

#ifndef SCAPIX_ANDROID_WIDGET_LINEARLAYOUT_H
#define SCAPIX_ANDROID_WIDGET_LINEARLAYOUT_H

namespace scapix::java_api {

namespace android::content { class Context; }
namespace android::graphics::drawable { class Drawable; }
namespace android::util { class AttributeSet; }
namespace android::widget { class LinearLayout_LayoutParams; }
namespace java::lang { class CharSequence; }

namespace android::widget {

class LinearLayout : public object_base<SCAPIX_META_STRING("android/widget/LinearLayout"),
	android::view::ViewGroup>
{
public:

	using LayoutParams = LinearLayout_LayoutParams;

	static jint HORIZONTAL_();
	static jint SHOW_DIVIDER_BEGINNING_();
	static jint SHOW_DIVIDER_END_();
	static jint SHOW_DIVIDER_MIDDLE_();
	static jint SHOW_DIVIDER_NONE_();
	static jint VERTICAL_();

	static ref<LinearLayout> new_object(ref<android::content::Context> context);
	static ref<LinearLayout> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs);
	static ref<LinearLayout> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr);
	static ref<LinearLayout> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr, jint defStyleRes);
	void setShowDividers(jint showDividers);
	jboolean shouldDelayChildPressedState();
	jint getShowDividers();
	ref<android::graphics::drawable::Drawable> getDividerDrawable();
	void setDividerDrawable(ref<android::graphics::drawable::Drawable> divider);
	void setDividerPadding(jint padding);
	jint getDividerPadding();
	jboolean isBaselineAligned();
	void setBaselineAligned(jboolean baselineAligned);
	jboolean isMeasureWithLargestChildEnabled();
	void setMeasureWithLargestChildEnabled(jboolean enabled);
	jint getBaseline();
	jint getBaselineAlignedChildIndex();
	void setBaselineAlignedChildIndex(jint i);
	jfloat getWeightSum();
	void setWeightSum(jfloat weightSum);
	void onRtlPropertiesChanged(jint layoutDirection);
	void setOrientation(jint orientation);
	jint getOrientation();
	void setGravity(jint gravity);
	jint getGravity();
	void setHorizontalGravity(jint horizontalGravity);
	void setVerticalGravity(jint verticalGravity);
	ref<android::widget::LinearLayout_LayoutParams> generateLayoutParams(ref<android::util::AttributeSet> attrs);
	ref<java::lang::CharSequence> getAccessibilityClassName();

protected:

	LinearLayout(handle_type h) : base_(h) {}

};

} // namespace android::widget
} // namespace scapix::java_api

#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/graphics/drawable/Drawable.h>
#include <scapix/java_api/android/util/AttributeSet.h>
#include <scapix/java_api/android/widget/LinearLayout_LayoutParams.h>
#include <scapix/java_api/java/lang/CharSequence.h>

namespace scapix::java_api {
namespace android::widget {

inline jint LinearLayout::HORIZONTAL_() { return get_static_field<SCAPIX_META_STRING("HORIZONTAL"), jint>(); }
inline jint LinearLayout::SHOW_DIVIDER_BEGINNING_() { return get_static_field<SCAPIX_META_STRING("SHOW_DIVIDER_BEGINNING"), jint>(); }
inline jint LinearLayout::SHOW_DIVIDER_END_() { return get_static_field<SCAPIX_META_STRING("SHOW_DIVIDER_END"), jint>(); }
inline jint LinearLayout::SHOW_DIVIDER_MIDDLE_() { return get_static_field<SCAPIX_META_STRING("SHOW_DIVIDER_MIDDLE"), jint>(); }
inline jint LinearLayout::SHOW_DIVIDER_NONE_() { return get_static_field<SCAPIX_META_STRING("SHOW_DIVIDER_NONE"), jint>(); }
inline jint LinearLayout::VERTICAL_() { return get_static_field<SCAPIX_META_STRING("VERTICAL"), jint>(); }
inline ref<LinearLayout> LinearLayout::new_object(ref<android::content::Context> context) { return base_::new_object(context); }
inline ref<LinearLayout> LinearLayout::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs) { return base_::new_object(context, attrs); }
inline ref<LinearLayout> LinearLayout::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr) { return base_::new_object(context, attrs, defStyleAttr); }
inline ref<LinearLayout> LinearLayout::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr, jint defStyleRes) { return base_::new_object(context, attrs, defStyleAttr, defStyleRes); }
inline void LinearLayout::setShowDividers(jint showDividers) { return call_method<SCAPIX_META_STRING("setShowDividers"), void>(showDividers); }
inline jboolean LinearLayout::shouldDelayChildPressedState() { return call_method<SCAPIX_META_STRING("shouldDelayChildPressedState"), jboolean>(); }
inline jint LinearLayout::getShowDividers() { return call_method<SCAPIX_META_STRING("getShowDividers"), jint>(); }
inline ref<android::graphics::drawable::Drawable> LinearLayout::getDividerDrawable() { return call_method<SCAPIX_META_STRING("getDividerDrawable"), ref<android::graphics::drawable::Drawable>>(); }
inline void LinearLayout::setDividerDrawable(ref<android::graphics::drawable::Drawable> divider) { return call_method<SCAPIX_META_STRING("setDividerDrawable"), void>(divider); }
inline void LinearLayout::setDividerPadding(jint padding) { return call_method<SCAPIX_META_STRING("setDividerPadding"), void>(padding); }
inline jint LinearLayout::getDividerPadding() { return call_method<SCAPIX_META_STRING("getDividerPadding"), jint>(); }
inline jboolean LinearLayout::isBaselineAligned() { return call_method<SCAPIX_META_STRING("isBaselineAligned"), jboolean>(); }
inline void LinearLayout::setBaselineAligned(jboolean baselineAligned) { return call_method<SCAPIX_META_STRING("setBaselineAligned"), void>(baselineAligned); }
inline jboolean LinearLayout::isMeasureWithLargestChildEnabled() { return call_method<SCAPIX_META_STRING("isMeasureWithLargestChildEnabled"), jboolean>(); }
inline void LinearLayout::setMeasureWithLargestChildEnabled(jboolean enabled) { return call_method<SCAPIX_META_STRING("setMeasureWithLargestChildEnabled"), void>(enabled); }
inline jint LinearLayout::getBaseline() { return call_method<SCAPIX_META_STRING("getBaseline"), jint>(); }
inline jint LinearLayout::getBaselineAlignedChildIndex() { return call_method<SCAPIX_META_STRING("getBaselineAlignedChildIndex"), jint>(); }
inline void LinearLayout::setBaselineAlignedChildIndex(jint i) { return call_method<SCAPIX_META_STRING("setBaselineAlignedChildIndex"), void>(i); }
inline jfloat LinearLayout::getWeightSum() { return call_method<SCAPIX_META_STRING("getWeightSum"), jfloat>(); }
inline void LinearLayout::setWeightSum(jfloat weightSum) { return call_method<SCAPIX_META_STRING("setWeightSum"), void>(weightSum); }
inline void LinearLayout::onRtlPropertiesChanged(jint layoutDirection) { return call_method<SCAPIX_META_STRING("onRtlPropertiesChanged"), void>(layoutDirection); }
inline void LinearLayout::setOrientation(jint orientation) { return call_method<SCAPIX_META_STRING("setOrientation"), void>(orientation); }
inline jint LinearLayout::getOrientation() { return call_method<SCAPIX_META_STRING("getOrientation"), jint>(); }
inline void LinearLayout::setGravity(jint gravity) { return call_method<SCAPIX_META_STRING("setGravity"), void>(gravity); }
inline jint LinearLayout::getGravity() { return call_method<SCAPIX_META_STRING("getGravity"), jint>(); }
inline void LinearLayout::setHorizontalGravity(jint horizontalGravity) { return call_method<SCAPIX_META_STRING("setHorizontalGravity"), void>(horizontalGravity); }
inline void LinearLayout::setVerticalGravity(jint verticalGravity) { return call_method<SCAPIX_META_STRING("setVerticalGravity"), void>(verticalGravity); }
inline ref<android::widget::LinearLayout_LayoutParams> LinearLayout::generateLayoutParams(ref<android::util::AttributeSet> attrs) { return call_method<SCAPIX_META_STRING("generateLayoutParams"), ref<android::widget::LinearLayout_LayoutParams>>(attrs); }
inline ref<java::lang::CharSequence> LinearLayout::getAccessibilityClassName() { return call_method<SCAPIX_META_STRING("getAccessibilityClassName"), ref<java::lang::CharSequence>>(); }

} // namespace android::widget
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_WIDGET_LINEARLAYOUT_H
