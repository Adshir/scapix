// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/widget/WrapperListAdapter.h>
#include <scapix/java_api/android/widget/Filterable.h>

#ifndef SCAPIX_ANDROID_WIDGET_HEADERVIEWLISTADAPTER_H
#define SCAPIX_ANDROID_WIDGET_HEADERVIEWLISTADAPTER_H

namespace scapix::java_api {

namespace android::database { class DataSetObserver; }
namespace android::view { class View; }
namespace android::view { class ViewGroup; }
namespace android::widget { class Filter; }
namespace android::widget { class ListAdapter; }
namespace java::util { class ArrayList; }

namespace android::widget {

class HeaderViewListAdapter : public object_base<SCAPIX_META_STRING("android/widget/HeaderViewListAdapter"),
	java::lang::Object,
	android::widget::WrapperListAdapter,
	android::widget::Filterable>
{
public:

	static ref<HeaderViewListAdapter> new_object(ref<java::util::ArrayList> headerViewInfos, ref<java::util::ArrayList> footerViewInfos, ref<android::widget::ListAdapter> adapter);
	jint getHeadersCount();
	jint getFootersCount();
	jboolean isEmpty();
	jboolean removeHeader(ref<android::view::View> v);
	jboolean removeFooter(ref<android::view::View> v);
	jint getCount();
	jboolean areAllItemsEnabled();
	jboolean isEnabled(jint position);
	ref<java::lang::Object> getItem(jint position);
	jlong getItemId(jint position);
	jboolean hasStableIds();
	ref<android::view::View> getView(jint position, ref<android::view::View> convertView, ref<android::view::ViewGroup> parent);
	jint getItemViewType(jint position);
	jint getViewTypeCount();
	void registerDataSetObserver(ref<android::database::DataSetObserver> observer);
	void unregisterDataSetObserver(ref<android::database::DataSetObserver> observer);
	ref<android::widget::Filter> getFilter();
	ref<android::widget::ListAdapter> getWrappedAdapter();

protected:

	HeaderViewListAdapter(handle_type h) : base_(h) {}

};

} // namespace android::widget
} // namespace scapix::java_api

#include <scapix/java_api/android/database/DataSetObserver.h>
#include <scapix/java_api/android/view/View.h>
#include <scapix/java_api/android/view/ViewGroup.h>
#include <scapix/java_api/android/widget/Filter.h>
#include <scapix/java_api/android/widget/ListAdapter.h>
#include <scapix/java_api/java/util/ArrayList.h>

namespace scapix::java_api {
namespace android::widget {

inline ref<HeaderViewListAdapter> HeaderViewListAdapter::new_object(ref<java::util::ArrayList> headerViewInfos, ref<java::util::ArrayList> footerViewInfos, ref<android::widget::ListAdapter> adapter) { return base_::new_object(headerViewInfos, footerViewInfos, adapter); }
inline jint HeaderViewListAdapter::getHeadersCount() { return call_method<SCAPIX_META_STRING("getHeadersCount"), jint>(); }
inline jint HeaderViewListAdapter::getFootersCount() { return call_method<SCAPIX_META_STRING("getFootersCount"), jint>(); }
inline jboolean HeaderViewListAdapter::isEmpty() { return call_method<SCAPIX_META_STRING("isEmpty"), jboolean>(); }
inline jboolean HeaderViewListAdapter::removeHeader(ref<android::view::View> v) { return call_method<SCAPIX_META_STRING("removeHeader"), jboolean>(v); }
inline jboolean HeaderViewListAdapter::removeFooter(ref<android::view::View> v) { return call_method<SCAPIX_META_STRING("removeFooter"), jboolean>(v); }
inline jint HeaderViewListAdapter::getCount() { return call_method<SCAPIX_META_STRING("getCount"), jint>(); }
inline jboolean HeaderViewListAdapter::areAllItemsEnabled() { return call_method<SCAPIX_META_STRING("areAllItemsEnabled"), jboolean>(); }
inline jboolean HeaderViewListAdapter::isEnabled(jint position) { return call_method<SCAPIX_META_STRING("isEnabled"), jboolean>(position); }
inline ref<java::lang::Object> HeaderViewListAdapter::getItem(jint position) { return call_method<SCAPIX_META_STRING("getItem"), ref<java::lang::Object>>(position); }
inline jlong HeaderViewListAdapter::getItemId(jint position) { return call_method<SCAPIX_META_STRING("getItemId"), jlong>(position); }
inline jboolean HeaderViewListAdapter::hasStableIds() { return call_method<SCAPIX_META_STRING("hasStableIds"), jboolean>(); }
inline ref<android::view::View> HeaderViewListAdapter::getView(jint position, ref<android::view::View> convertView, ref<android::view::ViewGroup> parent) { return call_method<SCAPIX_META_STRING("getView"), ref<android::view::View>>(position, convertView, parent); }
inline jint HeaderViewListAdapter::getItemViewType(jint position) { return call_method<SCAPIX_META_STRING("getItemViewType"), jint>(position); }
inline jint HeaderViewListAdapter::getViewTypeCount() { return call_method<SCAPIX_META_STRING("getViewTypeCount"), jint>(); }
inline void HeaderViewListAdapter::registerDataSetObserver(ref<android::database::DataSetObserver> observer) { return call_method<SCAPIX_META_STRING("registerDataSetObserver"), void>(observer); }
inline void HeaderViewListAdapter::unregisterDataSetObserver(ref<android::database::DataSetObserver> observer) { return call_method<SCAPIX_META_STRING("unregisterDataSetObserver"), void>(observer); }
inline ref<android::widget::Filter> HeaderViewListAdapter::getFilter() { return call_method<SCAPIX_META_STRING("getFilter"), ref<android::widget::Filter>>(); }
inline ref<android::widget::ListAdapter> HeaderViewListAdapter::getWrappedAdapter() { return call_method<SCAPIX_META_STRING("getWrappedAdapter"), ref<android::widget::ListAdapter>>(); }

} // namespace android::widget
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_WIDGET_HEADERVIEWLISTADAPTER_H
