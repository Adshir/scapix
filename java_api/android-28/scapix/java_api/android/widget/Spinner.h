// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/widget/AbsSpinner.h>
#include <scapix/java_api/android/content/DialogInterface_OnClickListener.h>

#ifndef SCAPIX_ANDROID_WIDGET_SPINNER_H
#define SCAPIX_ANDROID_WIDGET_SPINNER_H

namespace scapix::java_api {

namespace android::content { class Context; }
namespace android::content { class DialogInterface; }
namespace android::content::res { class Resources_Theme; }
namespace android::graphics::drawable { class Drawable; }
namespace android::os { class Parcelable; }
namespace android::util { class AttributeSet; }
namespace android::view { class MotionEvent; }
namespace android::view { class PointerIcon; }
namespace android::widget { class AdapterView_OnItemClickListener; }
namespace android::widget { class SpinnerAdapter; }
namespace java::lang { class CharSequence; }

namespace android::widget {

class Spinner : public object_base<SCAPIX_META_STRING("android/widget/Spinner"),
	android::widget::AbsSpinner,
	android::content::DialogInterface_OnClickListener>
{
public:

	static jint MODE_DIALOG_();
	static jint MODE_DROPDOWN_();

	static ref<Spinner> new_object(ref<android::content::Context> context);
	static ref<Spinner> new_object(ref<android::content::Context> context, jint mode);
	static ref<Spinner> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs);
	static ref<Spinner> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr);
	static ref<Spinner> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr, jint mode);
	static ref<Spinner> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr, jint defStyleRes, jint mode);
	static ref<Spinner> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr, jint defStyleRes, jint mode, ref<android::content::res::Resources_Theme> popupTheme);
	ref<android::content::Context> getPopupContext();
	void setPopupBackgroundDrawable(ref<android::graphics::drawable::Drawable> background);
	void setPopupBackgroundResource(jint resId);
	ref<android::graphics::drawable::Drawable> getPopupBackground();
	void setDropDownVerticalOffset(jint pixels);
	jint getDropDownVerticalOffset();
	void setDropDownHorizontalOffset(jint pixels);
	jint getDropDownHorizontalOffset();
	void setDropDownWidth(jint pixels);
	jint getDropDownWidth();
	void setEnabled(jboolean enabled);
	void setGravity(jint gravity);
	jint getGravity();
	void setAdapter(ref<android::widget::SpinnerAdapter> adapter);
	jint getBaseline();
	void setOnItemClickListener(ref<android::widget::AdapterView_OnItemClickListener> l);
	jboolean onTouchEvent(ref<android::view::MotionEvent> event);
	jboolean performClick();
	void onClick(ref<android::content::DialogInterface> dialog, jint which);
	ref<java::lang::CharSequence> getAccessibilityClassName();
	void setPrompt(ref<java::lang::CharSequence> prompt);
	void setPromptId(jint promptId);
	ref<java::lang::CharSequence> getPrompt();
	ref<android::os::Parcelable> onSaveInstanceState();
	void onRestoreInstanceState(ref<android::os::Parcelable> state);
	ref<android::view::PointerIcon> onResolvePointerIcon(ref<android::view::MotionEvent> event, jint pointerIndex);

protected:

	Spinner(handle_type h) : base_(h) {}

};

} // namespace android::widget
} // namespace scapix::java_api

#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/content/DialogInterface.h>
#include <scapix/java_api/android/content/res/Resources_Theme.h>
#include <scapix/java_api/android/graphics/drawable/Drawable.h>
#include <scapix/java_api/android/os/Parcelable.h>
#include <scapix/java_api/android/util/AttributeSet.h>
#include <scapix/java_api/android/view/MotionEvent.h>
#include <scapix/java_api/android/view/PointerIcon.h>
#include <scapix/java_api/android/widget/AdapterView_OnItemClickListener.h>
#include <scapix/java_api/android/widget/SpinnerAdapter.h>
#include <scapix/java_api/java/lang/CharSequence.h>

namespace scapix::java_api {
namespace android::widget {

inline jint Spinner::MODE_DIALOG_() { return get_static_field<SCAPIX_META_STRING("MODE_DIALOG"), jint>(); }
inline jint Spinner::MODE_DROPDOWN_() { return get_static_field<SCAPIX_META_STRING("MODE_DROPDOWN"), jint>(); }
inline ref<Spinner> Spinner::new_object(ref<android::content::Context> context) { return base_::new_object(context); }
inline ref<Spinner> Spinner::new_object(ref<android::content::Context> context, jint mode) { return base_::new_object(context, mode); }
inline ref<Spinner> Spinner::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs) { return base_::new_object(context, attrs); }
inline ref<Spinner> Spinner::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr) { return base_::new_object(context, attrs, defStyleAttr); }
inline ref<Spinner> Spinner::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr, jint mode) { return base_::new_object(context, attrs, defStyleAttr, mode); }
inline ref<Spinner> Spinner::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr, jint defStyleRes, jint mode) { return base_::new_object(context, attrs, defStyleAttr, defStyleRes, mode); }
inline ref<Spinner> Spinner::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr, jint defStyleRes, jint mode, ref<android::content::res::Resources_Theme> popupTheme) { return base_::new_object(context, attrs, defStyleAttr, defStyleRes, mode, popupTheme); }
inline ref<android::content::Context> Spinner::getPopupContext() { return call_method<SCAPIX_META_STRING("getPopupContext"), ref<android::content::Context>>(); }
inline void Spinner::setPopupBackgroundDrawable(ref<android::graphics::drawable::Drawable> background) { return call_method<SCAPIX_META_STRING("setPopupBackgroundDrawable"), void>(background); }
inline void Spinner::setPopupBackgroundResource(jint resId) { return call_method<SCAPIX_META_STRING("setPopupBackgroundResource"), void>(resId); }
inline ref<android::graphics::drawable::Drawable> Spinner::getPopupBackground() { return call_method<SCAPIX_META_STRING("getPopupBackground"), ref<android::graphics::drawable::Drawable>>(); }
inline void Spinner::setDropDownVerticalOffset(jint pixels) { return call_method<SCAPIX_META_STRING("setDropDownVerticalOffset"), void>(pixels); }
inline jint Spinner::getDropDownVerticalOffset() { return call_method<SCAPIX_META_STRING("getDropDownVerticalOffset"), jint>(); }
inline void Spinner::setDropDownHorizontalOffset(jint pixels) { return call_method<SCAPIX_META_STRING("setDropDownHorizontalOffset"), void>(pixels); }
inline jint Spinner::getDropDownHorizontalOffset() { return call_method<SCAPIX_META_STRING("getDropDownHorizontalOffset"), jint>(); }
inline void Spinner::setDropDownWidth(jint pixels) { return call_method<SCAPIX_META_STRING("setDropDownWidth"), void>(pixels); }
inline jint Spinner::getDropDownWidth() { return call_method<SCAPIX_META_STRING("getDropDownWidth"), jint>(); }
inline void Spinner::setEnabled(jboolean enabled) { return call_method<SCAPIX_META_STRING("setEnabled"), void>(enabled); }
inline void Spinner::setGravity(jint gravity) { return call_method<SCAPIX_META_STRING("setGravity"), void>(gravity); }
inline jint Spinner::getGravity() { return call_method<SCAPIX_META_STRING("getGravity"), jint>(); }
inline void Spinner::setAdapter(ref<android::widget::SpinnerAdapter> adapter) { return call_method<SCAPIX_META_STRING("setAdapter"), void>(adapter); }
inline jint Spinner::getBaseline() { return call_method<SCAPIX_META_STRING("getBaseline"), jint>(); }
inline void Spinner::setOnItemClickListener(ref<android::widget::AdapterView_OnItemClickListener> l) { return call_method<SCAPIX_META_STRING("setOnItemClickListener"), void>(l); }
inline jboolean Spinner::onTouchEvent(ref<android::view::MotionEvent> event) { return call_method<SCAPIX_META_STRING("onTouchEvent"), jboolean>(event); }
inline jboolean Spinner::performClick() { return call_method<SCAPIX_META_STRING("performClick"), jboolean>(); }
inline void Spinner::onClick(ref<android::content::DialogInterface> dialog, jint which) { return call_method<SCAPIX_META_STRING("onClick"), void>(dialog, which); }
inline ref<java::lang::CharSequence> Spinner::getAccessibilityClassName() { return call_method<SCAPIX_META_STRING("getAccessibilityClassName"), ref<java::lang::CharSequence>>(); }
inline void Spinner::setPrompt(ref<java::lang::CharSequence> prompt) { return call_method<SCAPIX_META_STRING("setPrompt"), void>(prompt); }
inline void Spinner::setPromptId(jint promptId) { return call_method<SCAPIX_META_STRING("setPromptId"), void>(promptId); }
inline ref<java::lang::CharSequence> Spinner::getPrompt() { return call_method<SCAPIX_META_STRING("getPrompt"), ref<java::lang::CharSequence>>(); }
inline ref<android::os::Parcelable> Spinner::onSaveInstanceState() { return call_method<SCAPIX_META_STRING("onSaveInstanceState"), ref<android::os::Parcelable>>(); }
inline void Spinner::onRestoreInstanceState(ref<android::os::Parcelable> state) { return call_method<SCAPIX_META_STRING("onRestoreInstanceState"), void>(state); }
inline ref<android::view::PointerIcon> Spinner::onResolvePointerIcon(ref<android::view::MotionEvent> event, jint pointerIndex) { return call_method<SCAPIX_META_STRING("onResolvePointerIcon"), ref<android::view::PointerIcon>>(event, pointerIndex); }

} // namespace android::widget
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_WIDGET_SPINNER_H
