// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/widget/AdapterView.h>

#ifndef SCAPIX_ANDROID_WIDGET_ABSSPINNER_H
#define SCAPIX_ANDROID_WIDGET_ABSSPINNER_H

namespace scapix::java_api {

namespace android::content { class Context; }
namespace android::os { class Parcelable; }
namespace android::util { class AttributeSet; }
namespace android::view { class View; }
namespace android::view::autofill { class AutofillValue; }
namespace android::widget { class SpinnerAdapter; }
namespace java::lang { class CharSequence; }

namespace android::widget {

class AbsSpinner : public object_base<SCAPIX_META_STRING("android/widget/AbsSpinner"),
	android::widget::AdapterView>
{
public:

	static ref<AbsSpinner> new_object(ref<android::content::Context> context);
	static ref<AbsSpinner> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs);
	static ref<AbsSpinner> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr);
	static ref<AbsSpinner> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr, jint defStyleRes);
	void setAdapter(ref<android::widget::SpinnerAdapter> adapter);
	void setSelection(jint position, jboolean animate);
	void setSelection(jint position);
	ref<android::view::View> getSelectedView();
	void requestLayout();
	ref<android::widget::SpinnerAdapter> getAdapter();
	jint getCount();
	jint pointToPosition(jint x, jint y);
	ref<android::os::Parcelable> onSaveInstanceState();
	void onRestoreInstanceState(ref<android::os::Parcelable> state);
	ref<java::lang::CharSequence> getAccessibilityClassName();
	void autofill(ref<android::view::autofill::AutofillValue> value);
	jint getAutofillType();
	ref<android::view::autofill::AutofillValue> getAutofillValue();

protected:

	AbsSpinner(handle_type h) : base_(h) {}

};

} // namespace android::widget
} // namespace scapix::java_api

#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/os/Parcelable.h>
#include <scapix/java_api/android/util/AttributeSet.h>
#include <scapix/java_api/android/view/View.h>
#include <scapix/java_api/android/view/autofill/AutofillValue.h>
#include <scapix/java_api/android/widget/SpinnerAdapter.h>
#include <scapix/java_api/java/lang/CharSequence.h>

namespace scapix::java_api {
namespace android::widget {

inline ref<AbsSpinner> AbsSpinner::new_object(ref<android::content::Context> context) { return base_::new_object(context); }
inline ref<AbsSpinner> AbsSpinner::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs) { return base_::new_object(context, attrs); }
inline ref<AbsSpinner> AbsSpinner::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr) { return base_::new_object(context, attrs, defStyleAttr); }
inline ref<AbsSpinner> AbsSpinner::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr, jint defStyleRes) { return base_::new_object(context, attrs, defStyleAttr, defStyleRes); }
inline void AbsSpinner::setAdapter(ref<android::widget::SpinnerAdapter> adapter) { return call_method<SCAPIX_META_STRING("setAdapter"), void>(adapter); }
inline void AbsSpinner::setSelection(jint position, jboolean animate) { return call_method<SCAPIX_META_STRING("setSelection"), void>(position, animate); }
inline void AbsSpinner::setSelection(jint position) { return call_method<SCAPIX_META_STRING("setSelection"), void>(position); }
inline ref<android::view::View> AbsSpinner::getSelectedView() { return call_method<SCAPIX_META_STRING("getSelectedView"), ref<android::view::View>>(); }
inline void AbsSpinner::requestLayout() { return call_method<SCAPIX_META_STRING("requestLayout"), void>(); }
inline ref<android::widget::SpinnerAdapter> AbsSpinner::getAdapter() { return call_method<SCAPIX_META_STRING("getAdapter"), ref<android::widget::SpinnerAdapter>>(); }
inline jint AbsSpinner::getCount() { return call_method<SCAPIX_META_STRING("getCount"), jint>(); }
inline jint AbsSpinner::pointToPosition(jint x, jint y) { return call_method<SCAPIX_META_STRING("pointToPosition"), jint>(x, y); }
inline ref<android::os::Parcelable> AbsSpinner::onSaveInstanceState() { return call_method<SCAPIX_META_STRING("onSaveInstanceState"), ref<android::os::Parcelable>>(); }
inline void AbsSpinner::onRestoreInstanceState(ref<android::os::Parcelable> state) { return call_method<SCAPIX_META_STRING("onRestoreInstanceState"), void>(state); }
inline ref<java::lang::CharSequence> AbsSpinner::getAccessibilityClassName() { return call_method<SCAPIX_META_STRING("getAccessibilityClassName"), ref<java::lang::CharSequence>>(); }
inline void AbsSpinner::autofill(ref<android::view::autofill::AutofillValue> value) { return call_method<SCAPIX_META_STRING("autofill"), void>(value); }
inline jint AbsSpinner::getAutofillType() { return call_method<SCAPIX_META_STRING("getAutofillType"), jint>(); }
inline ref<android::view::autofill::AutofillValue> AbsSpinner::getAutofillValue() { return call_method<SCAPIX_META_STRING("getAutofillValue"), ref<android::view::autofill::AutofillValue>>(); }

} // namespace android::widget
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_WIDGET_ABSSPINNER_H
