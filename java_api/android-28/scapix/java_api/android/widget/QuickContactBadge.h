// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/widget/ImageView.h>
#include <scapix/java_api/android/view/View_OnClickListener.h>

#ifndef SCAPIX_ANDROID_WIDGET_QUICKCONTACTBADGE_H
#define SCAPIX_ANDROID_WIDGET_QUICKCONTACTBADGE_H

namespace scapix::java_api {

namespace android::content { class Context; }
namespace android::graphics::drawable { class Drawable; }
namespace android::net { class Uri; }
namespace android::os { class Bundle; }
namespace android::util { class AttributeSet; }
namespace android::view { class View; }
namespace java::lang { class CharSequence; }
namespace java::lang { class String; }

namespace android::widget {

class QuickContactBadge : public object_base<SCAPIX_META_STRING("android/widget/QuickContactBadge"),
	android::widget::ImageView,
	android::view::View_OnClickListener>
{
public:

	static ref<QuickContactBadge> new_object(ref<android::content::Context> context);
	static ref<QuickContactBadge> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs);
	static ref<QuickContactBadge> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr);
	static ref<QuickContactBadge> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr, jint defStyleRes);
	void drawableHotspotChanged(jfloat x, jfloat y);
	void setMode(jint size);
	void setPrioritizedMimeType(ref<java::lang::String> prioritizedMimeType);
	void setImageToDefault();
	void assignContactUri(ref<android::net::Uri> contactUri);
	void assignContactFromEmail(ref<java::lang::String> emailAddress, jboolean lazyLookup);
	void assignContactFromEmail(ref<java::lang::String> emailAddress, jboolean lazyLookup, ref<android::os::Bundle> extras);
	void assignContactFromPhone(ref<java::lang::String> phoneNumber, jboolean lazyLookup);
	void assignContactFromPhone(ref<java::lang::String> phoneNumber, jboolean lazyLookup, ref<android::os::Bundle> extras);
	void setOverlay(ref<android::graphics::drawable::Drawable> overlay);
	void onClick(ref<android::view::View> v);
	ref<java::lang::CharSequence> getAccessibilityClassName();
	void setExcludeMimes(ref<link::java::array<java::lang::String>> excludeMimes);

protected:

	QuickContactBadge(handle_type h) : base_(h) {}

};

} // namespace android::widget
} // namespace scapix::java_api

#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/graphics/drawable/Drawable.h>
#include <scapix/java_api/android/net/Uri.h>
#include <scapix/java_api/android/os/Bundle.h>
#include <scapix/java_api/android/util/AttributeSet.h>
#include <scapix/java_api/android/view/View.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::widget {

inline ref<QuickContactBadge> QuickContactBadge::new_object(ref<android::content::Context> context) { return base_::new_object(context); }
inline ref<QuickContactBadge> QuickContactBadge::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs) { return base_::new_object(context, attrs); }
inline ref<QuickContactBadge> QuickContactBadge::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr) { return base_::new_object(context, attrs, defStyleAttr); }
inline ref<QuickContactBadge> QuickContactBadge::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr, jint defStyleRes) { return base_::new_object(context, attrs, defStyleAttr, defStyleRes); }
inline void QuickContactBadge::drawableHotspotChanged(jfloat x, jfloat y) { return call_method<SCAPIX_META_STRING("drawableHotspotChanged"), void>(x, y); }
inline void QuickContactBadge::setMode(jint size) { return call_method<SCAPIX_META_STRING("setMode"), void>(size); }
inline void QuickContactBadge::setPrioritizedMimeType(ref<java::lang::String> prioritizedMimeType) { return call_method<SCAPIX_META_STRING("setPrioritizedMimeType"), void>(prioritizedMimeType); }
inline void QuickContactBadge::setImageToDefault() { return call_method<SCAPIX_META_STRING("setImageToDefault"), void>(); }
inline void QuickContactBadge::assignContactUri(ref<android::net::Uri> contactUri) { return call_method<SCAPIX_META_STRING("assignContactUri"), void>(contactUri); }
inline void QuickContactBadge::assignContactFromEmail(ref<java::lang::String> emailAddress, jboolean lazyLookup) { return call_method<SCAPIX_META_STRING("assignContactFromEmail"), void>(emailAddress, lazyLookup); }
inline void QuickContactBadge::assignContactFromEmail(ref<java::lang::String> emailAddress, jboolean lazyLookup, ref<android::os::Bundle> extras) { return call_method<SCAPIX_META_STRING("assignContactFromEmail"), void>(emailAddress, lazyLookup, extras); }
inline void QuickContactBadge::assignContactFromPhone(ref<java::lang::String> phoneNumber, jboolean lazyLookup) { return call_method<SCAPIX_META_STRING("assignContactFromPhone"), void>(phoneNumber, lazyLookup); }
inline void QuickContactBadge::assignContactFromPhone(ref<java::lang::String> phoneNumber, jboolean lazyLookup, ref<android::os::Bundle> extras) { return call_method<SCAPIX_META_STRING("assignContactFromPhone"), void>(phoneNumber, lazyLookup, extras); }
inline void QuickContactBadge::setOverlay(ref<android::graphics::drawable::Drawable> overlay) { return call_method<SCAPIX_META_STRING("setOverlay"), void>(overlay); }
inline void QuickContactBadge::onClick(ref<android::view::View> v) { return call_method<SCAPIX_META_STRING("onClick"), void>(v); }
inline ref<java::lang::CharSequence> QuickContactBadge::getAccessibilityClassName() { return call_method<SCAPIX_META_STRING("getAccessibilityClassName"), ref<java::lang::CharSequence>>(); }
inline void QuickContactBadge::setExcludeMimes(ref<link::java::array<java::lang::String>> excludeMimes) { return call_method<SCAPIX_META_STRING("setExcludeMimes"), void>(excludeMimes); }

} // namespace android::widget
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_WIDGET_QUICKCONTACTBADGE_H
