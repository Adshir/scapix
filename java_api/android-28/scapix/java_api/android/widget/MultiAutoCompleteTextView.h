// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/widget/AutoCompleteTextView.h>

#ifndef SCAPIX_ANDROID_WIDGET_MULTIAUTOCOMPLETETEXTVIEW_H
#define SCAPIX_ANDROID_WIDGET_MULTIAUTOCOMPLETETEXTVIEW_H

namespace scapix::java_api {

namespace android::content { class Context; }
namespace android::util { class AttributeSet; }
namespace android::widget { class MultiAutoCompleteTextView_Tokenizer; }
namespace java::lang { class CharSequence; }
namespace android::widget { class MultiAutoCompleteTextView_CommaTokenizer; }

namespace android::widget {

class MultiAutoCompleteTextView : public object_base<SCAPIX_META_STRING("android/widget/MultiAutoCompleteTextView"),
	android::widget::AutoCompleteTextView>
{
public:

	using Tokenizer = MultiAutoCompleteTextView_Tokenizer;
	using CommaTokenizer = MultiAutoCompleteTextView_CommaTokenizer;

	static ref<MultiAutoCompleteTextView> new_object(ref<android::content::Context> context);
	static ref<MultiAutoCompleteTextView> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs);
	static ref<MultiAutoCompleteTextView> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr);
	static ref<MultiAutoCompleteTextView> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr, jint defStyleRes);
	void setTokenizer(ref<android::widget::MultiAutoCompleteTextView_Tokenizer> t);
	jboolean enoughToFilter();
	void performValidation();
	ref<java::lang::CharSequence> getAccessibilityClassName();

protected:

	MultiAutoCompleteTextView(handle_type h) : base_(h) {}

};

} // namespace android::widget
} // namespace scapix::java_api

#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/util/AttributeSet.h>
#include <scapix/java_api/android/widget/MultiAutoCompleteTextView_Tokenizer.h>
#include <scapix/java_api/java/lang/CharSequence.h>

namespace scapix::java_api {
namespace android::widget {

inline ref<MultiAutoCompleteTextView> MultiAutoCompleteTextView::new_object(ref<android::content::Context> context) { return base_::new_object(context); }
inline ref<MultiAutoCompleteTextView> MultiAutoCompleteTextView::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs) { return base_::new_object(context, attrs); }
inline ref<MultiAutoCompleteTextView> MultiAutoCompleteTextView::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr) { return base_::new_object(context, attrs, defStyleAttr); }
inline ref<MultiAutoCompleteTextView> MultiAutoCompleteTextView::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr, jint defStyleRes) { return base_::new_object(context, attrs, defStyleAttr, defStyleRes); }
inline void MultiAutoCompleteTextView::setTokenizer(ref<android::widget::MultiAutoCompleteTextView_Tokenizer> t) { return call_method<SCAPIX_META_STRING("setTokenizer"), void>(t); }
inline jboolean MultiAutoCompleteTextView::enoughToFilter() { return call_method<SCAPIX_META_STRING("enoughToFilter"), jboolean>(); }
inline void MultiAutoCompleteTextView::performValidation() { return call_method<SCAPIX_META_STRING("performValidation"), void>(); }
inline ref<java::lang::CharSequence> MultiAutoCompleteTextView::getAccessibilityClassName() { return call_method<SCAPIX_META_STRING("getAccessibilityClassName"), ref<java::lang::CharSequence>>(); }

} // namespace android::widget
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_WIDGET_MULTIAUTOCOMPLETETEXTVIEW_H
