// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/view/ViewGroup.h>

#ifndef SCAPIX_ANDROID_WIDGET_TOOLBAR_H
#define SCAPIX_ANDROID_WIDGET_TOOLBAR_H

namespace scapix::java_api {

namespace android::content { class Context; }
namespace android::graphics::drawable { class Drawable; }
namespace android::util { class AttributeSet; }
namespace android::view { class Menu; }
namespace android::view { class MotionEvent; }
namespace android::view { class View_OnClickListener; }
namespace android::widget { class Toolbar_LayoutParams; }
namespace android::widget { class Toolbar_OnMenuItemClickListener; }
namespace java::lang { class CharSequence; }

namespace android::widget {

class Toolbar : public object_base<SCAPIX_META_STRING("android/widget/Toolbar"),
	android::view::ViewGroup>
{
public:

	using OnMenuItemClickListener = Toolbar_OnMenuItemClickListener;
	using LayoutParams = Toolbar_LayoutParams;

	static ref<Toolbar> new_object(ref<android::content::Context> context);
	static ref<Toolbar> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs);
	static ref<Toolbar> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr);
	static ref<Toolbar> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr, jint defStyleRes);
	void setPopupTheme(jint resId);
	jint getPopupTheme();
	void setTitleMargin(jint start, jint top, jint end, jint bottom);
	jint getTitleMarginStart();
	void setTitleMarginStart(jint margin);
	jint getTitleMarginTop();
	void setTitleMarginTop(jint margin);
	jint getTitleMarginEnd();
	void setTitleMarginEnd(jint margin);
	jint getTitleMarginBottom();
	void setTitleMarginBottom(jint margin);
	void onRtlPropertiesChanged(jint layoutDirection);
	void setLogo(jint resId);
	jboolean isOverflowMenuShowing();
	jboolean showOverflowMenu();
	jboolean hideOverflowMenu();
	void dismissPopupMenus();
	void setLogo(ref<android::graphics::drawable::Drawable> drawable);
	ref<android::graphics::drawable::Drawable> getLogo();
	void setLogoDescription(jint resId);
	void setLogoDescription(ref<java::lang::CharSequence> description);
	ref<java::lang::CharSequence> getLogoDescription();
	jboolean hasExpandedActionView();
	void collapseActionView();
	ref<java::lang::CharSequence> getTitle();
	void setTitle(jint resId);
	void setTitle(ref<java::lang::CharSequence> title);
	ref<java::lang::CharSequence> getSubtitle();
	void setSubtitle(jint resId);
	void setSubtitle(ref<java::lang::CharSequence> subtitle);
	void setTitleTextAppearance(ref<android::content::Context> context, jint resId);
	void setSubtitleTextAppearance(ref<android::content::Context> context, jint resId);
	void setTitleTextColor(jint color);
	void setSubtitleTextColor(jint color);
	ref<java::lang::CharSequence> getNavigationContentDescription();
	void setNavigationContentDescription(jint resId);
	void setNavigationContentDescription(ref<java::lang::CharSequence> description);
	void setNavigationIcon(jint resId);
	void setNavigationIcon(ref<android::graphics::drawable::Drawable> icon);
	ref<android::graphics::drawable::Drawable> getNavigationIcon();
	void setNavigationOnClickListener(ref<android::view::View_OnClickListener> listener);
	ref<android::view::Menu> getMenu();
	void setOverflowIcon(ref<android::graphics::drawable::Drawable> icon);
	ref<android::graphics::drawable::Drawable> getOverflowIcon();
	void inflateMenu(jint resId);
	void setOnMenuItemClickListener(ref<android::widget::Toolbar_OnMenuItemClickListener> listener);
	void setContentInsetsRelative(jint contentInsetStart, jint contentInsetEnd);
	jint getContentInsetStart();
	jint getContentInsetEnd();
	void setContentInsetsAbsolute(jint contentInsetLeft, jint contentInsetRight);
	jint getContentInsetLeft();
	jint getContentInsetRight();
	jint getContentInsetStartWithNavigation();
	void setContentInsetStartWithNavigation(jint insetStartWithNavigation);
	jint getContentInsetEndWithActions();
	void setContentInsetEndWithActions(jint insetEndWithActions);
	jint getCurrentContentInsetStart();
	jint getCurrentContentInsetEnd();
	jint getCurrentContentInsetLeft();
	jint getCurrentContentInsetRight();
	jboolean onTouchEvent(ref<android::view::MotionEvent> ev);
	ref<android::widget::Toolbar_LayoutParams> generateLayoutParams(ref<android::util::AttributeSet> attrs);

protected:

	Toolbar(handle_type h) : base_(h) {}

};

} // namespace android::widget
} // namespace scapix::java_api

#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/graphics/drawable/Drawable.h>
#include <scapix/java_api/android/util/AttributeSet.h>
#include <scapix/java_api/android/view/Menu.h>
#include <scapix/java_api/android/view/MotionEvent.h>
#include <scapix/java_api/android/view/View_OnClickListener.h>
#include <scapix/java_api/android/widget/Toolbar_LayoutParams.h>
#include <scapix/java_api/android/widget/Toolbar_OnMenuItemClickListener.h>
#include <scapix/java_api/java/lang/CharSequence.h>

namespace scapix::java_api {
namespace android::widget {

inline ref<Toolbar> Toolbar::new_object(ref<android::content::Context> context) { return base_::new_object(context); }
inline ref<Toolbar> Toolbar::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs) { return base_::new_object(context, attrs); }
inline ref<Toolbar> Toolbar::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr) { return base_::new_object(context, attrs, defStyleAttr); }
inline ref<Toolbar> Toolbar::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr, jint defStyleRes) { return base_::new_object(context, attrs, defStyleAttr, defStyleRes); }
inline void Toolbar::setPopupTheme(jint resId) { return call_method<SCAPIX_META_STRING("setPopupTheme"), void>(resId); }
inline jint Toolbar::getPopupTheme() { return call_method<SCAPIX_META_STRING("getPopupTheme"), jint>(); }
inline void Toolbar::setTitleMargin(jint start, jint top, jint end, jint bottom) { return call_method<SCAPIX_META_STRING("setTitleMargin"), void>(start, top, end, bottom); }
inline jint Toolbar::getTitleMarginStart() { return call_method<SCAPIX_META_STRING("getTitleMarginStart"), jint>(); }
inline void Toolbar::setTitleMarginStart(jint margin) { return call_method<SCAPIX_META_STRING("setTitleMarginStart"), void>(margin); }
inline jint Toolbar::getTitleMarginTop() { return call_method<SCAPIX_META_STRING("getTitleMarginTop"), jint>(); }
inline void Toolbar::setTitleMarginTop(jint margin) { return call_method<SCAPIX_META_STRING("setTitleMarginTop"), void>(margin); }
inline jint Toolbar::getTitleMarginEnd() { return call_method<SCAPIX_META_STRING("getTitleMarginEnd"), jint>(); }
inline void Toolbar::setTitleMarginEnd(jint margin) { return call_method<SCAPIX_META_STRING("setTitleMarginEnd"), void>(margin); }
inline jint Toolbar::getTitleMarginBottom() { return call_method<SCAPIX_META_STRING("getTitleMarginBottom"), jint>(); }
inline void Toolbar::setTitleMarginBottom(jint margin) { return call_method<SCAPIX_META_STRING("setTitleMarginBottom"), void>(margin); }
inline void Toolbar::onRtlPropertiesChanged(jint layoutDirection) { return call_method<SCAPIX_META_STRING("onRtlPropertiesChanged"), void>(layoutDirection); }
inline void Toolbar::setLogo(jint resId) { return call_method<SCAPIX_META_STRING("setLogo"), void>(resId); }
inline jboolean Toolbar::isOverflowMenuShowing() { return call_method<SCAPIX_META_STRING("isOverflowMenuShowing"), jboolean>(); }
inline jboolean Toolbar::showOverflowMenu() { return call_method<SCAPIX_META_STRING("showOverflowMenu"), jboolean>(); }
inline jboolean Toolbar::hideOverflowMenu() { return call_method<SCAPIX_META_STRING("hideOverflowMenu"), jboolean>(); }
inline void Toolbar::dismissPopupMenus() { return call_method<SCAPIX_META_STRING("dismissPopupMenus"), void>(); }
inline void Toolbar::setLogo(ref<android::graphics::drawable::Drawable> drawable) { return call_method<SCAPIX_META_STRING("setLogo"), void>(drawable); }
inline ref<android::graphics::drawable::Drawable> Toolbar::getLogo() { return call_method<SCAPIX_META_STRING("getLogo"), ref<android::graphics::drawable::Drawable>>(); }
inline void Toolbar::setLogoDescription(jint resId) { return call_method<SCAPIX_META_STRING("setLogoDescription"), void>(resId); }
inline void Toolbar::setLogoDescription(ref<java::lang::CharSequence> description) { return call_method<SCAPIX_META_STRING("setLogoDescription"), void>(description); }
inline ref<java::lang::CharSequence> Toolbar::getLogoDescription() { return call_method<SCAPIX_META_STRING("getLogoDescription"), ref<java::lang::CharSequence>>(); }
inline jboolean Toolbar::hasExpandedActionView() { return call_method<SCAPIX_META_STRING("hasExpandedActionView"), jboolean>(); }
inline void Toolbar::collapseActionView() { return call_method<SCAPIX_META_STRING("collapseActionView"), void>(); }
inline ref<java::lang::CharSequence> Toolbar::getTitle() { return call_method<SCAPIX_META_STRING("getTitle"), ref<java::lang::CharSequence>>(); }
inline void Toolbar::setTitle(jint resId) { return call_method<SCAPIX_META_STRING("setTitle"), void>(resId); }
inline void Toolbar::setTitle(ref<java::lang::CharSequence> title) { return call_method<SCAPIX_META_STRING("setTitle"), void>(title); }
inline ref<java::lang::CharSequence> Toolbar::getSubtitle() { return call_method<SCAPIX_META_STRING("getSubtitle"), ref<java::lang::CharSequence>>(); }
inline void Toolbar::setSubtitle(jint resId) { return call_method<SCAPIX_META_STRING("setSubtitle"), void>(resId); }
inline void Toolbar::setSubtitle(ref<java::lang::CharSequence> subtitle) { return call_method<SCAPIX_META_STRING("setSubtitle"), void>(subtitle); }
inline void Toolbar::setTitleTextAppearance(ref<android::content::Context> context, jint resId) { return call_method<SCAPIX_META_STRING("setTitleTextAppearance"), void>(context, resId); }
inline void Toolbar::setSubtitleTextAppearance(ref<android::content::Context> context, jint resId) { return call_method<SCAPIX_META_STRING("setSubtitleTextAppearance"), void>(context, resId); }
inline void Toolbar::setTitleTextColor(jint color) { return call_method<SCAPIX_META_STRING("setTitleTextColor"), void>(color); }
inline void Toolbar::setSubtitleTextColor(jint color) { return call_method<SCAPIX_META_STRING("setSubtitleTextColor"), void>(color); }
inline ref<java::lang::CharSequence> Toolbar::getNavigationContentDescription() { return call_method<SCAPIX_META_STRING("getNavigationContentDescription"), ref<java::lang::CharSequence>>(); }
inline void Toolbar::setNavigationContentDescription(jint resId) { return call_method<SCAPIX_META_STRING("setNavigationContentDescription"), void>(resId); }
inline void Toolbar::setNavigationContentDescription(ref<java::lang::CharSequence> description) { return call_method<SCAPIX_META_STRING("setNavigationContentDescription"), void>(description); }
inline void Toolbar::setNavigationIcon(jint resId) { return call_method<SCAPIX_META_STRING("setNavigationIcon"), void>(resId); }
inline void Toolbar::setNavigationIcon(ref<android::graphics::drawable::Drawable> icon) { return call_method<SCAPIX_META_STRING("setNavigationIcon"), void>(icon); }
inline ref<android::graphics::drawable::Drawable> Toolbar::getNavigationIcon() { return call_method<SCAPIX_META_STRING("getNavigationIcon"), ref<android::graphics::drawable::Drawable>>(); }
inline void Toolbar::setNavigationOnClickListener(ref<android::view::View_OnClickListener> listener) { return call_method<SCAPIX_META_STRING("setNavigationOnClickListener"), void>(listener); }
inline ref<android::view::Menu> Toolbar::getMenu() { return call_method<SCAPIX_META_STRING("getMenu"), ref<android::view::Menu>>(); }
inline void Toolbar::setOverflowIcon(ref<android::graphics::drawable::Drawable> icon) { return call_method<SCAPIX_META_STRING("setOverflowIcon"), void>(icon); }
inline ref<android::graphics::drawable::Drawable> Toolbar::getOverflowIcon() { return call_method<SCAPIX_META_STRING("getOverflowIcon"), ref<android::graphics::drawable::Drawable>>(); }
inline void Toolbar::inflateMenu(jint resId) { return call_method<SCAPIX_META_STRING("inflateMenu"), void>(resId); }
inline void Toolbar::setOnMenuItemClickListener(ref<android::widget::Toolbar_OnMenuItemClickListener> listener) { return call_method<SCAPIX_META_STRING("setOnMenuItemClickListener"), void>(listener); }
inline void Toolbar::setContentInsetsRelative(jint contentInsetStart, jint contentInsetEnd) { return call_method<SCAPIX_META_STRING("setContentInsetsRelative"), void>(contentInsetStart, contentInsetEnd); }
inline jint Toolbar::getContentInsetStart() { return call_method<SCAPIX_META_STRING("getContentInsetStart"), jint>(); }
inline jint Toolbar::getContentInsetEnd() { return call_method<SCAPIX_META_STRING("getContentInsetEnd"), jint>(); }
inline void Toolbar::setContentInsetsAbsolute(jint contentInsetLeft, jint contentInsetRight) { return call_method<SCAPIX_META_STRING("setContentInsetsAbsolute"), void>(contentInsetLeft, contentInsetRight); }
inline jint Toolbar::getContentInsetLeft() { return call_method<SCAPIX_META_STRING("getContentInsetLeft"), jint>(); }
inline jint Toolbar::getContentInsetRight() { return call_method<SCAPIX_META_STRING("getContentInsetRight"), jint>(); }
inline jint Toolbar::getContentInsetStartWithNavigation() { return call_method<SCAPIX_META_STRING("getContentInsetStartWithNavigation"), jint>(); }
inline void Toolbar::setContentInsetStartWithNavigation(jint insetStartWithNavigation) { return call_method<SCAPIX_META_STRING("setContentInsetStartWithNavigation"), void>(insetStartWithNavigation); }
inline jint Toolbar::getContentInsetEndWithActions() { return call_method<SCAPIX_META_STRING("getContentInsetEndWithActions"), jint>(); }
inline void Toolbar::setContentInsetEndWithActions(jint insetEndWithActions) { return call_method<SCAPIX_META_STRING("setContentInsetEndWithActions"), void>(insetEndWithActions); }
inline jint Toolbar::getCurrentContentInsetStart() { return call_method<SCAPIX_META_STRING("getCurrentContentInsetStart"), jint>(); }
inline jint Toolbar::getCurrentContentInsetEnd() { return call_method<SCAPIX_META_STRING("getCurrentContentInsetEnd"), jint>(); }
inline jint Toolbar::getCurrentContentInsetLeft() { return call_method<SCAPIX_META_STRING("getCurrentContentInsetLeft"), jint>(); }
inline jint Toolbar::getCurrentContentInsetRight() { return call_method<SCAPIX_META_STRING("getCurrentContentInsetRight"), jint>(); }
inline jboolean Toolbar::onTouchEvent(ref<android::view::MotionEvent> ev) { return call_method<SCAPIX_META_STRING("onTouchEvent"), jboolean>(ev); }
inline ref<android::widget::Toolbar_LayoutParams> Toolbar::generateLayoutParams(ref<android::util::AttributeSet> attrs) { return call_method<SCAPIX_META_STRING("generateLayoutParams"), ref<android::widget::Toolbar_LayoutParams>>(attrs); }

} // namespace android::widget
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_WIDGET_TOOLBAR_H
