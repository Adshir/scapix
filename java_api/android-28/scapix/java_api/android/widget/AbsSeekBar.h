// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/widget/ProgressBar.h>

#ifndef SCAPIX_ANDROID_WIDGET_ABSSEEKBAR_H
#define SCAPIX_ANDROID_WIDGET_ABSSEEKBAR_H

namespace scapix::java_api {

namespace android::content { class Context; }
namespace android::content::res { class ColorStateList; }
namespace android::graphics { class PorterDuff_Mode; }
namespace android::graphics::drawable { class Drawable; }
namespace android::util { class AttributeSet; }
namespace android::view { class KeyEvent; }
namespace android::view { class MotionEvent; }
namespace java::lang { class CharSequence; }

namespace android::widget {

class AbsSeekBar : public object_base<SCAPIX_META_STRING("android/widget/AbsSeekBar"),
	android::widget::ProgressBar>
{
public:

	static ref<AbsSeekBar> new_object(ref<android::content::Context> context);
	static ref<AbsSeekBar> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs);
	static ref<AbsSeekBar> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr);
	static ref<AbsSeekBar> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr, jint defStyleRes);
	void setThumb(ref<android::graphics::drawable::Drawable> thumb);
	ref<android::graphics::drawable::Drawable> getThumb();
	void setThumbTintList(ref<android::content::res::ColorStateList> tint);
	ref<android::content::res::ColorStateList> getThumbTintList();
	void setThumbTintMode(ref<android::graphics::PorterDuff_Mode> tintMode);
	ref<android::graphics::PorterDuff_Mode> getThumbTintMode();
	jint getThumbOffset();
	void setThumbOffset(jint thumbOffset);
	void setSplitTrack(jboolean splitTrack);
	jboolean getSplitTrack();
	void setTickMark(ref<android::graphics::drawable::Drawable> tickMark);
	ref<android::graphics::drawable::Drawable> getTickMark();
	void setTickMarkTintList(ref<android::content::res::ColorStateList> tint);
	ref<android::content::res::ColorStateList> getTickMarkTintList();
	void setTickMarkTintMode(ref<android::graphics::PorterDuff_Mode> tintMode);
	ref<android::graphics::PorterDuff_Mode> getTickMarkTintMode();
	void setKeyProgressIncrement(jint increment);
	jint getKeyProgressIncrement();
	void setMin(jint min);
	void setMax(jint max);
	void jumpDrawablesToCurrentState();
	void drawableHotspotChanged(jfloat x, jfloat y);
	jboolean onTouchEvent(ref<android::view::MotionEvent> event);
	jboolean onKeyDown(jint keyCode, ref<android::view::KeyEvent> event);
	ref<java::lang::CharSequence> getAccessibilityClassName();
	void onRtlPropertiesChanged(jint layoutDirection);

protected:

	AbsSeekBar(handle_type h) : base_(h) {}

};

} // namespace android::widget
} // namespace scapix::java_api

#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/content/res/ColorStateList.h>
#include <scapix/java_api/android/graphics/PorterDuff_Mode.h>
#include <scapix/java_api/android/graphics/drawable/Drawable.h>
#include <scapix/java_api/android/util/AttributeSet.h>
#include <scapix/java_api/android/view/KeyEvent.h>
#include <scapix/java_api/android/view/MotionEvent.h>
#include <scapix/java_api/java/lang/CharSequence.h>

namespace scapix::java_api {
namespace android::widget {

inline ref<AbsSeekBar> AbsSeekBar::new_object(ref<android::content::Context> context) { return base_::new_object(context); }
inline ref<AbsSeekBar> AbsSeekBar::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs) { return base_::new_object(context, attrs); }
inline ref<AbsSeekBar> AbsSeekBar::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr) { return base_::new_object(context, attrs, defStyleAttr); }
inline ref<AbsSeekBar> AbsSeekBar::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr, jint defStyleRes) { return base_::new_object(context, attrs, defStyleAttr, defStyleRes); }
inline void AbsSeekBar::setThumb(ref<android::graphics::drawable::Drawable> thumb) { return call_method<SCAPIX_META_STRING("setThumb"), void>(thumb); }
inline ref<android::graphics::drawable::Drawable> AbsSeekBar::getThumb() { return call_method<SCAPIX_META_STRING("getThumb"), ref<android::graphics::drawable::Drawable>>(); }
inline void AbsSeekBar::setThumbTintList(ref<android::content::res::ColorStateList> tint) { return call_method<SCAPIX_META_STRING("setThumbTintList"), void>(tint); }
inline ref<android::content::res::ColorStateList> AbsSeekBar::getThumbTintList() { return call_method<SCAPIX_META_STRING("getThumbTintList"), ref<android::content::res::ColorStateList>>(); }
inline void AbsSeekBar::setThumbTintMode(ref<android::graphics::PorterDuff_Mode> tintMode) { return call_method<SCAPIX_META_STRING("setThumbTintMode"), void>(tintMode); }
inline ref<android::graphics::PorterDuff_Mode> AbsSeekBar::getThumbTintMode() { return call_method<SCAPIX_META_STRING("getThumbTintMode"), ref<android::graphics::PorterDuff_Mode>>(); }
inline jint AbsSeekBar::getThumbOffset() { return call_method<SCAPIX_META_STRING("getThumbOffset"), jint>(); }
inline void AbsSeekBar::setThumbOffset(jint thumbOffset) { return call_method<SCAPIX_META_STRING("setThumbOffset"), void>(thumbOffset); }
inline void AbsSeekBar::setSplitTrack(jboolean splitTrack) { return call_method<SCAPIX_META_STRING("setSplitTrack"), void>(splitTrack); }
inline jboolean AbsSeekBar::getSplitTrack() { return call_method<SCAPIX_META_STRING("getSplitTrack"), jboolean>(); }
inline void AbsSeekBar::setTickMark(ref<android::graphics::drawable::Drawable> tickMark) { return call_method<SCAPIX_META_STRING("setTickMark"), void>(tickMark); }
inline ref<android::graphics::drawable::Drawable> AbsSeekBar::getTickMark() { return call_method<SCAPIX_META_STRING("getTickMark"), ref<android::graphics::drawable::Drawable>>(); }
inline void AbsSeekBar::setTickMarkTintList(ref<android::content::res::ColorStateList> tint) { return call_method<SCAPIX_META_STRING("setTickMarkTintList"), void>(tint); }
inline ref<android::content::res::ColorStateList> AbsSeekBar::getTickMarkTintList() { return call_method<SCAPIX_META_STRING("getTickMarkTintList"), ref<android::content::res::ColorStateList>>(); }
inline void AbsSeekBar::setTickMarkTintMode(ref<android::graphics::PorterDuff_Mode> tintMode) { return call_method<SCAPIX_META_STRING("setTickMarkTintMode"), void>(tintMode); }
inline ref<android::graphics::PorterDuff_Mode> AbsSeekBar::getTickMarkTintMode() { return call_method<SCAPIX_META_STRING("getTickMarkTintMode"), ref<android::graphics::PorterDuff_Mode>>(); }
inline void AbsSeekBar::setKeyProgressIncrement(jint increment) { return call_method<SCAPIX_META_STRING("setKeyProgressIncrement"), void>(increment); }
inline jint AbsSeekBar::getKeyProgressIncrement() { return call_method<SCAPIX_META_STRING("getKeyProgressIncrement"), jint>(); }
inline void AbsSeekBar::setMin(jint min) { return call_method<SCAPIX_META_STRING("setMin"), void>(min); }
inline void AbsSeekBar::setMax(jint max) { return call_method<SCAPIX_META_STRING("setMax"), void>(max); }
inline void AbsSeekBar::jumpDrawablesToCurrentState() { return call_method<SCAPIX_META_STRING("jumpDrawablesToCurrentState"), void>(); }
inline void AbsSeekBar::drawableHotspotChanged(jfloat x, jfloat y) { return call_method<SCAPIX_META_STRING("drawableHotspotChanged"), void>(x, y); }
inline jboolean AbsSeekBar::onTouchEvent(ref<android::view::MotionEvent> event) { return call_method<SCAPIX_META_STRING("onTouchEvent"), jboolean>(event); }
inline jboolean AbsSeekBar::onKeyDown(jint keyCode, ref<android::view::KeyEvent> event) { return call_method<SCAPIX_META_STRING("onKeyDown"), jboolean>(keyCode, event); }
inline ref<java::lang::CharSequence> AbsSeekBar::getAccessibilityClassName() { return call_method<SCAPIX_META_STRING("getAccessibilityClassName"), ref<java::lang::CharSequence>>(); }
inline void AbsSeekBar::onRtlPropertiesChanged(jint layoutDirection) { return call_method<SCAPIX_META_STRING("onRtlPropertiesChanged"), void>(layoutDirection); }

} // namespace android::widget
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_WIDGET_ABSSEEKBAR_H
