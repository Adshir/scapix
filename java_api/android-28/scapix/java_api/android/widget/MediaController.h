// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/widget/FrameLayout.h>

#ifndef SCAPIX_ANDROID_WIDGET_MEDIACONTROLLER_H
#define SCAPIX_ANDROID_WIDGET_MEDIACONTROLLER_H

namespace scapix::java_api {

namespace android::content { class Context; }
namespace android::util { class AttributeSet; }
namespace android::view { class KeyEvent; }
namespace android::view { class MotionEvent; }
namespace android::view { class View; }
namespace android::view { class View_OnClickListener; }
namespace android::widget { class MediaController_MediaPlayerControl; }
namespace java::lang { class CharSequence; }

namespace android::widget {

class MediaController : public object_base<SCAPIX_META_STRING("android/widget/MediaController"),
	android::widget::FrameLayout>
{
public:

	using MediaPlayerControl = MediaController_MediaPlayerControl;

	static ref<MediaController> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs);
	static ref<MediaController> new_object(ref<android::content::Context> context, jboolean useFastForward);
	static ref<MediaController> new_object(ref<android::content::Context> context);
	void onFinishInflate();
	void setMediaPlayer(ref<android::widget::MediaController_MediaPlayerControl> player);
	void setAnchorView(ref<android::view::View> view);
	void show();
	void show(jint timeout);
	jboolean isShowing();
	void hide();
	jboolean onTouchEvent(ref<android::view::MotionEvent> event);
	jboolean onTrackballEvent(ref<android::view::MotionEvent> ev);
	jboolean dispatchKeyEvent(ref<android::view::KeyEvent> event);
	void setEnabled(jboolean enabled);
	ref<java::lang::CharSequence> getAccessibilityClassName();
	void setPrevNextListeners(ref<android::view::View_OnClickListener> next, ref<android::view::View_OnClickListener> prev);

protected:

	MediaController(handle_type h) : base_(h) {}

};

} // namespace android::widget
} // namespace scapix::java_api

#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/util/AttributeSet.h>
#include <scapix/java_api/android/view/KeyEvent.h>
#include <scapix/java_api/android/view/MotionEvent.h>
#include <scapix/java_api/android/view/View.h>
#include <scapix/java_api/android/view/View_OnClickListener.h>
#include <scapix/java_api/android/widget/MediaController_MediaPlayerControl.h>
#include <scapix/java_api/java/lang/CharSequence.h>

namespace scapix::java_api {
namespace android::widget {

inline ref<MediaController> MediaController::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs) { return base_::new_object(context, attrs); }
inline ref<MediaController> MediaController::new_object(ref<android::content::Context> context, jboolean useFastForward) { return base_::new_object(context, useFastForward); }
inline ref<MediaController> MediaController::new_object(ref<android::content::Context> context) { return base_::new_object(context); }
inline void MediaController::onFinishInflate() { return call_method<SCAPIX_META_STRING("onFinishInflate"), void>(); }
inline void MediaController::setMediaPlayer(ref<android::widget::MediaController_MediaPlayerControl> player) { return call_method<SCAPIX_META_STRING("setMediaPlayer"), void>(player); }
inline void MediaController::setAnchorView(ref<android::view::View> view) { return call_method<SCAPIX_META_STRING("setAnchorView"), void>(view); }
inline void MediaController::show() { return call_method<SCAPIX_META_STRING("show"), void>(); }
inline void MediaController::show(jint timeout) { return call_method<SCAPIX_META_STRING("show"), void>(timeout); }
inline jboolean MediaController::isShowing() { return call_method<SCAPIX_META_STRING("isShowing"), jboolean>(); }
inline void MediaController::hide() { return call_method<SCAPIX_META_STRING("hide"), void>(); }
inline jboolean MediaController::onTouchEvent(ref<android::view::MotionEvent> event) { return call_method<SCAPIX_META_STRING("onTouchEvent"), jboolean>(event); }
inline jboolean MediaController::onTrackballEvent(ref<android::view::MotionEvent> ev) { return call_method<SCAPIX_META_STRING("onTrackballEvent"), jboolean>(ev); }
inline jboolean MediaController::dispatchKeyEvent(ref<android::view::KeyEvent> event) { return call_method<SCAPIX_META_STRING("dispatchKeyEvent"), jboolean>(event); }
inline void MediaController::setEnabled(jboolean enabled) { return call_method<SCAPIX_META_STRING("setEnabled"), void>(enabled); }
inline ref<java::lang::CharSequence> MediaController::getAccessibilityClassName() { return call_method<SCAPIX_META_STRING("getAccessibilityClassName"), ref<java::lang::CharSequence>>(); }
inline void MediaController::setPrevNextListeners(ref<android::view::View_OnClickListener> next, ref<android::view::View_OnClickListener> prev) { return call_method<SCAPIX_META_STRING("setPrevNextListeners"), void>(next, prev); }

} // namespace android::widget
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_WIDGET_MEDIACONTROLLER_H
