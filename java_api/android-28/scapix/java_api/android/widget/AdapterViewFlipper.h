// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/widget/AdapterViewAnimator.h>

#ifndef SCAPIX_ANDROID_WIDGET_ADAPTERVIEWFLIPPER_H
#define SCAPIX_ANDROID_WIDGET_ADAPTERVIEWFLIPPER_H

namespace scapix::java_api {

namespace android::content { class Context; }
namespace android::util { class AttributeSet; }
namespace android::widget { class Adapter; }
namespace java::lang { class CharSequence; }

namespace android::widget {

class AdapterViewFlipper : public object_base<SCAPIX_META_STRING("android/widget/AdapterViewFlipper"),
	android::widget::AdapterViewAnimator>
{
public:

	static ref<AdapterViewFlipper> new_object(ref<android::content::Context> context);
	static ref<AdapterViewFlipper> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs);
	static ref<AdapterViewFlipper> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr);
	static ref<AdapterViewFlipper> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr, jint defStyleRes);
	void setAdapter(ref<android::widget::Adapter> adapter);
	jint getFlipInterval();
	void setFlipInterval(jint flipInterval);
	void startFlipping();
	void stopFlipping();
	void showNext();
	void showPrevious();
	jboolean isFlipping();
	void setAutoStart(jboolean autoStart);
	jboolean isAutoStart();
	void fyiWillBeAdvancedByHostKThx();
	ref<java::lang::CharSequence> getAccessibilityClassName();

protected:

	AdapterViewFlipper(handle_type h) : base_(h) {}

};

} // namespace android::widget
} // namespace scapix::java_api

#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/util/AttributeSet.h>
#include <scapix/java_api/android/widget/Adapter.h>
#include <scapix/java_api/java/lang/CharSequence.h>

namespace scapix::java_api {
namespace android::widget {

inline ref<AdapterViewFlipper> AdapterViewFlipper::new_object(ref<android::content::Context> context) { return base_::new_object(context); }
inline ref<AdapterViewFlipper> AdapterViewFlipper::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs) { return base_::new_object(context, attrs); }
inline ref<AdapterViewFlipper> AdapterViewFlipper::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr) { return base_::new_object(context, attrs, defStyleAttr); }
inline ref<AdapterViewFlipper> AdapterViewFlipper::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr, jint defStyleRes) { return base_::new_object(context, attrs, defStyleAttr, defStyleRes); }
inline void AdapterViewFlipper::setAdapter(ref<android::widget::Adapter> adapter) { return call_method<SCAPIX_META_STRING("setAdapter"), void>(adapter); }
inline jint AdapterViewFlipper::getFlipInterval() { return call_method<SCAPIX_META_STRING("getFlipInterval"), jint>(); }
inline void AdapterViewFlipper::setFlipInterval(jint flipInterval) { return call_method<SCAPIX_META_STRING("setFlipInterval"), void>(flipInterval); }
inline void AdapterViewFlipper::startFlipping() { return call_method<SCAPIX_META_STRING("startFlipping"), void>(); }
inline void AdapterViewFlipper::stopFlipping() { return call_method<SCAPIX_META_STRING("stopFlipping"), void>(); }
inline void AdapterViewFlipper::showNext() { return call_method<SCAPIX_META_STRING("showNext"), void>(); }
inline void AdapterViewFlipper::showPrevious() { return call_method<SCAPIX_META_STRING("showPrevious"), void>(); }
inline jboolean AdapterViewFlipper::isFlipping() { return call_method<SCAPIX_META_STRING("isFlipping"), jboolean>(); }
inline void AdapterViewFlipper::setAutoStart(jboolean autoStart) { return call_method<SCAPIX_META_STRING("setAutoStart"), void>(autoStart); }
inline jboolean AdapterViewFlipper::isAutoStart() { return call_method<SCAPIX_META_STRING("isAutoStart"), jboolean>(); }
inline void AdapterViewFlipper::fyiWillBeAdvancedByHostKThx() { return call_method<SCAPIX_META_STRING("fyiWillBeAdvancedByHostKThx"), void>(); }
inline ref<java::lang::CharSequence> AdapterViewFlipper::getAccessibilityClassName() { return call_method<SCAPIX_META_STRING("getAccessibilityClassName"), ref<java::lang::CharSequence>>(); }

} // namespace android::widget
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_WIDGET_ADAPTERVIEWFLIPPER_H
