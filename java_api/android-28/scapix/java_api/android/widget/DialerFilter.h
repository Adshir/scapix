// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/widget/RelativeLayout.h>

#ifndef SCAPIX_ANDROID_WIDGET_DIALERFILTER_H
#define SCAPIX_ANDROID_WIDGET_DIALERFILTER_H

namespace scapix::java_api {

namespace android::content { class Context; }
namespace android::text { class TextWatcher; }
namespace android::util { class AttributeSet; }
namespace android::view { class KeyEvent; }
namespace java::lang { class CharSequence; }
namespace java::lang { class String; }

namespace android::widget {

class DialerFilter : public object_base<SCAPIX_META_STRING("android/widget/DialerFilter"),
	android::widget::RelativeLayout>
{
public:

	static jint DIGITS_AND_LETTERS_();
	static jint DIGITS_AND_LETTERS_NO_DIGITS_();
	static jint DIGITS_AND_LETTERS_NO_LETTERS_();
	static jint DIGITS_ONLY_();
	static jint LETTERS_ONLY_();

	static ref<DialerFilter> new_object(ref<android::content::Context> context);
	static ref<DialerFilter> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs);
	jboolean isQwertyKeyboard();
	jboolean onKeyDown(jint keyCode, ref<android::view::KeyEvent> event);
	jboolean onKeyUp(jint keyCode, ref<android::view::KeyEvent> event);
	jint getMode();
	void setMode(jint newMode);
	ref<java::lang::CharSequence> getLetters();
	ref<java::lang::CharSequence> getDigits();
	ref<java::lang::CharSequence> getFilterText();
	void append(ref<java::lang::String> text);
	void clearText();
	void setLettersWatcher(ref<android::text::TextWatcher> watcher);
	void setDigitsWatcher(ref<android::text::TextWatcher> watcher);
	void setFilterWatcher(ref<android::text::TextWatcher> watcher);
	void removeFilterWatcher(ref<android::text::TextWatcher> watcher);

protected:

	DialerFilter(handle_type h) : base_(h) {}

};

} // namespace android::widget
} // namespace scapix::java_api

#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/text/TextWatcher.h>
#include <scapix/java_api/android/util/AttributeSet.h>
#include <scapix/java_api/android/view/KeyEvent.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::widget {

inline jint DialerFilter::DIGITS_AND_LETTERS_() { return get_static_field<SCAPIX_META_STRING("DIGITS_AND_LETTERS"), jint>(); }
inline jint DialerFilter::DIGITS_AND_LETTERS_NO_DIGITS_() { return get_static_field<SCAPIX_META_STRING("DIGITS_AND_LETTERS_NO_DIGITS"), jint>(); }
inline jint DialerFilter::DIGITS_AND_LETTERS_NO_LETTERS_() { return get_static_field<SCAPIX_META_STRING("DIGITS_AND_LETTERS_NO_LETTERS"), jint>(); }
inline jint DialerFilter::DIGITS_ONLY_() { return get_static_field<SCAPIX_META_STRING("DIGITS_ONLY"), jint>(); }
inline jint DialerFilter::LETTERS_ONLY_() { return get_static_field<SCAPIX_META_STRING("LETTERS_ONLY"), jint>(); }
inline ref<DialerFilter> DialerFilter::new_object(ref<android::content::Context> context) { return base_::new_object(context); }
inline ref<DialerFilter> DialerFilter::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs) { return base_::new_object(context, attrs); }
inline jboolean DialerFilter::isQwertyKeyboard() { return call_method<SCAPIX_META_STRING("isQwertyKeyboard"), jboolean>(); }
inline jboolean DialerFilter::onKeyDown(jint keyCode, ref<android::view::KeyEvent> event) { return call_method<SCAPIX_META_STRING("onKeyDown"), jboolean>(keyCode, event); }
inline jboolean DialerFilter::onKeyUp(jint keyCode, ref<android::view::KeyEvent> event) { return call_method<SCAPIX_META_STRING("onKeyUp"), jboolean>(keyCode, event); }
inline jint DialerFilter::getMode() { return call_method<SCAPIX_META_STRING("getMode"), jint>(); }
inline void DialerFilter::setMode(jint newMode) { return call_method<SCAPIX_META_STRING("setMode"), void>(newMode); }
inline ref<java::lang::CharSequence> DialerFilter::getLetters() { return call_method<SCAPIX_META_STRING("getLetters"), ref<java::lang::CharSequence>>(); }
inline ref<java::lang::CharSequence> DialerFilter::getDigits() { return call_method<SCAPIX_META_STRING("getDigits"), ref<java::lang::CharSequence>>(); }
inline ref<java::lang::CharSequence> DialerFilter::getFilterText() { return call_method<SCAPIX_META_STRING("getFilterText"), ref<java::lang::CharSequence>>(); }
inline void DialerFilter::append(ref<java::lang::String> text) { return call_method<SCAPIX_META_STRING("append"), void>(text); }
inline void DialerFilter::clearText() { return call_method<SCAPIX_META_STRING("clearText"), void>(); }
inline void DialerFilter::setLettersWatcher(ref<android::text::TextWatcher> watcher) { return call_method<SCAPIX_META_STRING("setLettersWatcher"), void>(watcher); }
inline void DialerFilter::setDigitsWatcher(ref<android::text::TextWatcher> watcher) { return call_method<SCAPIX_META_STRING("setDigitsWatcher"), void>(watcher); }
inline void DialerFilter::setFilterWatcher(ref<android::text::TextWatcher> watcher) { return call_method<SCAPIX_META_STRING("setFilterWatcher"), void>(watcher); }
inline void DialerFilter::removeFilterWatcher(ref<android::text::TextWatcher> watcher) { return call_method<SCAPIX_META_STRING("removeFilterWatcher"), void>(watcher); }

} // namespace android::widget
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_WIDGET_DIALERFILTER_H
