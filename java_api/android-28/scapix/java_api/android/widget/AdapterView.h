// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/view/ViewGroup.h>

#ifndef SCAPIX_ANDROID_WIDGET_ADAPTERVIEW_H
#define SCAPIX_ANDROID_WIDGET_ADAPTERVIEW_H

namespace scapix::java_api {

namespace android::content { class Context; }
namespace android::util { class AttributeSet; }
namespace android::view { class View; }
namespace android::view { class View_OnClickListener; }
namespace android::view { class ViewGroup_LayoutParams; }
namespace android::view { class ViewStructure; }
namespace android::widget { class Adapter; }
namespace android::widget { class AdapterView_OnItemClickListener; }
namespace android::widget { class AdapterView_OnItemLongClickListener; }
namespace android::widget { class AdapterView_OnItemSelectedListener; }
namespace java::lang { class CharSequence; }
namespace java::lang { class Object; }
namespace android::widget { class AdapterView_AdapterContextMenuInfo; }

namespace android::widget {

class AdapterView : public object_base<SCAPIX_META_STRING("android/widget/AdapterView"),
	android::view::ViewGroup>
{
public:

	using OnItemSelectedListener = AdapterView_OnItemSelectedListener;
	using OnItemLongClickListener = AdapterView_OnItemLongClickListener;
	using OnItemClickListener = AdapterView_OnItemClickListener;
	using AdapterContextMenuInfo = AdapterView_AdapterContextMenuInfo;

	static jint INVALID_POSITION_();
	static jlong INVALID_ROW_ID_();
	static jint ITEM_VIEW_TYPE_HEADER_OR_FOOTER_();
	static jint ITEM_VIEW_TYPE_IGNORE_();

	static ref<AdapterView> new_object(ref<android::content::Context> context);
	static ref<AdapterView> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs);
	static ref<AdapterView> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr);
	static ref<AdapterView> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr, jint defStyleRes);
	void setOnItemClickListener(ref<android::widget::AdapterView_OnItemClickListener> listener);
	ref<android::widget::AdapterView_OnItemClickListener> getOnItemClickListener();
	jboolean performItemClick(ref<android::view::View> view, jint position, jlong id);
	void setOnItemLongClickListener(ref<android::widget::AdapterView_OnItemLongClickListener> listener);
	ref<android::widget::AdapterView_OnItemLongClickListener> getOnItemLongClickListener();
	void setOnItemSelectedListener(ref<android::widget::AdapterView_OnItemSelectedListener> listener);
	ref<android::widget::AdapterView_OnItemSelectedListener> getOnItemSelectedListener();
	ref<android::widget::Adapter> getAdapter();
	void setAdapter(ref<android::widget::Adapter> p1);
	void addView(ref<android::view::View> child);
	void addView(ref<android::view::View> child, jint index);
	void addView(ref<android::view::View> child, ref<android::view::ViewGroup_LayoutParams> params);
	void addView(ref<android::view::View> child, jint index, ref<android::view::ViewGroup_LayoutParams> params);
	void removeView(ref<android::view::View> child);
	void removeViewAt(jint index);
	void removeAllViews();
	jint getSelectedItemPosition();
	jlong getSelectedItemId();
	ref<android::view::View> getSelectedView();
	ref<java::lang::Object> getSelectedItem();
	jint getCount();
	jint getPositionForView(ref<android::view::View> view);
	jint getFirstVisiblePosition();
	jint getLastVisiblePosition();
	void setSelection(jint p1);
	void setEmptyView(ref<android::view::View> emptyView);
	ref<android::view::View> getEmptyView();
	void setFocusable(jint focusable);
	void setFocusableInTouchMode(jboolean focusable);
	ref<java::lang::Object> getItemAtPosition(jint position);
	jlong getItemIdAtPosition(jint position);
	void setOnClickListener(ref<android::view::View_OnClickListener> l);
	ref<java::lang::CharSequence> getAccessibilityClassName();
	void onProvideAutofillStructure(ref<android::view::ViewStructure> structure, jint flags);

protected:

	AdapterView(handle_type h) : base_(h) {}

};

} // namespace android::widget
} // namespace scapix::java_api

#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/util/AttributeSet.h>
#include <scapix/java_api/android/view/View.h>
#include <scapix/java_api/android/view/View_OnClickListener.h>
#include <scapix/java_api/android/view/ViewGroup_LayoutParams.h>
#include <scapix/java_api/android/view/ViewStructure.h>
#include <scapix/java_api/android/widget/Adapter.h>
#include <scapix/java_api/android/widget/AdapterView_OnItemClickListener.h>
#include <scapix/java_api/android/widget/AdapterView_OnItemLongClickListener.h>
#include <scapix/java_api/android/widget/AdapterView_OnItemSelectedListener.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/java/lang/Object.h>

namespace scapix::java_api {
namespace android::widget {

inline jint AdapterView::INVALID_POSITION_() { return get_static_field<SCAPIX_META_STRING("INVALID_POSITION"), jint>(); }
inline jlong AdapterView::INVALID_ROW_ID_() { return get_static_field<SCAPIX_META_STRING("INVALID_ROW_ID"), jlong>(); }
inline jint AdapterView::ITEM_VIEW_TYPE_HEADER_OR_FOOTER_() { return get_static_field<SCAPIX_META_STRING("ITEM_VIEW_TYPE_HEADER_OR_FOOTER"), jint>(); }
inline jint AdapterView::ITEM_VIEW_TYPE_IGNORE_() { return get_static_field<SCAPIX_META_STRING("ITEM_VIEW_TYPE_IGNORE"), jint>(); }
inline ref<AdapterView> AdapterView::new_object(ref<android::content::Context> context) { return base_::new_object(context); }
inline ref<AdapterView> AdapterView::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs) { return base_::new_object(context, attrs); }
inline ref<AdapterView> AdapterView::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr) { return base_::new_object(context, attrs, defStyleAttr); }
inline ref<AdapterView> AdapterView::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr, jint defStyleRes) { return base_::new_object(context, attrs, defStyleAttr, defStyleRes); }
inline void AdapterView::setOnItemClickListener(ref<android::widget::AdapterView_OnItemClickListener> listener) { return call_method<SCAPIX_META_STRING("setOnItemClickListener"), void>(listener); }
inline ref<android::widget::AdapterView_OnItemClickListener> AdapterView::getOnItemClickListener() { return call_method<SCAPIX_META_STRING("getOnItemClickListener"), ref<android::widget::AdapterView_OnItemClickListener>>(); }
inline jboolean AdapterView::performItemClick(ref<android::view::View> view, jint position, jlong id) { return call_method<SCAPIX_META_STRING("performItemClick"), jboolean>(view, position, id); }
inline void AdapterView::setOnItemLongClickListener(ref<android::widget::AdapterView_OnItemLongClickListener> listener) { return call_method<SCAPIX_META_STRING("setOnItemLongClickListener"), void>(listener); }
inline ref<android::widget::AdapterView_OnItemLongClickListener> AdapterView::getOnItemLongClickListener() { return call_method<SCAPIX_META_STRING("getOnItemLongClickListener"), ref<android::widget::AdapterView_OnItemLongClickListener>>(); }
inline void AdapterView::setOnItemSelectedListener(ref<android::widget::AdapterView_OnItemSelectedListener> listener) { return call_method<SCAPIX_META_STRING("setOnItemSelectedListener"), void>(listener); }
inline ref<android::widget::AdapterView_OnItemSelectedListener> AdapterView::getOnItemSelectedListener() { return call_method<SCAPIX_META_STRING("getOnItemSelectedListener"), ref<android::widget::AdapterView_OnItemSelectedListener>>(); }
inline ref<android::widget::Adapter> AdapterView::getAdapter() { return call_method<SCAPIX_META_STRING("getAdapter"), ref<android::widget::Adapter>>(); }
inline void AdapterView::setAdapter(ref<android::widget::Adapter> p1) { return call_method<SCAPIX_META_STRING("setAdapter"), void>(p1); }
inline void AdapterView::addView(ref<android::view::View> child) { return call_method<SCAPIX_META_STRING("addView"), void>(child); }
inline void AdapterView::addView(ref<android::view::View> child, jint index) { return call_method<SCAPIX_META_STRING("addView"), void>(child, index); }
inline void AdapterView::addView(ref<android::view::View> child, ref<android::view::ViewGroup_LayoutParams> params) { return call_method<SCAPIX_META_STRING("addView"), void>(child, params); }
inline void AdapterView::addView(ref<android::view::View> child, jint index, ref<android::view::ViewGroup_LayoutParams> params) { return call_method<SCAPIX_META_STRING("addView"), void>(child, index, params); }
inline void AdapterView::removeView(ref<android::view::View> child) { return call_method<SCAPIX_META_STRING("removeView"), void>(child); }
inline void AdapterView::removeViewAt(jint index) { return call_method<SCAPIX_META_STRING("removeViewAt"), void>(index); }
inline void AdapterView::removeAllViews() { return call_method<SCAPIX_META_STRING("removeAllViews"), void>(); }
inline jint AdapterView::getSelectedItemPosition() { return call_method<SCAPIX_META_STRING("getSelectedItemPosition"), jint>(); }
inline jlong AdapterView::getSelectedItemId() { return call_method<SCAPIX_META_STRING("getSelectedItemId"), jlong>(); }
inline ref<android::view::View> AdapterView::getSelectedView() { return call_method<SCAPIX_META_STRING("getSelectedView"), ref<android::view::View>>(); }
inline ref<java::lang::Object> AdapterView::getSelectedItem() { return call_method<SCAPIX_META_STRING("getSelectedItem"), ref<java::lang::Object>>(); }
inline jint AdapterView::getCount() { return call_method<SCAPIX_META_STRING("getCount"), jint>(); }
inline jint AdapterView::getPositionForView(ref<android::view::View> view) { return call_method<SCAPIX_META_STRING("getPositionForView"), jint>(view); }
inline jint AdapterView::getFirstVisiblePosition() { return call_method<SCAPIX_META_STRING("getFirstVisiblePosition"), jint>(); }
inline jint AdapterView::getLastVisiblePosition() { return call_method<SCAPIX_META_STRING("getLastVisiblePosition"), jint>(); }
inline void AdapterView::setSelection(jint p1) { return call_method<SCAPIX_META_STRING("setSelection"), void>(p1); }
inline void AdapterView::setEmptyView(ref<android::view::View> emptyView) { return call_method<SCAPIX_META_STRING("setEmptyView"), void>(emptyView); }
inline ref<android::view::View> AdapterView::getEmptyView() { return call_method<SCAPIX_META_STRING("getEmptyView"), ref<android::view::View>>(); }
inline void AdapterView::setFocusable(jint focusable) { return call_method<SCAPIX_META_STRING("setFocusable"), void>(focusable); }
inline void AdapterView::setFocusableInTouchMode(jboolean focusable) { return call_method<SCAPIX_META_STRING("setFocusableInTouchMode"), void>(focusable); }
inline ref<java::lang::Object> AdapterView::getItemAtPosition(jint position) { return call_method<SCAPIX_META_STRING("getItemAtPosition"), ref<java::lang::Object>>(position); }
inline jlong AdapterView::getItemIdAtPosition(jint position) { return call_method<SCAPIX_META_STRING("getItemIdAtPosition"), jlong>(position); }
inline void AdapterView::setOnClickListener(ref<android::view::View_OnClickListener> l) { return call_method<SCAPIX_META_STRING("setOnClickListener"), void>(l); }
inline ref<java::lang::CharSequence> AdapterView::getAccessibilityClassName() { return call_method<SCAPIX_META_STRING("getAccessibilityClassName"), ref<java::lang::CharSequence>>(); }
inline void AdapterView::onProvideAutofillStructure(ref<android::view::ViewStructure> structure, jint flags) { return call_method<SCAPIX_META_STRING("onProvideAutofillStructure"), void>(structure, flags); }

} // namespace android::widget
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_WIDGET_ADAPTERVIEW_H
