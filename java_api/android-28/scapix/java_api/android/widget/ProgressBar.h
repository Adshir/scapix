// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/view/View.h>

#ifndef SCAPIX_ANDROID_WIDGET_PROGRESSBAR_H
#define SCAPIX_ANDROID_WIDGET_PROGRESSBAR_H

namespace scapix::java_api {

namespace android::content { class Context; }
namespace android::content::res { class ColorStateList; }
namespace android::graphics { class PorterDuff_Mode; }
namespace android::graphics::drawable { class Drawable; }
namespace android::os { class Parcelable; }
namespace android::util { class AttributeSet; }
namespace android::view::animation { class Interpolator; }
namespace java::lang { class CharSequence; }

namespace android::widget {

class ProgressBar : public object_base<SCAPIX_META_STRING("android/widget/ProgressBar"),
	android::view::View>
{
public:

	static ref<ProgressBar> new_object(ref<android::content::Context> context);
	static ref<ProgressBar> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs);
	static ref<ProgressBar> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr);
	static ref<ProgressBar> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr, jint defStyleRes);
	jboolean isIndeterminate();
	void setIndeterminate(jboolean indeterminate);
	ref<android::graphics::drawable::Drawable> getIndeterminateDrawable();
	void setIndeterminateDrawable(ref<android::graphics::drawable::Drawable> d);
	void setIndeterminateTintList(ref<android::content::res::ColorStateList> tint);
	ref<android::content::res::ColorStateList> getIndeterminateTintList();
	void setIndeterminateTintMode(ref<android::graphics::PorterDuff_Mode> tintMode);
	ref<android::graphics::PorterDuff_Mode> getIndeterminateTintMode();
	void setIndeterminateDrawableTiled(ref<android::graphics::drawable::Drawable> d);
	ref<android::graphics::drawable::Drawable> getProgressDrawable();
	void setProgressDrawable(ref<android::graphics::drawable::Drawable> d);
	void setProgressTintList(ref<android::content::res::ColorStateList> tint);
	ref<android::content::res::ColorStateList> getProgressTintList();
	void setProgressTintMode(ref<android::graphics::PorterDuff_Mode> tintMode);
	ref<android::graphics::PorterDuff_Mode> getProgressTintMode();
	void setProgressBackgroundTintList(ref<android::content::res::ColorStateList> tint);
	ref<android::content::res::ColorStateList> getProgressBackgroundTintList();
	void setProgressBackgroundTintMode(ref<android::graphics::PorterDuff_Mode> tintMode);
	ref<android::graphics::PorterDuff_Mode> getProgressBackgroundTintMode();
	void setSecondaryProgressTintList(ref<android::content::res::ColorStateList> tint);
	ref<android::content::res::ColorStateList> getSecondaryProgressTintList();
	void setSecondaryProgressTintMode(ref<android::graphics::PorterDuff_Mode> tintMode);
	ref<android::graphics::PorterDuff_Mode> getSecondaryProgressTintMode();
	void setProgressDrawableTiled(ref<android::graphics::drawable::Drawable> d);
	void jumpDrawablesToCurrentState();
	void postInvalidate();
	void setProgress(jint progress);
	void setProgress(jint progress, jboolean animate);
	void setSecondaryProgress(jint secondaryProgress);
	jint getProgress();
	jint getSecondaryProgress();
	jint getMin();
	jint getMax();
	void setMin(jint min);
	void setMax(jint max);
	void incrementProgressBy(jint diff);
	void incrementSecondaryProgressBy(jint diff);
	void setInterpolator(ref<android::content::Context> context, jint resID);
	void setInterpolator(ref<android::view::animation::Interpolator> interpolator);
	ref<android::view::animation::Interpolator> getInterpolator();
	void onVisibilityAggregated(jboolean isVisible);
	void invalidateDrawable(ref<android::graphics::drawable::Drawable> dr);
	void drawableHotspotChanged(jfloat x, jfloat y);
	ref<android::os::Parcelable> onSaveInstanceState();
	void onRestoreInstanceState(ref<android::os::Parcelable> state);
	ref<java::lang::CharSequence> getAccessibilityClassName();
	jboolean isAnimating();

protected:

	ProgressBar(handle_type h) : base_(h) {}

};

} // namespace android::widget
} // namespace scapix::java_api

#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/content/res/ColorStateList.h>
#include <scapix/java_api/android/graphics/PorterDuff_Mode.h>
#include <scapix/java_api/android/graphics/drawable/Drawable.h>
#include <scapix/java_api/android/os/Parcelable.h>
#include <scapix/java_api/android/util/AttributeSet.h>
#include <scapix/java_api/android/view/animation/Interpolator.h>
#include <scapix/java_api/java/lang/CharSequence.h>

namespace scapix::java_api {
namespace android::widget {

inline ref<ProgressBar> ProgressBar::new_object(ref<android::content::Context> context) { return base_::new_object(context); }
inline ref<ProgressBar> ProgressBar::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs) { return base_::new_object(context, attrs); }
inline ref<ProgressBar> ProgressBar::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr) { return base_::new_object(context, attrs, defStyleAttr); }
inline ref<ProgressBar> ProgressBar::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr, jint defStyleRes) { return base_::new_object(context, attrs, defStyleAttr, defStyleRes); }
inline jboolean ProgressBar::isIndeterminate() { return call_method<SCAPIX_META_STRING("isIndeterminate"), jboolean>(); }
inline void ProgressBar::setIndeterminate(jboolean indeterminate) { return call_method<SCAPIX_META_STRING("setIndeterminate"), void>(indeterminate); }
inline ref<android::graphics::drawable::Drawable> ProgressBar::getIndeterminateDrawable() { return call_method<SCAPIX_META_STRING("getIndeterminateDrawable"), ref<android::graphics::drawable::Drawable>>(); }
inline void ProgressBar::setIndeterminateDrawable(ref<android::graphics::drawable::Drawable> d) { return call_method<SCAPIX_META_STRING("setIndeterminateDrawable"), void>(d); }
inline void ProgressBar::setIndeterminateTintList(ref<android::content::res::ColorStateList> tint) { return call_method<SCAPIX_META_STRING("setIndeterminateTintList"), void>(tint); }
inline ref<android::content::res::ColorStateList> ProgressBar::getIndeterminateTintList() { return call_method<SCAPIX_META_STRING("getIndeterminateTintList"), ref<android::content::res::ColorStateList>>(); }
inline void ProgressBar::setIndeterminateTintMode(ref<android::graphics::PorterDuff_Mode> tintMode) { return call_method<SCAPIX_META_STRING("setIndeterminateTintMode"), void>(tintMode); }
inline ref<android::graphics::PorterDuff_Mode> ProgressBar::getIndeterminateTintMode() { return call_method<SCAPIX_META_STRING("getIndeterminateTintMode"), ref<android::graphics::PorterDuff_Mode>>(); }
inline void ProgressBar::setIndeterminateDrawableTiled(ref<android::graphics::drawable::Drawable> d) { return call_method<SCAPIX_META_STRING("setIndeterminateDrawableTiled"), void>(d); }
inline ref<android::graphics::drawable::Drawable> ProgressBar::getProgressDrawable() { return call_method<SCAPIX_META_STRING("getProgressDrawable"), ref<android::graphics::drawable::Drawable>>(); }
inline void ProgressBar::setProgressDrawable(ref<android::graphics::drawable::Drawable> d) { return call_method<SCAPIX_META_STRING("setProgressDrawable"), void>(d); }
inline void ProgressBar::setProgressTintList(ref<android::content::res::ColorStateList> tint) { return call_method<SCAPIX_META_STRING("setProgressTintList"), void>(tint); }
inline ref<android::content::res::ColorStateList> ProgressBar::getProgressTintList() { return call_method<SCAPIX_META_STRING("getProgressTintList"), ref<android::content::res::ColorStateList>>(); }
inline void ProgressBar::setProgressTintMode(ref<android::graphics::PorterDuff_Mode> tintMode) { return call_method<SCAPIX_META_STRING("setProgressTintMode"), void>(tintMode); }
inline ref<android::graphics::PorterDuff_Mode> ProgressBar::getProgressTintMode() { return call_method<SCAPIX_META_STRING("getProgressTintMode"), ref<android::graphics::PorterDuff_Mode>>(); }
inline void ProgressBar::setProgressBackgroundTintList(ref<android::content::res::ColorStateList> tint) { return call_method<SCAPIX_META_STRING("setProgressBackgroundTintList"), void>(tint); }
inline ref<android::content::res::ColorStateList> ProgressBar::getProgressBackgroundTintList() { return call_method<SCAPIX_META_STRING("getProgressBackgroundTintList"), ref<android::content::res::ColorStateList>>(); }
inline void ProgressBar::setProgressBackgroundTintMode(ref<android::graphics::PorterDuff_Mode> tintMode) { return call_method<SCAPIX_META_STRING("setProgressBackgroundTintMode"), void>(tintMode); }
inline ref<android::graphics::PorterDuff_Mode> ProgressBar::getProgressBackgroundTintMode() { return call_method<SCAPIX_META_STRING("getProgressBackgroundTintMode"), ref<android::graphics::PorterDuff_Mode>>(); }
inline void ProgressBar::setSecondaryProgressTintList(ref<android::content::res::ColorStateList> tint) { return call_method<SCAPIX_META_STRING("setSecondaryProgressTintList"), void>(tint); }
inline ref<android::content::res::ColorStateList> ProgressBar::getSecondaryProgressTintList() { return call_method<SCAPIX_META_STRING("getSecondaryProgressTintList"), ref<android::content::res::ColorStateList>>(); }
inline void ProgressBar::setSecondaryProgressTintMode(ref<android::graphics::PorterDuff_Mode> tintMode) { return call_method<SCAPIX_META_STRING("setSecondaryProgressTintMode"), void>(tintMode); }
inline ref<android::graphics::PorterDuff_Mode> ProgressBar::getSecondaryProgressTintMode() { return call_method<SCAPIX_META_STRING("getSecondaryProgressTintMode"), ref<android::graphics::PorterDuff_Mode>>(); }
inline void ProgressBar::setProgressDrawableTiled(ref<android::graphics::drawable::Drawable> d) { return call_method<SCAPIX_META_STRING("setProgressDrawableTiled"), void>(d); }
inline void ProgressBar::jumpDrawablesToCurrentState() { return call_method<SCAPIX_META_STRING("jumpDrawablesToCurrentState"), void>(); }
inline void ProgressBar::postInvalidate() { return call_method<SCAPIX_META_STRING("postInvalidate"), void>(); }
inline void ProgressBar::setProgress(jint progress) { return call_method<SCAPIX_META_STRING("setProgress"), void>(progress); }
inline void ProgressBar::setProgress(jint progress, jboolean animate) { return call_method<SCAPIX_META_STRING("setProgress"), void>(progress, animate); }
inline void ProgressBar::setSecondaryProgress(jint secondaryProgress) { return call_method<SCAPIX_META_STRING("setSecondaryProgress"), void>(secondaryProgress); }
inline jint ProgressBar::getProgress() { return call_method<SCAPIX_META_STRING("getProgress"), jint>(); }
inline jint ProgressBar::getSecondaryProgress() { return call_method<SCAPIX_META_STRING("getSecondaryProgress"), jint>(); }
inline jint ProgressBar::getMin() { return call_method<SCAPIX_META_STRING("getMin"), jint>(); }
inline jint ProgressBar::getMax() { return call_method<SCAPIX_META_STRING("getMax"), jint>(); }
inline void ProgressBar::setMin(jint min) { return call_method<SCAPIX_META_STRING("setMin"), void>(min); }
inline void ProgressBar::setMax(jint max) { return call_method<SCAPIX_META_STRING("setMax"), void>(max); }
inline void ProgressBar::incrementProgressBy(jint diff) { return call_method<SCAPIX_META_STRING("incrementProgressBy"), void>(diff); }
inline void ProgressBar::incrementSecondaryProgressBy(jint diff) { return call_method<SCAPIX_META_STRING("incrementSecondaryProgressBy"), void>(diff); }
inline void ProgressBar::setInterpolator(ref<android::content::Context> context, jint resID) { return call_method<SCAPIX_META_STRING("setInterpolator"), void>(context, resID); }
inline void ProgressBar::setInterpolator(ref<android::view::animation::Interpolator> interpolator) { return call_method<SCAPIX_META_STRING("setInterpolator"), void>(interpolator); }
inline ref<android::view::animation::Interpolator> ProgressBar::getInterpolator() { return call_method<SCAPIX_META_STRING("getInterpolator"), ref<android::view::animation::Interpolator>>(); }
inline void ProgressBar::onVisibilityAggregated(jboolean isVisible) { return call_method<SCAPIX_META_STRING("onVisibilityAggregated"), void>(isVisible); }
inline void ProgressBar::invalidateDrawable(ref<android::graphics::drawable::Drawable> dr) { return call_method<SCAPIX_META_STRING("invalidateDrawable"), void>(dr); }
inline void ProgressBar::drawableHotspotChanged(jfloat x, jfloat y) { return call_method<SCAPIX_META_STRING("drawableHotspotChanged"), void>(x, y); }
inline ref<android::os::Parcelable> ProgressBar::onSaveInstanceState() { return call_method<SCAPIX_META_STRING("onSaveInstanceState"), ref<android::os::Parcelable>>(); }
inline void ProgressBar::onRestoreInstanceState(ref<android::os::Parcelable> state) { return call_method<SCAPIX_META_STRING("onRestoreInstanceState"), void>(state); }
inline ref<java::lang::CharSequence> ProgressBar::getAccessibilityClassName() { return call_method<SCAPIX_META_STRING("getAccessibilityClassName"), ref<java::lang::CharSequence>>(); }
inline jboolean ProgressBar::isAnimating() { return call_method<SCAPIX_META_STRING("isAnimating"), jboolean>(); }

} // namespace android::widget
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_WIDGET_PROGRESSBAR_H
