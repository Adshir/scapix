// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/view/View_OnTouchListener.h>

#ifndef SCAPIX_ANDROID_WIDGET_ZOOMBUTTONSCONTROLLER_H
#define SCAPIX_ANDROID_WIDGET_ZOOMBUTTONSCONTROLLER_H

namespace scapix::java_api {

namespace android::view { class MotionEvent; }
namespace android::view { class View; }
namespace android::view { class ViewGroup; }
namespace android::widget { class ZoomButtonsController_OnZoomListener; }

namespace android::widget {

class ZoomButtonsController : public object_base<SCAPIX_META_STRING("android/widget/ZoomButtonsController"),
	java::lang::Object,
	android::view::View_OnTouchListener>
{
public:

	using OnZoomListener = ZoomButtonsController_OnZoomListener;

	static ref<ZoomButtonsController> new_object(ref<android::view::View> ownerView);
	void setZoomInEnabled(jboolean enabled);
	void setZoomOutEnabled(jboolean enabled);
	void setZoomSpeed(jlong speed);
	void setOnZoomListener(ref<android::widget::ZoomButtonsController_OnZoomListener> listener);
	void setFocusable(jboolean focusable);
	jboolean isAutoDismissed();
	void setAutoDismissed(jboolean autoDismiss);
	jboolean isVisible();
	void setVisible(jboolean visible);
	ref<android::view::ViewGroup> getContainer();
	ref<android::view::View> getZoomControls();
	jboolean onTouch(ref<android::view::View> v, ref<android::view::MotionEvent> event);

protected:

	ZoomButtonsController(handle_type h) : base_(h) {}

};

} // namespace android::widget
} // namespace scapix::java_api

#include <scapix/java_api/android/view/MotionEvent.h>
#include <scapix/java_api/android/view/View.h>
#include <scapix/java_api/android/view/ViewGroup.h>
#include <scapix/java_api/android/widget/ZoomButtonsController_OnZoomListener.h>

namespace scapix::java_api {
namespace android::widget {

inline ref<ZoomButtonsController> ZoomButtonsController::new_object(ref<android::view::View> ownerView) { return base_::new_object(ownerView); }
inline void ZoomButtonsController::setZoomInEnabled(jboolean enabled) { return call_method<SCAPIX_META_STRING("setZoomInEnabled"), void>(enabled); }
inline void ZoomButtonsController::setZoomOutEnabled(jboolean enabled) { return call_method<SCAPIX_META_STRING("setZoomOutEnabled"), void>(enabled); }
inline void ZoomButtonsController::setZoomSpeed(jlong speed) { return call_method<SCAPIX_META_STRING("setZoomSpeed"), void>(speed); }
inline void ZoomButtonsController::setOnZoomListener(ref<android::widget::ZoomButtonsController_OnZoomListener> listener) { return call_method<SCAPIX_META_STRING("setOnZoomListener"), void>(listener); }
inline void ZoomButtonsController::setFocusable(jboolean focusable) { return call_method<SCAPIX_META_STRING("setFocusable"), void>(focusable); }
inline jboolean ZoomButtonsController::isAutoDismissed() { return call_method<SCAPIX_META_STRING("isAutoDismissed"), jboolean>(); }
inline void ZoomButtonsController::setAutoDismissed(jboolean autoDismiss) { return call_method<SCAPIX_META_STRING("setAutoDismissed"), void>(autoDismiss); }
inline jboolean ZoomButtonsController::isVisible() { return call_method<SCAPIX_META_STRING("isVisible"), jboolean>(); }
inline void ZoomButtonsController::setVisible(jboolean visible) { return call_method<SCAPIX_META_STRING("setVisible"), void>(visible); }
inline ref<android::view::ViewGroup> ZoomButtonsController::getContainer() { return call_method<SCAPIX_META_STRING("getContainer"), ref<android::view::ViewGroup>>(); }
inline ref<android::view::View> ZoomButtonsController::getZoomControls() { return call_method<SCAPIX_META_STRING("getZoomControls"), ref<android::view::View>>(); }
inline jboolean ZoomButtonsController::onTouch(ref<android::view::View> v, ref<android::view::MotionEvent> event) { return call_method<SCAPIX_META_STRING("onTouch"), jboolean>(v, event); }

} // namespace android::widget
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_WIDGET_ZOOMBUTTONSCONTROLLER_H
