// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/widget/LinearLayout.h>
#include <scapix/java_api/android/view/View_OnFocusChangeListener.h>

#ifndef SCAPIX_ANDROID_WIDGET_TABWIDGET_H
#define SCAPIX_ANDROID_WIDGET_TABWIDGET_H

namespace scapix::java_api {

namespace android::content { class Context; }
namespace android::graphics { class Canvas; }
namespace android::graphics::drawable { class Drawable; }
namespace android::util { class AttributeSet; }
namespace android::view { class MotionEvent; }
namespace android::view { class PointerIcon; }
namespace android::view { class View; }
namespace java::lang { class CharSequence; }

namespace android::widget {

class TabWidget : public object_base<SCAPIX_META_STRING("android/widget/TabWidget"),
	android::widget::LinearLayout,
	android::view::View_OnFocusChangeListener>
{
public:

	static ref<TabWidget> new_object(ref<android::content::Context> context);
	static ref<TabWidget> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs);
	static ref<TabWidget> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr);
	static ref<TabWidget> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr, jint defStyleRes);
	ref<android::view::View> getChildTabViewAt(jint index);
	jint getTabCount();
	void setDividerDrawable(ref<android::graphics::drawable::Drawable> drawable);
	void setDividerDrawable(jint resId);
	void setLeftStripDrawable(ref<android::graphics::drawable::Drawable> drawable);
	void setLeftStripDrawable(jint resId);
	ref<android::graphics::drawable::Drawable> getLeftStripDrawable();
	void setRightStripDrawable(ref<android::graphics::drawable::Drawable> drawable);
	void setRightStripDrawable(jint resId);
	ref<android::graphics::drawable::Drawable> getRightStripDrawable();
	void setStripEnabled(jboolean stripEnabled);
	jboolean isStripEnabled();
	void childDrawableStateChanged(ref<android::view::View> child);
	void dispatchDraw(ref<android::graphics::Canvas> canvas);
	void setCurrentTab(jint index);
	ref<java::lang::CharSequence> getAccessibilityClassName();
	void focusCurrentTab(jint index);
	void setEnabled(jboolean enabled);
	void addView(ref<android::view::View> child);
	void removeAllViews();
	ref<android::view::PointerIcon> onResolvePointerIcon(ref<android::view::MotionEvent> event, jint pointerIndex);
	void onFocusChange(ref<android::view::View> v, jboolean hasFocus);

protected:

	TabWidget(handle_type h) : base_(h) {}

};

} // namespace android::widget
} // namespace scapix::java_api

#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/graphics/Canvas.h>
#include <scapix/java_api/android/graphics/drawable/Drawable.h>
#include <scapix/java_api/android/util/AttributeSet.h>
#include <scapix/java_api/android/view/MotionEvent.h>
#include <scapix/java_api/android/view/PointerIcon.h>
#include <scapix/java_api/android/view/View.h>
#include <scapix/java_api/java/lang/CharSequence.h>

namespace scapix::java_api {
namespace android::widget {

inline ref<TabWidget> TabWidget::new_object(ref<android::content::Context> context) { return base_::new_object(context); }
inline ref<TabWidget> TabWidget::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs) { return base_::new_object(context, attrs); }
inline ref<TabWidget> TabWidget::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr) { return base_::new_object(context, attrs, defStyleAttr); }
inline ref<TabWidget> TabWidget::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr, jint defStyleRes) { return base_::new_object(context, attrs, defStyleAttr, defStyleRes); }
inline ref<android::view::View> TabWidget::getChildTabViewAt(jint index) { return call_method<SCAPIX_META_STRING("getChildTabViewAt"), ref<android::view::View>>(index); }
inline jint TabWidget::getTabCount() { return call_method<SCAPIX_META_STRING("getTabCount"), jint>(); }
inline void TabWidget::setDividerDrawable(ref<android::graphics::drawable::Drawable> drawable) { return call_method<SCAPIX_META_STRING("setDividerDrawable"), void>(drawable); }
inline void TabWidget::setDividerDrawable(jint resId) { return call_method<SCAPIX_META_STRING("setDividerDrawable"), void>(resId); }
inline void TabWidget::setLeftStripDrawable(ref<android::graphics::drawable::Drawable> drawable) { return call_method<SCAPIX_META_STRING("setLeftStripDrawable"), void>(drawable); }
inline void TabWidget::setLeftStripDrawable(jint resId) { return call_method<SCAPIX_META_STRING("setLeftStripDrawable"), void>(resId); }
inline ref<android::graphics::drawable::Drawable> TabWidget::getLeftStripDrawable() { return call_method<SCAPIX_META_STRING("getLeftStripDrawable"), ref<android::graphics::drawable::Drawable>>(); }
inline void TabWidget::setRightStripDrawable(ref<android::graphics::drawable::Drawable> drawable) { return call_method<SCAPIX_META_STRING("setRightStripDrawable"), void>(drawable); }
inline void TabWidget::setRightStripDrawable(jint resId) { return call_method<SCAPIX_META_STRING("setRightStripDrawable"), void>(resId); }
inline ref<android::graphics::drawable::Drawable> TabWidget::getRightStripDrawable() { return call_method<SCAPIX_META_STRING("getRightStripDrawable"), ref<android::graphics::drawable::Drawable>>(); }
inline void TabWidget::setStripEnabled(jboolean stripEnabled) { return call_method<SCAPIX_META_STRING("setStripEnabled"), void>(stripEnabled); }
inline jboolean TabWidget::isStripEnabled() { return call_method<SCAPIX_META_STRING("isStripEnabled"), jboolean>(); }
inline void TabWidget::childDrawableStateChanged(ref<android::view::View> child) { return call_method<SCAPIX_META_STRING("childDrawableStateChanged"), void>(child); }
inline void TabWidget::dispatchDraw(ref<android::graphics::Canvas> canvas) { return call_method<SCAPIX_META_STRING("dispatchDraw"), void>(canvas); }
inline void TabWidget::setCurrentTab(jint index) { return call_method<SCAPIX_META_STRING("setCurrentTab"), void>(index); }
inline ref<java::lang::CharSequence> TabWidget::getAccessibilityClassName() { return call_method<SCAPIX_META_STRING("getAccessibilityClassName"), ref<java::lang::CharSequence>>(); }
inline void TabWidget::focusCurrentTab(jint index) { return call_method<SCAPIX_META_STRING("focusCurrentTab"), void>(index); }
inline void TabWidget::setEnabled(jboolean enabled) { return call_method<SCAPIX_META_STRING("setEnabled"), void>(enabled); }
inline void TabWidget::addView(ref<android::view::View> child) { return call_method<SCAPIX_META_STRING("addView"), void>(child); }
inline void TabWidget::removeAllViews() { return call_method<SCAPIX_META_STRING("removeAllViews"), void>(); }
inline ref<android::view::PointerIcon> TabWidget::onResolvePointerIcon(ref<android::view::MotionEvent> event, jint pointerIndex) { return call_method<SCAPIX_META_STRING("onResolvePointerIcon"), ref<android::view::PointerIcon>>(event, pointerIndex); }
inline void TabWidget::onFocusChange(ref<android::view::View> v, jboolean hasFocus) { return call_method<SCAPIX_META_STRING("onFocusChange"), void>(v, hasFocus); }

} // namespace android::widget
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_WIDGET_TABWIDGET_H
