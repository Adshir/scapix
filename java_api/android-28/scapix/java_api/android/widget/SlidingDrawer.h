// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/view/ViewGroup.h>

#ifndef SCAPIX_ANDROID_WIDGET_SLIDINGDRAWER_H
#define SCAPIX_ANDROID_WIDGET_SLIDINGDRAWER_H

namespace scapix::java_api {

namespace android::content { class Context; }
namespace android::util { class AttributeSet; }
namespace android::view { class MotionEvent; }
namespace android::view { class View; }
namespace android::widget { class SlidingDrawer_OnDrawerCloseListener; }
namespace android::widget { class SlidingDrawer_OnDrawerOpenListener; }
namespace android::widget { class SlidingDrawer_OnDrawerScrollListener; }
namespace java::lang { class CharSequence; }

namespace android::widget {

class SlidingDrawer : public object_base<SCAPIX_META_STRING("android/widget/SlidingDrawer"),
	android::view::ViewGroup>
{
public:

	using OnDrawerScrollListener = SlidingDrawer_OnDrawerScrollListener;
	using OnDrawerOpenListener = SlidingDrawer_OnDrawerOpenListener;
	using OnDrawerCloseListener = SlidingDrawer_OnDrawerCloseListener;

	static jint ORIENTATION_HORIZONTAL_();
	static jint ORIENTATION_VERTICAL_();

	static ref<SlidingDrawer> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs);
	static ref<SlidingDrawer> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr);
	static ref<SlidingDrawer> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr, jint defStyleRes);
	jboolean onInterceptTouchEvent(ref<android::view::MotionEvent> event);
	jboolean onTouchEvent(ref<android::view::MotionEvent> event);
	void toggle();
	void animateToggle();
	void open();
	void close();
	void animateClose();
	void animateOpen();
	ref<java::lang::CharSequence> getAccessibilityClassName();
	void setOnDrawerOpenListener(ref<android::widget::SlidingDrawer_OnDrawerOpenListener> onDrawerOpenListener);
	void setOnDrawerCloseListener(ref<android::widget::SlidingDrawer_OnDrawerCloseListener> onDrawerCloseListener);
	void setOnDrawerScrollListener(ref<android::widget::SlidingDrawer_OnDrawerScrollListener> onDrawerScrollListener);
	ref<android::view::View> getHandle();
	ref<android::view::View> getContent();
	void unlock();
	void lock();
	jboolean isOpened();
	jboolean isMoving();

protected:

	SlidingDrawer(handle_type h) : base_(h) {}

};

} // namespace android::widget
} // namespace scapix::java_api

#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/util/AttributeSet.h>
#include <scapix/java_api/android/view/MotionEvent.h>
#include <scapix/java_api/android/view/View.h>
#include <scapix/java_api/android/widget/SlidingDrawer_OnDrawerCloseListener.h>
#include <scapix/java_api/android/widget/SlidingDrawer_OnDrawerOpenListener.h>
#include <scapix/java_api/android/widget/SlidingDrawer_OnDrawerScrollListener.h>
#include <scapix/java_api/java/lang/CharSequence.h>

namespace scapix::java_api {
namespace android::widget {

inline jint SlidingDrawer::ORIENTATION_HORIZONTAL_() { return get_static_field<SCAPIX_META_STRING("ORIENTATION_HORIZONTAL"), jint>(); }
inline jint SlidingDrawer::ORIENTATION_VERTICAL_() { return get_static_field<SCAPIX_META_STRING("ORIENTATION_VERTICAL"), jint>(); }
inline ref<SlidingDrawer> SlidingDrawer::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs) { return base_::new_object(context, attrs); }
inline ref<SlidingDrawer> SlidingDrawer::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr) { return base_::new_object(context, attrs, defStyleAttr); }
inline ref<SlidingDrawer> SlidingDrawer::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr, jint defStyleRes) { return base_::new_object(context, attrs, defStyleAttr, defStyleRes); }
inline jboolean SlidingDrawer::onInterceptTouchEvent(ref<android::view::MotionEvent> event) { return call_method<SCAPIX_META_STRING("onInterceptTouchEvent"), jboolean>(event); }
inline jboolean SlidingDrawer::onTouchEvent(ref<android::view::MotionEvent> event) { return call_method<SCAPIX_META_STRING("onTouchEvent"), jboolean>(event); }
inline void SlidingDrawer::toggle() { return call_method<SCAPIX_META_STRING("toggle"), void>(); }
inline void SlidingDrawer::animateToggle() { return call_method<SCAPIX_META_STRING("animateToggle"), void>(); }
inline void SlidingDrawer::open() { return call_method<SCAPIX_META_STRING("open"), void>(); }
inline void SlidingDrawer::close() { return call_method<SCAPIX_META_STRING("close"), void>(); }
inline void SlidingDrawer::animateClose() { return call_method<SCAPIX_META_STRING("animateClose"), void>(); }
inline void SlidingDrawer::animateOpen() { return call_method<SCAPIX_META_STRING("animateOpen"), void>(); }
inline ref<java::lang::CharSequence> SlidingDrawer::getAccessibilityClassName() { return call_method<SCAPIX_META_STRING("getAccessibilityClassName"), ref<java::lang::CharSequence>>(); }
inline void SlidingDrawer::setOnDrawerOpenListener(ref<android::widget::SlidingDrawer_OnDrawerOpenListener> onDrawerOpenListener) { return call_method<SCAPIX_META_STRING("setOnDrawerOpenListener"), void>(onDrawerOpenListener); }
inline void SlidingDrawer::setOnDrawerCloseListener(ref<android::widget::SlidingDrawer_OnDrawerCloseListener> onDrawerCloseListener) { return call_method<SCAPIX_META_STRING("setOnDrawerCloseListener"), void>(onDrawerCloseListener); }
inline void SlidingDrawer::setOnDrawerScrollListener(ref<android::widget::SlidingDrawer_OnDrawerScrollListener> onDrawerScrollListener) { return call_method<SCAPIX_META_STRING("setOnDrawerScrollListener"), void>(onDrawerScrollListener); }
inline ref<android::view::View> SlidingDrawer::getHandle() { return call_method<SCAPIX_META_STRING("getHandle"), ref<android::view::View>>(); }
inline ref<android::view::View> SlidingDrawer::getContent() { return call_method<SCAPIX_META_STRING("getContent"), ref<android::view::View>>(); }
inline void SlidingDrawer::unlock() { return call_method<SCAPIX_META_STRING("unlock"), void>(); }
inline void SlidingDrawer::lock() { return call_method<SCAPIX_META_STRING("lock"), void>(); }
inline jboolean SlidingDrawer::isOpened() { return call_method<SCAPIX_META_STRING("isOpened"), jboolean>(); }
inline jboolean SlidingDrawer::isMoving() { return call_method<SCAPIX_META_STRING("isMoving"), jboolean>(); }

} // namespace android::widget
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_WIDGET_SLIDINGDRAWER_H
