// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/widget/CompoundButton.h>

#ifndef SCAPIX_ANDROID_WIDGET_TOGGLEBUTTON_H
#define SCAPIX_ANDROID_WIDGET_TOGGLEBUTTON_H

namespace scapix::java_api {

namespace android::content { class Context; }
namespace android::graphics::drawable { class Drawable; }
namespace android::util { class AttributeSet; }
namespace java::lang { class CharSequence; }

namespace android::widget {

class ToggleButton : public object_base<SCAPIX_META_STRING("android/widget/ToggleButton"),
	android::widget::CompoundButton>
{
public:

	static ref<ToggleButton> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr, jint defStyleRes);
	static ref<ToggleButton> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr);
	static ref<ToggleButton> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs);
	static ref<ToggleButton> new_object(ref<android::content::Context> context);
	void setChecked(jboolean checked);
	ref<java::lang::CharSequence> getTextOn();
	void setTextOn(ref<java::lang::CharSequence> textOn);
	ref<java::lang::CharSequence> getTextOff();
	void setTextOff(ref<java::lang::CharSequence> textOff);
	void setBackgroundDrawable(ref<android::graphics::drawable::Drawable> d);
	ref<java::lang::CharSequence> getAccessibilityClassName();

protected:

	ToggleButton(handle_type h) : base_(h) {}

};

} // namespace android::widget
} // namespace scapix::java_api

#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/graphics/drawable/Drawable.h>
#include <scapix/java_api/android/util/AttributeSet.h>
#include <scapix/java_api/java/lang/CharSequence.h>

namespace scapix::java_api {
namespace android::widget {

inline ref<ToggleButton> ToggleButton::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr, jint defStyleRes) { return base_::new_object(context, attrs, defStyleAttr, defStyleRes); }
inline ref<ToggleButton> ToggleButton::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr) { return base_::new_object(context, attrs, defStyleAttr); }
inline ref<ToggleButton> ToggleButton::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs) { return base_::new_object(context, attrs); }
inline ref<ToggleButton> ToggleButton::new_object(ref<android::content::Context> context) { return base_::new_object(context); }
inline void ToggleButton::setChecked(jboolean checked) { return call_method<SCAPIX_META_STRING("setChecked"), void>(checked); }
inline ref<java::lang::CharSequence> ToggleButton::getTextOn() { return call_method<SCAPIX_META_STRING("getTextOn"), ref<java::lang::CharSequence>>(); }
inline void ToggleButton::setTextOn(ref<java::lang::CharSequence> textOn) { return call_method<SCAPIX_META_STRING("setTextOn"), void>(textOn); }
inline ref<java::lang::CharSequence> ToggleButton::getTextOff() { return call_method<SCAPIX_META_STRING("getTextOff"), ref<java::lang::CharSequence>>(); }
inline void ToggleButton::setTextOff(ref<java::lang::CharSequence> textOff) { return call_method<SCAPIX_META_STRING("setTextOff"), void>(textOff); }
inline void ToggleButton::setBackgroundDrawable(ref<android::graphics::drawable::Drawable> d) { return call_method<SCAPIX_META_STRING("setBackgroundDrawable"), void>(d); }
inline ref<java::lang::CharSequence> ToggleButton::getAccessibilityClassName() { return call_method<SCAPIX_META_STRING("getAccessibilityClassName"), ref<java::lang::CharSequence>>(); }

} // namespace android::widget
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_WIDGET_TOGGLEBUTTON_H
