// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/widget/FrameLayout.h>

#ifndef SCAPIX_ANDROID_WIDGET_VIEWANIMATOR_H
#define SCAPIX_ANDROID_WIDGET_VIEWANIMATOR_H

namespace scapix::java_api {

namespace android::content { class Context; }
namespace android::util { class AttributeSet; }
namespace android::view { class View; }
namespace android::view { class ViewGroup_LayoutParams; }
namespace android::view::animation { class Animation; }
namespace java::lang { class CharSequence; }

namespace android::widget {

class ViewAnimator : public object_base<SCAPIX_META_STRING("android/widget/ViewAnimator"),
	android::widget::FrameLayout>
{
public:

	static ref<ViewAnimator> new_object(ref<android::content::Context> context);
	static ref<ViewAnimator> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs);
	void setDisplayedChild(jint whichChild);
	jint getDisplayedChild();
	void showNext();
	void showPrevious();
	void addView(ref<android::view::View> child, jint index, ref<android::view::ViewGroup_LayoutParams> params);
	void removeAllViews();
	void removeView(ref<android::view::View> view);
	void removeViewAt(jint index);
	void removeViewInLayout(ref<android::view::View> view);
	void removeViews(jint start, jint count);
	void removeViewsInLayout(jint start, jint count);
	ref<android::view::View> getCurrentView();
	ref<android::view::animation::Animation> getInAnimation();
	void setInAnimation(ref<android::view::animation::Animation> inAnimation);
	ref<android::view::animation::Animation> getOutAnimation();
	void setOutAnimation(ref<android::view::animation::Animation> outAnimation);
	void setInAnimation(ref<android::content::Context> context, jint resourceID);
	void setOutAnimation(ref<android::content::Context> context, jint resourceID);
	jboolean getAnimateFirstView();
	void setAnimateFirstView(jboolean animate);
	jint getBaseline();
	ref<java::lang::CharSequence> getAccessibilityClassName();

protected:

	ViewAnimator(handle_type h) : base_(h) {}

};

} // namespace android::widget
} // namespace scapix::java_api

#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/util/AttributeSet.h>
#include <scapix/java_api/android/view/View.h>
#include <scapix/java_api/android/view/ViewGroup_LayoutParams.h>
#include <scapix/java_api/android/view/animation/Animation.h>
#include <scapix/java_api/java/lang/CharSequence.h>

namespace scapix::java_api {
namespace android::widget {

inline ref<ViewAnimator> ViewAnimator::new_object(ref<android::content::Context> context) { return base_::new_object(context); }
inline ref<ViewAnimator> ViewAnimator::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs) { return base_::new_object(context, attrs); }
inline void ViewAnimator::setDisplayedChild(jint whichChild) { return call_method<SCAPIX_META_STRING("setDisplayedChild"), void>(whichChild); }
inline jint ViewAnimator::getDisplayedChild() { return call_method<SCAPIX_META_STRING("getDisplayedChild"), jint>(); }
inline void ViewAnimator::showNext() { return call_method<SCAPIX_META_STRING("showNext"), void>(); }
inline void ViewAnimator::showPrevious() { return call_method<SCAPIX_META_STRING("showPrevious"), void>(); }
inline void ViewAnimator::addView(ref<android::view::View> child, jint index, ref<android::view::ViewGroup_LayoutParams> params) { return call_method<SCAPIX_META_STRING("addView"), void>(child, index, params); }
inline void ViewAnimator::removeAllViews() { return call_method<SCAPIX_META_STRING("removeAllViews"), void>(); }
inline void ViewAnimator::removeView(ref<android::view::View> view) { return call_method<SCAPIX_META_STRING("removeView"), void>(view); }
inline void ViewAnimator::removeViewAt(jint index) { return call_method<SCAPIX_META_STRING("removeViewAt"), void>(index); }
inline void ViewAnimator::removeViewInLayout(ref<android::view::View> view) { return call_method<SCAPIX_META_STRING("removeViewInLayout"), void>(view); }
inline void ViewAnimator::removeViews(jint start, jint count) { return call_method<SCAPIX_META_STRING("removeViews"), void>(start, count); }
inline void ViewAnimator::removeViewsInLayout(jint start, jint count) { return call_method<SCAPIX_META_STRING("removeViewsInLayout"), void>(start, count); }
inline ref<android::view::View> ViewAnimator::getCurrentView() { return call_method<SCAPIX_META_STRING("getCurrentView"), ref<android::view::View>>(); }
inline ref<android::view::animation::Animation> ViewAnimator::getInAnimation() { return call_method<SCAPIX_META_STRING("getInAnimation"), ref<android::view::animation::Animation>>(); }
inline void ViewAnimator::setInAnimation(ref<android::view::animation::Animation> inAnimation) { return call_method<SCAPIX_META_STRING("setInAnimation"), void>(inAnimation); }
inline ref<android::view::animation::Animation> ViewAnimator::getOutAnimation() { return call_method<SCAPIX_META_STRING("getOutAnimation"), ref<android::view::animation::Animation>>(); }
inline void ViewAnimator::setOutAnimation(ref<android::view::animation::Animation> outAnimation) { return call_method<SCAPIX_META_STRING("setOutAnimation"), void>(outAnimation); }
inline void ViewAnimator::setInAnimation(ref<android::content::Context> context, jint resourceID) { return call_method<SCAPIX_META_STRING("setInAnimation"), void>(context, resourceID); }
inline void ViewAnimator::setOutAnimation(ref<android::content::Context> context, jint resourceID) { return call_method<SCAPIX_META_STRING("setOutAnimation"), void>(context, resourceID); }
inline jboolean ViewAnimator::getAnimateFirstView() { return call_method<SCAPIX_META_STRING("getAnimateFirstView"), jboolean>(); }
inline void ViewAnimator::setAnimateFirstView(jboolean animate) { return call_method<SCAPIX_META_STRING("setAnimateFirstView"), void>(animate); }
inline jint ViewAnimator::getBaseline() { return call_method<SCAPIX_META_STRING("getBaseline"), jint>(); }
inline ref<java::lang::CharSequence> ViewAnimator::getAccessibilityClassName() { return call_method<SCAPIX_META_STRING("getAccessibilityClassName"), ref<java::lang::CharSequence>>(); }

} // namespace android::widget
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_WIDGET_VIEWANIMATOR_H
