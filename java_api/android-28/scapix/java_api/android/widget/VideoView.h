// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/view/SurfaceView.h>
#include <scapix/java_api/android/widget/MediaController_MediaPlayerControl.h>

#ifndef SCAPIX_ANDROID_WIDGET_VIDEOVIEW_H
#define SCAPIX_ANDROID_WIDGET_VIDEOVIEW_H

namespace scapix::java_api {

namespace android::content { class Context; }
namespace android::graphics { class Canvas; }
namespace android::media { class AudioAttributes; }
namespace android::media { class MediaFormat; }
namespace android::media { class MediaPlayer_OnCompletionListener; }
namespace android::media { class MediaPlayer_OnErrorListener; }
namespace android::media { class MediaPlayer_OnInfoListener; }
namespace android::media { class MediaPlayer_OnPreparedListener; }
namespace android::net { class Uri; }
namespace android::util { class AttributeSet; }
namespace android::view { class KeyEvent; }
namespace android::view { class MotionEvent; }
namespace android::widget { class MediaController; }
namespace java::io { class InputStream; }
namespace java::lang { class CharSequence; }
namespace java::lang { class String; }
namespace java::util { class Map; }

namespace android::widget {

class VideoView : public object_base<SCAPIX_META_STRING("android/widget/VideoView"),
	android::view::SurfaceView,
	android::widget::MediaController_MediaPlayerControl>
{
public:

	static ref<VideoView> new_object(ref<android::content::Context> context);
	static ref<VideoView> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs);
	static ref<VideoView> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr);
	static ref<VideoView> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr, jint defStyleRes);
	ref<java::lang::CharSequence> getAccessibilityClassName();
	jint resolveAdjustedSize(jint desiredSize, jint measureSpec);
	void setVideoPath(ref<java::lang::String> path);
	void setVideoURI(ref<android::net::Uri> uri);
	void setVideoURI(ref<android::net::Uri> uri, ref<java::util::Map> headers);
	void setAudioFocusRequest(jint focusGain);
	void setAudioAttributes(ref<android::media::AudioAttributes> attributes);
	void addSubtitleSource(ref<java::io::InputStream> is, ref<android::media::MediaFormat> format);
	void stopPlayback();
	void setMediaController(ref<android::widget::MediaController> controller);
	void setOnPreparedListener(ref<android::media::MediaPlayer_OnPreparedListener> l);
	void setOnCompletionListener(ref<android::media::MediaPlayer_OnCompletionListener> l);
	void setOnErrorListener(ref<android::media::MediaPlayer_OnErrorListener> l);
	void setOnInfoListener(ref<android::media::MediaPlayer_OnInfoListener> l);
	jboolean onTouchEvent(ref<android::view::MotionEvent> ev);
	jboolean onTrackballEvent(ref<android::view::MotionEvent> ev);
	jboolean onKeyDown(jint keyCode, ref<android::view::KeyEvent> event);
	void start();
	void pause();
	void suspend();
	void resume();
	jint getDuration();
	jint getCurrentPosition();
	void seekTo(jint msec);
	jboolean isPlaying();
	jint getBufferPercentage();
	jboolean canPause();
	jboolean canSeekBackward();
	jboolean canSeekForward();
	jint getAudioSessionId();
	void draw(ref<android::graphics::Canvas> canvas);

protected:

	VideoView(handle_type h) : base_(h) {}

};

} // namespace android::widget
} // namespace scapix::java_api

#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/graphics/Canvas.h>
#include <scapix/java_api/android/media/AudioAttributes.h>
#include <scapix/java_api/android/media/MediaFormat.h>
#include <scapix/java_api/android/media/MediaPlayer_OnCompletionListener.h>
#include <scapix/java_api/android/media/MediaPlayer_OnErrorListener.h>
#include <scapix/java_api/android/media/MediaPlayer_OnInfoListener.h>
#include <scapix/java_api/android/media/MediaPlayer_OnPreparedListener.h>
#include <scapix/java_api/android/net/Uri.h>
#include <scapix/java_api/android/util/AttributeSet.h>
#include <scapix/java_api/android/view/KeyEvent.h>
#include <scapix/java_api/android/view/MotionEvent.h>
#include <scapix/java_api/android/widget/MediaController.h>
#include <scapix/java_api/java/io/InputStream.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Map.h>

namespace scapix::java_api {
namespace android::widget {

inline ref<VideoView> VideoView::new_object(ref<android::content::Context> context) { return base_::new_object(context); }
inline ref<VideoView> VideoView::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs) { return base_::new_object(context, attrs); }
inline ref<VideoView> VideoView::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr) { return base_::new_object(context, attrs, defStyleAttr); }
inline ref<VideoView> VideoView::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr, jint defStyleRes) { return base_::new_object(context, attrs, defStyleAttr, defStyleRes); }
inline ref<java::lang::CharSequence> VideoView::getAccessibilityClassName() { return call_method<SCAPIX_META_STRING("getAccessibilityClassName"), ref<java::lang::CharSequence>>(); }
inline jint VideoView::resolveAdjustedSize(jint desiredSize, jint measureSpec) { return call_method<SCAPIX_META_STRING("resolveAdjustedSize"), jint>(desiredSize, measureSpec); }
inline void VideoView::setVideoPath(ref<java::lang::String> path) { return call_method<SCAPIX_META_STRING("setVideoPath"), void>(path); }
inline void VideoView::setVideoURI(ref<android::net::Uri> uri) { return call_method<SCAPIX_META_STRING("setVideoURI"), void>(uri); }
inline void VideoView::setVideoURI(ref<android::net::Uri> uri, ref<java::util::Map> headers) { return call_method<SCAPIX_META_STRING("setVideoURI"), void>(uri, headers); }
inline void VideoView::setAudioFocusRequest(jint focusGain) { return call_method<SCAPIX_META_STRING("setAudioFocusRequest"), void>(focusGain); }
inline void VideoView::setAudioAttributes(ref<android::media::AudioAttributes> attributes) { return call_method<SCAPIX_META_STRING("setAudioAttributes"), void>(attributes); }
inline void VideoView::addSubtitleSource(ref<java::io::InputStream> is, ref<android::media::MediaFormat> format) { return call_method<SCAPIX_META_STRING("addSubtitleSource"), void>(is, format); }
inline void VideoView::stopPlayback() { return call_method<SCAPIX_META_STRING("stopPlayback"), void>(); }
inline void VideoView::setMediaController(ref<android::widget::MediaController> controller) { return call_method<SCAPIX_META_STRING("setMediaController"), void>(controller); }
inline void VideoView::setOnPreparedListener(ref<android::media::MediaPlayer_OnPreparedListener> l) { return call_method<SCAPIX_META_STRING("setOnPreparedListener"), void>(l); }
inline void VideoView::setOnCompletionListener(ref<android::media::MediaPlayer_OnCompletionListener> l) { return call_method<SCAPIX_META_STRING("setOnCompletionListener"), void>(l); }
inline void VideoView::setOnErrorListener(ref<android::media::MediaPlayer_OnErrorListener> l) { return call_method<SCAPIX_META_STRING("setOnErrorListener"), void>(l); }
inline void VideoView::setOnInfoListener(ref<android::media::MediaPlayer_OnInfoListener> l) { return call_method<SCAPIX_META_STRING("setOnInfoListener"), void>(l); }
inline jboolean VideoView::onTouchEvent(ref<android::view::MotionEvent> ev) { return call_method<SCAPIX_META_STRING("onTouchEvent"), jboolean>(ev); }
inline jboolean VideoView::onTrackballEvent(ref<android::view::MotionEvent> ev) { return call_method<SCAPIX_META_STRING("onTrackballEvent"), jboolean>(ev); }
inline jboolean VideoView::onKeyDown(jint keyCode, ref<android::view::KeyEvent> event) { return call_method<SCAPIX_META_STRING("onKeyDown"), jboolean>(keyCode, event); }
inline void VideoView::start() { return call_method<SCAPIX_META_STRING("start"), void>(); }
inline void VideoView::pause() { return call_method<SCAPIX_META_STRING("pause"), void>(); }
inline void VideoView::suspend() { return call_method<SCAPIX_META_STRING("suspend"), void>(); }
inline void VideoView::resume() { return call_method<SCAPIX_META_STRING("resume"), void>(); }
inline jint VideoView::getDuration() { return call_method<SCAPIX_META_STRING("getDuration"), jint>(); }
inline jint VideoView::getCurrentPosition() { return call_method<SCAPIX_META_STRING("getCurrentPosition"), jint>(); }
inline void VideoView::seekTo(jint msec) { return call_method<SCAPIX_META_STRING("seekTo"), void>(msec); }
inline jboolean VideoView::isPlaying() { return call_method<SCAPIX_META_STRING("isPlaying"), jboolean>(); }
inline jint VideoView::getBufferPercentage() { return call_method<SCAPIX_META_STRING("getBufferPercentage"), jint>(); }
inline jboolean VideoView::canPause() { return call_method<SCAPIX_META_STRING("canPause"), jboolean>(); }
inline jboolean VideoView::canSeekBackward() { return call_method<SCAPIX_META_STRING("canSeekBackward"), jboolean>(); }
inline jboolean VideoView::canSeekForward() { return call_method<SCAPIX_META_STRING("canSeekForward"), jboolean>(); }
inline jint VideoView::getAudioSessionId() { return call_method<SCAPIX_META_STRING("getAudioSessionId"), jint>(); }
inline void VideoView::draw(ref<android::graphics::Canvas> canvas) { return call_method<SCAPIX_META_STRING("draw"), void>(canvas); }

} // namespace android::widget
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_WIDGET_VIDEOVIEW_H
