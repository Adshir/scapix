// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_WIDGET_OVERSCROLLER_H
#define SCAPIX_ANDROID_WIDGET_OVERSCROLLER_H

namespace scapix::java_api {

namespace android::content { class Context; }
namespace android::view::animation { class Interpolator; }

namespace android::widget {

class OverScroller : public object_base<SCAPIX_META_STRING("android/widget/OverScroller"),
	java::lang::Object>
{
public:

	static ref<OverScroller> new_object(ref<android::content::Context> context);
	static ref<OverScroller> new_object(ref<android::content::Context> context, ref<android::view::animation::Interpolator> interpolator);
	static ref<OverScroller> new_object(ref<android::content::Context> context, ref<android::view::animation::Interpolator> interpolator, jfloat bounceCoefficientX, jfloat bounceCoefficientY);
	static ref<OverScroller> new_object(ref<android::content::Context> context, ref<android::view::animation::Interpolator> interpolator, jfloat bounceCoefficientX, jfloat bounceCoefficientY, jboolean flywheel);
	void setFriction(jfloat friction);
	jboolean isFinished();
	void forceFinished(jboolean finished);
	jint getCurrX();
	jint getCurrY();
	jfloat getCurrVelocity();
	jint getStartX();
	jint getStartY();
	jint getFinalX();
	jint getFinalY();
	jboolean computeScrollOffset();
	void startScroll(jint startX, jint startY, jint dx, jint dy);
	void startScroll(jint startX, jint startY, jint dx, jint dy, jint duration);
	jboolean springBack(jint startX, jint startY, jint minX, jint maxX, jint minY, jint maxY);
	void fling(jint startX, jint startY, jint velocityX, jint velocityY, jint minX, jint maxX, jint minY, jint maxY);
	void fling(jint startX, jint startY, jint velocityX, jint velocityY, jint minX, jint maxX, jint minY, jint maxY, jint overX, jint overY);
	void notifyHorizontalEdgeReached(jint startX, jint finalX, jint overX);
	void notifyVerticalEdgeReached(jint startY, jint finalY, jint overY);
	jboolean isOverScrolled();
	void abortAnimation();

protected:

	OverScroller(handle_type h) : base_(h) {}

};

} // namespace android::widget
} // namespace scapix::java_api

#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/view/animation/Interpolator.h>

namespace scapix::java_api {
namespace android::widget {

inline ref<OverScroller> OverScroller::new_object(ref<android::content::Context> context) { return base_::new_object(context); }
inline ref<OverScroller> OverScroller::new_object(ref<android::content::Context> context, ref<android::view::animation::Interpolator> interpolator) { return base_::new_object(context, interpolator); }
inline ref<OverScroller> OverScroller::new_object(ref<android::content::Context> context, ref<android::view::animation::Interpolator> interpolator, jfloat bounceCoefficientX, jfloat bounceCoefficientY) { return base_::new_object(context, interpolator, bounceCoefficientX, bounceCoefficientY); }
inline ref<OverScroller> OverScroller::new_object(ref<android::content::Context> context, ref<android::view::animation::Interpolator> interpolator, jfloat bounceCoefficientX, jfloat bounceCoefficientY, jboolean flywheel) { return base_::new_object(context, interpolator, bounceCoefficientX, bounceCoefficientY, flywheel); }
inline void OverScroller::setFriction(jfloat friction) { return call_method<SCAPIX_META_STRING("setFriction"), void>(friction); }
inline jboolean OverScroller::isFinished() { return call_method<SCAPIX_META_STRING("isFinished"), jboolean>(); }
inline void OverScroller::forceFinished(jboolean finished) { return call_method<SCAPIX_META_STRING("forceFinished"), void>(finished); }
inline jint OverScroller::getCurrX() { return call_method<SCAPIX_META_STRING("getCurrX"), jint>(); }
inline jint OverScroller::getCurrY() { return call_method<SCAPIX_META_STRING("getCurrY"), jint>(); }
inline jfloat OverScroller::getCurrVelocity() { return call_method<SCAPIX_META_STRING("getCurrVelocity"), jfloat>(); }
inline jint OverScroller::getStartX() { return call_method<SCAPIX_META_STRING("getStartX"), jint>(); }
inline jint OverScroller::getStartY() { return call_method<SCAPIX_META_STRING("getStartY"), jint>(); }
inline jint OverScroller::getFinalX() { return call_method<SCAPIX_META_STRING("getFinalX"), jint>(); }
inline jint OverScroller::getFinalY() { return call_method<SCAPIX_META_STRING("getFinalY"), jint>(); }
inline jboolean OverScroller::computeScrollOffset() { return call_method<SCAPIX_META_STRING("computeScrollOffset"), jboolean>(); }
inline void OverScroller::startScroll(jint startX, jint startY, jint dx, jint dy) { return call_method<SCAPIX_META_STRING("startScroll"), void>(startX, startY, dx, dy); }
inline void OverScroller::startScroll(jint startX, jint startY, jint dx, jint dy, jint duration) { return call_method<SCAPIX_META_STRING("startScroll"), void>(startX, startY, dx, dy, duration); }
inline jboolean OverScroller::springBack(jint startX, jint startY, jint minX, jint maxX, jint minY, jint maxY) { return call_method<SCAPIX_META_STRING("springBack"), jboolean>(startX, startY, minX, maxX, minY, maxY); }
inline void OverScroller::fling(jint startX, jint startY, jint velocityX, jint velocityY, jint minX, jint maxX, jint minY, jint maxY) { return call_method<SCAPIX_META_STRING("fling"), void>(startX, startY, velocityX, velocityY, minX, maxX, minY, maxY); }
inline void OverScroller::fling(jint startX, jint startY, jint velocityX, jint velocityY, jint minX, jint maxX, jint minY, jint maxY, jint overX, jint overY) { return call_method<SCAPIX_META_STRING("fling"), void>(startX, startY, velocityX, velocityY, minX, maxX, minY, maxY, overX, overY); }
inline void OverScroller::notifyHorizontalEdgeReached(jint startX, jint finalX, jint overX) { return call_method<SCAPIX_META_STRING("notifyHorizontalEdgeReached"), void>(startX, finalX, overX); }
inline void OverScroller::notifyVerticalEdgeReached(jint startY, jint finalY, jint overY) { return call_method<SCAPIX_META_STRING("notifyVerticalEdgeReached"), void>(startY, finalY, overY); }
inline jboolean OverScroller::isOverScrolled() { return call_method<SCAPIX_META_STRING("isOverScrolled"), jboolean>(); }
inline void OverScroller::abortAnimation() { return call_method<SCAPIX_META_STRING("abortAnimation"), void>(); }

} // namespace android::widget
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_WIDGET_OVERSCROLLER_H
