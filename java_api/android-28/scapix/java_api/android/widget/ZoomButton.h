// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/widget/ImageButton.h>
#include <scapix/java_api/android/view/View_OnLongClickListener.h>

#ifndef SCAPIX_ANDROID_WIDGET_ZOOMBUTTON_H
#define SCAPIX_ANDROID_WIDGET_ZOOMBUTTON_H

namespace scapix::java_api {

namespace android::content { class Context; }
namespace android::util { class AttributeSet; }
namespace android::view { class KeyEvent; }
namespace android::view { class MotionEvent; }
namespace android::view { class View; }
namespace java::lang { class CharSequence; }

namespace android::widget {

class ZoomButton : public object_base<SCAPIX_META_STRING("android/widget/ZoomButton"),
	android::widget::ImageButton,
	android::view::View_OnLongClickListener>
{
public:

	static ref<ZoomButton> new_object(ref<android::content::Context> context);
	static ref<ZoomButton> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs);
	static ref<ZoomButton> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr);
	static ref<ZoomButton> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr, jint defStyleRes);
	jboolean onTouchEvent(ref<android::view::MotionEvent> event);
	void setZoomSpeed(jlong speed);
	jboolean onLongClick(ref<android::view::View> v);
	jboolean onKeyUp(jint keyCode, ref<android::view::KeyEvent> event);
	void setEnabled(jboolean enabled);
	jboolean dispatchUnhandledMove(ref<android::view::View> focused, jint direction);
	ref<java::lang::CharSequence> getAccessibilityClassName();

protected:

	ZoomButton(handle_type h) : base_(h) {}

};

} // namespace android::widget
} // namespace scapix::java_api

#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/util/AttributeSet.h>
#include <scapix/java_api/android/view/KeyEvent.h>
#include <scapix/java_api/android/view/MotionEvent.h>
#include <scapix/java_api/android/view/View.h>
#include <scapix/java_api/java/lang/CharSequence.h>

namespace scapix::java_api {
namespace android::widget {

inline ref<ZoomButton> ZoomButton::new_object(ref<android::content::Context> context) { return base_::new_object(context); }
inline ref<ZoomButton> ZoomButton::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs) { return base_::new_object(context, attrs); }
inline ref<ZoomButton> ZoomButton::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr) { return base_::new_object(context, attrs, defStyleAttr); }
inline ref<ZoomButton> ZoomButton::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr, jint defStyleRes) { return base_::new_object(context, attrs, defStyleAttr, defStyleRes); }
inline jboolean ZoomButton::onTouchEvent(ref<android::view::MotionEvent> event) { return call_method<SCAPIX_META_STRING("onTouchEvent"), jboolean>(event); }
inline void ZoomButton::setZoomSpeed(jlong speed) { return call_method<SCAPIX_META_STRING("setZoomSpeed"), void>(speed); }
inline jboolean ZoomButton::onLongClick(ref<android::view::View> v) { return call_method<SCAPIX_META_STRING("onLongClick"), jboolean>(v); }
inline jboolean ZoomButton::onKeyUp(jint keyCode, ref<android::view::KeyEvent> event) { return call_method<SCAPIX_META_STRING("onKeyUp"), jboolean>(keyCode, event); }
inline void ZoomButton::setEnabled(jboolean enabled) { return call_method<SCAPIX_META_STRING("setEnabled"), void>(enabled); }
inline jboolean ZoomButton::dispatchUnhandledMove(ref<android::view::View> focused, jint direction) { return call_method<SCAPIX_META_STRING("dispatchUnhandledMove"), jboolean>(focused, direction); }
inline ref<java::lang::CharSequence> ZoomButton::getAccessibilityClassName() { return call_method<SCAPIX_META_STRING("getAccessibilityClassName"), ref<java::lang::CharSequence>>(); }

} // namespace android::widget
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_WIDGET_ZOOMBUTTON_H
