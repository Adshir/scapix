// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/widget/FrameLayout.h>

#ifndef SCAPIX_ANDROID_WIDGET_TIMEPICKER_H
#define SCAPIX_ANDROID_WIDGET_TIMEPICKER_H

namespace scapix::java_api {

namespace android::content { class Context; }
namespace android::util { class AttributeSet; }
namespace android::view { class ViewStructure; }
namespace android::view::autofill { class AutofillValue; }
namespace android::widget { class TimePicker_OnTimeChangedListener; }
namespace java::lang { class Boolean; }
namespace java::lang { class CharSequence; }
namespace java::lang { class Integer; }

namespace android::widget {

class TimePicker : public object_base<SCAPIX_META_STRING("android/widget/TimePicker"),
	android::widget::FrameLayout>
{
public:

	using OnTimeChangedListener = TimePicker_OnTimeChangedListener;

	static ref<TimePicker> new_object(ref<android::content::Context> context);
	static ref<TimePicker> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs);
	static ref<TimePicker> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr);
	static ref<TimePicker> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr, jint defStyleRes);
	void setHour(jint hour);
	jint getHour();
	void setMinute(jint minute);
	jint getMinute();
	void setCurrentHour(ref<java::lang::Integer> currentHour);
	ref<java::lang::Integer> getCurrentHour();
	void setCurrentMinute(ref<java::lang::Integer> currentMinute);
	ref<java::lang::Integer> getCurrentMinute();
	void setIs24HourView(ref<java::lang::Boolean> is24HourView);
	jboolean is24HourView();
	void setOnTimeChangedListener(ref<android::widget::TimePicker_OnTimeChangedListener> onTimeChangedListener);
	void setEnabled(jboolean enabled);
	jboolean isEnabled();
	jint getBaseline();
	jboolean validateInput();
	ref<java::lang::CharSequence> getAccessibilityClassName();
	void dispatchProvideAutofillStructure(ref<android::view::ViewStructure> structure, jint flags);
	void autofill(ref<android::view::autofill::AutofillValue> value);
	jint getAutofillType();
	ref<android::view::autofill::AutofillValue> getAutofillValue();

protected:

	TimePicker(handle_type h) : base_(h) {}

};

} // namespace android::widget
} // namespace scapix::java_api

#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/util/AttributeSet.h>
#include <scapix/java_api/android/view/ViewStructure.h>
#include <scapix/java_api/android/view/autofill/AutofillValue.h>
#include <scapix/java_api/android/widget/TimePicker_OnTimeChangedListener.h>
#include <scapix/java_api/java/lang/Boolean.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/java/lang/Integer.h>

namespace scapix::java_api {
namespace android::widget {

inline ref<TimePicker> TimePicker::new_object(ref<android::content::Context> context) { return base_::new_object(context); }
inline ref<TimePicker> TimePicker::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs) { return base_::new_object(context, attrs); }
inline ref<TimePicker> TimePicker::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr) { return base_::new_object(context, attrs, defStyleAttr); }
inline ref<TimePicker> TimePicker::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr, jint defStyleRes) { return base_::new_object(context, attrs, defStyleAttr, defStyleRes); }
inline void TimePicker::setHour(jint hour) { return call_method<SCAPIX_META_STRING("setHour"), void>(hour); }
inline jint TimePicker::getHour() { return call_method<SCAPIX_META_STRING("getHour"), jint>(); }
inline void TimePicker::setMinute(jint minute) { return call_method<SCAPIX_META_STRING("setMinute"), void>(minute); }
inline jint TimePicker::getMinute() { return call_method<SCAPIX_META_STRING("getMinute"), jint>(); }
inline void TimePicker::setCurrentHour(ref<java::lang::Integer> currentHour) { return call_method<SCAPIX_META_STRING("setCurrentHour"), void>(currentHour); }
inline ref<java::lang::Integer> TimePicker::getCurrentHour() { return call_method<SCAPIX_META_STRING("getCurrentHour"), ref<java::lang::Integer>>(); }
inline void TimePicker::setCurrentMinute(ref<java::lang::Integer> currentMinute) { return call_method<SCAPIX_META_STRING("setCurrentMinute"), void>(currentMinute); }
inline ref<java::lang::Integer> TimePicker::getCurrentMinute() { return call_method<SCAPIX_META_STRING("getCurrentMinute"), ref<java::lang::Integer>>(); }
inline void TimePicker::setIs24HourView(ref<java::lang::Boolean> is24HourView) { return call_method<SCAPIX_META_STRING("setIs24HourView"), void>(is24HourView); }
inline jboolean TimePicker::is24HourView() { return call_method<SCAPIX_META_STRING("is24HourView"), jboolean>(); }
inline void TimePicker::setOnTimeChangedListener(ref<android::widget::TimePicker_OnTimeChangedListener> onTimeChangedListener) { return call_method<SCAPIX_META_STRING("setOnTimeChangedListener"), void>(onTimeChangedListener); }
inline void TimePicker::setEnabled(jboolean enabled) { return call_method<SCAPIX_META_STRING("setEnabled"), void>(enabled); }
inline jboolean TimePicker::isEnabled() { return call_method<SCAPIX_META_STRING("isEnabled"), jboolean>(); }
inline jint TimePicker::getBaseline() { return call_method<SCAPIX_META_STRING("getBaseline"), jint>(); }
inline jboolean TimePicker::validateInput() { return call_method<SCAPIX_META_STRING("validateInput"), jboolean>(); }
inline ref<java::lang::CharSequence> TimePicker::getAccessibilityClassName() { return call_method<SCAPIX_META_STRING("getAccessibilityClassName"), ref<java::lang::CharSequence>>(); }
inline void TimePicker::dispatchProvideAutofillStructure(ref<android::view::ViewStructure> structure, jint flags) { return call_method<SCAPIX_META_STRING("dispatchProvideAutofillStructure"), void>(structure, flags); }
inline void TimePicker::autofill(ref<android::view::autofill::AutofillValue> value) { return call_method<SCAPIX_META_STRING("autofill"), void>(value); }
inline jint TimePicker::getAutofillType() { return call_method<SCAPIX_META_STRING("getAutofillType"), jint>(); }
inline ref<android::view::autofill::AutofillValue> TimePicker::getAutofillValue() { return call_method<SCAPIX_META_STRING("getAutofillValue"), ref<android::view::autofill::AutofillValue>>(); }

} // namespace android::widget
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_WIDGET_TIMEPICKER_H
