// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/database/AbstractWindowedCursor.h>

#ifndef SCAPIX_ANDROID_DATABASE_SQLITE_SQLITECURSOR_H
#define SCAPIX_ANDROID_DATABASE_SQLITE_SQLITECURSOR_H

namespace scapix::java_api {

namespace android::database { class CursorWindow; }
namespace android::database::sqlite { class SQLiteCursorDriver; }
namespace android::database::sqlite { class SQLiteDatabase; }
namespace android::database::sqlite { class SQLiteQuery; }
namespace java::lang { class String; }

namespace android::database::sqlite {

class SQLiteCursor : public object_base<SCAPIX_META_STRING("android/database/sqlite/SQLiteCursor"),
	android::database::AbstractWindowedCursor>
{
public:

	static ref<SQLiteCursor> new_object(ref<android::database::sqlite::SQLiteDatabase> db, ref<android::database::sqlite::SQLiteCursorDriver> driver, ref<java::lang::String> editTable, ref<android::database::sqlite::SQLiteQuery> query);
	static ref<SQLiteCursor> new_object(ref<android::database::sqlite::SQLiteCursorDriver> driver, ref<java::lang::String> editTable, ref<android::database::sqlite::SQLiteQuery> query);
	ref<android::database::sqlite::SQLiteDatabase> getDatabase();
	jboolean onMove(jint oldPosition, jint newPosition);
	jint getCount();
	jint getColumnIndex(ref<java::lang::String> columnName);
	ref<link::java::array<java::lang::String>> getColumnNames();
	void deactivate();
	void close();
	jboolean requery();
	void setWindow(ref<android::database::CursorWindow> window);
	void setSelectionArguments(ref<link::java::array<java::lang::String>> selectionArgs);
	void setFillWindowForwardOnly(jboolean fillWindowForwardOnly);

protected:

	SQLiteCursor(handle_type h) : base_(h) {}

};

} // namespace android::database::sqlite
} // namespace scapix::java_api

#include <scapix/java_api/android/database/CursorWindow.h>
#include <scapix/java_api/android/database/sqlite/SQLiteCursorDriver.h>
#include <scapix/java_api/android/database/sqlite/SQLiteDatabase.h>
#include <scapix/java_api/android/database/sqlite/SQLiteQuery.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::database::sqlite {

inline ref<SQLiteCursor> SQLiteCursor::new_object(ref<android::database::sqlite::SQLiteDatabase> db, ref<android::database::sqlite::SQLiteCursorDriver> driver, ref<java::lang::String> editTable, ref<android::database::sqlite::SQLiteQuery> query) { return base_::new_object(db, driver, editTable, query); }
inline ref<SQLiteCursor> SQLiteCursor::new_object(ref<android::database::sqlite::SQLiteCursorDriver> driver, ref<java::lang::String> editTable, ref<android::database::sqlite::SQLiteQuery> query) { return base_::new_object(driver, editTable, query); }
inline ref<android::database::sqlite::SQLiteDatabase> SQLiteCursor::getDatabase() { return call_method<SCAPIX_META_STRING("getDatabase"), ref<android::database::sqlite::SQLiteDatabase>>(); }
inline jboolean SQLiteCursor::onMove(jint oldPosition, jint newPosition) { return call_method<SCAPIX_META_STRING("onMove"), jboolean>(oldPosition, newPosition); }
inline jint SQLiteCursor::getCount() { return call_method<SCAPIX_META_STRING("getCount"), jint>(); }
inline jint SQLiteCursor::getColumnIndex(ref<java::lang::String> columnName) { return call_method<SCAPIX_META_STRING("getColumnIndex"), jint>(columnName); }
inline ref<link::java::array<java::lang::String>> SQLiteCursor::getColumnNames() { return call_method<SCAPIX_META_STRING("getColumnNames"), ref<link::java::array<java::lang::String>>>(); }
inline void SQLiteCursor::deactivate() { return call_method<SCAPIX_META_STRING("deactivate"), void>(); }
inline void SQLiteCursor::close() { return call_method<SCAPIX_META_STRING("close"), void>(); }
inline jboolean SQLiteCursor::requery() { return call_method<SCAPIX_META_STRING("requery"), jboolean>(); }
inline void SQLiteCursor::setWindow(ref<android::database::CursorWindow> window) { return call_method<SCAPIX_META_STRING("setWindow"), void>(window); }
inline void SQLiteCursor::setSelectionArguments(ref<link::java::array<java::lang::String>> selectionArgs) { return call_method<SCAPIX_META_STRING("setSelectionArguments"), void>(selectionArgs); }
inline void SQLiteCursor::setFillWindowForwardOnly(jboolean fillWindowForwardOnly) { return call_method<SCAPIX_META_STRING("setFillWindowForwardOnly"), void>(fillWindowForwardOnly); }

} // namespace android::database::sqlite
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_DATABASE_SQLITE_SQLITECURSOR_H
