// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_DATABASE_CHARARRAYBUFFER_H
#define SCAPIX_ANDROID_DATABASE_CHARARRAYBUFFER_H

namespace scapix::java_api {
namespace android::database {

class CharArrayBuffer : public object_base<SCAPIX_META_STRING("android/database/CharArrayBuffer"),
	java::lang::Object>
{
public:

	ref<link::java::array<jchar>> data();
	void data(ref<link::java::array<jchar>>);
	jint sizeCopied();
	void sizeCopied(jint);

	static ref<CharArrayBuffer> new_object(jint size);
	static ref<CharArrayBuffer> new_object(ref<link::java::array<jchar>> buf);

protected:

	CharArrayBuffer(handle_type h) : base_(h) {}

};

} // namespace android::database
} // namespace scapix::java_api


namespace scapix::java_api {
namespace android::database {

inline ref<link::java::array<jchar>> CharArrayBuffer::data() { return get_field<SCAPIX_META_STRING("data"), ref<link::java::array<jchar>>>(); }
inline void CharArrayBuffer::data(ref<link::java::array<jchar>> v) { set_field<SCAPIX_META_STRING("data"), ref<link::java::array<jchar>>>(v); }
inline jint CharArrayBuffer::sizeCopied() { return get_field<SCAPIX_META_STRING("sizeCopied"), jint>(); }
inline void CharArrayBuffer::sizeCopied(jint v) { set_field<SCAPIX_META_STRING("sizeCopied"), jint>(v); }
inline ref<CharArrayBuffer> CharArrayBuffer::new_object(jint size) { return base_::new_object(size); }
inline ref<CharArrayBuffer> CharArrayBuffer::new_object(ref<link::java::array<jchar>> buf) { return base_::new_object(buf); }

} // namespace android::database
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_DATABASE_CHARARRAYBUFFER_H
