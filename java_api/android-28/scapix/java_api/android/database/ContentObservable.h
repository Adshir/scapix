// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/database/Observable.h>

#ifndef SCAPIX_ANDROID_DATABASE_CONTENTOBSERVABLE_H
#define SCAPIX_ANDROID_DATABASE_CONTENTOBSERVABLE_H

namespace scapix::java_api {

namespace android::database { class ContentObserver; }
namespace android::net { class Uri; }

namespace android::database {

class ContentObservable : public object_base<SCAPIX_META_STRING("android/database/ContentObservable"),
	android::database::Observable>
{
public:

	static ref<ContentObservable> new_object();
	void registerObserver(ref<android::database::ContentObserver> observer);
	void dispatchChange(jboolean selfChange);
	void dispatchChange(jboolean selfChange, ref<android::net::Uri> uri);
	void notifyChange(jboolean selfChange);

protected:

	ContentObservable(handle_type h) : base_(h) {}

};

} // namespace android::database
} // namespace scapix::java_api

#include <scapix/java_api/android/database/ContentObserver.h>
#include <scapix/java_api/android/net/Uri.h>

namespace scapix::java_api {
namespace android::database {

inline ref<ContentObservable> ContentObservable::new_object() { return base_::new_object(); }
inline void ContentObservable::registerObserver(ref<android::database::ContentObserver> observer) { return call_method<SCAPIX_META_STRING("registerObserver"), void>(observer); }
inline void ContentObservable::dispatchChange(jboolean selfChange) { return call_method<SCAPIX_META_STRING("dispatchChange"), void>(selfChange); }
inline void ContentObservable::dispatchChange(jboolean selfChange, ref<android::net::Uri> uri) { return call_method<SCAPIX_META_STRING("dispatchChange"), void>(selfChange, uri); }
inline void ContentObservable::notifyChange(jboolean selfChange) { return call_method<SCAPIX_META_STRING("notifyChange"), void>(selfChange); }

} // namespace android::database
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_DATABASE_CONTENTOBSERVABLE_H
