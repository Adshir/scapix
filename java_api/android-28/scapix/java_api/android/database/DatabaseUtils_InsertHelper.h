// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_DATABASE_DATABASEUTILS_INSERTHELPER_H
#define SCAPIX_ANDROID_DATABASE_DATABASEUTILS_INSERTHELPER_H

namespace scapix::java_api {

namespace android::content { class ContentValues; }
namespace android::database::sqlite { class SQLiteDatabase; }
namespace java::lang { class String; }

namespace android::database {

class DatabaseUtils_InsertHelper : public object_base<SCAPIX_META_STRING("android/database/DatabaseUtils$InsertHelper"),
	java::lang::Object>
{
public:

	static ref<DatabaseUtils_InsertHelper> new_object(ref<android::database::sqlite::SQLiteDatabase> db, ref<java::lang::String> tableName);
	jint getColumnIndex(ref<java::lang::String> key);
	void bind(jint index, jdouble value);
	void bind(jint index, jfloat value);
	void bind(jint index, jlong value);
	void bind(jint index, jint value);
	void bind(jint index, jboolean value);
	void bindNull(jint index);
	void bind(jint index, ref<link::java::array<jbyte>> value);
	void bind(jint index, ref<java::lang::String> value);
	jlong insert(ref<android::content::ContentValues> values);
	jlong execute();
	void prepareForInsert();
	void prepareForReplace();
	jlong replace(ref<android::content::ContentValues> values);
	void close();

protected:

	DatabaseUtils_InsertHelper(handle_type h) : base_(h) {}

};

} // namespace android::database
} // namespace scapix::java_api

#include <scapix/java_api/android/content/ContentValues.h>
#include <scapix/java_api/android/database/sqlite/SQLiteDatabase.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::database {

inline ref<DatabaseUtils_InsertHelper> DatabaseUtils_InsertHelper::new_object(ref<android::database::sqlite::SQLiteDatabase> db, ref<java::lang::String> tableName) { return base_::new_object(db, tableName); }
inline jint DatabaseUtils_InsertHelper::getColumnIndex(ref<java::lang::String> key) { return call_method<SCAPIX_META_STRING("getColumnIndex"), jint>(key); }
inline void DatabaseUtils_InsertHelper::bind(jint index, jdouble value) { return call_method<SCAPIX_META_STRING("bind"), void>(index, value); }
inline void DatabaseUtils_InsertHelper::bind(jint index, jfloat value) { return call_method<SCAPIX_META_STRING("bind"), void>(index, value); }
inline void DatabaseUtils_InsertHelper::bind(jint index, jlong value) { return call_method<SCAPIX_META_STRING("bind"), void>(index, value); }
inline void DatabaseUtils_InsertHelper::bind(jint index, jint value) { return call_method<SCAPIX_META_STRING("bind"), void>(index, value); }
inline void DatabaseUtils_InsertHelper::bind(jint index, jboolean value) { return call_method<SCAPIX_META_STRING("bind"), void>(index, value); }
inline void DatabaseUtils_InsertHelper::bindNull(jint index) { return call_method<SCAPIX_META_STRING("bindNull"), void>(index); }
inline void DatabaseUtils_InsertHelper::bind(jint index, ref<link::java::array<jbyte>> value) { return call_method<SCAPIX_META_STRING("bind"), void>(index, value); }
inline void DatabaseUtils_InsertHelper::bind(jint index, ref<java::lang::String> value) { return call_method<SCAPIX_META_STRING("bind"), void>(index, value); }
inline jlong DatabaseUtils_InsertHelper::insert(ref<android::content::ContentValues> values) { return call_method<SCAPIX_META_STRING("insert"), jlong>(values); }
inline jlong DatabaseUtils_InsertHelper::execute() { return call_method<SCAPIX_META_STRING("execute"), jlong>(); }
inline void DatabaseUtils_InsertHelper::prepareForInsert() { return call_method<SCAPIX_META_STRING("prepareForInsert"), void>(); }
inline void DatabaseUtils_InsertHelper::prepareForReplace() { return call_method<SCAPIX_META_STRING("prepareForReplace"), void>(); }
inline jlong DatabaseUtils_InsertHelper::replace(ref<android::content::ContentValues> values) { return call_method<SCAPIX_META_STRING("replace"), jlong>(values); }
inline void DatabaseUtils_InsertHelper::close() { return call_method<SCAPIX_META_STRING("close"), void>(); }

} // namespace android::database
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_DATABASE_DATABASEUTILS_INSERTHELPER_H
