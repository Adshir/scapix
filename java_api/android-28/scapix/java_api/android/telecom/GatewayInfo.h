// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_ANDROID_TELECOM_GATEWAYINFO_H
#define SCAPIX_ANDROID_TELECOM_GATEWAYINFO_H

namespace scapix::java_api {

namespace android::net { class Uri; }
namespace android::os { class Parcel; }
namespace android::os { class Parcelable_Creator; }
namespace java::lang { class String; }

namespace android::telecom {

class GatewayInfo : public object_base<SCAPIX_META_STRING("android/telecom/GatewayInfo"),
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static ref<android::os::Parcelable_Creator> CREATOR_();

	static ref<GatewayInfo> new_object(ref<java::lang::String> packageName, ref<android::net::Uri> gatewayUri, ref<android::net::Uri> originalAddress);
	ref<java::lang::String> getGatewayProviderPackageName();
	ref<android::net::Uri> getGatewayAddress();
	ref<android::net::Uri> getOriginalAddress();
	jboolean isEmpty();
	jint describeContents();
	void writeToParcel(ref<android::os::Parcel> destination, jint flags);

protected:

	GatewayInfo(handle_type h) : base_(h) {}

};

} // namespace android::telecom
} // namespace scapix::java_api

#include <scapix/java_api/android/net/Uri.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::telecom {

inline ref<android::os::Parcelable_Creator> GatewayInfo::CREATOR_() { return get_static_field<SCAPIX_META_STRING("CREATOR"), ref<android::os::Parcelable_Creator>>(); }
inline ref<GatewayInfo> GatewayInfo::new_object(ref<java::lang::String> packageName, ref<android::net::Uri> gatewayUri, ref<android::net::Uri> originalAddress) { return base_::new_object(packageName, gatewayUri, originalAddress); }
inline ref<java::lang::String> GatewayInfo::getGatewayProviderPackageName() { return call_method<SCAPIX_META_STRING("getGatewayProviderPackageName"), ref<java::lang::String>>(); }
inline ref<android::net::Uri> GatewayInfo::getGatewayAddress() { return call_method<SCAPIX_META_STRING("getGatewayAddress"), ref<android::net::Uri>>(); }
inline ref<android::net::Uri> GatewayInfo::getOriginalAddress() { return call_method<SCAPIX_META_STRING("getOriginalAddress"), ref<android::net::Uri>>(); }
inline jboolean GatewayInfo::isEmpty() { return call_method<SCAPIX_META_STRING("isEmpty"), jboolean>(); }
inline jint GatewayInfo::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }
inline void GatewayInfo::writeToParcel(ref<android::os::Parcel> destination, jint flags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(destination, flags); }

} // namespace android::telecom
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_TELECOM_GATEWAYINFO_H
