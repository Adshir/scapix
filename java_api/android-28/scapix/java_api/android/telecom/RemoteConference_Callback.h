// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_TELECOM_REMOTECONFERENCE_CALLBACK_H
#define SCAPIX_ANDROID_TELECOM_REMOTECONFERENCE_CALLBACK_H

namespace scapix::java_api {

namespace android::os { class Bundle; }
namespace android::telecom { class DisconnectCause; }
namespace android::telecom { class RemoteConference; }
namespace android::telecom { class RemoteConnection; }
namespace java::util { class List; }

namespace android::telecom {

class RemoteConference_Callback : public object_base<SCAPIX_META_STRING("android/telecom/RemoteConference$Callback"),
	java::lang::Object>
{
public:

	static ref<RemoteConference_Callback> new_object();
	void onStateChanged(ref<android::telecom::RemoteConference> conference, jint oldState, jint newState);
	void onDisconnected(ref<android::telecom::RemoteConference> conference, ref<android::telecom::DisconnectCause> disconnectCause);
	void onConnectionAdded(ref<android::telecom::RemoteConference> conference, ref<android::telecom::RemoteConnection> connection);
	void onConnectionRemoved(ref<android::telecom::RemoteConference> conference, ref<android::telecom::RemoteConnection> connection);
	void onConnectionCapabilitiesChanged(ref<android::telecom::RemoteConference> conference, jint connectionCapabilities);
	void onConnectionPropertiesChanged(ref<android::telecom::RemoteConference> conference, jint connectionProperties);
	void onConferenceableConnectionsChanged(ref<android::telecom::RemoteConference> conference, ref<java::util::List> conferenceableConnections);
	void onDestroyed(ref<android::telecom::RemoteConference> conference);
	void onExtrasChanged(ref<android::telecom::RemoteConference> conference, ref<android::os::Bundle> extras);

protected:

	RemoteConference_Callback(handle_type h) : base_(h) {}

};

} // namespace android::telecom
} // namespace scapix::java_api

#include <scapix/java_api/android/os/Bundle.h>
#include <scapix/java_api/android/telecom/DisconnectCause.h>
#include <scapix/java_api/android/telecom/RemoteConference.h>
#include <scapix/java_api/android/telecom/RemoteConnection.h>
#include <scapix/java_api/java/util/List.h>

namespace scapix::java_api {
namespace android::telecom {

inline ref<RemoteConference_Callback> RemoteConference_Callback::new_object() { return base_::new_object(); }
inline void RemoteConference_Callback::onStateChanged(ref<android::telecom::RemoteConference> conference, jint oldState, jint newState) { return call_method<SCAPIX_META_STRING("onStateChanged"), void>(conference, oldState, newState); }
inline void RemoteConference_Callback::onDisconnected(ref<android::telecom::RemoteConference> conference, ref<android::telecom::DisconnectCause> disconnectCause) { return call_method<SCAPIX_META_STRING("onDisconnected"), void>(conference, disconnectCause); }
inline void RemoteConference_Callback::onConnectionAdded(ref<android::telecom::RemoteConference> conference, ref<android::telecom::RemoteConnection> connection) { return call_method<SCAPIX_META_STRING("onConnectionAdded"), void>(conference, connection); }
inline void RemoteConference_Callback::onConnectionRemoved(ref<android::telecom::RemoteConference> conference, ref<android::telecom::RemoteConnection> connection) { return call_method<SCAPIX_META_STRING("onConnectionRemoved"), void>(conference, connection); }
inline void RemoteConference_Callback::onConnectionCapabilitiesChanged(ref<android::telecom::RemoteConference> conference, jint connectionCapabilities) { return call_method<SCAPIX_META_STRING("onConnectionCapabilitiesChanged"), void>(conference, connectionCapabilities); }
inline void RemoteConference_Callback::onConnectionPropertiesChanged(ref<android::telecom::RemoteConference> conference, jint connectionProperties) { return call_method<SCAPIX_META_STRING("onConnectionPropertiesChanged"), void>(conference, connectionProperties); }
inline void RemoteConference_Callback::onConferenceableConnectionsChanged(ref<android::telecom::RemoteConference> conference, ref<java::util::List> conferenceableConnections) { return call_method<SCAPIX_META_STRING("onConferenceableConnectionsChanged"), void>(conference, conferenceableConnections); }
inline void RemoteConference_Callback::onDestroyed(ref<android::telecom::RemoteConference> conference) { return call_method<SCAPIX_META_STRING("onDestroyed"), void>(conference); }
inline void RemoteConference_Callback::onExtrasChanged(ref<android::telecom::RemoteConference> conference, ref<android::os::Bundle> extras) { return call_method<SCAPIX_META_STRING("onExtrasChanged"), void>(conference, extras); }

} // namespace android::telecom
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_TELECOM_REMOTECONFERENCE_CALLBACK_H
