// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_TELECOM_CALL_CALLBACK_H
#define SCAPIX_ANDROID_TELECOM_CALL_CALLBACK_H

namespace scapix::java_api {

namespace android::os { class Bundle; }
namespace android::telecom { class Call; }
namespace android::telecom { class Call_Details; }
namespace android::telecom { class Call_RttCall; }
namespace android::telecom { class InCallService_VideoCall; }
namespace java::lang { class String; }
namespace java::util { class List; }

namespace android::telecom {

class Call_Callback : public object_base<SCAPIX_META_STRING("android/telecom/Call$Callback"),
	java::lang::Object>
{
public:

	static jint HANDOVER_FAILURE_DEST_APP_REJECTED_();
	static jint HANDOVER_FAILURE_NOT_SUPPORTED_();
	static jint HANDOVER_FAILURE_ONGOING_EMERGENCY_CALL_();
	static jint HANDOVER_FAILURE_UNKNOWN_();
	static jint HANDOVER_FAILURE_USER_REJECTED_();

	static ref<Call_Callback> new_object();
	void onStateChanged(ref<android::telecom::Call> call, jint state);
	void onParentChanged(ref<android::telecom::Call> call, ref<android::telecom::Call> parent);
	void onChildrenChanged(ref<android::telecom::Call> call, ref<java::util::List> children);
	void onDetailsChanged(ref<android::telecom::Call> call, ref<android::telecom::Call_Details> details);
	void onCannedTextResponsesLoaded(ref<android::telecom::Call> call, ref<java::util::List> cannedTextResponses);
	void onPostDialWait(ref<android::telecom::Call> call, ref<java::lang::String> remainingPostDialSequence);
	void onVideoCallChanged(ref<android::telecom::Call> call, ref<android::telecom::InCallService_VideoCall> videoCall);
	void onCallDestroyed(ref<android::telecom::Call> call);
	void onConferenceableCallsChanged(ref<android::telecom::Call> call, ref<java::util::List> conferenceableCalls);
	void onConnectionEvent(ref<android::telecom::Call> call, ref<java::lang::String> event, ref<android::os::Bundle> extras);
	void onRttModeChanged(ref<android::telecom::Call> call, jint mode);
	void onRttStatusChanged(ref<android::telecom::Call> call, jboolean enabled, ref<android::telecom::Call_RttCall> rttCall);
	void onRttRequest(ref<android::telecom::Call> call, jint id);
	void onRttInitiationFailure(ref<android::telecom::Call> call, jint reason);
	void onHandoverComplete(ref<android::telecom::Call> call);
	void onHandoverFailed(ref<android::telecom::Call> call, jint failureReason);

protected:

	Call_Callback(handle_type h) : base_(h) {}

};

} // namespace android::telecom
} // namespace scapix::java_api

#include <scapix/java_api/android/os/Bundle.h>
#include <scapix/java_api/android/telecom/Call.h>
#include <scapix/java_api/android/telecom/Call_Details.h>
#include <scapix/java_api/android/telecom/Call_RttCall.h>
#include <scapix/java_api/android/telecom/InCallService_VideoCall.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/List.h>

namespace scapix::java_api {
namespace android::telecom {

inline jint Call_Callback::HANDOVER_FAILURE_DEST_APP_REJECTED_() { return get_static_field<SCAPIX_META_STRING("HANDOVER_FAILURE_DEST_APP_REJECTED"), jint>(); }
inline jint Call_Callback::HANDOVER_FAILURE_NOT_SUPPORTED_() { return get_static_field<SCAPIX_META_STRING("HANDOVER_FAILURE_NOT_SUPPORTED"), jint>(); }
inline jint Call_Callback::HANDOVER_FAILURE_ONGOING_EMERGENCY_CALL_() { return get_static_field<SCAPIX_META_STRING("HANDOVER_FAILURE_ONGOING_EMERGENCY_CALL"), jint>(); }
inline jint Call_Callback::HANDOVER_FAILURE_UNKNOWN_() { return get_static_field<SCAPIX_META_STRING("HANDOVER_FAILURE_UNKNOWN"), jint>(); }
inline jint Call_Callback::HANDOVER_FAILURE_USER_REJECTED_() { return get_static_field<SCAPIX_META_STRING("HANDOVER_FAILURE_USER_REJECTED"), jint>(); }
inline ref<Call_Callback> Call_Callback::new_object() { return base_::new_object(); }
inline void Call_Callback::onStateChanged(ref<android::telecom::Call> call, jint state) { return call_method<SCAPIX_META_STRING("onStateChanged"), void>(call, state); }
inline void Call_Callback::onParentChanged(ref<android::telecom::Call> call, ref<android::telecom::Call> parent) { return call_method<SCAPIX_META_STRING("onParentChanged"), void>(call, parent); }
inline void Call_Callback::onChildrenChanged(ref<android::telecom::Call> call, ref<java::util::List> children) { return call_method<SCAPIX_META_STRING("onChildrenChanged"), void>(call, children); }
inline void Call_Callback::onDetailsChanged(ref<android::telecom::Call> call, ref<android::telecom::Call_Details> details) { return call_method<SCAPIX_META_STRING("onDetailsChanged"), void>(call, details); }
inline void Call_Callback::onCannedTextResponsesLoaded(ref<android::telecom::Call> call, ref<java::util::List> cannedTextResponses) { return call_method<SCAPIX_META_STRING("onCannedTextResponsesLoaded"), void>(call, cannedTextResponses); }
inline void Call_Callback::onPostDialWait(ref<android::telecom::Call> call, ref<java::lang::String> remainingPostDialSequence) { return call_method<SCAPIX_META_STRING("onPostDialWait"), void>(call, remainingPostDialSequence); }
inline void Call_Callback::onVideoCallChanged(ref<android::telecom::Call> call, ref<android::telecom::InCallService_VideoCall> videoCall) { return call_method<SCAPIX_META_STRING("onVideoCallChanged"), void>(call, videoCall); }
inline void Call_Callback::onCallDestroyed(ref<android::telecom::Call> call) { return call_method<SCAPIX_META_STRING("onCallDestroyed"), void>(call); }
inline void Call_Callback::onConferenceableCallsChanged(ref<android::telecom::Call> call, ref<java::util::List> conferenceableCalls) { return call_method<SCAPIX_META_STRING("onConferenceableCallsChanged"), void>(call, conferenceableCalls); }
inline void Call_Callback::onConnectionEvent(ref<android::telecom::Call> call, ref<java::lang::String> event, ref<android::os::Bundle> extras) { return call_method<SCAPIX_META_STRING("onConnectionEvent"), void>(call, event, extras); }
inline void Call_Callback::onRttModeChanged(ref<android::telecom::Call> call, jint mode) { return call_method<SCAPIX_META_STRING("onRttModeChanged"), void>(call, mode); }
inline void Call_Callback::onRttStatusChanged(ref<android::telecom::Call> call, jboolean enabled, ref<android::telecom::Call_RttCall> rttCall) { return call_method<SCAPIX_META_STRING("onRttStatusChanged"), void>(call, enabled, rttCall); }
inline void Call_Callback::onRttRequest(ref<android::telecom::Call> call, jint id) { return call_method<SCAPIX_META_STRING("onRttRequest"), void>(call, id); }
inline void Call_Callback::onRttInitiationFailure(ref<android::telecom::Call> call, jint reason) { return call_method<SCAPIX_META_STRING("onRttInitiationFailure"), void>(call, reason); }
inline void Call_Callback::onHandoverComplete(ref<android::telecom::Call> call) { return call_method<SCAPIX_META_STRING("onHandoverComplete"), void>(call); }
inline void Call_Callback::onHandoverFailed(ref<android::telecom::Call> call, jint failureReason) { return call_method<SCAPIX_META_STRING("onHandoverFailed"), void>(call, failureReason); }

} // namespace android::telecom
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_TELECOM_CALL_CALLBACK_H
