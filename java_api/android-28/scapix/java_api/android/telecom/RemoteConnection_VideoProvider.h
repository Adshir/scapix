// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_TELECOM_REMOTECONNECTION_VIDEOPROVIDER_H
#define SCAPIX_ANDROID_TELECOM_REMOTECONNECTION_VIDEOPROVIDER_H

namespace scapix::java_api {

namespace android::net { class Uri; }
namespace android::telecom { class RemoteConnection_VideoProvider_Callback; }
namespace android::telecom { class VideoProfile; }
namespace android::view { class Surface; }
namespace java::lang { class String; }

namespace android::telecom {

class RemoteConnection_VideoProvider : public object_base<SCAPIX_META_STRING("android/telecom/RemoteConnection$VideoProvider"),
	java::lang::Object>
{
public:

	using Callback = RemoteConnection_VideoProvider_Callback;

	void registerCallback(ref<android::telecom::RemoteConnection_VideoProvider_Callback> l);
	void unregisterCallback(ref<android::telecom::RemoteConnection_VideoProvider_Callback> l);
	void setCamera(ref<java::lang::String> cameraId);
	void setPreviewSurface(ref<android::view::Surface> surface);
	void setDisplaySurface(ref<android::view::Surface> surface);
	void setDeviceOrientation(jint rotation);
	void setZoom(jfloat value);
	void sendSessionModifyRequest(ref<android::telecom::VideoProfile> fromProfile, ref<android::telecom::VideoProfile> toProfile);
	void sendSessionModifyResponse(ref<android::telecom::VideoProfile> responseProfile);
	void requestCameraCapabilities();
	void requestCallDataUsage();
	void setPauseImage(ref<android::net::Uri> uri);

protected:

	RemoteConnection_VideoProvider(handle_type h) : base_(h) {}

};

} // namespace android::telecom
} // namespace scapix::java_api

#include <scapix/java_api/android/net/Uri.h>
#include <scapix/java_api/android/telecom/RemoteConnection_VideoProvider_Callback.h>
#include <scapix/java_api/android/telecom/VideoProfile.h>
#include <scapix/java_api/android/view/Surface.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::telecom {

inline void RemoteConnection_VideoProvider::registerCallback(ref<android::telecom::RemoteConnection_VideoProvider_Callback> l) { return call_method<SCAPIX_META_STRING("registerCallback"), void>(l); }
inline void RemoteConnection_VideoProvider::unregisterCallback(ref<android::telecom::RemoteConnection_VideoProvider_Callback> l) { return call_method<SCAPIX_META_STRING("unregisterCallback"), void>(l); }
inline void RemoteConnection_VideoProvider::setCamera(ref<java::lang::String> cameraId) { return call_method<SCAPIX_META_STRING("setCamera"), void>(cameraId); }
inline void RemoteConnection_VideoProvider::setPreviewSurface(ref<android::view::Surface> surface) { return call_method<SCAPIX_META_STRING("setPreviewSurface"), void>(surface); }
inline void RemoteConnection_VideoProvider::setDisplaySurface(ref<android::view::Surface> surface) { return call_method<SCAPIX_META_STRING("setDisplaySurface"), void>(surface); }
inline void RemoteConnection_VideoProvider::setDeviceOrientation(jint rotation) { return call_method<SCAPIX_META_STRING("setDeviceOrientation"), void>(rotation); }
inline void RemoteConnection_VideoProvider::setZoom(jfloat value) { return call_method<SCAPIX_META_STRING("setZoom"), void>(value); }
inline void RemoteConnection_VideoProvider::sendSessionModifyRequest(ref<android::telecom::VideoProfile> fromProfile, ref<android::telecom::VideoProfile> toProfile) { return call_method<SCAPIX_META_STRING("sendSessionModifyRequest"), void>(fromProfile, toProfile); }
inline void RemoteConnection_VideoProvider::sendSessionModifyResponse(ref<android::telecom::VideoProfile> responseProfile) { return call_method<SCAPIX_META_STRING("sendSessionModifyResponse"), void>(responseProfile); }
inline void RemoteConnection_VideoProvider::requestCameraCapabilities() { return call_method<SCAPIX_META_STRING("requestCameraCapabilities"), void>(); }
inline void RemoteConnection_VideoProvider::requestCallDataUsage() { return call_method<SCAPIX_META_STRING("requestCallDataUsage"), void>(); }
inline void RemoteConnection_VideoProvider::setPauseImage(ref<android::net::Uri> uri) { return call_method<SCAPIX_META_STRING("setPauseImage"), void>(uri); }

} // namespace android::telecom
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_TELECOM_REMOTECONNECTION_VIDEOPROVIDER_H
