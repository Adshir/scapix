// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Enum.h>

#ifndef SCAPIX_ANDROID_VIEW_VIEWDEBUG_HIERARCHYTRACETYPE_H
#define SCAPIX_ANDROID_VIEW_VIEWDEBUG_HIERARCHYTRACETYPE_H

namespace scapix::java_api {

namespace java::lang { class String; }

namespace android::view {

class ViewDebug_HierarchyTraceType : public object_base<SCAPIX_META_STRING("android/view/ViewDebug$HierarchyTraceType"),
	java::lang::Enum>
{
public:

	static ref<android::view::ViewDebug_HierarchyTraceType> INVALIDATE_();
	static ref<android::view::ViewDebug_HierarchyTraceType> INVALIDATE_CHILD_();
	static ref<android::view::ViewDebug_HierarchyTraceType> INVALIDATE_CHILD_IN_PARENT_();
	static ref<android::view::ViewDebug_HierarchyTraceType> REQUEST_LAYOUT_();
	static ref<android::view::ViewDebug_HierarchyTraceType> ON_LAYOUT_();
	static ref<android::view::ViewDebug_HierarchyTraceType> ON_MEASURE_();
	static ref<android::view::ViewDebug_HierarchyTraceType> DRAW_();
	static ref<android::view::ViewDebug_HierarchyTraceType> BUILD_CACHE_();

	static ref<link::java::array<android::view::ViewDebug_HierarchyTraceType>> values();
	static ref<android::view::ViewDebug_HierarchyTraceType> valueOf(ref<java::lang::String> name);

protected:

	ViewDebug_HierarchyTraceType(handle_type h) : base_(h) {}

};

} // namespace android::view
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::view {

inline ref<android::view::ViewDebug_HierarchyTraceType> ViewDebug_HierarchyTraceType::INVALIDATE_() { return get_static_field<SCAPIX_META_STRING("INVALIDATE"), ref<android::view::ViewDebug_HierarchyTraceType>>(); }
inline ref<android::view::ViewDebug_HierarchyTraceType> ViewDebug_HierarchyTraceType::INVALIDATE_CHILD_() { return get_static_field<SCAPIX_META_STRING("INVALIDATE_CHILD"), ref<android::view::ViewDebug_HierarchyTraceType>>(); }
inline ref<android::view::ViewDebug_HierarchyTraceType> ViewDebug_HierarchyTraceType::INVALIDATE_CHILD_IN_PARENT_() { return get_static_field<SCAPIX_META_STRING("INVALIDATE_CHILD_IN_PARENT"), ref<android::view::ViewDebug_HierarchyTraceType>>(); }
inline ref<android::view::ViewDebug_HierarchyTraceType> ViewDebug_HierarchyTraceType::REQUEST_LAYOUT_() { return get_static_field<SCAPIX_META_STRING("REQUEST_LAYOUT"), ref<android::view::ViewDebug_HierarchyTraceType>>(); }
inline ref<android::view::ViewDebug_HierarchyTraceType> ViewDebug_HierarchyTraceType::ON_LAYOUT_() { return get_static_field<SCAPIX_META_STRING("ON_LAYOUT"), ref<android::view::ViewDebug_HierarchyTraceType>>(); }
inline ref<android::view::ViewDebug_HierarchyTraceType> ViewDebug_HierarchyTraceType::ON_MEASURE_() { return get_static_field<SCAPIX_META_STRING("ON_MEASURE"), ref<android::view::ViewDebug_HierarchyTraceType>>(); }
inline ref<android::view::ViewDebug_HierarchyTraceType> ViewDebug_HierarchyTraceType::DRAW_() { return get_static_field<SCAPIX_META_STRING("DRAW"), ref<android::view::ViewDebug_HierarchyTraceType>>(); }
inline ref<android::view::ViewDebug_HierarchyTraceType> ViewDebug_HierarchyTraceType::BUILD_CACHE_() { return get_static_field<SCAPIX_META_STRING("BUILD_CACHE"), ref<android::view::ViewDebug_HierarchyTraceType>>(); }
inline ref<link::java::array<android::view::ViewDebug_HierarchyTraceType>> ViewDebug_HierarchyTraceType::values() { return call_static_method<SCAPIX_META_STRING("values"), ref<link::java::array<android::view::ViewDebug_HierarchyTraceType>>>(); }
inline ref<android::view::ViewDebug_HierarchyTraceType> ViewDebug_HierarchyTraceType::valueOf(ref<java::lang::String> name) { return call_static_method<SCAPIX_META_STRING("valueOf"), ref<android::view::ViewDebug_HierarchyTraceType>>(name); }

} // namespace android::view
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_VIEW_VIEWDEBUG_HIERARCHYTRACETYPE_H
