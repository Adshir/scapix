// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_ANDROID_VIEW_DISPLAY_MODE_H
#define SCAPIX_ANDROID_VIEW_DISPLAY_MODE_H

namespace scapix::java_api {

namespace android::os { class Parcel; }
namespace android::os { class Parcelable_Creator; }
namespace java::lang { class String; }

namespace android::view {

class Display_Mode : public object_base<SCAPIX_META_STRING("android/view/Display$Mode"),
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static ref<android::os::Parcelable_Creator> CREATOR_();

	jint getModeId();
	jint getPhysicalWidth();
	jint getPhysicalHeight();
	jfloat getRefreshRate();
	jboolean equals(ref<java::lang::Object> other);
	jint hashCode();
	ref<java::lang::String> toString();
	jint describeContents();
	void writeToParcel(ref<android::os::Parcel> out, jint parcelableFlags);

protected:

	Display_Mode(handle_type h) : base_(h) {}

};

} // namespace android::view
} // namespace scapix::java_api

#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::view {

inline ref<android::os::Parcelable_Creator> Display_Mode::CREATOR_() { return get_static_field<SCAPIX_META_STRING("CREATOR"), ref<android::os::Parcelable_Creator>>(); }
inline jint Display_Mode::getModeId() { return call_method<SCAPIX_META_STRING("getModeId"), jint>(); }
inline jint Display_Mode::getPhysicalWidth() { return call_method<SCAPIX_META_STRING("getPhysicalWidth"), jint>(); }
inline jint Display_Mode::getPhysicalHeight() { return call_method<SCAPIX_META_STRING("getPhysicalHeight"), jint>(); }
inline jfloat Display_Mode::getRefreshRate() { return call_method<SCAPIX_META_STRING("getRefreshRate"), jfloat>(); }
inline jboolean Display_Mode::equals(ref<java::lang::Object> other) { return call_method<SCAPIX_META_STRING("equals"), jboolean>(other); }
inline jint Display_Mode::hashCode() { return call_method<SCAPIX_META_STRING("hashCode"), jint>(); }
inline ref<java::lang::String> Display_Mode::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }
inline jint Display_Mode::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }
inline void Display_Mode::writeToParcel(ref<android::os::Parcel> out, jint parcelableFlags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(out, parcelableFlags); }

} // namespace android::view
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_VIEW_DISPLAY_MODE_H
