// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_VIEW_GRAVITY_H
#define SCAPIX_ANDROID_VIEW_GRAVITY_H

namespace scapix::java_api {

namespace android::graphics { class Rect; }

namespace android::view {

class Gravity : public object_base<SCAPIX_META_STRING("android/view/Gravity"),
	java::lang::Object>
{
public:

	static jint AXIS_CLIP_();
	static jint AXIS_PULL_AFTER_();
	static jint AXIS_PULL_BEFORE_();
	static jint AXIS_SPECIFIED_();
	static jint AXIS_X_SHIFT_();
	static jint AXIS_Y_SHIFT_();
	static jint BOTTOM_();
	static jint CENTER_();
	static jint CENTER_HORIZONTAL_();
	static jint CENTER_VERTICAL_();
	static jint CLIP_HORIZONTAL_();
	static jint CLIP_VERTICAL_();
	static jint DISPLAY_CLIP_HORIZONTAL_();
	static jint DISPLAY_CLIP_VERTICAL_();
	static jint END_();
	static jint FILL_();
	static jint FILL_HORIZONTAL_();
	static jint FILL_VERTICAL_();
	static jint HORIZONTAL_GRAVITY_MASK_();
	static jint LEFT_();
	static jint NO_GRAVITY_();
	static jint RELATIVE_HORIZONTAL_GRAVITY_MASK_();
	static jint RELATIVE_LAYOUT_DIRECTION_();
	static jint RIGHT_();
	static jint START_();
	static jint TOP_();
	static jint VERTICAL_GRAVITY_MASK_();

	static ref<Gravity> new_object();
	static void apply(jint gravity, jint w, jint h, ref<android::graphics::Rect> container, ref<android::graphics::Rect> outRect);
	static void apply(jint gravity, jint w, jint h, ref<android::graphics::Rect> container, ref<android::graphics::Rect> outRect, jint layoutDirection);
	static void apply(jint gravity, jint w, jint h, ref<android::graphics::Rect> container, jint xAdj, jint yAdj, ref<android::graphics::Rect> outRect);
	static void apply(jint gravity, jint w, jint h, ref<android::graphics::Rect> container, jint xAdj, jint yAdj, ref<android::graphics::Rect> outRect, jint layoutDirection);
	static void applyDisplay(jint gravity, ref<android::graphics::Rect> display, ref<android::graphics::Rect> inoutObj);
	static void applyDisplay(jint gravity, ref<android::graphics::Rect> display, ref<android::graphics::Rect> inoutObj, jint layoutDirection);
	static jboolean isVertical(jint gravity);
	static jboolean isHorizontal(jint gravity);
	static jint getAbsoluteGravity(jint gravity, jint layoutDirection);

protected:

	Gravity(handle_type h) : base_(h) {}

};

} // namespace android::view
} // namespace scapix::java_api

#include <scapix/java_api/android/graphics/Rect.h>

namespace scapix::java_api {
namespace android::view {

inline jint Gravity::AXIS_CLIP_() { return get_static_field<SCAPIX_META_STRING("AXIS_CLIP"), jint>(); }
inline jint Gravity::AXIS_PULL_AFTER_() { return get_static_field<SCAPIX_META_STRING("AXIS_PULL_AFTER"), jint>(); }
inline jint Gravity::AXIS_PULL_BEFORE_() { return get_static_field<SCAPIX_META_STRING("AXIS_PULL_BEFORE"), jint>(); }
inline jint Gravity::AXIS_SPECIFIED_() { return get_static_field<SCAPIX_META_STRING("AXIS_SPECIFIED"), jint>(); }
inline jint Gravity::AXIS_X_SHIFT_() { return get_static_field<SCAPIX_META_STRING("AXIS_X_SHIFT"), jint>(); }
inline jint Gravity::AXIS_Y_SHIFT_() { return get_static_field<SCAPIX_META_STRING("AXIS_Y_SHIFT"), jint>(); }
inline jint Gravity::BOTTOM_() { return get_static_field<SCAPIX_META_STRING("BOTTOM"), jint>(); }
inline jint Gravity::CENTER_() { return get_static_field<SCAPIX_META_STRING("CENTER"), jint>(); }
inline jint Gravity::CENTER_HORIZONTAL_() { return get_static_field<SCAPIX_META_STRING("CENTER_HORIZONTAL"), jint>(); }
inline jint Gravity::CENTER_VERTICAL_() { return get_static_field<SCAPIX_META_STRING("CENTER_VERTICAL"), jint>(); }
inline jint Gravity::CLIP_HORIZONTAL_() { return get_static_field<SCAPIX_META_STRING("CLIP_HORIZONTAL"), jint>(); }
inline jint Gravity::CLIP_VERTICAL_() { return get_static_field<SCAPIX_META_STRING("CLIP_VERTICAL"), jint>(); }
inline jint Gravity::DISPLAY_CLIP_HORIZONTAL_() { return get_static_field<SCAPIX_META_STRING("DISPLAY_CLIP_HORIZONTAL"), jint>(); }
inline jint Gravity::DISPLAY_CLIP_VERTICAL_() { return get_static_field<SCAPIX_META_STRING("DISPLAY_CLIP_VERTICAL"), jint>(); }
inline jint Gravity::END_() { return get_static_field<SCAPIX_META_STRING("END"), jint>(); }
inline jint Gravity::FILL_() { return get_static_field<SCAPIX_META_STRING("FILL"), jint>(); }
inline jint Gravity::FILL_HORIZONTAL_() { return get_static_field<SCAPIX_META_STRING("FILL_HORIZONTAL"), jint>(); }
inline jint Gravity::FILL_VERTICAL_() { return get_static_field<SCAPIX_META_STRING("FILL_VERTICAL"), jint>(); }
inline jint Gravity::HORIZONTAL_GRAVITY_MASK_() { return get_static_field<SCAPIX_META_STRING("HORIZONTAL_GRAVITY_MASK"), jint>(); }
inline jint Gravity::LEFT_() { return get_static_field<SCAPIX_META_STRING("LEFT"), jint>(); }
inline jint Gravity::NO_GRAVITY_() { return get_static_field<SCAPIX_META_STRING("NO_GRAVITY"), jint>(); }
inline jint Gravity::RELATIVE_HORIZONTAL_GRAVITY_MASK_() { return get_static_field<SCAPIX_META_STRING("RELATIVE_HORIZONTAL_GRAVITY_MASK"), jint>(); }
inline jint Gravity::RELATIVE_LAYOUT_DIRECTION_() { return get_static_field<SCAPIX_META_STRING("RELATIVE_LAYOUT_DIRECTION"), jint>(); }
inline jint Gravity::RIGHT_() { return get_static_field<SCAPIX_META_STRING("RIGHT"), jint>(); }
inline jint Gravity::START_() { return get_static_field<SCAPIX_META_STRING("START"), jint>(); }
inline jint Gravity::TOP_() { return get_static_field<SCAPIX_META_STRING("TOP"), jint>(); }
inline jint Gravity::VERTICAL_GRAVITY_MASK_() { return get_static_field<SCAPIX_META_STRING("VERTICAL_GRAVITY_MASK"), jint>(); }
inline ref<Gravity> Gravity::new_object() { return base_::new_object(); }
inline void Gravity::apply(jint gravity, jint w, jint h, ref<android::graphics::Rect> container, ref<android::graphics::Rect> outRect) { return call_static_method<SCAPIX_META_STRING("apply"), void>(gravity, w, h, container, outRect); }
inline void Gravity::apply(jint gravity, jint w, jint h, ref<android::graphics::Rect> container, ref<android::graphics::Rect> outRect, jint layoutDirection) { return call_static_method<SCAPIX_META_STRING("apply"), void>(gravity, w, h, container, outRect, layoutDirection); }
inline void Gravity::apply(jint gravity, jint w, jint h, ref<android::graphics::Rect> container, jint xAdj, jint yAdj, ref<android::graphics::Rect> outRect) { return call_static_method<SCAPIX_META_STRING("apply"), void>(gravity, w, h, container, xAdj, yAdj, outRect); }
inline void Gravity::apply(jint gravity, jint w, jint h, ref<android::graphics::Rect> container, jint xAdj, jint yAdj, ref<android::graphics::Rect> outRect, jint layoutDirection) { return call_static_method<SCAPIX_META_STRING("apply"), void>(gravity, w, h, container, xAdj, yAdj, outRect, layoutDirection); }
inline void Gravity::applyDisplay(jint gravity, ref<android::graphics::Rect> display, ref<android::graphics::Rect> inoutObj) { return call_static_method<SCAPIX_META_STRING("applyDisplay"), void>(gravity, display, inoutObj); }
inline void Gravity::applyDisplay(jint gravity, ref<android::graphics::Rect> display, ref<android::graphics::Rect> inoutObj, jint layoutDirection) { return call_static_method<SCAPIX_META_STRING("applyDisplay"), void>(gravity, display, inoutObj, layoutDirection); }
inline jboolean Gravity::isVertical(jint gravity) { return call_static_method<SCAPIX_META_STRING("isVertical"), jboolean>(gravity); }
inline jboolean Gravity::isHorizontal(jint gravity) { return call_static_method<SCAPIX_META_STRING("isHorizontal"), jboolean>(gravity); }
inline jint Gravity::getAbsoluteGravity(jint gravity, jint layoutDirection) { return call_static_method<SCAPIX_META_STRING("getAbsoluteGravity"), jint>(gravity, layoutDirection); }

} // namespace android::view
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_VIEW_GRAVITY_H
