// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/view/InputEvent.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_ANDROID_VIEW_MOTIONEVENT_H
#define SCAPIX_ANDROID_VIEW_MOTIONEVENT_H

namespace scapix::java_api {

namespace android::graphics { class Matrix; }
namespace android::os { class Parcel; }
namespace android::os { class Parcelable_Creator; }
namespace android::view { class MotionEvent_PointerCoords; }
namespace android::view { class MotionEvent_PointerProperties; }
namespace java::lang { class String; }

namespace android::view {

class MotionEvent : public object_base<SCAPIX_META_STRING("android/view/MotionEvent"),
	android::view::InputEvent,
	android::os::Parcelable>
{
public:

	using PointerProperties = MotionEvent_PointerProperties;
	using PointerCoords = MotionEvent_PointerCoords;

	static jint ACTION_BUTTON_PRESS_();
	static jint ACTION_BUTTON_RELEASE_();
	static jint ACTION_CANCEL_();
	static jint ACTION_DOWN_();
	static jint ACTION_HOVER_ENTER_();
	static jint ACTION_HOVER_EXIT_();
	static jint ACTION_HOVER_MOVE_();
	static jint ACTION_MASK_();
	static jint ACTION_MOVE_();
	static jint ACTION_OUTSIDE_();
	static jint ACTION_POINTER_1_DOWN_();
	static jint ACTION_POINTER_1_UP_();
	static jint ACTION_POINTER_2_DOWN_();
	static jint ACTION_POINTER_2_UP_();
	static jint ACTION_POINTER_3_DOWN_();
	static jint ACTION_POINTER_3_UP_();
	static jint ACTION_POINTER_DOWN_();
	static jint ACTION_POINTER_ID_MASK_();
	static jint ACTION_POINTER_ID_SHIFT_();
	static jint ACTION_POINTER_INDEX_MASK_();
	static jint ACTION_POINTER_INDEX_SHIFT_();
	static jint ACTION_POINTER_UP_();
	static jint ACTION_SCROLL_();
	static jint ACTION_UP_();
	static jint AXIS_BRAKE_();
	static jint AXIS_DISTANCE_();
	static jint AXIS_GAS_();
	static jint AXIS_GENERIC_1_();
	static jint AXIS_GENERIC_10_();
	static jint AXIS_GENERIC_11_();
	static jint AXIS_GENERIC_12_();
	static jint AXIS_GENERIC_13_();
	static jint AXIS_GENERIC_14_();
	static jint AXIS_GENERIC_15_();
	static jint AXIS_GENERIC_16_();
	static jint AXIS_GENERIC_2_();
	static jint AXIS_GENERIC_3_();
	static jint AXIS_GENERIC_4_();
	static jint AXIS_GENERIC_5_();
	static jint AXIS_GENERIC_6_();
	static jint AXIS_GENERIC_7_();
	static jint AXIS_GENERIC_8_();
	static jint AXIS_GENERIC_9_();
	static jint AXIS_HAT_X_();
	static jint AXIS_HAT_Y_();
	static jint AXIS_HSCROLL_();
	static jint AXIS_LTRIGGER_();
	static jint AXIS_ORIENTATION_();
	static jint AXIS_PRESSURE_();
	static jint AXIS_RELATIVE_X_();
	static jint AXIS_RELATIVE_Y_();
	static jint AXIS_RTRIGGER_();
	static jint AXIS_RUDDER_();
	static jint AXIS_RX_();
	static jint AXIS_RY_();
	static jint AXIS_RZ_();
	static jint AXIS_SCROLL_();
	static jint AXIS_SIZE_();
	static jint AXIS_THROTTLE_();
	static jint AXIS_TILT_();
	static jint AXIS_TOOL_MAJOR_();
	static jint AXIS_TOOL_MINOR_();
	static jint AXIS_TOUCH_MAJOR_();
	static jint AXIS_TOUCH_MINOR_();
	static jint AXIS_VSCROLL_();
	static jint AXIS_WHEEL_();
	static jint AXIS_X_();
	static jint AXIS_Y_();
	static jint AXIS_Z_();
	static jint BUTTON_BACK_();
	static jint BUTTON_FORWARD_();
	static jint BUTTON_PRIMARY_();
	static jint BUTTON_SECONDARY_();
	static jint BUTTON_STYLUS_PRIMARY_();
	static jint BUTTON_STYLUS_SECONDARY_();
	static jint BUTTON_TERTIARY_();
	static ref<android::os::Parcelable_Creator> CREATOR_();
	static jint EDGE_BOTTOM_();
	static jint EDGE_LEFT_();
	static jint EDGE_RIGHT_();
	static jint EDGE_TOP_();
	static jint FLAG_WINDOW_IS_OBSCURED_();
	static jint INVALID_POINTER_ID_();
	static jint TOOL_TYPE_ERASER_();
	static jint TOOL_TYPE_FINGER_();
	static jint TOOL_TYPE_MOUSE_();
	static jint TOOL_TYPE_STYLUS_();
	static jint TOOL_TYPE_UNKNOWN_();

	static ref<android::view::MotionEvent> obtain(jlong downTime, jlong p2, jint eventTime, jint p4, ref<link::java::array<android::view::MotionEvent_PointerProperties>> action, ref<link::java::array<android::view::MotionEvent_PointerCoords>> pointerCount, jint pointerProperties, jint pointerCoords, jfloat metaState, jfloat buttonState, jint xPrecision, jint yPrecision, jint deviceId, jint edgeFlags);
	static ref<android::view::MotionEvent> obtain(jlong downTime, jlong p2, jint eventTime, jint p4, ref<link::java::array<jint>> action, ref<link::java::array<android::view::MotionEvent_PointerCoords>> pointerCount, jint pointerIds, jfloat pointerCoords, jfloat metaState, jint xPrecision, jint yPrecision, jint deviceId, jint edgeFlags);
	static ref<android::view::MotionEvent> obtain(jlong downTime, jlong p2, jint eventTime, jfloat p4, jfloat action, jfloat x, jfloat y, jint pressure, jfloat size, jfloat metaState, jint xPrecision, jint yPrecision);
	static ref<android::view::MotionEvent> obtain(jlong downTime, jlong p2, jint eventTime, jint p4, jfloat action, jfloat pointerCount, jfloat x, jfloat y, jint pressure, jfloat size, jfloat metaState, jint xPrecision, jint yPrecision);
	static ref<android::view::MotionEvent> obtain(jlong downTime, jlong p2, jint eventTime, jfloat p4, jfloat action, jint x);
	static ref<android::view::MotionEvent> obtain(ref<android::view::MotionEvent> other);
	static ref<android::view::MotionEvent> obtainNoHistory(ref<android::view::MotionEvent> other);
	void recycle();
	jint getDeviceId();
	jint getSource();
	void setSource(jint source);
	jint getAction();
	jint getActionMasked();
	jint getActionIndex();
	jint getFlags();
	jlong getDownTime();
	jlong getEventTime();
	jfloat getX();
	jfloat getY();
	jfloat getPressure();
	jfloat getSize();
	jfloat getTouchMajor();
	jfloat getTouchMinor();
	jfloat getToolMajor();
	jfloat getToolMinor();
	jfloat getOrientation();
	jfloat getAxisValue(jint axis);
	jint getPointerCount();
	jint getPointerId(jint pointerIndex);
	jint getToolType(jint pointerIndex);
	jint findPointerIndex(jint pointerId);
	jfloat getX(jint pointerIndex);
	jfloat getY(jint pointerIndex);
	jfloat getPressure(jint pointerIndex);
	jfloat getSize(jint pointerIndex);
	jfloat getTouchMajor(jint pointerIndex);
	jfloat getTouchMinor(jint pointerIndex);
	jfloat getToolMajor(jint pointerIndex);
	jfloat getToolMinor(jint pointerIndex);
	jfloat getOrientation(jint pointerIndex);
	jfloat getAxisValue(jint axis, jint pointerIndex);
	void getPointerCoords(jint pointerIndex, ref<android::view::MotionEvent_PointerCoords> outPointerCoords);
	void getPointerProperties(jint pointerIndex, ref<android::view::MotionEvent_PointerProperties> outPointerProperties);
	jint getMetaState();
	jint getButtonState();
	jint getActionButton();
	jfloat getRawX();
	jfloat getRawY();
	jfloat getXPrecision();
	jfloat getYPrecision();
	jint getHistorySize();
	jlong getHistoricalEventTime(jint pos);
	jfloat getHistoricalX(jint pos);
	jfloat getHistoricalY(jint pos);
	jfloat getHistoricalPressure(jint pos);
	jfloat getHistoricalSize(jint pos);
	jfloat getHistoricalTouchMajor(jint pos);
	jfloat getHistoricalTouchMinor(jint pos);
	jfloat getHistoricalToolMajor(jint pos);
	jfloat getHistoricalToolMinor(jint pos);
	jfloat getHistoricalOrientation(jint pos);
	jfloat getHistoricalAxisValue(jint axis, jint pos);
	jfloat getHistoricalX(jint pointerIndex, jint pos);
	jfloat getHistoricalY(jint pointerIndex, jint pos);
	jfloat getHistoricalPressure(jint pointerIndex, jint pos);
	jfloat getHistoricalSize(jint pointerIndex, jint pos);
	jfloat getHistoricalTouchMajor(jint pointerIndex, jint pos);
	jfloat getHistoricalTouchMinor(jint pointerIndex, jint pos);
	jfloat getHistoricalToolMajor(jint pointerIndex, jint pos);
	jfloat getHistoricalToolMinor(jint pointerIndex, jint pos);
	jfloat getHistoricalOrientation(jint pointerIndex, jint pos);
	jfloat getHistoricalAxisValue(jint axis, jint pointerIndex, jint pos);
	void getHistoricalPointerCoords(jint pointerIndex, jint pos, ref<android::view::MotionEvent_PointerCoords> outPointerCoords);
	jint getEdgeFlags();
	void setEdgeFlags(jint flags);
	void setAction(jint action);
	void offsetLocation(jfloat deltaX, jfloat deltaY);
	void setLocation(jfloat x, jfloat y);
	void transform(ref<android::graphics::Matrix> matrix);
	void addBatch(jlong eventTime, jfloat p2, jfloat x, jfloat y, jfloat pressure, jint size);
	void addBatch(jlong eventTime, ref<link::java::array<android::view::MotionEvent_PointerCoords>> p2, jint pointerCoords);
	ref<java::lang::String> toString();
	static ref<java::lang::String> actionToString(jint action);
	static ref<java::lang::String> axisToString(jint axis);
	static jint axisFromString(ref<java::lang::String> symbolicName);
	jboolean isButtonPressed(jint button);
	void writeToParcel(ref<android::os::Parcel> out, jint flags);

protected:

	MotionEvent(handle_type h) : base_(h) {}

};

} // namespace android::view
} // namespace scapix::java_api

#include <scapix/java_api/android/graphics/Matrix.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/android/view/MotionEvent_PointerCoords.h>
#include <scapix/java_api/android/view/MotionEvent_PointerProperties.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::view {

inline jint MotionEvent::ACTION_BUTTON_PRESS_() { return get_static_field<SCAPIX_META_STRING("ACTION_BUTTON_PRESS"), jint>(); }
inline jint MotionEvent::ACTION_BUTTON_RELEASE_() { return get_static_field<SCAPIX_META_STRING("ACTION_BUTTON_RELEASE"), jint>(); }
inline jint MotionEvent::ACTION_CANCEL_() { return get_static_field<SCAPIX_META_STRING("ACTION_CANCEL"), jint>(); }
inline jint MotionEvent::ACTION_DOWN_() { return get_static_field<SCAPIX_META_STRING("ACTION_DOWN"), jint>(); }
inline jint MotionEvent::ACTION_HOVER_ENTER_() { return get_static_field<SCAPIX_META_STRING("ACTION_HOVER_ENTER"), jint>(); }
inline jint MotionEvent::ACTION_HOVER_EXIT_() { return get_static_field<SCAPIX_META_STRING("ACTION_HOVER_EXIT"), jint>(); }
inline jint MotionEvent::ACTION_HOVER_MOVE_() { return get_static_field<SCAPIX_META_STRING("ACTION_HOVER_MOVE"), jint>(); }
inline jint MotionEvent::ACTION_MASK_() { return get_static_field<SCAPIX_META_STRING("ACTION_MASK"), jint>(); }
inline jint MotionEvent::ACTION_MOVE_() { return get_static_field<SCAPIX_META_STRING("ACTION_MOVE"), jint>(); }
inline jint MotionEvent::ACTION_OUTSIDE_() { return get_static_field<SCAPIX_META_STRING("ACTION_OUTSIDE"), jint>(); }
inline jint MotionEvent::ACTION_POINTER_1_DOWN_() { return get_static_field<SCAPIX_META_STRING("ACTION_POINTER_1_DOWN"), jint>(); }
inline jint MotionEvent::ACTION_POINTER_1_UP_() { return get_static_field<SCAPIX_META_STRING("ACTION_POINTER_1_UP"), jint>(); }
inline jint MotionEvent::ACTION_POINTER_2_DOWN_() { return get_static_field<SCAPIX_META_STRING("ACTION_POINTER_2_DOWN"), jint>(); }
inline jint MotionEvent::ACTION_POINTER_2_UP_() { return get_static_field<SCAPIX_META_STRING("ACTION_POINTER_2_UP"), jint>(); }
inline jint MotionEvent::ACTION_POINTER_3_DOWN_() { return get_static_field<SCAPIX_META_STRING("ACTION_POINTER_3_DOWN"), jint>(); }
inline jint MotionEvent::ACTION_POINTER_3_UP_() { return get_static_field<SCAPIX_META_STRING("ACTION_POINTER_3_UP"), jint>(); }
inline jint MotionEvent::ACTION_POINTER_DOWN_() { return get_static_field<SCAPIX_META_STRING("ACTION_POINTER_DOWN"), jint>(); }
inline jint MotionEvent::ACTION_POINTER_ID_MASK_() { return get_static_field<SCAPIX_META_STRING("ACTION_POINTER_ID_MASK"), jint>(); }
inline jint MotionEvent::ACTION_POINTER_ID_SHIFT_() { return get_static_field<SCAPIX_META_STRING("ACTION_POINTER_ID_SHIFT"), jint>(); }
inline jint MotionEvent::ACTION_POINTER_INDEX_MASK_() { return get_static_field<SCAPIX_META_STRING("ACTION_POINTER_INDEX_MASK"), jint>(); }
inline jint MotionEvent::ACTION_POINTER_INDEX_SHIFT_() { return get_static_field<SCAPIX_META_STRING("ACTION_POINTER_INDEX_SHIFT"), jint>(); }
inline jint MotionEvent::ACTION_POINTER_UP_() { return get_static_field<SCAPIX_META_STRING("ACTION_POINTER_UP"), jint>(); }
inline jint MotionEvent::ACTION_SCROLL_() { return get_static_field<SCAPIX_META_STRING("ACTION_SCROLL"), jint>(); }
inline jint MotionEvent::ACTION_UP_() { return get_static_field<SCAPIX_META_STRING("ACTION_UP"), jint>(); }
inline jint MotionEvent::AXIS_BRAKE_() { return get_static_field<SCAPIX_META_STRING("AXIS_BRAKE"), jint>(); }
inline jint MotionEvent::AXIS_DISTANCE_() { return get_static_field<SCAPIX_META_STRING("AXIS_DISTANCE"), jint>(); }
inline jint MotionEvent::AXIS_GAS_() { return get_static_field<SCAPIX_META_STRING("AXIS_GAS"), jint>(); }
inline jint MotionEvent::AXIS_GENERIC_1_() { return get_static_field<SCAPIX_META_STRING("AXIS_GENERIC_1"), jint>(); }
inline jint MotionEvent::AXIS_GENERIC_10_() { return get_static_field<SCAPIX_META_STRING("AXIS_GENERIC_10"), jint>(); }
inline jint MotionEvent::AXIS_GENERIC_11_() { return get_static_field<SCAPIX_META_STRING("AXIS_GENERIC_11"), jint>(); }
inline jint MotionEvent::AXIS_GENERIC_12_() { return get_static_field<SCAPIX_META_STRING("AXIS_GENERIC_12"), jint>(); }
inline jint MotionEvent::AXIS_GENERIC_13_() { return get_static_field<SCAPIX_META_STRING("AXIS_GENERIC_13"), jint>(); }
inline jint MotionEvent::AXIS_GENERIC_14_() { return get_static_field<SCAPIX_META_STRING("AXIS_GENERIC_14"), jint>(); }
inline jint MotionEvent::AXIS_GENERIC_15_() { return get_static_field<SCAPIX_META_STRING("AXIS_GENERIC_15"), jint>(); }
inline jint MotionEvent::AXIS_GENERIC_16_() { return get_static_field<SCAPIX_META_STRING("AXIS_GENERIC_16"), jint>(); }
inline jint MotionEvent::AXIS_GENERIC_2_() { return get_static_field<SCAPIX_META_STRING("AXIS_GENERIC_2"), jint>(); }
inline jint MotionEvent::AXIS_GENERIC_3_() { return get_static_field<SCAPIX_META_STRING("AXIS_GENERIC_3"), jint>(); }
inline jint MotionEvent::AXIS_GENERIC_4_() { return get_static_field<SCAPIX_META_STRING("AXIS_GENERIC_4"), jint>(); }
inline jint MotionEvent::AXIS_GENERIC_5_() { return get_static_field<SCAPIX_META_STRING("AXIS_GENERIC_5"), jint>(); }
inline jint MotionEvent::AXIS_GENERIC_6_() { return get_static_field<SCAPIX_META_STRING("AXIS_GENERIC_6"), jint>(); }
inline jint MotionEvent::AXIS_GENERIC_7_() { return get_static_field<SCAPIX_META_STRING("AXIS_GENERIC_7"), jint>(); }
inline jint MotionEvent::AXIS_GENERIC_8_() { return get_static_field<SCAPIX_META_STRING("AXIS_GENERIC_8"), jint>(); }
inline jint MotionEvent::AXIS_GENERIC_9_() { return get_static_field<SCAPIX_META_STRING("AXIS_GENERIC_9"), jint>(); }
inline jint MotionEvent::AXIS_HAT_X_() { return get_static_field<SCAPIX_META_STRING("AXIS_HAT_X"), jint>(); }
inline jint MotionEvent::AXIS_HAT_Y_() { return get_static_field<SCAPIX_META_STRING("AXIS_HAT_Y"), jint>(); }
inline jint MotionEvent::AXIS_HSCROLL_() { return get_static_field<SCAPIX_META_STRING("AXIS_HSCROLL"), jint>(); }
inline jint MotionEvent::AXIS_LTRIGGER_() { return get_static_field<SCAPIX_META_STRING("AXIS_LTRIGGER"), jint>(); }
inline jint MotionEvent::AXIS_ORIENTATION_() { return get_static_field<SCAPIX_META_STRING("AXIS_ORIENTATION"), jint>(); }
inline jint MotionEvent::AXIS_PRESSURE_() { return get_static_field<SCAPIX_META_STRING("AXIS_PRESSURE"), jint>(); }
inline jint MotionEvent::AXIS_RELATIVE_X_() { return get_static_field<SCAPIX_META_STRING("AXIS_RELATIVE_X"), jint>(); }
inline jint MotionEvent::AXIS_RELATIVE_Y_() { return get_static_field<SCAPIX_META_STRING("AXIS_RELATIVE_Y"), jint>(); }
inline jint MotionEvent::AXIS_RTRIGGER_() { return get_static_field<SCAPIX_META_STRING("AXIS_RTRIGGER"), jint>(); }
inline jint MotionEvent::AXIS_RUDDER_() { return get_static_field<SCAPIX_META_STRING("AXIS_RUDDER"), jint>(); }
inline jint MotionEvent::AXIS_RX_() { return get_static_field<SCAPIX_META_STRING("AXIS_RX"), jint>(); }
inline jint MotionEvent::AXIS_RY_() { return get_static_field<SCAPIX_META_STRING("AXIS_RY"), jint>(); }
inline jint MotionEvent::AXIS_RZ_() { return get_static_field<SCAPIX_META_STRING("AXIS_RZ"), jint>(); }
inline jint MotionEvent::AXIS_SCROLL_() { return get_static_field<SCAPIX_META_STRING("AXIS_SCROLL"), jint>(); }
inline jint MotionEvent::AXIS_SIZE_() { return get_static_field<SCAPIX_META_STRING("AXIS_SIZE"), jint>(); }
inline jint MotionEvent::AXIS_THROTTLE_() { return get_static_field<SCAPIX_META_STRING("AXIS_THROTTLE"), jint>(); }
inline jint MotionEvent::AXIS_TILT_() { return get_static_field<SCAPIX_META_STRING("AXIS_TILT"), jint>(); }
inline jint MotionEvent::AXIS_TOOL_MAJOR_() { return get_static_field<SCAPIX_META_STRING("AXIS_TOOL_MAJOR"), jint>(); }
inline jint MotionEvent::AXIS_TOOL_MINOR_() { return get_static_field<SCAPIX_META_STRING("AXIS_TOOL_MINOR"), jint>(); }
inline jint MotionEvent::AXIS_TOUCH_MAJOR_() { return get_static_field<SCAPIX_META_STRING("AXIS_TOUCH_MAJOR"), jint>(); }
inline jint MotionEvent::AXIS_TOUCH_MINOR_() { return get_static_field<SCAPIX_META_STRING("AXIS_TOUCH_MINOR"), jint>(); }
inline jint MotionEvent::AXIS_VSCROLL_() { return get_static_field<SCAPIX_META_STRING("AXIS_VSCROLL"), jint>(); }
inline jint MotionEvent::AXIS_WHEEL_() { return get_static_field<SCAPIX_META_STRING("AXIS_WHEEL"), jint>(); }
inline jint MotionEvent::AXIS_X_() { return get_static_field<SCAPIX_META_STRING("AXIS_X"), jint>(); }
inline jint MotionEvent::AXIS_Y_() { return get_static_field<SCAPIX_META_STRING("AXIS_Y"), jint>(); }
inline jint MotionEvent::AXIS_Z_() { return get_static_field<SCAPIX_META_STRING("AXIS_Z"), jint>(); }
inline jint MotionEvent::BUTTON_BACK_() { return get_static_field<SCAPIX_META_STRING("BUTTON_BACK"), jint>(); }
inline jint MotionEvent::BUTTON_FORWARD_() { return get_static_field<SCAPIX_META_STRING("BUTTON_FORWARD"), jint>(); }
inline jint MotionEvent::BUTTON_PRIMARY_() { return get_static_field<SCAPIX_META_STRING("BUTTON_PRIMARY"), jint>(); }
inline jint MotionEvent::BUTTON_SECONDARY_() { return get_static_field<SCAPIX_META_STRING("BUTTON_SECONDARY"), jint>(); }
inline jint MotionEvent::BUTTON_STYLUS_PRIMARY_() { return get_static_field<SCAPIX_META_STRING("BUTTON_STYLUS_PRIMARY"), jint>(); }
inline jint MotionEvent::BUTTON_STYLUS_SECONDARY_() { return get_static_field<SCAPIX_META_STRING("BUTTON_STYLUS_SECONDARY"), jint>(); }
inline jint MotionEvent::BUTTON_TERTIARY_() { return get_static_field<SCAPIX_META_STRING("BUTTON_TERTIARY"), jint>(); }
inline ref<android::os::Parcelable_Creator> MotionEvent::CREATOR_() { return get_static_field<SCAPIX_META_STRING("CREATOR"), ref<android::os::Parcelable_Creator>>(); }
inline jint MotionEvent::EDGE_BOTTOM_() { return get_static_field<SCAPIX_META_STRING("EDGE_BOTTOM"), jint>(); }
inline jint MotionEvent::EDGE_LEFT_() { return get_static_field<SCAPIX_META_STRING("EDGE_LEFT"), jint>(); }
inline jint MotionEvent::EDGE_RIGHT_() { return get_static_field<SCAPIX_META_STRING("EDGE_RIGHT"), jint>(); }
inline jint MotionEvent::EDGE_TOP_() { return get_static_field<SCAPIX_META_STRING("EDGE_TOP"), jint>(); }
inline jint MotionEvent::FLAG_WINDOW_IS_OBSCURED_() { return get_static_field<SCAPIX_META_STRING("FLAG_WINDOW_IS_OBSCURED"), jint>(); }
inline jint MotionEvent::INVALID_POINTER_ID_() { return get_static_field<SCAPIX_META_STRING("INVALID_POINTER_ID"), jint>(); }
inline jint MotionEvent::TOOL_TYPE_ERASER_() { return get_static_field<SCAPIX_META_STRING("TOOL_TYPE_ERASER"), jint>(); }
inline jint MotionEvent::TOOL_TYPE_FINGER_() { return get_static_field<SCAPIX_META_STRING("TOOL_TYPE_FINGER"), jint>(); }
inline jint MotionEvent::TOOL_TYPE_MOUSE_() { return get_static_field<SCAPIX_META_STRING("TOOL_TYPE_MOUSE"), jint>(); }
inline jint MotionEvent::TOOL_TYPE_STYLUS_() { return get_static_field<SCAPIX_META_STRING("TOOL_TYPE_STYLUS"), jint>(); }
inline jint MotionEvent::TOOL_TYPE_UNKNOWN_() { return get_static_field<SCAPIX_META_STRING("TOOL_TYPE_UNKNOWN"), jint>(); }
inline ref<android::view::MotionEvent> MotionEvent::obtain(jlong downTime, jlong p2, jint eventTime, jint p4, ref<link::java::array<android::view::MotionEvent_PointerProperties>> action, ref<link::java::array<android::view::MotionEvent_PointerCoords>> pointerCount, jint pointerProperties, jint pointerCoords, jfloat metaState, jfloat buttonState, jint xPrecision, jint yPrecision, jint deviceId, jint edgeFlags) { return call_static_method<SCAPIX_META_STRING("obtain"), ref<android::view::MotionEvent>>(downTime, p2, eventTime, p4, action, pointerCount, pointerProperties, pointerCoords, metaState, buttonState, xPrecision, yPrecision, deviceId, edgeFlags); }
inline ref<android::view::MotionEvent> MotionEvent::obtain(jlong downTime, jlong p2, jint eventTime, jint p4, ref<link::java::array<jint>> action, ref<link::java::array<android::view::MotionEvent_PointerCoords>> pointerCount, jint pointerIds, jfloat pointerCoords, jfloat metaState, jint xPrecision, jint yPrecision, jint deviceId, jint edgeFlags) { return call_static_method<SCAPIX_META_STRING("obtain"), ref<android::view::MotionEvent>>(downTime, p2, eventTime, p4, action, pointerCount, pointerIds, pointerCoords, metaState, xPrecision, yPrecision, deviceId, edgeFlags); }
inline ref<android::view::MotionEvent> MotionEvent::obtain(jlong downTime, jlong p2, jint eventTime, jfloat p4, jfloat action, jfloat x, jfloat y, jint pressure, jfloat size, jfloat metaState, jint xPrecision, jint yPrecision) { return call_static_method<SCAPIX_META_STRING("obtain"), ref<android::view::MotionEvent>>(downTime, p2, eventTime, p4, action, x, y, pressure, size, metaState, xPrecision, yPrecision); }
inline ref<android::view::MotionEvent> MotionEvent::obtain(jlong downTime, jlong p2, jint eventTime, jint p4, jfloat action, jfloat pointerCount, jfloat x, jfloat y, jint pressure, jfloat size, jfloat metaState, jint xPrecision, jint yPrecision) { return call_static_method<SCAPIX_META_STRING("obtain"), ref<android::view::MotionEvent>>(downTime, p2, eventTime, p4, action, pointerCount, x, y, pressure, size, metaState, xPrecision, yPrecision); }
inline ref<android::view::MotionEvent> MotionEvent::obtain(jlong downTime, jlong p2, jint eventTime, jfloat p4, jfloat action, jint x) { return call_static_method<SCAPIX_META_STRING("obtain"), ref<android::view::MotionEvent>>(downTime, p2, eventTime, p4, action, x); }
inline ref<android::view::MotionEvent> MotionEvent::obtain(ref<android::view::MotionEvent> other) { return call_static_method<SCAPIX_META_STRING("obtain"), ref<android::view::MotionEvent>>(other); }
inline ref<android::view::MotionEvent> MotionEvent::obtainNoHistory(ref<android::view::MotionEvent> other) { return call_static_method<SCAPIX_META_STRING("obtainNoHistory"), ref<android::view::MotionEvent>>(other); }
inline void MotionEvent::recycle() { return call_method<SCAPIX_META_STRING("recycle"), void>(); }
inline jint MotionEvent::getDeviceId() { return call_method<SCAPIX_META_STRING("getDeviceId"), jint>(); }
inline jint MotionEvent::getSource() { return call_method<SCAPIX_META_STRING("getSource"), jint>(); }
inline void MotionEvent::setSource(jint source) { return call_method<SCAPIX_META_STRING("setSource"), void>(source); }
inline jint MotionEvent::getAction() { return call_method<SCAPIX_META_STRING("getAction"), jint>(); }
inline jint MotionEvent::getActionMasked() { return call_method<SCAPIX_META_STRING("getActionMasked"), jint>(); }
inline jint MotionEvent::getActionIndex() { return call_method<SCAPIX_META_STRING("getActionIndex"), jint>(); }
inline jint MotionEvent::getFlags() { return call_method<SCAPIX_META_STRING("getFlags"), jint>(); }
inline jlong MotionEvent::getDownTime() { return call_method<SCAPIX_META_STRING("getDownTime"), jlong>(); }
inline jlong MotionEvent::getEventTime() { return call_method<SCAPIX_META_STRING("getEventTime"), jlong>(); }
inline jfloat MotionEvent::getX() { return call_method<SCAPIX_META_STRING("getX"), jfloat>(); }
inline jfloat MotionEvent::getY() { return call_method<SCAPIX_META_STRING("getY"), jfloat>(); }
inline jfloat MotionEvent::getPressure() { return call_method<SCAPIX_META_STRING("getPressure"), jfloat>(); }
inline jfloat MotionEvent::getSize() { return call_method<SCAPIX_META_STRING("getSize"), jfloat>(); }
inline jfloat MotionEvent::getTouchMajor() { return call_method<SCAPIX_META_STRING("getTouchMajor"), jfloat>(); }
inline jfloat MotionEvent::getTouchMinor() { return call_method<SCAPIX_META_STRING("getTouchMinor"), jfloat>(); }
inline jfloat MotionEvent::getToolMajor() { return call_method<SCAPIX_META_STRING("getToolMajor"), jfloat>(); }
inline jfloat MotionEvent::getToolMinor() { return call_method<SCAPIX_META_STRING("getToolMinor"), jfloat>(); }
inline jfloat MotionEvent::getOrientation() { return call_method<SCAPIX_META_STRING("getOrientation"), jfloat>(); }
inline jfloat MotionEvent::getAxisValue(jint axis) { return call_method<SCAPIX_META_STRING("getAxisValue"), jfloat>(axis); }
inline jint MotionEvent::getPointerCount() { return call_method<SCAPIX_META_STRING("getPointerCount"), jint>(); }
inline jint MotionEvent::getPointerId(jint pointerIndex) { return call_method<SCAPIX_META_STRING("getPointerId"), jint>(pointerIndex); }
inline jint MotionEvent::getToolType(jint pointerIndex) { return call_method<SCAPIX_META_STRING("getToolType"), jint>(pointerIndex); }
inline jint MotionEvent::findPointerIndex(jint pointerId) { return call_method<SCAPIX_META_STRING("findPointerIndex"), jint>(pointerId); }
inline jfloat MotionEvent::getX(jint pointerIndex) { return call_method<SCAPIX_META_STRING("getX"), jfloat>(pointerIndex); }
inline jfloat MotionEvent::getY(jint pointerIndex) { return call_method<SCAPIX_META_STRING("getY"), jfloat>(pointerIndex); }
inline jfloat MotionEvent::getPressure(jint pointerIndex) { return call_method<SCAPIX_META_STRING("getPressure"), jfloat>(pointerIndex); }
inline jfloat MotionEvent::getSize(jint pointerIndex) { return call_method<SCAPIX_META_STRING("getSize"), jfloat>(pointerIndex); }
inline jfloat MotionEvent::getTouchMajor(jint pointerIndex) { return call_method<SCAPIX_META_STRING("getTouchMajor"), jfloat>(pointerIndex); }
inline jfloat MotionEvent::getTouchMinor(jint pointerIndex) { return call_method<SCAPIX_META_STRING("getTouchMinor"), jfloat>(pointerIndex); }
inline jfloat MotionEvent::getToolMajor(jint pointerIndex) { return call_method<SCAPIX_META_STRING("getToolMajor"), jfloat>(pointerIndex); }
inline jfloat MotionEvent::getToolMinor(jint pointerIndex) { return call_method<SCAPIX_META_STRING("getToolMinor"), jfloat>(pointerIndex); }
inline jfloat MotionEvent::getOrientation(jint pointerIndex) { return call_method<SCAPIX_META_STRING("getOrientation"), jfloat>(pointerIndex); }
inline jfloat MotionEvent::getAxisValue(jint axis, jint pointerIndex) { return call_method<SCAPIX_META_STRING("getAxisValue"), jfloat>(axis, pointerIndex); }
inline void MotionEvent::getPointerCoords(jint pointerIndex, ref<android::view::MotionEvent_PointerCoords> outPointerCoords) { return call_method<SCAPIX_META_STRING("getPointerCoords"), void>(pointerIndex, outPointerCoords); }
inline void MotionEvent::getPointerProperties(jint pointerIndex, ref<android::view::MotionEvent_PointerProperties> outPointerProperties) { return call_method<SCAPIX_META_STRING("getPointerProperties"), void>(pointerIndex, outPointerProperties); }
inline jint MotionEvent::getMetaState() { return call_method<SCAPIX_META_STRING("getMetaState"), jint>(); }
inline jint MotionEvent::getButtonState() { return call_method<SCAPIX_META_STRING("getButtonState"), jint>(); }
inline jint MotionEvent::getActionButton() { return call_method<SCAPIX_META_STRING("getActionButton"), jint>(); }
inline jfloat MotionEvent::getRawX() { return call_method<SCAPIX_META_STRING("getRawX"), jfloat>(); }
inline jfloat MotionEvent::getRawY() { return call_method<SCAPIX_META_STRING("getRawY"), jfloat>(); }
inline jfloat MotionEvent::getXPrecision() { return call_method<SCAPIX_META_STRING("getXPrecision"), jfloat>(); }
inline jfloat MotionEvent::getYPrecision() { return call_method<SCAPIX_META_STRING("getYPrecision"), jfloat>(); }
inline jint MotionEvent::getHistorySize() { return call_method<SCAPIX_META_STRING("getHistorySize"), jint>(); }
inline jlong MotionEvent::getHistoricalEventTime(jint pos) { return call_method<SCAPIX_META_STRING("getHistoricalEventTime"), jlong>(pos); }
inline jfloat MotionEvent::getHistoricalX(jint pos) { return call_method<SCAPIX_META_STRING("getHistoricalX"), jfloat>(pos); }
inline jfloat MotionEvent::getHistoricalY(jint pos) { return call_method<SCAPIX_META_STRING("getHistoricalY"), jfloat>(pos); }
inline jfloat MotionEvent::getHistoricalPressure(jint pos) { return call_method<SCAPIX_META_STRING("getHistoricalPressure"), jfloat>(pos); }
inline jfloat MotionEvent::getHistoricalSize(jint pos) { return call_method<SCAPIX_META_STRING("getHistoricalSize"), jfloat>(pos); }
inline jfloat MotionEvent::getHistoricalTouchMajor(jint pos) { return call_method<SCAPIX_META_STRING("getHistoricalTouchMajor"), jfloat>(pos); }
inline jfloat MotionEvent::getHistoricalTouchMinor(jint pos) { return call_method<SCAPIX_META_STRING("getHistoricalTouchMinor"), jfloat>(pos); }
inline jfloat MotionEvent::getHistoricalToolMajor(jint pos) { return call_method<SCAPIX_META_STRING("getHistoricalToolMajor"), jfloat>(pos); }
inline jfloat MotionEvent::getHistoricalToolMinor(jint pos) { return call_method<SCAPIX_META_STRING("getHistoricalToolMinor"), jfloat>(pos); }
inline jfloat MotionEvent::getHistoricalOrientation(jint pos) { return call_method<SCAPIX_META_STRING("getHistoricalOrientation"), jfloat>(pos); }
inline jfloat MotionEvent::getHistoricalAxisValue(jint axis, jint pos) { return call_method<SCAPIX_META_STRING("getHistoricalAxisValue"), jfloat>(axis, pos); }
inline jfloat MotionEvent::getHistoricalX(jint pointerIndex, jint pos) { return call_method<SCAPIX_META_STRING("getHistoricalX"), jfloat>(pointerIndex, pos); }
inline jfloat MotionEvent::getHistoricalY(jint pointerIndex, jint pos) { return call_method<SCAPIX_META_STRING("getHistoricalY"), jfloat>(pointerIndex, pos); }
inline jfloat MotionEvent::getHistoricalPressure(jint pointerIndex, jint pos) { return call_method<SCAPIX_META_STRING("getHistoricalPressure"), jfloat>(pointerIndex, pos); }
inline jfloat MotionEvent::getHistoricalSize(jint pointerIndex, jint pos) { return call_method<SCAPIX_META_STRING("getHistoricalSize"), jfloat>(pointerIndex, pos); }
inline jfloat MotionEvent::getHistoricalTouchMajor(jint pointerIndex, jint pos) { return call_method<SCAPIX_META_STRING("getHistoricalTouchMajor"), jfloat>(pointerIndex, pos); }
inline jfloat MotionEvent::getHistoricalTouchMinor(jint pointerIndex, jint pos) { return call_method<SCAPIX_META_STRING("getHistoricalTouchMinor"), jfloat>(pointerIndex, pos); }
inline jfloat MotionEvent::getHistoricalToolMajor(jint pointerIndex, jint pos) { return call_method<SCAPIX_META_STRING("getHistoricalToolMajor"), jfloat>(pointerIndex, pos); }
inline jfloat MotionEvent::getHistoricalToolMinor(jint pointerIndex, jint pos) { return call_method<SCAPIX_META_STRING("getHistoricalToolMinor"), jfloat>(pointerIndex, pos); }
inline jfloat MotionEvent::getHistoricalOrientation(jint pointerIndex, jint pos) { return call_method<SCAPIX_META_STRING("getHistoricalOrientation"), jfloat>(pointerIndex, pos); }
inline jfloat MotionEvent::getHistoricalAxisValue(jint axis, jint pointerIndex, jint pos) { return call_method<SCAPIX_META_STRING("getHistoricalAxisValue"), jfloat>(axis, pointerIndex, pos); }
inline void MotionEvent::getHistoricalPointerCoords(jint pointerIndex, jint pos, ref<android::view::MotionEvent_PointerCoords> outPointerCoords) { return call_method<SCAPIX_META_STRING("getHistoricalPointerCoords"), void>(pointerIndex, pos, outPointerCoords); }
inline jint MotionEvent::getEdgeFlags() { return call_method<SCAPIX_META_STRING("getEdgeFlags"), jint>(); }
inline void MotionEvent::setEdgeFlags(jint flags) { return call_method<SCAPIX_META_STRING("setEdgeFlags"), void>(flags); }
inline void MotionEvent::setAction(jint action) { return call_method<SCAPIX_META_STRING("setAction"), void>(action); }
inline void MotionEvent::offsetLocation(jfloat deltaX, jfloat deltaY) { return call_method<SCAPIX_META_STRING("offsetLocation"), void>(deltaX, deltaY); }
inline void MotionEvent::setLocation(jfloat x, jfloat y) { return call_method<SCAPIX_META_STRING("setLocation"), void>(x, y); }
inline void MotionEvent::transform(ref<android::graphics::Matrix> matrix) { return call_method<SCAPIX_META_STRING("transform"), void>(matrix); }
inline void MotionEvent::addBatch(jlong eventTime, jfloat p2, jfloat x, jfloat y, jfloat pressure, jint size) { return call_method<SCAPIX_META_STRING("addBatch"), void>(eventTime, p2, x, y, pressure, size); }
inline void MotionEvent::addBatch(jlong eventTime, ref<link::java::array<android::view::MotionEvent_PointerCoords>> p2, jint pointerCoords) { return call_method<SCAPIX_META_STRING("addBatch"), void>(eventTime, p2, pointerCoords); }
inline ref<java::lang::String> MotionEvent::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MotionEvent::actionToString(jint action) { return call_static_method<SCAPIX_META_STRING("actionToString"), ref<java::lang::String>>(action); }
inline ref<java::lang::String> MotionEvent::axisToString(jint axis) { return call_static_method<SCAPIX_META_STRING("axisToString"), ref<java::lang::String>>(axis); }
inline jint MotionEvent::axisFromString(ref<java::lang::String> symbolicName) { return call_static_method<SCAPIX_META_STRING("axisFromString"), jint>(symbolicName); }
inline jboolean MotionEvent::isButtonPressed(jint button) { return call_method<SCAPIX_META_STRING("isButtonPressed"), jboolean>(button); }
inline void MotionEvent::writeToParcel(ref<android::os::Parcel> out, jint flags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(out, flags); }

} // namespace android::view
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_VIEW_MOTIONEVENT_H
