// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_VIEW_ACCESSIBILITY_ACCESSIBILITYNODEPROVIDER_H
#define SCAPIX_ANDROID_VIEW_ACCESSIBILITY_ACCESSIBILITYNODEPROVIDER_H

namespace scapix::java_api {

namespace android::os { class Bundle; }
namespace android::view::accessibility { class AccessibilityNodeInfo; }
namespace java::lang { class String; }
namespace java::util { class List; }

namespace android::view::accessibility {

class AccessibilityNodeProvider : public object_base<SCAPIX_META_STRING("android/view/accessibility/AccessibilityNodeProvider"),
	java::lang::Object>
{
public:

	static jint HOST_VIEW_ID_();

	static ref<AccessibilityNodeProvider> new_object();
	ref<android::view::accessibility::AccessibilityNodeInfo> createAccessibilityNodeInfo(jint virtualViewId);
	void addExtraDataToAccessibilityNodeInfo(jint virtualViewId, ref<android::view::accessibility::AccessibilityNodeInfo> info, ref<java::lang::String> extraDataKey, ref<android::os::Bundle> arguments);
	jboolean performAction(jint virtualViewId, jint action, ref<android::os::Bundle> arguments);
	ref<java::util::List> findAccessibilityNodeInfosByText(ref<java::lang::String> text, jint virtualViewId);
	ref<android::view::accessibility::AccessibilityNodeInfo> findFocus(jint focus);

protected:

	AccessibilityNodeProvider(handle_type h) : base_(h) {}

};

} // namespace android::view::accessibility
} // namespace scapix::java_api

#include <scapix/java_api/android/os/Bundle.h>
#include <scapix/java_api/android/view/accessibility/AccessibilityNodeInfo.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/List.h>

namespace scapix::java_api {
namespace android::view::accessibility {

inline jint AccessibilityNodeProvider::HOST_VIEW_ID_() { return get_static_field<SCAPIX_META_STRING("HOST_VIEW_ID"), jint>(); }
inline ref<AccessibilityNodeProvider> AccessibilityNodeProvider::new_object() { return base_::new_object(); }
inline ref<android::view::accessibility::AccessibilityNodeInfo> AccessibilityNodeProvider::createAccessibilityNodeInfo(jint virtualViewId) { return call_method<SCAPIX_META_STRING("createAccessibilityNodeInfo"), ref<android::view::accessibility::AccessibilityNodeInfo>>(virtualViewId); }
inline void AccessibilityNodeProvider::addExtraDataToAccessibilityNodeInfo(jint virtualViewId, ref<android::view::accessibility::AccessibilityNodeInfo> info, ref<java::lang::String> extraDataKey, ref<android::os::Bundle> arguments) { return call_method<SCAPIX_META_STRING("addExtraDataToAccessibilityNodeInfo"), void>(virtualViewId, info, extraDataKey, arguments); }
inline jboolean AccessibilityNodeProvider::performAction(jint virtualViewId, jint action, ref<android::os::Bundle> arguments) { return call_method<SCAPIX_META_STRING("performAction"), jboolean>(virtualViewId, action, arguments); }
inline ref<java::util::List> AccessibilityNodeProvider::findAccessibilityNodeInfosByText(ref<java::lang::String> text, jint virtualViewId) { return call_method<SCAPIX_META_STRING("findAccessibilityNodeInfosByText"), ref<java::util::List>>(text, virtualViewId); }
inline ref<android::view::accessibility::AccessibilityNodeInfo> AccessibilityNodeProvider::findFocus(jint focus) { return call_method<SCAPIX_META_STRING("findFocus"), ref<android::view::accessibility::AccessibilityNodeInfo>>(focus); }

} // namespace android::view::accessibility
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_VIEW_ACCESSIBILITY_ACCESSIBILITYNODEPROVIDER_H
