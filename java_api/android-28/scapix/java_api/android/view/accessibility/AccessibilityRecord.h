// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_VIEW_ACCESSIBILITY_ACCESSIBILITYRECORD_H
#define SCAPIX_ANDROID_VIEW_ACCESSIBILITY_ACCESSIBILITYRECORD_H

namespace scapix::java_api {

namespace android::os { class Parcelable; }
namespace android::view { class View; }
namespace android::view::accessibility { class AccessibilityNodeInfo; }
namespace java::lang { class CharSequence; }
namespace java::lang { class String; }
namespace java::util { class List; }

namespace android::view::accessibility {

class AccessibilityRecord : public object_base<SCAPIX_META_STRING("android/view/accessibility/AccessibilityRecord"),
	java::lang::Object>
{
public:

	void setSource(ref<android::view::View> source);
	void setSource(ref<android::view::View> root, jint virtualDescendantId);
	ref<android::view::accessibility::AccessibilityNodeInfo> getSource();
	jint getWindowId();
	jboolean isChecked();
	void setChecked(jboolean isChecked);
	jboolean isEnabled();
	void setEnabled(jboolean isEnabled);
	jboolean isPassword();
	void setPassword(jboolean isPassword);
	jboolean isFullScreen();
	void setFullScreen(jboolean isFullScreen);
	jboolean isScrollable();
	void setScrollable(jboolean scrollable);
	jint getItemCount();
	void setItemCount(jint itemCount);
	jint getCurrentItemIndex();
	void setCurrentItemIndex(jint currentItemIndex);
	jint getFromIndex();
	void setFromIndex(jint fromIndex);
	jint getToIndex();
	void setToIndex(jint toIndex);
	jint getScrollX();
	void setScrollX(jint scrollX);
	jint getScrollY();
	void setScrollY(jint scrollY);
	jint getScrollDeltaX();
	void setScrollDeltaX(jint scrollDeltaX);
	jint getScrollDeltaY();
	void setScrollDeltaY(jint scrollDeltaY);
	jint getMaxScrollX();
	void setMaxScrollX(jint maxScrollX);
	jint getMaxScrollY();
	void setMaxScrollY(jint maxScrollY);
	jint getAddedCount();
	void setAddedCount(jint addedCount);
	jint getRemovedCount();
	void setRemovedCount(jint removedCount);
	ref<java::lang::CharSequence> getClassName();
	void setClassName(ref<java::lang::CharSequence> className);
	ref<java::util::List> getText();
	ref<java::lang::CharSequence> getBeforeText();
	void setBeforeText(ref<java::lang::CharSequence> beforeText);
	ref<java::lang::CharSequence> getContentDescription();
	void setContentDescription(ref<java::lang::CharSequence> contentDescription);
	ref<android::os::Parcelable> getParcelableData();
	void setParcelableData(ref<android::os::Parcelable> parcelableData);
	static ref<android::view::accessibility::AccessibilityRecord> obtain(ref<android::view::accessibility::AccessibilityRecord> record);
	static ref<android::view::accessibility::AccessibilityRecord> obtain();
	void recycle();
	ref<java::lang::String> toString();

protected:

	AccessibilityRecord(handle_type h) : base_(h) {}

};

} // namespace android::view::accessibility
} // namespace scapix::java_api

#include <scapix/java_api/android/os/Parcelable.h>
#include <scapix/java_api/android/view/View.h>
#include <scapix/java_api/android/view/accessibility/AccessibilityNodeInfo.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/List.h>

namespace scapix::java_api {
namespace android::view::accessibility {

inline void AccessibilityRecord::setSource(ref<android::view::View> source) { return call_method<SCAPIX_META_STRING("setSource"), void>(source); }
inline void AccessibilityRecord::setSource(ref<android::view::View> root, jint virtualDescendantId) { return call_method<SCAPIX_META_STRING("setSource"), void>(root, virtualDescendantId); }
inline ref<android::view::accessibility::AccessibilityNodeInfo> AccessibilityRecord::getSource() { return call_method<SCAPIX_META_STRING("getSource"), ref<android::view::accessibility::AccessibilityNodeInfo>>(); }
inline jint AccessibilityRecord::getWindowId() { return call_method<SCAPIX_META_STRING("getWindowId"), jint>(); }
inline jboolean AccessibilityRecord::isChecked() { return call_method<SCAPIX_META_STRING("isChecked"), jboolean>(); }
inline void AccessibilityRecord::setChecked(jboolean isChecked) { return call_method<SCAPIX_META_STRING("setChecked"), void>(isChecked); }
inline jboolean AccessibilityRecord::isEnabled() { return call_method<SCAPIX_META_STRING("isEnabled"), jboolean>(); }
inline void AccessibilityRecord::setEnabled(jboolean isEnabled) { return call_method<SCAPIX_META_STRING("setEnabled"), void>(isEnabled); }
inline jboolean AccessibilityRecord::isPassword() { return call_method<SCAPIX_META_STRING("isPassword"), jboolean>(); }
inline void AccessibilityRecord::setPassword(jboolean isPassword) { return call_method<SCAPIX_META_STRING("setPassword"), void>(isPassword); }
inline jboolean AccessibilityRecord::isFullScreen() { return call_method<SCAPIX_META_STRING("isFullScreen"), jboolean>(); }
inline void AccessibilityRecord::setFullScreen(jboolean isFullScreen) { return call_method<SCAPIX_META_STRING("setFullScreen"), void>(isFullScreen); }
inline jboolean AccessibilityRecord::isScrollable() { return call_method<SCAPIX_META_STRING("isScrollable"), jboolean>(); }
inline void AccessibilityRecord::setScrollable(jboolean scrollable) { return call_method<SCAPIX_META_STRING("setScrollable"), void>(scrollable); }
inline jint AccessibilityRecord::getItemCount() { return call_method<SCAPIX_META_STRING("getItemCount"), jint>(); }
inline void AccessibilityRecord::setItemCount(jint itemCount) { return call_method<SCAPIX_META_STRING("setItemCount"), void>(itemCount); }
inline jint AccessibilityRecord::getCurrentItemIndex() { return call_method<SCAPIX_META_STRING("getCurrentItemIndex"), jint>(); }
inline void AccessibilityRecord::setCurrentItemIndex(jint currentItemIndex) { return call_method<SCAPIX_META_STRING("setCurrentItemIndex"), void>(currentItemIndex); }
inline jint AccessibilityRecord::getFromIndex() { return call_method<SCAPIX_META_STRING("getFromIndex"), jint>(); }
inline void AccessibilityRecord::setFromIndex(jint fromIndex) { return call_method<SCAPIX_META_STRING("setFromIndex"), void>(fromIndex); }
inline jint AccessibilityRecord::getToIndex() { return call_method<SCAPIX_META_STRING("getToIndex"), jint>(); }
inline void AccessibilityRecord::setToIndex(jint toIndex) { return call_method<SCAPIX_META_STRING("setToIndex"), void>(toIndex); }
inline jint AccessibilityRecord::getScrollX() { return call_method<SCAPIX_META_STRING("getScrollX"), jint>(); }
inline void AccessibilityRecord::setScrollX(jint scrollX) { return call_method<SCAPIX_META_STRING("setScrollX"), void>(scrollX); }
inline jint AccessibilityRecord::getScrollY() { return call_method<SCAPIX_META_STRING("getScrollY"), jint>(); }
inline void AccessibilityRecord::setScrollY(jint scrollY) { return call_method<SCAPIX_META_STRING("setScrollY"), void>(scrollY); }
inline jint AccessibilityRecord::getScrollDeltaX() { return call_method<SCAPIX_META_STRING("getScrollDeltaX"), jint>(); }
inline void AccessibilityRecord::setScrollDeltaX(jint scrollDeltaX) { return call_method<SCAPIX_META_STRING("setScrollDeltaX"), void>(scrollDeltaX); }
inline jint AccessibilityRecord::getScrollDeltaY() { return call_method<SCAPIX_META_STRING("getScrollDeltaY"), jint>(); }
inline void AccessibilityRecord::setScrollDeltaY(jint scrollDeltaY) { return call_method<SCAPIX_META_STRING("setScrollDeltaY"), void>(scrollDeltaY); }
inline jint AccessibilityRecord::getMaxScrollX() { return call_method<SCAPIX_META_STRING("getMaxScrollX"), jint>(); }
inline void AccessibilityRecord::setMaxScrollX(jint maxScrollX) { return call_method<SCAPIX_META_STRING("setMaxScrollX"), void>(maxScrollX); }
inline jint AccessibilityRecord::getMaxScrollY() { return call_method<SCAPIX_META_STRING("getMaxScrollY"), jint>(); }
inline void AccessibilityRecord::setMaxScrollY(jint maxScrollY) { return call_method<SCAPIX_META_STRING("setMaxScrollY"), void>(maxScrollY); }
inline jint AccessibilityRecord::getAddedCount() { return call_method<SCAPIX_META_STRING("getAddedCount"), jint>(); }
inline void AccessibilityRecord::setAddedCount(jint addedCount) { return call_method<SCAPIX_META_STRING("setAddedCount"), void>(addedCount); }
inline jint AccessibilityRecord::getRemovedCount() { return call_method<SCAPIX_META_STRING("getRemovedCount"), jint>(); }
inline void AccessibilityRecord::setRemovedCount(jint removedCount) { return call_method<SCAPIX_META_STRING("setRemovedCount"), void>(removedCount); }
inline ref<java::lang::CharSequence> AccessibilityRecord::getClassName() { return call_method<SCAPIX_META_STRING("getClassName"), ref<java::lang::CharSequence>>(); }
inline void AccessibilityRecord::setClassName(ref<java::lang::CharSequence> className) { return call_method<SCAPIX_META_STRING("setClassName"), void>(className); }
inline ref<java::util::List> AccessibilityRecord::getText() { return call_method<SCAPIX_META_STRING("getText"), ref<java::util::List>>(); }
inline ref<java::lang::CharSequence> AccessibilityRecord::getBeforeText() { return call_method<SCAPIX_META_STRING("getBeforeText"), ref<java::lang::CharSequence>>(); }
inline void AccessibilityRecord::setBeforeText(ref<java::lang::CharSequence> beforeText) { return call_method<SCAPIX_META_STRING("setBeforeText"), void>(beforeText); }
inline ref<java::lang::CharSequence> AccessibilityRecord::getContentDescription() { return call_method<SCAPIX_META_STRING("getContentDescription"), ref<java::lang::CharSequence>>(); }
inline void AccessibilityRecord::setContentDescription(ref<java::lang::CharSequence> contentDescription) { return call_method<SCAPIX_META_STRING("setContentDescription"), void>(contentDescription); }
inline ref<android::os::Parcelable> AccessibilityRecord::getParcelableData() { return call_method<SCAPIX_META_STRING("getParcelableData"), ref<android::os::Parcelable>>(); }
inline void AccessibilityRecord::setParcelableData(ref<android::os::Parcelable> parcelableData) { return call_method<SCAPIX_META_STRING("setParcelableData"), void>(parcelableData); }
inline ref<android::view::accessibility::AccessibilityRecord> AccessibilityRecord::obtain(ref<android::view::accessibility::AccessibilityRecord> record) { return call_static_method<SCAPIX_META_STRING("obtain"), ref<android::view::accessibility::AccessibilityRecord>>(record); }
inline ref<android::view::accessibility::AccessibilityRecord> AccessibilityRecord::obtain() { return call_static_method<SCAPIX_META_STRING("obtain"), ref<android::view::accessibility::AccessibilityRecord>>(); }
inline void AccessibilityRecord::recycle() { return call_method<SCAPIX_META_STRING("recycle"), void>(); }
inline ref<java::lang::String> AccessibilityRecord::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }

} // namespace android::view::accessibility
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_VIEW_ACCESSIBILITY_ACCESSIBILITYRECORD_H
