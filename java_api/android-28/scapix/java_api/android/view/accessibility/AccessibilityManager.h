// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_VIEW_ACCESSIBILITY_ACCESSIBILITYMANAGER_H
#define SCAPIX_ANDROID_VIEW_ACCESSIBILITY_ACCESSIBILITYMANAGER_H

namespace scapix::java_api {

namespace android::os { class Handler; }
namespace android::view::accessibility { class AccessibilityEvent; }
namespace android::view::accessibility { class AccessibilityManager_AccessibilityStateChangeListener; }
namespace android::view::accessibility { class AccessibilityManager_TouchExplorationStateChangeListener; }
namespace android::view::accessibility { class AccessibilityRequestPreparer; }
namespace java::util { class List; }

namespace android::view::accessibility {

class AccessibilityManager : public object_base<SCAPIX_META_STRING("android/view/accessibility/AccessibilityManager"),
	java::lang::Object>
{
public:

	using TouchExplorationStateChangeListener = AccessibilityManager_TouchExplorationStateChangeListener;
	using AccessibilityStateChangeListener = AccessibilityManager_AccessibilityStateChangeListener;

	jboolean isEnabled();
	jboolean isTouchExplorationEnabled();
	void sendAccessibilityEvent(ref<android::view::accessibility::AccessibilityEvent> event);
	void interrupt();
	ref<java::util::List> getAccessibilityServiceList();
	ref<java::util::List> getInstalledAccessibilityServiceList();
	ref<java::util::List> getEnabledAccessibilityServiceList(jint feedbackTypeFlags);
	jboolean addAccessibilityStateChangeListener(ref<android::view::accessibility::AccessibilityManager_AccessibilityStateChangeListener> listener);
	void addAccessibilityStateChangeListener(ref<android::view::accessibility::AccessibilityManager_AccessibilityStateChangeListener> listener, ref<android::os::Handler> handler);
	jboolean removeAccessibilityStateChangeListener(ref<android::view::accessibility::AccessibilityManager_AccessibilityStateChangeListener> listener);
	jboolean addTouchExplorationStateChangeListener(ref<android::view::accessibility::AccessibilityManager_TouchExplorationStateChangeListener> listener);
	void addTouchExplorationStateChangeListener(ref<android::view::accessibility::AccessibilityManager_TouchExplorationStateChangeListener> listener, ref<android::os::Handler> handler);
	jboolean removeTouchExplorationStateChangeListener(ref<android::view::accessibility::AccessibilityManager_TouchExplorationStateChangeListener> listener);
	void addAccessibilityRequestPreparer(ref<android::view::accessibility::AccessibilityRequestPreparer> preparer);
	void removeAccessibilityRequestPreparer(ref<android::view::accessibility::AccessibilityRequestPreparer> preparer);
	static jboolean isAccessibilityButtonSupported();

protected:

	AccessibilityManager(handle_type h) : base_(h) {}

};

} // namespace android::view::accessibility
} // namespace scapix::java_api

#include <scapix/java_api/android/os/Handler.h>
#include <scapix/java_api/android/view/accessibility/AccessibilityEvent.h>
#include <scapix/java_api/android/view/accessibility/AccessibilityManager_AccessibilityStateChangeListener.h>
#include <scapix/java_api/android/view/accessibility/AccessibilityManager_TouchExplorationStateChangeListener.h>
#include <scapix/java_api/android/view/accessibility/AccessibilityRequestPreparer.h>
#include <scapix/java_api/java/util/List.h>

namespace scapix::java_api {
namespace android::view::accessibility {

inline jboolean AccessibilityManager::isEnabled() { return call_method<SCAPIX_META_STRING("isEnabled"), jboolean>(); }
inline jboolean AccessibilityManager::isTouchExplorationEnabled() { return call_method<SCAPIX_META_STRING("isTouchExplorationEnabled"), jboolean>(); }
inline void AccessibilityManager::sendAccessibilityEvent(ref<android::view::accessibility::AccessibilityEvent> event) { return call_method<SCAPIX_META_STRING("sendAccessibilityEvent"), void>(event); }
inline void AccessibilityManager::interrupt() { return call_method<SCAPIX_META_STRING("interrupt"), void>(); }
inline ref<java::util::List> AccessibilityManager::getAccessibilityServiceList() { return call_method<SCAPIX_META_STRING("getAccessibilityServiceList"), ref<java::util::List>>(); }
inline ref<java::util::List> AccessibilityManager::getInstalledAccessibilityServiceList() { return call_method<SCAPIX_META_STRING("getInstalledAccessibilityServiceList"), ref<java::util::List>>(); }
inline ref<java::util::List> AccessibilityManager::getEnabledAccessibilityServiceList(jint feedbackTypeFlags) { return call_method<SCAPIX_META_STRING("getEnabledAccessibilityServiceList"), ref<java::util::List>>(feedbackTypeFlags); }
inline jboolean AccessibilityManager::addAccessibilityStateChangeListener(ref<android::view::accessibility::AccessibilityManager_AccessibilityStateChangeListener> listener) { return call_method<SCAPIX_META_STRING("addAccessibilityStateChangeListener"), jboolean>(listener); }
inline void AccessibilityManager::addAccessibilityStateChangeListener(ref<android::view::accessibility::AccessibilityManager_AccessibilityStateChangeListener> listener, ref<android::os::Handler> handler) { return call_method<SCAPIX_META_STRING("addAccessibilityStateChangeListener"), void>(listener, handler); }
inline jboolean AccessibilityManager::removeAccessibilityStateChangeListener(ref<android::view::accessibility::AccessibilityManager_AccessibilityStateChangeListener> listener) { return call_method<SCAPIX_META_STRING("removeAccessibilityStateChangeListener"), jboolean>(listener); }
inline jboolean AccessibilityManager::addTouchExplorationStateChangeListener(ref<android::view::accessibility::AccessibilityManager_TouchExplorationStateChangeListener> listener) { return call_method<SCAPIX_META_STRING("addTouchExplorationStateChangeListener"), jboolean>(listener); }
inline void AccessibilityManager::addTouchExplorationStateChangeListener(ref<android::view::accessibility::AccessibilityManager_TouchExplorationStateChangeListener> listener, ref<android::os::Handler> handler) { return call_method<SCAPIX_META_STRING("addTouchExplorationStateChangeListener"), void>(listener, handler); }
inline jboolean AccessibilityManager::removeTouchExplorationStateChangeListener(ref<android::view::accessibility::AccessibilityManager_TouchExplorationStateChangeListener> listener) { return call_method<SCAPIX_META_STRING("removeTouchExplorationStateChangeListener"), jboolean>(listener); }
inline void AccessibilityManager::addAccessibilityRequestPreparer(ref<android::view::accessibility::AccessibilityRequestPreparer> preparer) { return call_method<SCAPIX_META_STRING("addAccessibilityRequestPreparer"), void>(preparer); }
inline void AccessibilityManager::removeAccessibilityRequestPreparer(ref<android::view::accessibility::AccessibilityRequestPreparer> preparer) { return call_method<SCAPIX_META_STRING("removeAccessibilityRequestPreparer"), void>(preparer); }
inline jboolean AccessibilityManager::isAccessibilityButtonSupported() { return call_static_method<SCAPIX_META_STRING("isAccessibilityButtonSupported"), jboolean>(); }

} // namespace android::view::accessibility
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_VIEW_ACCESSIBILITY_ACCESSIBILITYMANAGER_H
