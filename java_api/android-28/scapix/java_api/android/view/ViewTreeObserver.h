// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_VIEW_VIEWTREEOBSERVER_H
#define SCAPIX_ANDROID_VIEW_VIEWTREEOBSERVER_H

namespace scapix::java_api {

namespace android::view { class ViewTreeObserver_OnDrawListener; }
namespace android::view { class ViewTreeObserver_OnGlobalFocusChangeListener; }
namespace android::view { class ViewTreeObserver_OnGlobalLayoutListener; }
namespace android::view { class ViewTreeObserver_OnPreDrawListener; }
namespace android::view { class ViewTreeObserver_OnScrollChangedListener; }
namespace android::view { class ViewTreeObserver_OnTouchModeChangeListener; }
namespace android::view { class ViewTreeObserver_OnWindowAttachListener; }
namespace android::view { class ViewTreeObserver_OnWindowFocusChangeListener; }

namespace android::view {

class ViewTreeObserver : public object_base<SCAPIX_META_STRING("android/view/ViewTreeObserver"),
	java::lang::Object>
{
public:

	using OnWindowFocusChangeListener = ViewTreeObserver_OnWindowFocusChangeListener;
	using OnWindowAttachListener = ViewTreeObserver_OnWindowAttachListener;
	using OnTouchModeChangeListener = ViewTreeObserver_OnTouchModeChangeListener;
	using OnScrollChangedListener = ViewTreeObserver_OnScrollChangedListener;
	using OnPreDrawListener = ViewTreeObserver_OnPreDrawListener;
	using OnGlobalLayoutListener = ViewTreeObserver_OnGlobalLayoutListener;
	using OnGlobalFocusChangeListener = ViewTreeObserver_OnGlobalFocusChangeListener;
	using OnDrawListener = ViewTreeObserver_OnDrawListener;

	void addOnWindowAttachListener(ref<android::view::ViewTreeObserver_OnWindowAttachListener> listener);
	void removeOnWindowAttachListener(ref<android::view::ViewTreeObserver_OnWindowAttachListener> victim);
	void addOnWindowFocusChangeListener(ref<android::view::ViewTreeObserver_OnWindowFocusChangeListener> listener);
	void removeOnWindowFocusChangeListener(ref<android::view::ViewTreeObserver_OnWindowFocusChangeListener> victim);
	void addOnGlobalFocusChangeListener(ref<android::view::ViewTreeObserver_OnGlobalFocusChangeListener> listener);
	void removeOnGlobalFocusChangeListener(ref<android::view::ViewTreeObserver_OnGlobalFocusChangeListener> victim);
	void addOnGlobalLayoutListener(ref<android::view::ViewTreeObserver_OnGlobalLayoutListener> listener);
	void removeGlobalOnLayoutListener(ref<android::view::ViewTreeObserver_OnGlobalLayoutListener> victim);
	void removeOnGlobalLayoutListener(ref<android::view::ViewTreeObserver_OnGlobalLayoutListener> victim);
	void addOnPreDrawListener(ref<android::view::ViewTreeObserver_OnPreDrawListener> listener);
	void removeOnPreDrawListener(ref<android::view::ViewTreeObserver_OnPreDrawListener> victim);
	void addOnDrawListener(ref<android::view::ViewTreeObserver_OnDrawListener> listener);
	void removeOnDrawListener(ref<android::view::ViewTreeObserver_OnDrawListener> victim);
	void addOnScrollChangedListener(ref<android::view::ViewTreeObserver_OnScrollChangedListener> listener);
	void removeOnScrollChangedListener(ref<android::view::ViewTreeObserver_OnScrollChangedListener> victim);
	void addOnTouchModeChangeListener(ref<android::view::ViewTreeObserver_OnTouchModeChangeListener> listener);
	void removeOnTouchModeChangeListener(ref<android::view::ViewTreeObserver_OnTouchModeChangeListener> victim);
	jboolean isAlive();
	void dispatchOnGlobalLayout();
	jboolean dispatchOnPreDraw();
	void dispatchOnDraw();

protected:

	ViewTreeObserver(handle_type h) : base_(h) {}

};

} // namespace android::view
} // namespace scapix::java_api

#include <scapix/java_api/android/view/ViewTreeObserver_OnDrawListener.h>
#include <scapix/java_api/android/view/ViewTreeObserver_OnGlobalFocusChangeListener.h>
#include <scapix/java_api/android/view/ViewTreeObserver_OnGlobalLayoutListener.h>
#include <scapix/java_api/android/view/ViewTreeObserver_OnPreDrawListener.h>
#include <scapix/java_api/android/view/ViewTreeObserver_OnScrollChangedListener.h>
#include <scapix/java_api/android/view/ViewTreeObserver_OnTouchModeChangeListener.h>
#include <scapix/java_api/android/view/ViewTreeObserver_OnWindowAttachListener.h>
#include <scapix/java_api/android/view/ViewTreeObserver_OnWindowFocusChangeListener.h>

namespace scapix::java_api {
namespace android::view {

inline void ViewTreeObserver::addOnWindowAttachListener(ref<android::view::ViewTreeObserver_OnWindowAttachListener> listener) { return call_method<SCAPIX_META_STRING("addOnWindowAttachListener"), void>(listener); }
inline void ViewTreeObserver::removeOnWindowAttachListener(ref<android::view::ViewTreeObserver_OnWindowAttachListener> victim) { return call_method<SCAPIX_META_STRING("removeOnWindowAttachListener"), void>(victim); }
inline void ViewTreeObserver::addOnWindowFocusChangeListener(ref<android::view::ViewTreeObserver_OnWindowFocusChangeListener> listener) { return call_method<SCAPIX_META_STRING("addOnWindowFocusChangeListener"), void>(listener); }
inline void ViewTreeObserver::removeOnWindowFocusChangeListener(ref<android::view::ViewTreeObserver_OnWindowFocusChangeListener> victim) { return call_method<SCAPIX_META_STRING("removeOnWindowFocusChangeListener"), void>(victim); }
inline void ViewTreeObserver::addOnGlobalFocusChangeListener(ref<android::view::ViewTreeObserver_OnGlobalFocusChangeListener> listener) { return call_method<SCAPIX_META_STRING("addOnGlobalFocusChangeListener"), void>(listener); }
inline void ViewTreeObserver::removeOnGlobalFocusChangeListener(ref<android::view::ViewTreeObserver_OnGlobalFocusChangeListener> victim) { return call_method<SCAPIX_META_STRING("removeOnGlobalFocusChangeListener"), void>(victim); }
inline void ViewTreeObserver::addOnGlobalLayoutListener(ref<android::view::ViewTreeObserver_OnGlobalLayoutListener> listener) { return call_method<SCAPIX_META_STRING("addOnGlobalLayoutListener"), void>(listener); }
inline void ViewTreeObserver::removeGlobalOnLayoutListener(ref<android::view::ViewTreeObserver_OnGlobalLayoutListener> victim) { return call_method<SCAPIX_META_STRING("removeGlobalOnLayoutListener"), void>(victim); }
inline void ViewTreeObserver::removeOnGlobalLayoutListener(ref<android::view::ViewTreeObserver_OnGlobalLayoutListener> victim) { return call_method<SCAPIX_META_STRING("removeOnGlobalLayoutListener"), void>(victim); }
inline void ViewTreeObserver::addOnPreDrawListener(ref<android::view::ViewTreeObserver_OnPreDrawListener> listener) { return call_method<SCAPIX_META_STRING("addOnPreDrawListener"), void>(listener); }
inline void ViewTreeObserver::removeOnPreDrawListener(ref<android::view::ViewTreeObserver_OnPreDrawListener> victim) { return call_method<SCAPIX_META_STRING("removeOnPreDrawListener"), void>(victim); }
inline void ViewTreeObserver::addOnDrawListener(ref<android::view::ViewTreeObserver_OnDrawListener> listener) { return call_method<SCAPIX_META_STRING("addOnDrawListener"), void>(listener); }
inline void ViewTreeObserver::removeOnDrawListener(ref<android::view::ViewTreeObserver_OnDrawListener> victim) { return call_method<SCAPIX_META_STRING("removeOnDrawListener"), void>(victim); }
inline void ViewTreeObserver::addOnScrollChangedListener(ref<android::view::ViewTreeObserver_OnScrollChangedListener> listener) { return call_method<SCAPIX_META_STRING("addOnScrollChangedListener"), void>(listener); }
inline void ViewTreeObserver::removeOnScrollChangedListener(ref<android::view::ViewTreeObserver_OnScrollChangedListener> victim) { return call_method<SCAPIX_META_STRING("removeOnScrollChangedListener"), void>(victim); }
inline void ViewTreeObserver::addOnTouchModeChangeListener(ref<android::view::ViewTreeObserver_OnTouchModeChangeListener> listener) { return call_method<SCAPIX_META_STRING("addOnTouchModeChangeListener"), void>(listener); }
inline void ViewTreeObserver::removeOnTouchModeChangeListener(ref<android::view::ViewTreeObserver_OnTouchModeChangeListener> victim) { return call_method<SCAPIX_META_STRING("removeOnTouchModeChangeListener"), void>(victim); }
inline jboolean ViewTreeObserver::isAlive() { return call_method<SCAPIX_META_STRING("isAlive"), jboolean>(); }
inline void ViewTreeObserver::dispatchOnGlobalLayout() { return call_method<SCAPIX_META_STRING("dispatchOnGlobalLayout"), void>(); }
inline jboolean ViewTreeObserver::dispatchOnPreDraw() { return call_method<SCAPIX_META_STRING("dispatchOnPreDraw"), jboolean>(); }
inline void ViewTreeObserver::dispatchOnDraw() { return call_method<SCAPIX_META_STRING("dispatchOnDraw"), void>(); }

} // namespace android::view
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_VIEW_VIEWTREEOBSERVER_H
