// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_ANDROID_VIEW_TEXTSERVICE_SPELLCHECKERSUBTYPE_H
#define SCAPIX_ANDROID_VIEW_TEXTSERVICE_SPELLCHECKERSUBTYPE_H

namespace scapix::java_api {

namespace android::content { class Context; }
namespace android::content::pm { class ApplicationInfo; }
namespace android::os { class Parcel; }
namespace android::os { class Parcelable_Creator; }
namespace java::lang { class CharSequence; }
namespace java::lang { class String; }

namespace android::view::textservice {

class SpellCheckerSubtype : public object_base<SCAPIX_META_STRING("android/view/textservice/SpellCheckerSubtype"),
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static ref<android::os::Parcelable_Creator> CREATOR_();

	static ref<SpellCheckerSubtype> new_object(jint nameId, ref<java::lang::String> locale, ref<java::lang::String> extraValue);
	jint getNameResId();
	ref<java::lang::String> getLocale();
	ref<java::lang::String> getLanguageTag();
	ref<java::lang::String> getExtraValue();
	jboolean containsExtraValueKey(ref<java::lang::String> key);
	ref<java::lang::String> getExtraValueOf(ref<java::lang::String> key);
	jint hashCode();
	jboolean equals(ref<java::lang::Object> o);
	ref<java::lang::CharSequence> getDisplayName(ref<android::content::Context> context, ref<java::lang::String> packageName, ref<android::content::pm::ApplicationInfo> appInfo);
	jint describeContents();
	void writeToParcel(ref<android::os::Parcel> dest, jint parcelableFlags);

protected:

	SpellCheckerSubtype(handle_type h) : base_(h) {}

};

} // namespace android::view::textservice
} // namespace scapix::java_api

#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/content/pm/ApplicationInfo.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::view::textservice {

inline ref<android::os::Parcelable_Creator> SpellCheckerSubtype::CREATOR_() { return get_static_field<SCAPIX_META_STRING("CREATOR"), ref<android::os::Parcelable_Creator>>(); }
inline ref<SpellCheckerSubtype> SpellCheckerSubtype::new_object(jint nameId, ref<java::lang::String> locale, ref<java::lang::String> extraValue) { return base_::new_object(nameId, locale, extraValue); }
inline jint SpellCheckerSubtype::getNameResId() { return call_method<SCAPIX_META_STRING("getNameResId"), jint>(); }
inline ref<java::lang::String> SpellCheckerSubtype::getLocale() { return call_method<SCAPIX_META_STRING("getLocale"), ref<java::lang::String>>(); }
inline ref<java::lang::String> SpellCheckerSubtype::getLanguageTag() { return call_method<SCAPIX_META_STRING("getLanguageTag"), ref<java::lang::String>>(); }
inline ref<java::lang::String> SpellCheckerSubtype::getExtraValue() { return call_method<SCAPIX_META_STRING("getExtraValue"), ref<java::lang::String>>(); }
inline jboolean SpellCheckerSubtype::containsExtraValueKey(ref<java::lang::String> key) { return call_method<SCAPIX_META_STRING("containsExtraValueKey"), jboolean>(key); }
inline ref<java::lang::String> SpellCheckerSubtype::getExtraValueOf(ref<java::lang::String> key) { return call_method<SCAPIX_META_STRING("getExtraValueOf"), ref<java::lang::String>>(key); }
inline jint SpellCheckerSubtype::hashCode() { return call_method<SCAPIX_META_STRING("hashCode"), jint>(); }
inline jboolean SpellCheckerSubtype::equals(ref<java::lang::Object> o) { return call_method<SCAPIX_META_STRING("equals"), jboolean>(o); }
inline ref<java::lang::CharSequence> SpellCheckerSubtype::getDisplayName(ref<android::content::Context> context, ref<java::lang::String> packageName, ref<android::content::pm::ApplicationInfo> appInfo) { return call_method<SCAPIX_META_STRING("getDisplayName"), ref<java::lang::CharSequence>>(context, packageName, appInfo); }
inline jint SpellCheckerSubtype::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }
inline void SpellCheckerSubtype::writeToParcel(ref<android::os::Parcel> dest, jint parcelableFlags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(dest, parcelableFlags); }

} // namespace android::view::textservice
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_VIEW_TEXTSERVICE_SPELLCHECKERSUBTYPE_H
