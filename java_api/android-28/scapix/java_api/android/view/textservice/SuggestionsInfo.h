// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_ANDROID_VIEW_TEXTSERVICE_SUGGESTIONSINFO_H
#define SCAPIX_ANDROID_VIEW_TEXTSERVICE_SUGGESTIONSINFO_H

namespace scapix::java_api {

namespace android::os { class Parcel; }
namespace android::os { class Parcelable_Creator; }
namespace java::lang { class String; }

namespace android::view::textservice {

class SuggestionsInfo : public object_base<SCAPIX_META_STRING("android/view/textservice/SuggestionsInfo"),
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static ref<android::os::Parcelable_Creator> CREATOR_();
	static jint RESULT_ATTR_HAS_RECOMMENDED_SUGGESTIONS_();
	static jint RESULT_ATTR_IN_THE_DICTIONARY_();
	static jint RESULT_ATTR_LOOKS_LIKE_TYPO_();

	static ref<SuggestionsInfo> new_object(jint suggestionsAttributes, ref<link::java::array<java::lang::String>> suggestions);
	static ref<SuggestionsInfo> new_object(jint suggestionsAttributes, ref<link::java::array<java::lang::String>> suggestions, jint cookie, jint sequence);
	static ref<SuggestionsInfo> new_object(ref<android::os::Parcel> source);
	void writeToParcel(ref<android::os::Parcel> dest, jint flags);
	void setCookieAndSequence(jint cookie, jint sequence);
	jint getCookie();
	jint getSequence();
	jint getSuggestionsAttributes();
	jint getSuggestionsCount();
	ref<java::lang::String> getSuggestionAt(jint i);
	jint describeContents();

protected:

	SuggestionsInfo(handle_type h) : base_(h) {}

};

} // namespace android::view::textservice
} // namespace scapix::java_api

#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::view::textservice {

inline ref<android::os::Parcelable_Creator> SuggestionsInfo::CREATOR_() { return get_static_field<SCAPIX_META_STRING("CREATOR"), ref<android::os::Parcelable_Creator>>(); }
inline jint SuggestionsInfo::RESULT_ATTR_HAS_RECOMMENDED_SUGGESTIONS_() { return get_static_field<SCAPIX_META_STRING("RESULT_ATTR_HAS_RECOMMENDED_SUGGESTIONS"), jint>(); }
inline jint SuggestionsInfo::RESULT_ATTR_IN_THE_DICTIONARY_() { return get_static_field<SCAPIX_META_STRING("RESULT_ATTR_IN_THE_DICTIONARY"), jint>(); }
inline jint SuggestionsInfo::RESULT_ATTR_LOOKS_LIKE_TYPO_() { return get_static_field<SCAPIX_META_STRING("RESULT_ATTR_LOOKS_LIKE_TYPO"), jint>(); }
inline ref<SuggestionsInfo> SuggestionsInfo::new_object(jint suggestionsAttributes, ref<link::java::array<java::lang::String>> suggestions) { return base_::new_object(suggestionsAttributes, suggestions); }
inline ref<SuggestionsInfo> SuggestionsInfo::new_object(jint suggestionsAttributes, ref<link::java::array<java::lang::String>> suggestions, jint cookie, jint sequence) { return base_::new_object(suggestionsAttributes, suggestions, cookie, sequence); }
inline ref<SuggestionsInfo> SuggestionsInfo::new_object(ref<android::os::Parcel> source) { return base_::new_object(source); }
inline void SuggestionsInfo::writeToParcel(ref<android::os::Parcel> dest, jint flags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(dest, flags); }
inline void SuggestionsInfo::setCookieAndSequence(jint cookie, jint sequence) { return call_method<SCAPIX_META_STRING("setCookieAndSequence"), void>(cookie, sequence); }
inline jint SuggestionsInfo::getCookie() { return call_method<SCAPIX_META_STRING("getCookie"), jint>(); }
inline jint SuggestionsInfo::getSequence() { return call_method<SCAPIX_META_STRING("getSequence"), jint>(); }
inline jint SuggestionsInfo::getSuggestionsAttributes() { return call_method<SCAPIX_META_STRING("getSuggestionsAttributes"), jint>(); }
inline jint SuggestionsInfo::getSuggestionsCount() { return call_method<SCAPIX_META_STRING("getSuggestionsCount"), jint>(); }
inline ref<java::lang::String> SuggestionsInfo::getSuggestionAt(jint i) { return call_method<SCAPIX_META_STRING("getSuggestionAt"), ref<java::lang::String>>(i); }
inline jint SuggestionsInfo::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }

} // namespace android::view::textservice
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_VIEW_TEXTSERVICE_SUGGESTIONSINFO_H
