// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_ANDROID_VIEW_TEXTSERVICE_TEXTINFO_H
#define SCAPIX_ANDROID_VIEW_TEXTSERVICE_TEXTINFO_H

namespace scapix::java_api {

namespace android::os { class Parcel; }
namespace android::os { class Parcelable_Creator; }
namespace java::lang { class CharSequence; }
namespace java::lang { class String; }

namespace android::view::textservice {

class TextInfo : public object_base<SCAPIX_META_STRING("android/view/textservice/TextInfo"),
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static ref<android::os::Parcelable_Creator> CREATOR_();

	static ref<TextInfo> new_object(ref<java::lang::String> text);
	static ref<TextInfo> new_object(ref<java::lang::String> text, jint cookie, jint sequenceNumber);
	static ref<TextInfo> new_object(ref<java::lang::CharSequence> charSequence, jint start, jint end, jint cookie, jint sequenceNumber);
	static ref<TextInfo> new_object(ref<android::os::Parcel> source);
	void writeToParcel(ref<android::os::Parcel> dest, jint flags);
	ref<java::lang::String> getText();
	ref<java::lang::CharSequence> getCharSequence();
	jint getCookie();
	jint getSequence();
	jint describeContents();

protected:

	TextInfo(handle_type h) : base_(h) {}

};

} // namespace android::view::textservice
} // namespace scapix::java_api

#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::view::textservice {

inline ref<android::os::Parcelable_Creator> TextInfo::CREATOR_() { return get_static_field<SCAPIX_META_STRING("CREATOR"), ref<android::os::Parcelable_Creator>>(); }
inline ref<TextInfo> TextInfo::new_object(ref<java::lang::String> text) { return base_::new_object(text); }
inline ref<TextInfo> TextInfo::new_object(ref<java::lang::String> text, jint cookie, jint sequenceNumber) { return base_::new_object(text, cookie, sequenceNumber); }
inline ref<TextInfo> TextInfo::new_object(ref<java::lang::CharSequence> charSequence, jint start, jint end, jint cookie, jint sequenceNumber) { return base_::new_object(charSequence, start, end, cookie, sequenceNumber); }
inline ref<TextInfo> TextInfo::new_object(ref<android::os::Parcel> source) { return base_::new_object(source); }
inline void TextInfo::writeToParcel(ref<android::os::Parcel> dest, jint flags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(dest, flags); }
inline ref<java::lang::String> TextInfo::getText() { return call_method<SCAPIX_META_STRING("getText"), ref<java::lang::String>>(); }
inline ref<java::lang::CharSequence> TextInfo::getCharSequence() { return call_method<SCAPIX_META_STRING("getCharSequence"), ref<java::lang::CharSequence>>(); }
inline jint TextInfo::getCookie() { return call_method<SCAPIX_META_STRING("getCookie"), jint>(); }
inline jint TextInfo::getSequence() { return call_method<SCAPIX_META_STRING("getSequence"), jint>(); }
inline jint TextInfo::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }

} // namespace android::view::textservice
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_VIEW_TEXTSERVICE_TEXTINFO_H
