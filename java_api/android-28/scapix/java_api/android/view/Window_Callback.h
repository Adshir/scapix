// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_VIEW_WINDOW_CALLBACK_H
#define SCAPIX_ANDROID_VIEW_WINDOW_CALLBACK_H

namespace scapix::java_api {

namespace android::view { class ActionMode; }
namespace android::view { class ActionMode_Callback; }
namespace android::view { class KeyEvent; }
namespace android::view { class Menu; }
namespace android::view { class MenuItem; }
namespace android::view { class MotionEvent; }
namespace android::view { class SearchEvent; }
namespace android::view { class View; }
namespace android::view { class WindowManager_LayoutParams; }
namespace android::view::accessibility { class AccessibilityEvent; }
namespace java::util { class List; }

namespace android::view {

class Window_Callback : public object_base<SCAPIX_META_STRING("android/view/Window$Callback"),
	java::lang::Object>
{
public:

	jboolean dispatchKeyEvent(ref<android::view::KeyEvent> p1);
	jboolean dispatchKeyShortcutEvent(ref<android::view::KeyEvent> p1);
	jboolean dispatchTouchEvent(ref<android::view::MotionEvent> p1);
	jboolean dispatchTrackballEvent(ref<android::view::MotionEvent> p1);
	jboolean dispatchGenericMotionEvent(ref<android::view::MotionEvent> p1);
	jboolean dispatchPopulateAccessibilityEvent(ref<android::view::accessibility::AccessibilityEvent> p1);
	ref<android::view::View> onCreatePanelView(jint p1);
	jboolean onCreatePanelMenu(jint p1, ref<android::view::Menu> p2);
	jboolean onPreparePanel(jint p1, ref<android::view::View> p2, ref<android::view::Menu> p3);
	jboolean onMenuOpened(jint p1, ref<android::view::Menu> p2);
	jboolean onMenuItemSelected(jint p1, ref<android::view::MenuItem> p2);
	void onWindowAttributesChanged(ref<android::view::WindowManager_LayoutParams> p1);
	void onContentChanged();
	void onWindowFocusChanged(jboolean p1);
	void onAttachedToWindow();
	void onDetachedFromWindow();
	void onPanelClosed(jint p1, ref<android::view::Menu> p2);
	jboolean onSearchRequested();
	jboolean onSearchRequested(ref<android::view::SearchEvent> p1);
	ref<android::view::ActionMode> onWindowStartingActionMode(ref<android::view::ActionMode_Callback> p1);
	ref<android::view::ActionMode> onWindowStartingActionMode(ref<android::view::ActionMode_Callback> p1, jint p2);
	void onActionModeStarted(ref<android::view::ActionMode> p1);
	void onActionModeFinished(ref<android::view::ActionMode> p1);
	void onProvideKeyboardShortcuts(ref<java::util::List> data, ref<android::view::Menu> menu, jint deviceId);
	void onPointerCaptureChanged(jboolean hasCapture);

protected:

	Window_Callback(handle_type h) : base_(h) {}

};

} // namespace android::view
} // namespace scapix::java_api

#include <scapix/java_api/android/view/ActionMode.h>
#include <scapix/java_api/android/view/ActionMode_Callback.h>
#include <scapix/java_api/android/view/KeyEvent.h>
#include <scapix/java_api/android/view/Menu.h>
#include <scapix/java_api/android/view/MenuItem.h>
#include <scapix/java_api/android/view/MotionEvent.h>
#include <scapix/java_api/android/view/SearchEvent.h>
#include <scapix/java_api/android/view/View.h>
#include <scapix/java_api/android/view/WindowManager_LayoutParams.h>
#include <scapix/java_api/android/view/accessibility/AccessibilityEvent.h>
#include <scapix/java_api/java/util/List.h>

namespace scapix::java_api {
namespace android::view {

inline jboolean Window_Callback::dispatchKeyEvent(ref<android::view::KeyEvent> p1) { return call_method<SCAPIX_META_STRING("dispatchKeyEvent"), jboolean>(p1); }
inline jboolean Window_Callback::dispatchKeyShortcutEvent(ref<android::view::KeyEvent> p1) { return call_method<SCAPIX_META_STRING("dispatchKeyShortcutEvent"), jboolean>(p1); }
inline jboolean Window_Callback::dispatchTouchEvent(ref<android::view::MotionEvent> p1) { return call_method<SCAPIX_META_STRING("dispatchTouchEvent"), jboolean>(p1); }
inline jboolean Window_Callback::dispatchTrackballEvent(ref<android::view::MotionEvent> p1) { return call_method<SCAPIX_META_STRING("dispatchTrackballEvent"), jboolean>(p1); }
inline jboolean Window_Callback::dispatchGenericMotionEvent(ref<android::view::MotionEvent> p1) { return call_method<SCAPIX_META_STRING("dispatchGenericMotionEvent"), jboolean>(p1); }
inline jboolean Window_Callback::dispatchPopulateAccessibilityEvent(ref<android::view::accessibility::AccessibilityEvent> p1) { return call_method<SCAPIX_META_STRING("dispatchPopulateAccessibilityEvent"), jboolean>(p1); }
inline ref<android::view::View> Window_Callback::onCreatePanelView(jint p1) { return call_method<SCAPIX_META_STRING("onCreatePanelView"), ref<android::view::View>>(p1); }
inline jboolean Window_Callback::onCreatePanelMenu(jint p1, ref<android::view::Menu> p2) { return call_method<SCAPIX_META_STRING("onCreatePanelMenu"), jboolean>(p1, p2); }
inline jboolean Window_Callback::onPreparePanel(jint p1, ref<android::view::View> p2, ref<android::view::Menu> p3) { return call_method<SCAPIX_META_STRING("onPreparePanel"), jboolean>(p1, p2, p3); }
inline jboolean Window_Callback::onMenuOpened(jint p1, ref<android::view::Menu> p2) { return call_method<SCAPIX_META_STRING("onMenuOpened"), jboolean>(p1, p2); }
inline jboolean Window_Callback::onMenuItemSelected(jint p1, ref<android::view::MenuItem> p2) { return call_method<SCAPIX_META_STRING("onMenuItemSelected"), jboolean>(p1, p2); }
inline void Window_Callback::onWindowAttributesChanged(ref<android::view::WindowManager_LayoutParams> p1) { return call_method<SCAPIX_META_STRING("onWindowAttributesChanged"), void>(p1); }
inline void Window_Callback::onContentChanged() { return call_method<SCAPIX_META_STRING("onContentChanged"), void>(); }
inline void Window_Callback::onWindowFocusChanged(jboolean p1) { return call_method<SCAPIX_META_STRING("onWindowFocusChanged"), void>(p1); }
inline void Window_Callback::onAttachedToWindow() { return call_method<SCAPIX_META_STRING("onAttachedToWindow"), void>(); }
inline void Window_Callback::onDetachedFromWindow() { return call_method<SCAPIX_META_STRING("onDetachedFromWindow"), void>(); }
inline void Window_Callback::onPanelClosed(jint p1, ref<android::view::Menu> p2) { return call_method<SCAPIX_META_STRING("onPanelClosed"), void>(p1, p2); }
inline jboolean Window_Callback::onSearchRequested() { return call_method<SCAPIX_META_STRING("onSearchRequested"), jboolean>(); }
inline jboolean Window_Callback::onSearchRequested(ref<android::view::SearchEvent> p1) { return call_method<SCAPIX_META_STRING("onSearchRequested"), jboolean>(p1); }
inline ref<android::view::ActionMode> Window_Callback::onWindowStartingActionMode(ref<android::view::ActionMode_Callback> p1) { return call_method<SCAPIX_META_STRING("onWindowStartingActionMode"), ref<android::view::ActionMode>>(p1); }
inline ref<android::view::ActionMode> Window_Callback::onWindowStartingActionMode(ref<android::view::ActionMode_Callback> p1, jint p2) { return call_method<SCAPIX_META_STRING("onWindowStartingActionMode"), ref<android::view::ActionMode>>(p1, p2); }
inline void Window_Callback::onActionModeStarted(ref<android::view::ActionMode> p1) { return call_method<SCAPIX_META_STRING("onActionModeStarted"), void>(p1); }
inline void Window_Callback::onActionModeFinished(ref<android::view::ActionMode> p1) { return call_method<SCAPIX_META_STRING("onActionModeFinished"), void>(p1); }
inline void Window_Callback::onProvideKeyboardShortcuts(ref<java::util::List> data, ref<android::view::Menu> menu, jint deviceId) { return call_method<SCAPIX_META_STRING("onProvideKeyboardShortcuts"), void>(data, menu, deviceId); }
inline void Window_Callback::onPointerCaptureChanged(jboolean hasCapture) { return call_method<SCAPIX_META_STRING("onPointerCaptureChanged"), void>(hasCapture); }

} // namespace android::view
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_VIEW_WINDOW_CALLBACK_H
