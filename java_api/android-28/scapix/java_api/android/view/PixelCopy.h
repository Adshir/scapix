// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_VIEW_PIXELCOPY_H
#define SCAPIX_ANDROID_VIEW_PIXELCOPY_H

namespace scapix::java_api {

namespace android::graphics { class Bitmap; }
namespace android::graphics { class Rect; }
namespace android::os { class Handler; }
namespace android::view { class PixelCopy_OnPixelCopyFinishedListener; }
namespace android::view { class Surface; }
namespace android::view { class SurfaceView; }
namespace android::view { class Window; }

namespace android::view {

class PixelCopy : public object_base<SCAPIX_META_STRING("android/view/PixelCopy"),
	java::lang::Object>
{
public:

	using OnPixelCopyFinishedListener = PixelCopy_OnPixelCopyFinishedListener;

	static jint ERROR_DESTINATION_INVALID_();
	static jint ERROR_SOURCE_INVALID_();
	static jint ERROR_SOURCE_NO_DATA_();
	static jint ERROR_TIMEOUT_();
	static jint ERROR_UNKNOWN_();
	static jint SUCCESS_();

	static void request(ref<android::view::SurfaceView> source, ref<android::graphics::Bitmap> dest, ref<android::view::PixelCopy_OnPixelCopyFinishedListener> listener, ref<android::os::Handler> listenerThread);
	static void request(ref<android::view::SurfaceView> source, ref<android::graphics::Rect> srcRect, ref<android::graphics::Bitmap> dest, ref<android::view::PixelCopy_OnPixelCopyFinishedListener> listener, ref<android::os::Handler> listenerThread);
	static void request(ref<android::view::Surface> source, ref<android::graphics::Bitmap> dest, ref<android::view::PixelCopy_OnPixelCopyFinishedListener> listener, ref<android::os::Handler> listenerThread);
	static void request(ref<android::view::Surface> source, ref<android::graphics::Rect> srcRect, ref<android::graphics::Bitmap> dest, ref<android::view::PixelCopy_OnPixelCopyFinishedListener> listener, ref<android::os::Handler> listenerThread);
	static void request(ref<android::view::Window> source, ref<android::graphics::Bitmap> dest, ref<android::view::PixelCopy_OnPixelCopyFinishedListener> listener, ref<android::os::Handler> listenerThread);
	static void request(ref<android::view::Window> source, ref<android::graphics::Rect> srcRect, ref<android::graphics::Bitmap> dest, ref<android::view::PixelCopy_OnPixelCopyFinishedListener> listener, ref<android::os::Handler> listenerThread);

protected:

	PixelCopy(handle_type h) : base_(h) {}

};

} // namespace android::view
} // namespace scapix::java_api

#include <scapix/java_api/android/graphics/Bitmap.h>
#include <scapix/java_api/android/graphics/Rect.h>
#include <scapix/java_api/android/os/Handler.h>
#include <scapix/java_api/android/view/PixelCopy_OnPixelCopyFinishedListener.h>
#include <scapix/java_api/android/view/Surface.h>
#include <scapix/java_api/android/view/SurfaceView.h>
#include <scapix/java_api/android/view/Window.h>

namespace scapix::java_api {
namespace android::view {

inline jint PixelCopy::ERROR_DESTINATION_INVALID_() { return get_static_field<SCAPIX_META_STRING("ERROR_DESTINATION_INVALID"), jint>(); }
inline jint PixelCopy::ERROR_SOURCE_INVALID_() { return get_static_field<SCAPIX_META_STRING("ERROR_SOURCE_INVALID"), jint>(); }
inline jint PixelCopy::ERROR_SOURCE_NO_DATA_() { return get_static_field<SCAPIX_META_STRING("ERROR_SOURCE_NO_DATA"), jint>(); }
inline jint PixelCopy::ERROR_TIMEOUT_() { return get_static_field<SCAPIX_META_STRING("ERROR_TIMEOUT"), jint>(); }
inline jint PixelCopy::ERROR_UNKNOWN_() { return get_static_field<SCAPIX_META_STRING("ERROR_UNKNOWN"), jint>(); }
inline jint PixelCopy::SUCCESS_() { return get_static_field<SCAPIX_META_STRING("SUCCESS"), jint>(); }
inline void PixelCopy::request(ref<android::view::SurfaceView> source, ref<android::graphics::Bitmap> dest, ref<android::view::PixelCopy_OnPixelCopyFinishedListener> listener, ref<android::os::Handler> listenerThread) { return call_static_method<SCAPIX_META_STRING("request"), void>(source, dest, listener, listenerThread); }
inline void PixelCopy::request(ref<android::view::SurfaceView> source, ref<android::graphics::Rect> srcRect, ref<android::graphics::Bitmap> dest, ref<android::view::PixelCopy_OnPixelCopyFinishedListener> listener, ref<android::os::Handler> listenerThread) { return call_static_method<SCAPIX_META_STRING("request"), void>(source, srcRect, dest, listener, listenerThread); }
inline void PixelCopy::request(ref<android::view::Surface> source, ref<android::graphics::Bitmap> dest, ref<android::view::PixelCopy_OnPixelCopyFinishedListener> listener, ref<android::os::Handler> listenerThread) { return call_static_method<SCAPIX_META_STRING("request"), void>(source, dest, listener, listenerThread); }
inline void PixelCopy::request(ref<android::view::Surface> source, ref<android::graphics::Rect> srcRect, ref<android::graphics::Bitmap> dest, ref<android::view::PixelCopy_OnPixelCopyFinishedListener> listener, ref<android::os::Handler> listenerThread) { return call_static_method<SCAPIX_META_STRING("request"), void>(source, srcRect, dest, listener, listenerThread); }
inline void PixelCopy::request(ref<android::view::Window> source, ref<android::graphics::Bitmap> dest, ref<android::view::PixelCopy_OnPixelCopyFinishedListener> listener, ref<android::os::Handler> listenerThread) { return call_static_method<SCAPIX_META_STRING("request"), void>(source, dest, listener, listenerThread); }
inline void PixelCopy::request(ref<android::view::Window> source, ref<android::graphics::Rect> srcRect, ref<android::graphics::Bitmap> dest, ref<android::view::PixelCopy_OnPixelCopyFinishedListener> listener, ref<android::os::Handler> listenerThread) { return call_static_method<SCAPIX_META_STRING("request"), void>(source, srcRect, dest, listener, listenerThread); }

} // namespace android::view
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_VIEW_PIXELCOPY_H
