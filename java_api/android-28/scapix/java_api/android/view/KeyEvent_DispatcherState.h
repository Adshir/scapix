// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_VIEW_KEYEVENT_DISPATCHERSTATE_H
#define SCAPIX_ANDROID_VIEW_KEYEVENT_DISPATCHERSTATE_H

namespace scapix::java_api {

namespace android::view { class KeyEvent; }

namespace android::view {

class KeyEvent_DispatcherState : public object_base<SCAPIX_META_STRING("android/view/KeyEvent$DispatcherState"),
	java::lang::Object>
{
public:

	static ref<KeyEvent_DispatcherState> new_object();
	void reset();
	void reset(ref<java::lang::Object> target);
	void startTracking(ref<android::view::KeyEvent> event, ref<java::lang::Object> target);
	jboolean isTracking(ref<android::view::KeyEvent> event);
	void performedLongPress(ref<android::view::KeyEvent> event);
	void handleUpEvent(ref<android::view::KeyEvent> event);

protected:

	KeyEvent_DispatcherState(handle_type h) : base_(h) {}

};

} // namespace android::view
} // namespace scapix::java_api

#include <scapix/java_api/android/view/KeyEvent.h>

namespace scapix::java_api {
namespace android::view {

inline ref<KeyEvent_DispatcherState> KeyEvent_DispatcherState::new_object() { return base_::new_object(); }
inline void KeyEvent_DispatcherState::reset() { return call_method<SCAPIX_META_STRING("reset"), void>(); }
inline void KeyEvent_DispatcherState::reset(ref<java::lang::Object> target) { return call_method<SCAPIX_META_STRING("reset"), void>(target); }
inline void KeyEvent_DispatcherState::startTracking(ref<android::view::KeyEvent> event, ref<java::lang::Object> target) { return call_method<SCAPIX_META_STRING("startTracking"), void>(event, target); }
inline jboolean KeyEvent_DispatcherState::isTracking(ref<android::view::KeyEvent> event) { return call_method<SCAPIX_META_STRING("isTracking"), jboolean>(event); }
inline void KeyEvent_DispatcherState::performedLongPress(ref<android::view::KeyEvent> event) { return call_method<SCAPIX_META_STRING("performedLongPress"), void>(event); }
inline void KeyEvent_DispatcherState::handleUpEvent(ref<android::view::KeyEvent> event) { return call_method<SCAPIX_META_STRING("handleUpEvent"), void>(event); }

} // namespace android::view
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_VIEW_KEYEVENT_DISPATCHERSTATE_H
