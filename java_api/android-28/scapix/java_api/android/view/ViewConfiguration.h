// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_VIEW_VIEWCONFIGURATION_H
#define SCAPIX_ANDROID_VIEW_VIEWCONFIGURATION_H

namespace scapix::java_api {

namespace android::content { class Context; }

namespace android::view {

class ViewConfiguration : public object_base<SCAPIX_META_STRING("android/view/ViewConfiguration"),
	java::lang::Object>
{
public:

	static ref<ViewConfiguration> new_object();
	static ref<android::view::ViewConfiguration> get(ref<android::content::Context> context);
	static jint getScrollBarSize();
	jint getScaledScrollBarSize();
	static jint getScrollBarFadeDuration();
	static jint getScrollDefaultDelay();
	static jint getFadingEdgeLength();
	jint getScaledFadingEdgeLength();
	static jint getPressedStateDuration();
	static jint getLongPressTimeout();
	static jint getKeyRepeatTimeout();
	static jint getKeyRepeatDelay();
	static jint getTapTimeout();
	static jint getJumpTapTimeout();
	static jint getDoubleTapTimeout();
	static jint getEdgeSlop();
	jint getScaledEdgeSlop();
	static jint getTouchSlop();
	jint getScaledTouchSlop();
	jint getScaledHoverSlop();
	jint getScaledPagingTouchSlop();
	jint getScaledDoubleTapSlop();
	static jint getWindowTouchSlop();
	jint getScaledWindowTouchSlop();
	static jint getMinimumFlingVelocity();
	jint getScaledMinimumFlingVelocity();
	static jint getMaximumFlingVelocity();
	jint getScaledMaximumFlingVelocity();
	jfloat getScaledHorizontalScrollFactor();
	jfloat getScaledVerticalScrollFactor();
	static jint getMaximumDrawingCacheSize();
	jint getScaledMaximumDrawingCacheSize();
	jint getScaledOverscrollDistance();
	jint getScaledOverflingDistance();
	static jlong getZoomControlsTimeout();
	static jlong getGlobalActionKeyTimeout();
	static jfloat getScrollFriction();
	static jlong getDefaultActionModeHideDuration();
	jboolean hasPermanentMenuKey();
	jboolean shouldShowMenuShortcutsWhenKeyboardPresent();

protected:

	ViewConfiguration(handle_type h) : base_(h) {}

};

} // namespace android::view
} // namespace scapix::java_api

#include <scapix/java_api/android/content/Context.h>

namespace scapix::java_api {
namespace android::view {

inline ref<ViewConfiguration> ViewConfiguration::new_object() { return base_::new_object(); }
inline ref<android::view::ViewConfiguration> ViewConfiguration::get(ref<android::content::Context> context) { return call_static_method<SCAPIX_META_STRING("get"), ref<android::view::ViewConfiguration>>(context); }
inline jint ViewConfiguration::getScrollBarSize() { return call_static_method<SCAPIX_META_STRING("getScrollBarSize"), jint>(); }
inline jint ViewConfiguration::getScaledScrollBarSize() { return call_method<SCAPIX_META_STRING("getScaledScrollBarSize"), jint>(); }
inline jint ViewConfiguration::getScrollBarFadeDuration() { return call_static_method<SCAPIX_META_STRING("getScrollBarFadeDuration"), jint>(); }
inline jint ViewConfiguration::getScrollDefaultDelay() { return call_static_method<SCAPIX_META_STRING("getScrollDefaultDelay"), jint>(); }
inline jint ViewConfiguration::getFadingEdgeLength() { return call_static_method<SCAPIX_META_STRING("getFadingEdgeLength"), jint>(); }
inline jint ViewConfiguration::getScaledFadingEdgeLength() { return call_method<SCAPIX_META_STRING("getScaledFadingEdgeLength"), jint>(); }
inline jint ViewConfiguration::getPressedStateDuration() { return call_static_method<SCAPIX_META_STRING("getPressedStateDuration"), jint>(); }
inline jint ViewConfiguration::getLongPressTimeout() { return call_static_method<SCAPIX_META_STRING("getLongPressTimeout"), jint>(); }
inline jint ViewConfiguration::getKeyRepeatTimeout() { return call_static_method<SCAPIX_META_STRING("getKeyRepeatTimeout"), jint>(); }
inline jint ViewConfiguration::getKeyRepeatDelay() { return call_static_method<SCAPIX_META_STRING("getKeyRepeatDelay"), jint>(); }
inline jint ViewConfiguration::getTapTimeout() { return call_static_method<SCAPIX_META_STRING("getTapTimeout"), jint>(); }
inline jint ViewConfiguration::getJumpTapTimeout() { return call_static_method<SCAPIX_META_STRING("getJumpTapTimeout"), jint>(); }
inline jint ViewConfiguration::getDoubleTapTimeout() { return call_static_method<SCAPIX_META_STRING("getDoubleTapTimeout"), jint>(); }
inline jint ViewConfiguration::getEdgeSlop() { return call_static_method<SCAPIX_META_STRING("getEdgeSlop"), jint>(); }
inline jint ViewConfiguration::getScaledEdgeSlop() { return call_method<SCAPIX_META_STRING("getScaledEdgeSlop"), jint>(); }
inline jint ViewConfiguration::getTouchSlop() { return call_static_method<SCAPIX_META_STRING("getTouchSlop"), jint>(); }
inline jint ViewConfiguration::getScaledTouchSlop() { return call_method<SCAPIX_META_STRING("getScaledTouchSlop"), jint>(); }
inline jint ViewConfiguration::getScaledHoverSlop() { return call_method<SCAPIX_META_STRING("getScaledHoverSlop"), jint>(); }
inline jint ViewConfiguration::getScaledPagingTouchSlop() { return call_method<SCAPIX_META_STRING("getScaledPagingTouchSlop"), jint>(); }
inline jint ViewConfiguration::getScaledDoubleTapSlop() { return call_method<SCAPIX_META_STRING("getScaledDoubleTapSlop"), jint>(); }
inline jint ViewConfiguration::getWindowTouchSlop() { return call_static_method<SCAPIX_META_STRING("getWindowTouchSlop"), jint>(); }
inline jint ViewConfiguration::getScaledWindowTouchSlop() { return call_method<SCAPIX_META_STRING("getScaledWindowTouchSlop"), jint>(); }
inline jint ViewConfiguration::getMinimumFlingVelocity() { return call_static_method<SCAPIX_META_STRING("getMinimumFlingVelocity"), jint>(); }
inline jint ViewConfiguration::getScaledMinimumFlingVelocity() { return call_method<SCAPIX_META_STRING("getScaledMinimumFlingVelocity"), jint>(); }
inline jint ViewConfiguration::getMaximumFlingVelocity() { return call_static_method<SCAPIX_META_STRING("getMaximumFlingVelocity"), jint>(); }
inline jint ViewConfiguration::getScaledMaximumFlingVelocity() { return call_method<SCAPIX_META_STRING("getScaledMaximumFlingVelocity"), jint>(); }
inline jfloat ViewConfiguration::getScaledHorizontalScrollFactor() { return call_method<SCAPIX_META_STRING("getScaledHorizontalScrollFactor"), jfloat>(); }
inline jfloat ViewConfiguration::getScaledVerticalScrollFactor() { return call_method<SCAPIX_META_STRING("getScaledVerticalScrollFactor"), jfloat>(); }
inline jint ViewConfiguration::getMaximumDrawingCacheSize() { return call_static_method<SCAPIX_META_STRING("getMaximumDrawingCacheSize"), jint>(); }
inline jint ViewConfiguration::getScaledMaximumDrawingCacheSize() { return call_method<SCAPIX_META_STRING("getScaledMaximumDrawingCacheSize"), jint>(); }
inline jint ViewConfiguration::getScaledOverscrollDistance() { return call_method<SCAPIX_META_STRING("getScaledOverscrollDistance"), jint>(); }
inline jint ViewConfiguration::getScaledOverflingDistance() { return call_method<SCAPIX_META_STRING("getScaledOverflingDistance"), jint>(); }
inline jlong ViewConfiguration::getZoomControlsTimeout() { return call_static_method<SCAPIX_META_STRING("getZoomControlsTimeout"), jlong>(); }
inline jlong ViewConfiguration::getGlobalActionKeyTimeout() { return call_static_method<SCAPIX_META_STRING("getGlobalActionKeyTimeout"), jlong>(); }
inline jfloat ViewConfiguration::getScrollFriction() { return call_static_method<SCAPIX_META_STRING("getScrollFriction"), jfloat>(); }
inline jlong ViewConfiguration::getDefaultActionModeHideDuration() { return call_static_method<SCAPIX_META_STRING("getDefaultActionModeHideDuration"), jlong>(); }
inline jboolean ViewConfiguration::hasPermanentMenuKey() { return call_method<SCAPIX_META_STRING("hasPermanentMenuKey"), jboolean>(); }
inline jboolean ViewConfiguration::shouldShowMenuShortcutsWhenKeyboardPresent() { return call_method<SCAPIX_META_STRING("shouldShowMenuShortcutsWhenKeyboardPresent"), jboolean>(); }

} // namespace android::view
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_VIEW_VIEWCONFIGURATION_H
