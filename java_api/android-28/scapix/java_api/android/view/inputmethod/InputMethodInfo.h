// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_ANDROID_VIEW_INPUTMETHOD_INPUTMETHODINFO_H
#define SCAPIX_ANDROID_VIEW_INPUTMETHOD_INPUTMETHODINFO_H

namespace scapix::java_api {

namespace android::content { class ComponentName; }
namespace android::content { class Context; }
namespace android::content::pm { class PackageManager; }
namespace android::content::pm { class ResolveInfo; }
namespace android::content::pm { class ServiceInfo; }
namespace android::graphics::drawable { class Drawable; }
namespace android::os { class Parcel; }
namespace android::os { class Parcelable_Creator; }
namespace android::util { class Printer; }
namespace android::view::inputmethod { class InputMethodSubtype; }
namespace java::lang { class CharSequence; }
namespace java::lang { class String; }

namespace android::view::inputmethod {

class InputMethodInfo : public object_base<SCAPIX_META_STRING("android/view/inputmethod/InputMethodInfo"),
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static ref<android::os::Parcelable_Creator> CREATOR_();

	static ref<InputMethodInfo> new_object(ref<android::content::Context> context, ref<android::content::pm::ResolveInfo> service);
	static ref<InputMethodInfo> new_object(ref<java::lang::String> packageName, ref<java::lang::String> className, ref<java::lang::CharSequence> label, ref<java::lang::String> settingsActivity);
	ref<java::lang::String> getId();
	ref<java::lang::String> getPackageName();
	ref<java::lang::String> getServiceName();
	ref<android::content::pm::ServiceInfo> getServiceInfo();
	ref<android::content::ComponentName> getComponent();
	ref<java::lang::CharSequence> loadLabel(ref<android::content::pm::PackageManager> pm);
	ref<android::graphics::drawable::Drawable> loadIcon(ref<android::content::pm::PackageManager> pm);
	ref<java::lang::String> getSettingsActivity();
	jint getSubtypeCount();
	ref<android::view::inputmethod::InputMethodSubtype> getSubtypeAt(jint index);
	jint getIsDefaultResourceId();
	void dump(ref<android::util::Printer> pw, ref<java::lang::String> prefix);
	ref<java::lang::String> toString();
	jboolean equals(ref<java::lang::Object> o);
	jint hashCode();
	void writeToParcel(ref<android::os::Parcel> dest, jint flags);
	jint describeContents();

protected:

	InputMethodInfo(handle_type h) : base_(h) {}

};

} // namespace android::view::inputmethod
} // namespace scapix::java_api

#include <scapix/java_api/android/content/ComponentName.h>
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/content/pm/PackageManager.h>
#include <scapix/java_api/android/content/pm/ResolveInfo.h>
#include <scapix/java_api/android/content/pm/ServiceInfo.h>
#include <scapix/java_api/android/graphics/drawable/Drawable.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/android/util/Printer.h>
#include <scapix/java_api/android/view/inputmethod/InputMethodSubtype.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::view::inputmethod {

inline ref<android::os::Parcelable_Creator> InputMethodInfo::CREATOR_() { return get_static_field<SCAPIX_META_STRING("CREATOR"), ref<android::os::Parcelable_Creator>>(); }
inline ref<InputMethodInfo> InputMethodInfo::new_object(ref<android::content::Context> context, ref<android::content::pm::ResolveInfo> service) { return base_::new_object(context, service); }
inline ref<InputMethodInfo> InputMethodInfo::new_object(ref<java::lang::String> packageName, ref<java::lang::String> className, ref<java::lang::CharSequence> label, ref<java::lang::String> settingsActivity) { return base_::new_object(packageName, className, label, settingsActivity); }
inline ref<java::lang::String> InputMethodInfo::getId() { return call_method<SCAPIX_META_STRING("getId"), ref<java::lang::String>>(); }
inline ref<java::lang::String> InputMethodInfo::getPackageName() { return call_method<SCAPIX_META_STRING("getPackageName"), ref<java::lang::String>>(); }
inline ref<java::lang::String> InputMethodInfo::getServiceName() { return call_method<SCAPIX_META_STRING("getServiceName"), ref<java::lang::String>>(); }
inline ref<android::content::pm::ServiceInfo> InputMethodInfo::getServiceInfo() { return call_method<SCAPIX_META_STRING("getServiceInfo"), ref<android::content::pm::ServiceInfo>>(); }
inline ref<android::content::ComponentName> InputMethodInfo::getComponent() { return call_method<SCAPIX_META_STRING("getComponent"), ref<android::content::ComponentName>>(); }
inline ref<java::lang::CharSequence> InputMethodInfo::loadLabel(ref<android::content::pm::PackageManager> pm) { return call_method<SCAPIX_META_STRING("loadLabel"), ref<java::lang::CharSequence>>(pm); }
inline ref<android::graphics::drawable::Drawable> InputMethodInfo::loadIcon(ref<android::content::pm::PackageManager> pm) { return call_method<SCAPIX_META_STRING("loadIcon"), ref<android::graphics::drawable::Drawable>>(pm); }
inline ref<java::lang::String> InputMethodInfo::getSettingsActivity() { return call_method<SCAPIX_META_STRING("getSettingsActivity"), ref<java::lang::String>>(); }
inline jint InputMethodInfo::getSubtypeCount() { return call_method<SCAPIX_META_STRING("getSubtypeCount"), jint>(); }
inline ref<android::view::inputmethod::InputMethodSubtype> InputMethodInfo::getSubtypeAt(jint index) { return call_method<SCAPIX_META_STRING("getSubtypeAt"), ref<android::view::inputmethod::InputMethodSubtype>>(index); }
inline jint InputMethodInfo::getIsDefaultResourceId() { return call_method<SCAPIX_META_STRING("getIsDefaultResourceId"), jint>(); }
inline void InputMethodInfo::dump(ref<android::util::Printer> pw, ref<java::lang::String> prefix) { return call_method<SCAPIX_META_STRING("dump"), void>(pw, prefix); }
inline ref<java::lang::String> InputMethodInfo::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }
inline jboolean InputMethodInfo::equals(ref<java::lang::Object> o) { return call_method<SCAPIX_META_STRING("equals"), jboolean>(o); }
inline jint InputMethodInfo::hashCode() { return call_method<SCAPIX_META_STRING("hashCode"), jint>(); }
inline void InputMethodInfo::writeToParcel(ref<android::os::Parcel> dest, jint flags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(dest, flags); }
inline jint InputMethodInfo::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }

} // namespace android::view::inputmethod
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_VIEW_INPUTMETHOD_INPUTMETHODINFO_H
