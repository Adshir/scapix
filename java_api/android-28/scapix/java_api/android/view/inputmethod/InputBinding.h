// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_ANDROID_VIEW_INPUTMETHOD_INPUTBINDING_H
#define SCAPIX_ANDROID_VIEW_INPUTMETHOD_INPUTBINDING_H

namespace scapix::java_api {

namespace android::os { class IBinder; }
namespace android::os { class Parcel; }
namespace android::os { class Parcelable_Creator; }
namespace android::view::inputmethod { class InputConnection; }
namespace java::lang { class String; }

namespace android::view::inputmethod {

class InputBinding : public object_base<SCAPIX_META_STRING("android/view/inputmethod/InputBinding"),
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static ref<android::os::Parcelable_Creator> CREATOR_();

	static ref<InputBinding> new_object(ref<android::view::inputmethod::InputConnection> conn, ref<android::os::IBinder> connToken, jint uid, jint pid);
	static ref<InputBinding> new_object(ref<android::view::inputmethod::InputConnection> conn, ref<android::view::inputmethod::InputBinding> binding);
	ref<android::view::inputmethod::InputConnection> getConnection();
	ref<android::os::IBinder> getConnectionToken();
	jint getUid();
	jint getPid();
	ref<java::lang::String> toString();
	void writeToParcel(ref<android::os::Parcel> dest, jint flags);
	jint describeContents();

protected:

	InputBinding(handle_type h) : base_(h) {}

};

} // namespace android::view::inputmethod
} // namespace scapix::java_api

#include <scapix/java_api/android/os/IBinder.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/android/view/inputmethod/InputConnection.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::view::inputmethod {

inline ref<android::os::Parcelable_Creator> InputBinding::CREATOR_() { return get_static_field<SCAPIX_META_STRING("CREATOR"), ref<android::os::Parcelable_Creator>>(); }
inline ref<InputBinding> InputBinding::new_object(ref<android::view::inputmethod::InputConnection> conn, ref<android::os::IBinder> connToken, jint uid, jint pid) { return base_::new_object(conn, connToken, uid, pid); }
inline ref<InputBinding> InputBinding::new_object(ref<android::view::inputmethod::InputConnection> conn, ref<android::view::inputmethod::InputBinding> binding) { return base_::new_object(conn, binding); }
inline ref<android::view::inputmethod::InputConnection> InputBinding::getConnection() { return call_method<SCAPIX_META_STRING("getConnection"), ref<android::view::inputmethod::InputConnection>>(); }
inline ref<android::os::IBinder> InputBinding::getConnectionToken() { return call_method<SCAPIX_META_STRING("getConnectionToken"), ref<android::os::IBinder>>(); }
inline jint InputBinding::getUid() { return call_method<SCAPIX_META_STRING("getUid"), jint>(); }
inline jint InputBinding::getPid() { return call_method<SCAPIX_META_STRING("getPid"), jint>(); }
inline ref<java::lang::String> InputBinding::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }
inline void InputBinding::writeToParcel(ref<android::os::Parcel> dest, jint flags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(dest, flags); }
inline jint InputBinding::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }

} // namespace android::view::inputmethod
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_VIEW_INPUTMETHOD_INPUTBINDING_H
