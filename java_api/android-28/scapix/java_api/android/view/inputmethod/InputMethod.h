// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_VIEW_INPUTMETHOD_INPUTMETHOD_H
#define SCAPIX_ANDROID_VIEW_INPUTMETHOD_INPUTMETHOD_H

namespace scapix::java_api {

namespace android::os { class IBinder; }
namespace android::os { class ResultReceiver; }
namespace android::view::inputmethod { class EditorInfo; }
namespace android::view::inputmethod { class InputBinding; }
namespace android::view::inputmethod { class InputConnection; }
namespace android::view::inputmethod { class InputMethod_SessionCallback; }
namespace android::view::inputmethod { class InputMethodSession; }
namespace android::view::inputmethod { class InputMethodSubtype; }
namespace java::lang { class String; }

namespace android::view::inputmethod {

class InputMethod : public object_base<SCAPIX_META_STRING("android/view/inputmethod/InputMethod"),
	java::lang::Object>
{
public:

	using SessionCallback = InputMethod_SessionCallback;

	static ref<java::lang::String> SERVICE_INTERFACE_();
	static ref<java::lang::String> SERVICE_META_DATA_();
	static jint SHOW_EXPLICIT_();
	static jint SHOW_FORCED_();

	void attachToken(ref<android::os::IBinder> p1);
	void bindInput(ref<android::view::inputmethod::InputBinding> p1);
	void unbindInput();
	void startInput(ref<android::view::inputmethod::InputConnection> p1, ref<android::view::inputmethod::EditorInfo> p2);
	void restartInput(ref<android::view::inputmethod::InputConnection> p1, ref<android::view::inputmethod::EditorInfo> p2);
	void createSession(ref<android::view::inputmethod::InputMethod_SessionCallback> p1);
	void setSessionEnabled(ref<android::view::inputmethod::InputMethodSession> p1, jboolean p2);
	void revokeSession(ref<android::view::inputmethod::InputMethodSession> p1);
	void showSoftInput(jint p1, ref<android::os::ResultReceiver> p2);
	void hideSoftInput(jint p1, ref<android::os::ResultReceiver> p2);
	void changeInputMethodSubtype(ref<android::view::inputmethod::InputMethodSubtype> p1);

protected:

	InputMethod(handle_type h) : base_(h) {}

};

} // namespace android::view::inputmethod
} // namespace scapix::java_api

#include <scapix/java_api/android/os/IBinder.h>
#include <scapix/java_api/android/os/ResultReceiver.h>
#include <scapix/java_api/android/view/inputmethod/EditorInfo.h>
#include <scapix/java_api/android/view/inputmethod/InputBinding.h>
#include <scapix/java_api/android/view/inputmethod/InputConnection.h>
#include <scapix/java_api/android/view/inputmethod/InputMethod_SessionCallback.h>
#include <scapix/java_api/android/view/inputmethod/InputMethodSession.h>
#include <scapix/java_api/android/view/inputmethod/InputMethodSubtype.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::view::inputmethod {

inline ref<java::lang::String> InputMethod::SERVICE_INTERFACE_() { return get_static_field<SCAPIX_META_STRING("SERVICE_INTERFACE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> InputMethod::SERVICE_META_DATA_() { return get_static_field<SCAPIX_META_STRING("SERVICE_META_DATA"), ref<java::lang::String>>(); }
inline jint InputMethod::SHOW_EXPLICIT_() { return get_static_field<SCAPIX_META_STRING("SHOW_EXPLICIT"), jint>(); }
inline jint InputMethod::SHOW_FORCED_() { return get_static_field<SCAPIX_META_STRING("SHOW_FORCED"), jint>(); }
inline void InputMethod::attachToken(ref<android::os::IBinder> p1) { return call_method<SCAPIX_META_STRING("attachToken"), void>(p1); }
inline void InputMethod::bindInput(ref<android::view::inputmethod::InputBinding> p1) { return call_method<SCAPIX_META_STRING("bindInput"), void>(p1); }
inline void InputMethod::unbindInput() { return call_method<SCAPIX_META_STRING("unbindInput"), void>(); }
inline void InputMethod::startInput(ref<android::view::inputmethod::InputConnection> p1, ref<android::view::inputmethod::EditorInfo> p2) { return call_method<SCAPIX_META_STRING("startInput"), void>(p1, p2); }
inline void InputMethod::restartInput(ref<android::view::inputmethod::InputConnection> p1, ref<android::view::inputmethod::EditorInfo> p2) { return call_method<SCAPIX_META_STRING("restartInput"), void>(p1, p2); }
inline void InputMethod::createSession(ref<android::view::inputmethod::InputMethod_SessionCallback> p1) { return call_method<SCAPIX_META_STRING("createSession"), void>(p1); }
inline void InputMethod::setSessionEnabled(ref<android::view::inputmethod::InputMethodSession> p1, jboolean p2) { return call_method<SCAPIX_META_STRING("setSessionEnabled"), void>(p1, p2); }
inline void InputMethod::revokeSession(ref<android::view::inputmethod::InputMethodSession> p1) { return call_method<SCAPIX_META_STRING("revokeSession"), void>(p1); }
inline void InputMethod::showSoftInput(jint p1, ref<android::os::ResultReceiver> p2) { return call_method<SCAPIX_META_STRING("showSoftInput"), void>(p1, p2); }
inline void InputMethod::hideSoftInput(jint p1, ref<android::os::ResultReceiver> p2) { return call_method<SCAPIX_META_STRING("hideSoftInput"), void>(p1, p2); }
inline void InputMethod::changeInputMethodSubtype(ref<android::view::inputmethod::InputMethodSubtype> p1) { return call_method<SCAPIX_META_STRING("changeInputMethodSubtype"), void>(p1); }

} // namespace android::view::inputmethod
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_VIEW_INPUTMETHOD_INPUTMETHOD_H
