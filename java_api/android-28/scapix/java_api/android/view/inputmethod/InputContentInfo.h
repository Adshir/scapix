// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_ANDROID_VIEW_INPUTMETHOD_INPUTCONTENTINFO_H
#define SCAPIX_ANDROID_VIEW_INPUTMETHOD_INPUTCONTENTINFO_H

namespace scapix::java_api {

namespace android::content { class ClipDescription; }
namespace android::net { class Uri; }
namespace android::os { class Parcel; }
namespace android::os { class Parcelable_Creator; }

namespace android::view::inputmethod {

class InputContentInfo : public object_base<SCAPIX_META_STRING("android/view/inputmethod/InputContentInfo"),
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static ref<android::os::Parcelable_Creator> CREATOR_();

	static ref<InputContentInfo> new_object(ref<android::net::Uri> contentUri, ref<android::content::ClipDescription> description);
	static ref<InputContentInfo> new_object(ref<android::net::Uri> contentUri, ref<android::content::ClipDescription> description, ref<android::net::Uri> linkUri);
	ref<android::net::Uri> getContentUri();
	ref<android::content::ClipDescription> getDescription();
	ref<android::net::Uri> getLinkUri();
	void requestPermission();
	void releasePermission();
	void writeToParcel(ref<android::os::Parcel> dest, jint flags);
	jint describeContents();

protected:

	InputContentInfo(handle_type h) : base_(h) {}

};

} // namespace android::view::inputmethod
} // namespace scapix::java_api

#include <scapix/java_api/android/content/ClipDescription.h>
#include <scapix/java_api/android/net/Uri.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>

namespace scapix::java_api {
namespace android::view::inputmethod {

inline ref<android::os::Parcelable_Creator> InputContentInfo::CREATOR_() { return get_static_field<SCAPIX_META_STRING("CREATOR"), ref<android::os::Parcelable_Creator>>(); }
inline ref<InputContentInfo> InputContentInfo::new_object(ref<android::net::Uri> contentUri, ref<android::content::ClipDescription> description) { return base_::new_object(contentUri, description); }
inline ref<InputContentInfo> InputContentInfo::new_object(ref<android::net::Uri> contentUri, ref<android::content::ClipDescription> description, ref<android::net::Uri> linkUri) { return base_::new_object(contentUri, description, linkUri); }
inline ref<android::net::Uri> InputContentInfo::getContentUri() { return call_method<SCAPIX_META_STRING("getContentUri"), ref<android::net::Uri>>(); }
inline ref<android::content::ClipDescription> InputContentInfo::getDescription() { return call_method<SCAPIX_META_STRING("getDescription"), ref<android::content::ClipDescription>>(); }
inline ref<android::net::Uri> InputContentInfo::getLinkUri() { return call_method<SCAPIX_META_STRING("getLinkUri"), ref<android::net::Uri>>(); }
inline void InputContentInfo::requestPermission() { return call_method<SCAPIX_META_STRING("requestPermission"), void>(); }
inline void InputContentInfo::releasePermission() { return call_method<SCAPIX_META_STRING("releasePermission"), void>(); }
inline void InputContentInfo::writeToParcel(ref<android::os::Parcel> dest, jint flags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(dest, flags); }
inline jint InputContentInfo::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }

} // namespace android::view::inputmethod
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_VIEW_INPUTMETHOD_INPUTCONTENTINFO_H
