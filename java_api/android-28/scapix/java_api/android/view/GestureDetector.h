// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_VIEW_GESTUREDETECTOR_H
#define SCAPIX_ANDROID_VIEW_GESTUREDETECTOR_H

namespace scapix::java_api {

namespace android::content { class Context; }
namespace android::os { class Handler; }
namespace android::view { class GestureDetector_OnContextClickListener; }
namespace android::view { class GestureDetector_OnDoubleTapListener; }
namespace android::view { class GestureDetector_OnGestureListener; }
namespace android::view { class MotionEvent; }
namespace android::view { class GestureDetector_SimpleOnGestureListener; }

namespace android::view {

class GestureDetector : public object_base<SCAPIX_META_STRING("android/view/GestureDetector"),
	java::lang::Object>
{
public:

	using SimpleOnGestureListener = GestureDetector_SimpleOnGestureListener;
	using OnGestureListener = GestureDetector_OnGestureListener;
	using OnDoubleTapListener = GestureDetector_OnDoubleTapListener;
	using OnContextClickListener = GestureDetector_OnContextClickListener;

	static ref<GestureDetector> new_object(ref<android::view::GestureDetector_OnGestureListener> listener, ref<android::os::Handler> handler);
	static ref<GestureDetector> new_object(ref<android::view::GestureDetector_OnGestureListener> listener);
	static ref<GestureDetector> new_object(ref<android::content::Context> context, ref<android::view::GestureDetector_OnGestureListener> listener);
	static ref<GestureDetector> new_object(ref<android::content::Context> context, ref<android::view::GestureDetector_OnGestureListener> listener, ref<android::os::Handler> handler);
	static ref<GestureDetector> new_object(ref<android::content::Context> context, ref<android::view::GestureDetector_OnGestureListener> listener, ref<android::os::Handler> handler, jboolean unused);
	void setOnDoubleTapListener(ref<android::view::GestureDetector_OnDoubleTapListener> onDoubleTapListener);
	void setContextClickListener(ref<android::view::GestureDetector_OnContextClickListener> onContextClickListener);
	void setIsLongpressEnabled(jboolean isLongpressEnabled);
	jboolean isLongpressEnabled();
	jboolean onTouchEvent(ref<android::view::MotionEvent> ev);
	jboolean onGenericMotionEvent(ref<android::view::MotionEvent> ev);

protected:

	GestureDetector(handle_type h) : base_(h) {}

};

} // namespace android::view
} // namespace scapix::java_api

#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/os/Handler.h>
#include <scapix/java_api/android/view/GestureDetector_OnContextClickListener.h>
#include <scapix/java_api/android/view/GestureDetector_OnDoubleTapListener.h>
#include <scapix/java_api/android/view/GestureDetector_OnGestureListener.h>
#include <scapix/java_api/android/view/MotionEvent.h>

namespace scapix::java_api {
namespace android::view {

inline ref<GestureDetector> GestureDetector::new_object(ref<android::view::GestureDetector_OnGestureListener> listener, ref<android::os::Handler> handler) { return base_::new_object(listener, handler); }
inline ref<GestureDetector> GestureDetector::new_object(ref<android::view::GestureDetector_OnGestureListener> listener) { return base_::new_object(listener); }
inline ref<GestureDetector> GestureDetector::new_object(ref<android::content::Context> context, ref<android::view::GestureDetector_OnGestureListener> listener) { return base_::new_object(context, listener); }
inline ref<GestureDetector> GestureDetector::new_object(ref<android::content::Context> context, ref<android::view::GestureDetector_OnGestureListener> listener, ref<android::os::Handler> handler) { return base_::new_object(context, listener, handler); }
inline ref<GestureDetector> GestureDetector::new_object(ref<android::content::Context> context, ref<android::view::GestureDetector_OnGestureListener> listener, ref<android::os::Handler> handler, jboolean unused) { return base_::new_object(context, listener, handler, unused); }
inline void GestureDetector::setOnDoubleTapListener(ref<android::view::GestureDetector_OnDoubleTapListener> onDoubleTapListener) { return call_method<SCAPIX_META_STRING("setOnDoubleTapListener"), void>(onDoubleTapListener); }
inline void GestureDetector::setContextClickListener(ref<android::view::GestureDetector_OnContextClickListener> onContextClickListener) { return call_method<SCAPIX_META_STRING("setContextClickListener"), void>(onContextClickListener); }
inline void GestureDetector::setIsLongpressEnabled(jboolean isLongpressEnabled) { return call_method<SCAPIX_META_STRING("setIsLongpressEnabled"), void>(isLongpressEnabled); }
inline jboolean GestureDetector::isLongpressEnabled() { return call_method<SCAPIX_META_STRING("isLongpressEnabled"), jboolean>(); }
inline jboolean GestureDetector::onTouchEvent(ref<android::view::MotionEvent> ev) { return call_method<SCAPIX_META_STRING("onTouchEvent"), jboolean>(ev); }
inline jboolean GestureDetector::onGenericMotionEvent(ref<android::view::MotionEvent> ev) { return call_method<SCAPIX_META_STRING("onGenericMotionEvent"), jboolean>(ev); }

} // namespace android::view
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_VIEW_GESTUREDETECTOR_H
