// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_VIEW_VELOCITYTRACKER_H
#define SCAPIX_ANDROID_VIEW_VELOCITYTRACKER_H

namespace scapix::java_api {

namespace android::view { class MotionEvent; }

namespace android::view {

class VelocityTracker : public object_base<SCAPIX_META_STRING("android/view/VelocityTracker"),
	java::lang::Object>
{
public:

	static ref<android::view::VelocityTracker> obtain();
	void recycle();
	void clear();
	void addMovement(ref<android::view::MotionEvent> event);
	void computeCurrentVelocity(jint units);
	void computeCurrentVelocity(jint units, jfloat maxVelocity);
	jfloat getXVelocity();
	jfloat getYVelocity();
	jfloat getXVelocity(jint id);
	jfloat getYVelocity(jint id);

protected:

	VelocityTracker(handle_type h) : base_(h) {}

};

} // namespace android::view
} // namespace scapix::java_api

#include <scapix/java_api/android/view/MotionEvent.h>

namespace scapix::java_api {
namespace android::view {

inline ref<android::view::VelocityTracker> VelocityTracker::obtain() { return call_static_method<SCAPIX_META_STRING("obtain"), ref<android::view::VelocityTracker>>(); }
inline void VelocityTracker::recycle() { return call_method<SCAPIX_META_STRING("recycle"), void>(); }
inline void VelocityTracker::clear() { return call_method<SCAPIX_META_STRING("clear"), void>(); }
inline void VelocityTracker::addMovement(ref<android::view::MotionEvent> event) { return call_method<SCAPIX_META_STRING("addMovement"), void>(event); }
inline void VelocityTracker::computeCurrentVelocity(jint units) { return call_method<SCAPIX_META_STRING("computeCurrentVelocity"), void>(units); }
inline void VelocityTracker::computeCurrentVelocity(jint units, jfloat maxVelocity) { return call_method<SCAPIX_META_STRING("computeCurrentVelocity"), void>(units, maxVelocity); }
inline jfloat VelocityTracker::getXVelocity() { return call_method<SCAPIX_META_STRING("getXVelocity"), jfloat>(); }
inline jfloat VelocityTracker::getYVelocity() { return call_method<SCAPIX_META_STRING("getYVelocity"), jfloat>(); }
inline jfloat VelocityTracker::getXVelocity(jint id) { return call_method<SCAPIX_META_STRING("getXVelocity"), jfloat>(id); }
inline jfloat VelocityTracker::getYVelocity(jint id) { return call_method<SCAPIX_META_STRING("getYVelocity"), jfloat>(id); }

} // namespace android::view
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_VIEW_VELOCITYTRACKER_H
