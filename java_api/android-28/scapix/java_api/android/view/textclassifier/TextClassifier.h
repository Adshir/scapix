// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_VIEW_TEXTCLASSIFIER_TEXTCLASSIFIER_H
#define SCAPIX_ANDROID_VIEW_TEXTCLASSIFIER_TEXTCLASSIFIER_H

namespace scapix::java_api {

namespace android::os { class LocaleList; }
namespace android::view::textclassifier { class SelectionEvent; }
namespace android::view::textclassifier { class TextClassification; }
namespace android::view::textclassifier { class TextClassification_Request; }
namespace android::view::textclassifier { class TextLinks; }
namespace android::view::textclassifier { class TextLinks_Request; }
namespace android::view::textclassifier { class TextSelection; }
namespace android::view::textclassifier { class TextSelection_Request; }
namespace java::lang { class CharSequence; }
namespace java::lang { class String; }
namespace android::view::textclassifier { class TextClassifier_EntityConfig; }

namespace android::view::textclassifier {

class TextClassifier : public object_base<SCAPIX_META_STRING("android/view/textclassifier/TextClassifier"),
	java::lang::Object>
{
public:

	using EntityConfig = TextClassifier_EntityConfig;

	static ref<java::lang::String> HINT_TEXT_IS_EDITABLE_();
	static ref<java::lang::String> HINT_TEXT_IS_NOT_EDITABLE_();
	static ref<android::view::textclassifier::TextClassifier> NO_OP_();
	static ref<java::lang::String> TYPE_ADDRESS_();
	static ref<java::lang::String> TYPE_DATE_();
	static ref<java::lang::String> TYPE_DATE_TIME_();
	static ref<java::lang::String> TYPE_EMAIL_();
	static ref<java::lang::String> TYPE_FLIGHT_NUMBER_();
	static ref<java::lang::String> TYPE_OTHER_();
	static ref<java::lang::String> TYPE_PHONE_();
	static ref<java::lang::String> TYPE_UNKNOWN_();
	static ref<java::lang::String> TYPE_URL_();
	static ref<java::lang::String> WIDGET_TYPE_CUSTOM_EDITTEXT_();
	static ref<java::lang::String> WIDGET_TYPE_CUSTOM_TEXTVIEW_();
	static ref<java::lang::String> WIDGET_TYPE_CUSTOM_UNSELECTABLE_TEXTVIEW_();
	static ref<java::lang::String> WIDGET_TYPE_EDITTEXT_();
	static ref<java::lang::String> WIDGET_TYPE_EDIT_WEBVIEW_();
	static ref<java::lang::String> WIDGET_TYPE_TEXTVIEW_();
	static ref<java::lang::String> WIDGET_TYPE_UNKNOWN_();
	static ref<java::lang::String> WIDGET_TYPE_UNSELECTABLE_TEXTVIEW_();
	static ref<java::lang::String> WIDGET_TYPE_WEBVIEW_();

	ref<android::view::textclassifier::TextSelection> suggestSelection(ref<android::view::textclassifier::TextSelection_Request> request);
	ref<android::view::textclassifier::TextSelection> suggestSelection(ref<java::lang::CharSequence> text, jint selectionStartIndex, jint selectionEndIndex, ref<android::os::LocaleList> defaultLocales);
	ref<android::view::textclassifier::TextClassification> classifyText(ref<android::view::textclassifier::TextClassification_Request> request);
	ref<android::view::textclassifier::TextClassification> classifyText(ref<java::lang::CharSequence> text, jint startIndex, jint endIndex, ref<android::os::LocaleList> defaultLocales);
	ref<android::view::textclassifier::TextLinks> generateLinks(ref<android::view::textclassifier::TextLinks_Request> request);
	jint getMaxGenerateLinksTextLength();
	void onSelectionEvent(ref<android::view::textclassifier::SelectionEvent> event);
	void destroy();
	jboolean isDestroyed();

protected:

	TextClassifier(handle_type h) : base_(h) {}

};

} // namespace android::view::textclassifier
} // namespace scapix::java_api

#include <scapix/java_api/android/os/LocaleList.h>
#include <scapix/java_api/android/view/textclassifier/SelectionEvent.h>
#include <scapix/java_api/android/view/textclassifier/TextClassification.h>
#include <scapix/java_api/android/view/textclassifier/TextClassification_Request.h>
#include <scapix/java_api/android/view/textclassifier/TextLinks.h>
#include <scapix/java_api/android/view/textclassifier/TextLinks_Request.h>
#include <scapix/java_api/android/view/textclassifier/TextSelection.h>
#include <scapix/java_api/android/view/textclassifier/TextSelection_Request.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::view::textclassifier {

inline ref<java::lang::String> TextClassifier::HINT_TEXT_IS_EDITABLE_() { return get_static_field<SCAPIX_META_STRING("HINT_TEXT_IS_EDITABLE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TextClassifier::HINT_TEXT_IS_NOT_EDITABLE_() { return get_static_field<SCAPIX_META_STRING("HINT_TEXT_IS_NOT_EDITABLE"), ref<java::lang::String>>(); }
inline ref<android::view::textclassifier::TextClassifier> TextClassifier::NO_OP_() { return get_static_field<SCAPIX_META_STRING("NO_OP"), ref<android::view::textclassifier::TextClassifier>>(); }
inline ref<java::lang::String> TextClassifier::TYPE_ADDRESS_() { return get_static_field<SCAPIX_META_STRING("TYPE_ADDRESS"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TextClassifier::TYPE_DATE_() { return get_static_field<SCAPIX_META_STRING("TYPE_DATE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TextClassifier::TYPE_DATE_TIME_() { return get_static_field<SCAPIX_META_STRING("TYPE_DATE_TIME"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TextClassifier::TYPE_EMAIL_() { return get_static_field<SCAPIX_META_STRING("TYPE_EMAIL"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TextClassifier::TYPE_FLIGHT_NUMBER_() { return get_static_field<SCAPIX_META_STRING("TYPE_FLIGHT_NUMBER"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TextClassifier::TYPE_OTHER_() { return get_static_field<SCAPIX_META_STRING("TYPE_OTHER"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TextClassifier::TYPE_PHONE_() { return get_static_field<SCAPIX_META_STRING("TYPE_PHONE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TextClassifier::TYPE_UNKNOWN_() { return get_static_field<SCAPIX_META_STRING("TYPE_UNKNOWN"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TextClassifier::TYPE_URL_() { return get_static_field<SCAPIX_META_STRING("TYPE_URL"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TextClassifier::WIDGET_TYPE_CUSTOM_EDITTEXT_() { return get_static_field<SCAPIX_META_STRING("WIDGET_TYPE_CUSTOM_EDITTEXT"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TextClassifier::WIDGET_TYPE_CUSTOM_TEXTVIEW_() { return get_static_field<SCAPIX_META_STRING("WIDGET_TYPE_CUSTOM_TEXTVIEW"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TextClassifier::WIDGET_TYPE_CUSTOM_UNSELECTABLE_TEXTVIEW_() { return get_static_field<SCAPIX_META_STRING("WIDGET_TYPE_CUSTOM_UNSELECTABLE_TEXTVIEW"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TextClassifier::WIDGET_TYPE_EDITTEXT_() { return get_static_field<SCAPIX_META_STRING("WIDGET_TYPE_EDITTEXT"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TextClassifier::WIDGET_TYPE_EDIT_WEBVIEW_() { return get_static_field<SCAPIX_META_STRING("WIDGET_TYPE_EDIT_WEBVIEW"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TextClassifier::WIDGET_TYPE_TEXTVIEW_() { return get_static_field<SCAPIX_META_STRING("WIDGET_TYPE_TEXTVIEW"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TextClassifier::WIDGET_TYPE_UNKNOWN_() { return get_static_field<SCAPIX_META_STRING("WIDGET_TYPE_UNKNOWN"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TextClassifier::WIDGET_TYPE_UNSELECTABLE_TEXTVIEW_() { return get_static_field<SCAPIX_META_STRING("WIDGET_TYPE_UNSELECTABLE_TEXTVIEW"), ref<java::lang::String>>(); }
inline ref<java::lang::String> TextClassifier::WIDGET_TYPE_WEBVIEW_() { return get_static_field<SCAPIX_META_STRING("WIDGET_TYPE_WEBVIEW"), ref<java::lang::String>>(); }
inline ref<android::view::textclassifier::TextSelection> TextClassifier::suggestSelection(ref<android::view::textclassifier::TextSelection_Request> request) { return call_method<SCAPIX_META_STRING("suggestSelection"), ref<android::view::textclassifier::TextSelection>>(request); }
inline ref<android::view::textclassifier::TextSelection> TextClassifier::suggestSelection(ref<java::lang::CharSequence> text, jint selectionStartIndex, jint selectionEndIndex, ref<android::os::LocaleList> defaultLocales) { return call_method<SCAPIX_META_STRING("suggestSelection"), ref<android::view::textclassifier::TextSelection>>(text, selectionStartIndex, selectionEndIndex, defaultLocales); }
inline ref<android::view::textclassifier::TextClassification> TextClassifier::classifyText(ref<android::view::textclassifier::TextClassification_Request> request) { return call_method<SCAPIX_META_STRING("classifyText"), ref<android::view::textclassifier::TextClassification>>(request); }
inline ref<android::view::textclassifier::TextClassification> TextClassifier::classifyText(ref<java::lang::CharSequence> text, jint startIndex, jint endIndex, ref<android::os::LocaleList> defaultLocales) { return call_method<SCAPIX_META_STRING("classifyText"), ref<android::view::textclassifier::TextClassification>>(text, startIndex, endIndex, defaultLocales); }
inline ref<android::view::textclassifier::TextLinks> TextClassifier::generateLinks(ref<android::view::textclassifier::TextLinks_Request> request) { return call_method<SCAPIX_META_STRING("generateLinks"), ref<android::view::textclassifier::TextLinks>>(request); }
inline jint TextClassifier::getMaxGenerateLinksTextLength() { return call_method<SCAPIX_META_STRING("getMaxGenerateLinksTextLength"), jint>(); }
inline void TextClassifier::onSelectionEvent(ref<android::view::textclassifier::SelectionEvent> event) { return call_method<SCAPIX_META_STRING("onSelectionEvent"), void>(event); }
inline void TextClassifier::destroy() { return call_method<SCAPIX_META_STRING("destroy"), void>(); }
inline jboolean TextClassifier::isDestroyed() { return call_method<SCAPIX_META_STRING("isDestroyed"), jboolean>(); }

} // namespace android::view::textclassifier
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_VIEW_TEXTCLASSIFIER_TEXTCLASSIFIER_H
