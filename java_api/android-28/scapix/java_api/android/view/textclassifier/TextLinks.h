// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_ANDROID_VIEW_TEXTCLASSIFIER_TEXTLINKS_H
#define SCAPIX_ANDROID_VIEW_TEXTCLASSIFIER_TEXTLINKS_H

namespace scapix::java_api {

namespace android::os { class Parcel; }
namespace android::os { class Parcelable_Creator; }
namespace android::text { class Spannable; }
namespace java::lang { class String; }
namespace java::util { class Collection; }
namespace java::util::function { class Function; }
namespace android::view::textclassifier { class TextLinks_TextLinkSpan; }
namespace android::view::textclassifier { class TextLinks_TextLink; }
namespace android::view::textclassifier { class TextLinks_Request; }
namespace android::view::textclassifier { class TextLinks_Builder; }

namespace android::view::textclassifier {

class TextLinks : public object_base<SCAPIX_META_STRING("android/view/textclassifier/TextLinks"),
	java::lang::Object,
	android::os::Parcelable>
{
public:

	using TextLinkSpan = TextLinks_TextLinkSpan;
	using TextLink = TextLinks_TextLink;
	using Request = TextLinks_Request;
	using Builder = TextLinks_Builder;

	static jint APPLY_STRATEGY_IGNORE_();
	static jint APPLY_STRATEGY_REPLACE_();
	static ref<android::os::Parcelable_Creator> CREATOR_();
	static jint STATUS_DIFFERENT_TEXT_();
	static jint STATUS_LINKS_APPLIED_();
	static jint STATUS_NO_LINKS_APPLIED_();
	static jint STATUS_NO_LINKS_FOUND_();

	ref<java::util::Collection> getLinks();
	jint apply(ref<android::text::Spannable> text, jint applyStrategy, ref<java::util::function::Function> spanFactory);
	ref<java::lang::String> toString();
	jint describeContents();
	void writeToParcel(ref<android::os::Parcel> dest, jint flags);

protected:

	TextLinks(handle_type h) : base_(h) {}

};

} // namespace android::view::textclassifier
} // namespace scapix::java_api

#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/android/text/Spannable.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Collection.h>
#include <scapix/java_api/java/util/function/Function.h>

namespace scapix::java_api {
namespace android::view::textclassifier {

inline jint TextLinks::APPLY_STRATEGY_IGNORE_() { return get_static_field<SCAPIX_META_STRING("APPLY_STRATEGY_IGNORE"), jint>(); }
inline jint TextLinks::APPLY_STRATEGY_REPLACE_() { return get_static_field<SCAPIX_META_STRING("APPLY_STRATEGY_REPLACE"), jint>(); }
inline ref<android::os::Parcelable_Creator> TextLinks::CREATOR_() { return get_static_field<SCAPIX_META_STRING("CREATOR"), ref<android::os::Parcelable_Creator>>(); }
inline jint TextLinks::STATUS_DIFFERENT_TEXT_() { return get_static_field<SCAPIX_META_STRING("STATUS_DIFFERENT_TEXT"), jint>(); }
inline jint TextLinks::STATUS_LINKS_APPLIED_() { return get_static_field<SCAPIX_META_STRING("STATUS_LINKS_APPLIED"), jint>(); }
inline jint TextLinks::STATUS_NO_LINKS_APPLIED_() { return get_static_field<SCAPIX_META_STRING("STATUS_NO_LINKS_APPLIED"), jint>(); }
inline jint TextLinks::STATUS_NO_LINKS_FOUND_() { return get_static_field<SCAPIX_META_STRING("STATUS_NO_LINKS_FOUND"), jint>(); }
inline ref<java::util::Collection> TextLinks::getLinks() { return call_method<SCAPIX_META_STRING("getLinks"), ref<java::util::Collection>>(); }
inline jint TextLinks::apply(ref<android::text::Spannable> text, jint applyStrategy, ref<java::util::function::Function> spanFactory) { return call_method<SCAPIX_META_STRING("apply"), jint>(text, applyStrategy, spanFactory); }
inline ref<java::lang::String> TextLinks::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }
inline jint TextLinks::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }
inline void TextLinks::writeToParcel(ref<android::os::Parcel> dest, jint flags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(dest, flags); }

} // namespace android::view::textclassifier
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_VIEW_TEXTCLASSIFIER_TEXTLINKS_H
