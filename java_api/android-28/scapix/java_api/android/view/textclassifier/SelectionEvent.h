// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_ANDROID_VIEW_TEXTCLASSIFIER_SELECTIONEVENT_H
#define SCAPIX_ANDROID_VIEW_TEXTCLASSIFIER_SELECTIONEVENT_H

namespace scapix::java_api {

namespace android::os { class Parcel; }
namespace android::os { class Parcelable_Creator; }
namespace android::view::textclassifier { class TextClassification; }
namespace android::view::textclassifier { class TextClassificationSessionId; }
namespace android::view::textclassifier { class TextSelection; }
namespace java::lang { class String; }

namespace android::view::textclassifier {

class SelectionEvent : public object_base<SCAPIX_META_STRING("android/view/textclassifier/SelectionEvent"),
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static jint ACTION_ABANDON_();
	static jint ACTION_COPY_();
	static jint ACTION_CUT_();
	static jint ACTION_DRAG_();
	static jint ACTION_OTHER_();
	static jint ACTION_OVERTYPE_();
	static jint ACTION_PASTE_();
	static jint ACTION_RESET_();
	static jint ACTION_SELECT_ALL_();
	static jint ACTION_SHARE_();
	static jint ACTION_SMART_SHARE_();
	static ref<android::os::Parcelable_Creator> CREATOR_();
	static jint EVENT_AUTO_SELECTION_();
	static jint EVENT_SELECTION_MODIFIED_();
	static jint EVENT_SELECTION_STARTED_();
	static jint EVENT_SMART_SELECTION_MULTI_();
	static jint EVENT_SMART_SELECTION_SINGLE_();
	static jint INVOCATION_LINK_();
	static jint INVOCATION_MANUAL_();
	static jint INVOCATION_UNKNOWN_();

	void writeToParcel(ref<android::os::Parcel> dest, jint flags);
	jint describeContents();
	static ref<android::view::textclassifier::SelectionEvent> createSelectionStartedEvent(jint invocationMethod, jint start);
	static ref<android::view::textclassifier::SelectionEvent> createSelectionModifiedEvent(jint start, jint end);
	static ref<android::view::textclassifier::SelectionEvent> createSelectionModifiedEvent(jint start, jint end, ref<android::view::textclassifier::TextClassification> classification);
	static ref<android::view::textclassifier::SelectionEvent> createSelectionModifiedEvent(jint start, jint end, ref<android::view::textclassifier::TextSelection> selection);
	static ref<android::view::textclassifier::SelectionEvent> createSelectionActionEvent(jint start, jint end, jint actionType);
	static ref<android::view::textclassifier::SelectionEvent> createSelectionActionEvent(jint start, jint end, jint actionType, ref<android::view::textclassifier::TextClassification> classification);
	jint getEventType();
	ref<java::lang::String> getEntityType();
	ref<java::lang::String> getPackageName();
	ref<java::lang::String> getWidgetType();
	ref<java::lang::String> getWidgetVersion();
	jint getInvocationMethod();
	ref<java::lang::String> getResultId();
	jlong getEventTime();
	jlong getDurationSinceSessionStart();
	jlong getDurationSincePreviousEvent();
	jint getEventIndex();
	ref<android::view::textclassifier::TextClassificationSessionId> getSessionId();
	jint getStart();
	jint getEnd();
	jint getSmartStart();
	jint getSmartEnd();
	static jboolean isTerminal(jint eventType);
	jint hashCode();
	jboolean equals(ref<java::lang::Object> obj);
	ref<java::lang::String> toString();

protected:

	SelectionEvent(handle_type h) : base_(h) {}

};

} // namespace android::view::textclassifier
} // namespace scapix::java_api

#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/android/view/textclassifier/TextClassification.h>
#include <scapix/java_api/android/view/textclassifier/TextClassificationSessionId.h>
#include <scapix/java_api/android/view/textclassifier/TextSelection.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::view::textclassifier {

inline jint SelectionEvent::ACTION_ABANDON_() { return get_static_field<SCAPIX_META_STRING("ACTION_ABANDON"), jint>(); }
inline jint SelectionEvent::ACTION_COPY_() { return get_static_field<SCAPIX_META_STRING("ACTION_COPY"), jint>(); }
inline jint SelectionEvent::ACTION_CUT_() { return get_static_field<SCAPIX_META_STRING("ACTION_CUT"), jint>(); }
inline jint SelectionEvent::ACTION_DRAG_() { return get_static_field<SCAPIX_META_STRING("ACTION_DRAG"), jint>(); }
inline jint SelectionEvent::ACTION_OTHER_() { return get_static_field<SCAPIX_META_STRING("ACTION_OTHER"), jint>(); }
inline jint SelectionEvent::ACTION_OVERTYPE_() { return get_static_field<SCAPIX_META_STRING("ACTION_OVERTYPE"), jint>(); }
inline jint SelectionEvent::ACTION_PASTE_() { return get_static_field<SCAPIX_META_STRING("ACTION_PASTE"), jint>(); }
inline jint SelectionEvent::ACTION_RESET_() { return get_static_field<SCAPIX_META_STRING("ACTION_RESET"), jint>(); }
inline jint SelectionEvent::ACTION_SELECT_ALL_() { return get_static_field<SCAPIX_META_STRING("ACTION_SELECT_ALL"), jint>(); }
inline jint SelectionEvent::ACTION_SHARE_() { return get_static_field<SCAPIX_META_STRING("ACTION_SHARE"), jint>(); }
inline jint SelectionEvent::ACTION_SMART_SHARE_() { return get_static_field<SCAPIX_META_STRING("ACTION_SMART_SHARE"), jint>(); }
inline ref<android::os::Parcelable_Creator> SelectionEvent::CREATOR_() { return get_static_field<SCAPIX_META_STRING("CREATOR"), ref<android::os::Parcelable_Creator>>(); }
inline jint SelectionEvent::EVENT_AUTO_SELECTION_() { return get_static_field<SCAPIX_META_STRING("EVENT_AUTO_SELECTION"), jint>(); }
inline jint SelectionEvent::EVENT_SELECTION_MODIFIED_() { return get_static_field<SCAPIX_META_STRING("EVENT_SELECTION_MODIFIED"), jint>(); }
inline jint SelectionEvent::EVENT_SELECTION_STARTED_() { return get_static_field<SCAPIX_META_STRING("EVENT_SELECTION_STARTED"), jint>(); }
inline jint SelectionEvent::EVENT_SMART_SELECTION_MULTI_() { return get_static_field<SCAPIX_META_STRING("EVENT_SMART_SELECTION_MULTI"), jint>(); }
inline jint SelectionEvent::EVENT_SMART_SELECTION_SINGLE_() { return get_static_field<SCAPIX_META_STRING("EVENT_SMART_SELECTION_SINGLE"), jint>(); }
inline jint SelectionEvent::INVOCATION_LINK_() { return get_static_field<SCAPIX_META_STRING("INVOCATION_LINK"), jint>(); }
inline jint SelectionEvent::INVOCATION_MANUAL_() { return get_static_field<SCAPIX_META_STRING("INVOCATION_MANUAL"), jint>(); }
inline jint SelectionEvent::INVOCATION_UNKNOWN_() { return get_static_field<SCAPIX_META_STRING("INVOCATION_UNKNOWN"), jint>(); }
inline void SelectionEvent::writeToParcel(ref<android::os::Parcel> dest, jint flags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(dest, flags); }
inline jint SelectionEvent::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }
inline ref<android::view::textclassifier::SelectionEvent> SelectionEvent::createSelectionStartedEvent(jint invocationMethod, jint start) { return call_static_method<SCAPIX_META_STRING("createSelectionStartedEvent"), ref<android::view::textclassifier::SelectionEvent>>(invocationMethod, start); }
inline ref<android::view::textclassifier::SelectionEvent> SelectionEvent::createSelectionModifiedEvent(jint start, jint end) { return call_static_method<SCAPIX_META_STRING("createSelectionModifiedEvent"), ref<android::view::textclassifier::SelectionEvent>>(start, end); }
inline ref<android::view::textclassifier::SelectionEvent> SelectionEvent::createSelectionModifiedEvent(jint start, jint end, ref<android::view::textclassifier::TextClassification> classification) { return call_static_method<SCAPIX_META_STRING("createSelectionModifiedEvent"), ref<android::view::textclassifier::SelectionEvent>>(start, end, classification); }
inline ref<android::view::textclassifier::SelectionEvent> SelectionEvent::createSelectionModifiedEvent(jint start, jint end, ref<android::view::textclassifier::TextSelection> selection) { return call_static_method<SCAPIX_META_STRING("createSelectionModifiedEvent"), ref<android::view::textclassifier::SelectionEvent>>(start, end, selection); }
inline ref<android::view::textclassifier::SelectionEvent> SelectionEvent::createSelectionActionEvent(jint start, jint end, jint actionType) { return call_static_method<SCAPIX_META_STRING("createSelectionActionEvent"), ref<android::view::textclassifier::SelectionEvent>>(start, end, actionType); }
inline ref<android::view::textclassifier::SelectionEvent> SelectionEvent::createSelectionActionEvent(jint start, jint end, jint actionType, ref<android::view::textclassifier::TextClassification> classification) { return call_static_method<SCAPIX_META_STRING("createSelectionActionEvent"), ref<android::view::textclassifier::SelectionEvent>>(start, end, actionType, classification); }
inline jint SelectionEvent::getEventType() { return call_method<SCAPIX_META_STRING("getEventType"), jint>(); }
inline ref<java::lang::String> SelectionEvent::getEntityType() { return call_method<SCAPIX_META_STRING("getEntityType"), ref<java::lang::String>>(); }
inline ref<java::lang::String> SelectionEvent::getPackageName() { return call_method<SCAPIX_META_STRING("getPackageName"), ref<java::lang::String>>(); }
inline ref<java::lang::String> SelectionEvent::getWidgetType() { return call_method<SCAPIX_META_STRING("getWidgetType"), ref<java::lang::String>>(); }
inline ref<java::lang::String> SelectionEvent::getWidgetVersion() { return call_method<SCAPIX_META_STRING("getWidgetVersion"), ref<java::lang::String>>(); }
inline jint SelectionEvent::getInvocationMethod() { return call_method<SCAPIX_META_STRING("getInvocationMethod"), jint>(); }
inline ref<java::lang::String> SelectionEvent::getResultId() { return call_method<SCAPIX_META_STRING("getResultId"), ref<java::lang::String>>(); }
inline jlong SelectionEvent::getEventTime() { return call_method<SCAPIX_META_STRING("getEventTime"), jlong>(); }
inline jlong SelectionEvent::getDurationSinceSessionStart() { return call_method<SCAPIX_META_STRING("getDurationSinceSessionStart"), jlong>(); }
inline jlong SelectionEvent::getDurationSincePreviousEvent() { return call_method<SCAPIX_META_STRING("getDurationSincePreviousEvent"), jlong>(); }
inline jint SelectionEvent::getEventIndex() { return call_method<SCAPIX_META_STRING("getEventIndex"), jint>(); }
inline ref<android::view::textclassifier::TextClassificationSessionId> SelectionEvent::getSessionId() { return call_method<SCAPIX_META_STRING("getSessionId"), ref<android::view::textclassifier::TextClassificationSessionId>>(); }
inline jint SelectionEvent::getStart() { return call_method<SCAPIX_META_STRING("getStart"), jint>(); }
inline jint SelectionEvent::getEnd() { return call_method<SCAPIX_META_STRING("getEnd"), jint>(); }
inline jint SelectionEvent::getSmartStart() { return call_method<SCAPIX_META_STRING("getSmartStart"), jint>(); }
inline jint SelectionEvent::getSmartEnd() { return call_method<SCAPIX_META_STRING("getSmartEnd"), jint>(); }
inline jboolean SelectionEvent::isTerminal(jint eventType) { return call_static_method<SCAPIX_META_STRING("isTerminal"), jboolean>(eventType); }
inline jint SelectionEvent::hashCode() { return call_method<SCAPIX_META_STRING("hashCode"), jint>(); }
inline jboolean SelectionEvent::equals(ref<java::lang::Object> obj) { return call_method<SCAPIX_META_STRING("equals"), jboolean>(obj); }
inline ref<java::lang::String> SelectionEvent::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }

} // namespace android::view::textclassifier
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_VIEW_TEXTCLASSIFIER_SELECTIONEVENT_H
