// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_VIEW_DISPLAYCUTOUT_H
#define SCAPIX_ANDROID_VIEW_DISPLAYCUTOUT_H

namespace scapix::java_api {

namespace android::graphics { class Rect; }
namespace java::lang { class String; }
namespace java::util { class List; }

namespace android::view {

class DisplayCutout : public object_base<SCAPIX_META_STRING("android/view/DisplayCutout"),
	java::lang::Object>
{
public:

	static ref<DisplayCutout> new_object(ref<android::graphics::Rect> safeInsets, ref<java::util::List> boundingRects);
	jint getSafeInsetTop();
	jint getSafeInsetBottom();
	jint getSafeInsetLeft();
	jint getSafeInsetRight();
	ref<java::util::List> getBoundingRects();
	jint hashCode();
	jboolean equals(ref<java::lang::Object> o);
	ref<java::lang::String> toString();

protected:

	DisplayCutout(handle_type h) : base_(h) {}

};

} // namespace android::view
} // namespace scapix::java_api

#include <scapix/java_api/android/graphics/Rect.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/List.h>

namespace scapix::java_api {
namespace android::view {

inline ref<DisplayCutout> DisplayCutout::new_object(ref<android::graphics::Rect> safeInsets, ref<java::util::List> boundingRects) { return base_::new_object(safeInsets, boundingRects); }
inline jint DisplayCutout::getSafeInsetTop() { return call_method<SCAPIX_META_STRING("getSafeInsetTop"), jint>(); }
inline jint DisplayCutout::getSafeInsetBottom() { return call_method<SCAPIX_META_STRING("getSafeInsetBottom"), jint>(); }
inline jint DisplayCutout::getSafeInsetLeft() { return call_method<SCAPIX_META_STRING("getSafeInsetLeft"), jint>(); }
inline jint DisplayCutout::getSafeInsetRight() { return call_method<SCAPIX_META_STRING("getSafeInsetRight"), jint>(); }
inline ref<java::util::List> DisplayCutout::getBoundingRects() { return call_method<SCAPIX_META_STRING("getBoundingRects"), ref<java::util::List>>(); }
inline jint DisplayCutout::hashCode() { return call_method<SCAPIX_META_STRING("hashCode"), jint>(); }
inline jboolean DisplayCutout::equals(ref<java::lang::Object> o) { return call_method<SCAPIX_META_STRING("equals"), jboolean>(o); }
inline ref<java::lang::String> DisplayCutout::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }

} // namespace android::view
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_VIEW_DISPLAYCUTOUT_H
