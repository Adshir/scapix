// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/view/InputEvent.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_ANDROID_VIEW_KEYEVENT_H
#define SCAPIX_ANDROID_VIEW_KEYEVENT_H

namespace scapix::java_api {

namespace android::os { class Parcel; }
namespace android::os { class Parcelable_Creator; }
namespace android::view { class KeyCharacterMap; }
namespace android::view { class KeyCharacterMap_KeyData; }
namespace android::view { class KeyEvent_Callback; }
namespace android::view { class KeyEvent_DispatcherState; }
namespace java::lang { class Object; }
namespace java::lang { class String; }

namespace android::view {

class KeyEvent : public object_base<SCAPIX_META_STRING("android/view/KeyEvent"),
	android::view::InputEvent,
	android::os::Parcelable>
{
public:

	using DispatcherState = KeyEvent_DispatcherState;
	using Callback = KeyEvent_Callback;

	static jint ACTION_DOWN_();
	static jint ACTION_MULTIPLE_();
	static jint ACTION_UP_();
	static ref<android::os::Parcelable_Creator> CREATOR_();
	static jint FLAG_CANCELED_();
	static jint FLAG_CANCELED_LONG_PRESS_();
	static jint FLAG_EDITOR_ACTION_();
	static jint FLAG_FALLBACK_();
	static jint FLAG_FROM_SYSTEM_();
	static jint FLAG_KEEP_TOUCH_MODE_();
	static jint FLAG_LONG_PRESS_();
	static jint FLAG_SOFT_KEYBOARD_();
	static jint FLAG_TRACKING_();
	static jint FLAG_VIRTUAL_HARD_KEY_();
	static jint FLAG_WOKE_HERE_();
	static jint KEYCODE_0_();
	static jint KEYCODE_1_();
	static jint KEYCODE_11_();
	static jint KEYCODE_12_();
	static jint KEYCODE_2_();
	static jint KEYCODE_3_();
	static jint KEYCODE_3D_MODE_();
	static jint KEYCODE_4_();
	static jint KEYCODE_5_();
	static jint KEYCODE_6_();
	static jint KEYCODE_7_();
	static jint KEYCODE_8_();
	static jint KEYCODE_9_();
	static jint KEYCODE_A_();
	static jint KEYCODE_ALL_APPS_();
	static jint KEYCODE_ALT_LEFT_();
	static jint KEYCODE_ALT_RIGHT_();
	static jint KEYCODE_APOSTROPHE_();
	static jint KEYCODE_APP_SWITCH_();
	static jint KEYCODE_ASSIST_();
	static jint KEYCODE_AT_();
	static jint KEYCODE_AVR_INPUT_();
	static jint KEYCODE_AVR_POWER_();
	static jint KEYCODE_B_();
	static jint KEYCODE_BACK_();
	static jint KEYCODE_BACKSLASH_();
	static jint KEYCODE_BOOKMARK_();
	static jint KEYCODE_BREAK_();
	static jint KEYCODE_BRIGHTNESS_DOWN_();
	static jint KEYCODE_BRIGHTNESS_UP_();
	static jint KEYCODE_BUTTON_1_();
	static jint KEYCODE_BUTTON_10_();
	static jint KEYCODE_BUTTON_11_();
	static jint KEYCODE_BUTTON_12_();
	static jint KEYCODE_BUTTON_13_();
	static jint KEYCODE_BUTTON_14_();
	static jint KEYCODE_BUTTON_15_();
	static jint KEYCODE_BUTTON_16_();
	static jint KEYCODE_BUTTON_2_();
	static jint KEYCODE_BUTTON_3_();
	static jint KEYCODE_BUTTON_4_();
	static jint KEYCODE_BUTTON_5_();
	static jint KEYCODE_BUTTON_6_();
	static jint KEYCODE_BUTTON_7_();
	static jint KEYCODE_BUTTON_8_();
	static jint KEYCODE_BUTTON_9_();
	static jint KEYCODE_BUTTON_A_();
	static jint KEYCODE_BUTTON_B_();
	static jint KEYCODE_BUTTON_C_();
	static jint KEYCODE_BUTTON_L1_();
	static jint KEYCODE_BUTTON_L2_();
	static jint KEYCODE_BUTTON_MODE_();
	static jint KEYCODE_BUTTON_R1_();
	static jint KEYCODE_BUTTON_R2_();
	static jint KEYCODE_BUTTON_SELECT_();
	static jint KEYCODE_BUTTON_START_();
	static jint KEYCODE_BUTTON_THUMBL_();
	static jint KEYCODE_BUTTON_THUMBR_();
	static jint KEYCODE_BUTTON_X_();
	static jint KEYCODE_BUTTON_Y_();
	static jint KEYCODE_BUTTON_Z_();
	static jint KEYCODE_C_();
	static jint KEYCODE_CALCULATOR_();
	static jint KEYCODE_CALENDAR_();
	static jint KEYCODE_CALL_();
	static jint KEYCODE_CAMERA_();
	static jint KEYCODE_CAPS_LOCK_();
	static jint KEYCODE_CAPTIONS_();
	static jint KEYCODE_CHANNEL_DOWN_();
	static jint KEYCODE_CHANNEL_UP_();
	static jint KEYCODE_CLEAR_();
	static jint KEYCODE_COMMA_();
	static jint KEYCODE_CONTACTS_();
	static jint KEYCODE_COPY_();
	static jint KEYCODE_CTRL_LEFT_();
	static jint KEYCODE_CTRL_RIGHT_();
	static jint KEYCODE_CUT_();
	static jint KEYCODE_D_();
	static jint KEYCODE_DEL_();
	static jint KEYCODE_DPAD_CENTER_();
	static jint KEYCODE_DPAD_DOWN_();
	static jint KEYCODE_DPAD_DOWN_LEFT_();
	static jint KEYCODE_DPAD_DOWN_RIGHT_();
	static jint KEYCODE_DPAD_LEFT_();
	static jint KEYCODE_DPAD_RIGHT_();
	static jint KEYCODE_DPAD_UP_();
	static jint KEYCODE_DPAD_UP_LEFT_();
	static jint KEYCODE_DPAD_UP_RIGHT_();
	static jint KEYCODE_DVR_();
	static jint KEYCODE_E_();
	static jint KEYCODE_EISU_();
	static jint KEYCODE_ENDCALL_();
	static jint KEYCODE_ENTER_();
	static jint KEYCODE_ENVELOPE_();
	static jint KEYCODE_EQUALS_();
	static jint KEYCODE_ESCAPE_();
	static jint KEYCODE_EXPLORER_();
	static jint KEYCODE_F_();
	static jint KEYCODE_F1_();
	static jint KEYCODE_F10_();
	static jint KEYCODE_F11_();
	static jint KEYCODE_F12_();
	static jint KEYCODE_F2_();
	static jint KEYCODE_F3_();
	static jint KEYCODE_F4_();
	static jint KEYCODE_F5_();
	static jint KEYCODE_F6_();
	static jint KEYCODE_F7_();
	static jint KEYCODE_F8_();
	static jint KEYCODE_F9_();
	static jint KEYCODE_FOCUS_();
	static jint KEYCODE_FORWARD_();
	static jint KEYCODE_FORWARD_DEL_();
	static jint KEYCODE_FUNCTION_();
	static jint KEYCODE_G_();
	static jint KEYCODE_GRAVE_();
	static jint KEYCODE_GUIDE_();
	static jint KEYCODE_H_();
	static jint KEYCODE_HEADSETHOOK_();
	static jint KEYCODE_HELP_();
	static jint KEYCODE_HENKAN_();
	static jint KEYCODE_HOME_();
	static jint KEYCODE_I_();
	static jint KEYCODE_INFO_();
	static jint KEYCODE_INSERT_();
	static jint KEYCODE_J_();
	static jint KEYCODE_K_();
	static jint KEYCODE_KANA_();
	static jint KEYCODE_KATAKANA_HIRAGANA_();
	static jint KEYCODE_L_();
	static jint KEYCODE_LANGUAGE_SWITCH_();
	static jint KEYCODE_LAST_CHANNEL_();
	static jint KEYCODE_LEFT_BRACKET_();
	static jint KEYCODE_M_();
	static jint KEYCODE_MANNER_MODE_();
	static jint KEYCODE_MEDIA_AUDIO_TRACK_();
	static jint KEYCODE_MEDIA_CLOSE_();
	static jint KEYCODE_MEDIA_EJECT_();
	static jint KEYCODE_MEDIA_FAST_FORWARD_();
	static jint KEYCODE_MEDIA_NEXT_();
	static jint KEYCODE_MEDIA_PAUSE_();
	static jint KEYCODE_MEDIA_PLAY_();
	static jint KEYCODE_MEDIA_PLAY_PAUSE_();
	static jint KEYCODE_MEDIA_PREVIOUS_();
	static jint KEYCODE_MEDIA_RECORD_();
	static jint KEYCODE_MEDIA_REWIND_();
	static jint KEYCODE_MEDIA_SKIP_BACKWARD_();
	static jint KEYCODE_MEDIA_SKIP_FORWARD_();
	static jint KEYCODE_MEDIA_STEP_BACKWARD_();
	static jint KEYCODE_MEDIA_STEP_FORWARD_();
	static jint KEYCODE_MEDIA_STOP_();
	static jint KEYCODE_MEDIA_TOP_MENU_();
	static jint KEYCODE_MENU_();
	static jint KEYCODE_META_LEFT_();
	static jint KEYCODE_META_RIGHT_();
	static jint KEYCODE_MINUS_();
	static jint KEYCODE_MOVE_END_();
	static jint KEYCODE_MOVE_HOME_();
	static jint KEYCODE_MUHENKAN_();
	static jint KEYCODE_MUSIC_();
	static jint KEYCODE_MUTE_();
	static jint KEYCODE_N_();
	static jint KEYCODE_NAVIGATE_IN_();
	static jint KEYCODE_NAVIGATE_NEXT_();
	static jint KEYCODE_NAVIGATE_OUT_();
	static jint KEYCODE_NAVIGATE_PREVIOUS_();
	static jint KEYCODE_NOTIFICATION_();
	static jint KEYCODE_NUM_();
	static jint KEYCODE_NUMPAD_0_();
	static jint KEYCODE_NUMPAD_1_();
	static jint KEYCODE_NUMPAD_2_();
	static jint KEYCODE_NUMPAD_3_();
	static jint KEYCODE_NUMPAD_4_();
	static jint KEYCODE_NUMPAD_5_();
	static jint KEYCODE_NUMPAD_6_();
	static jint KEYCODE_NUMPAD_7_();
	static jint KEYCODE_NUMPAD_8_();
	static jint KEYCODE_NUMPAD_9_();
	static jint KEYCODE_NUMPAD_ADD_();
	static jint KEYCODE_NUMPAD_COMMA_();
	static jint KEYCODE_NUMPAD_DIVIDE_();
	static jint KEYCODE_NUMPAD_DOT_();
	static jint KEYCODE_NUMPAD_ENTER_();
	static jint KEYCODE_NUMPAD_EQUALS_();
	static jint KEYCODE_NUMPAD_LEFT_PAREN_();
	static jint KEYCODE_NUMPAD_MULTIPLY_();
	static jint KEYCODE_NUMPAD_RIGHT_PAREN_();
	static jint KEYCODE_NUMPAD_SUBTRACT_();
	static jint KEYCODE_NUM_LOCK_();
	static jint KEYCODE_O_();
	static jint KEYCODE_P_();
	static jint KEYCODE_PAGE_DOWN_();
	static jint KEYCODE_PAGE_UP_();
	static jint KEYCODE_PAIRING_();
	static jint KEYCODE_PASTE_();
	static jint KEYCODE_PERIOD_();
	static jint KEYCODE_PICTSYMBOLS_();
	static jint KEYCODE_PLUS_();
	static jint KEYCODE_POUND_();
	static jint KEYCODE_POWER_();
	static jint KEYCODE_PROG_BLUE_();
	static jint KEYCODE_PROG_GREEN_();
	static jint KEYCODE_PROG_RED_();
	static jint KEYCODE_PROG_YELLOW_();
	static jint KEYCODE_Q_();
	static jint KEYCODE_R_();
	static jint KEYCODE_REFRESH_();
	static jint KEYCODE_RIGHT_BRACKET_();
	static jint KEYCODE_RO_();
	static jint KEYCODE_S_();
	static jint KEYCODE_SCROLL_LOCK_();
	static jint KEYCODE_SEARCH_();
	static jint KEYCODE_SEMICOLON_();
	static jint KEYCODE_SETTINGS_();
	static jint KEYCODE_SHIFT_LEFT_();
	static jint KEYCODE_SHIFT_RIGHT_();
	static jint KEYCODE_SLASH_();
	static jint KEYCODE_SLEEP_();
	static jint KEYCODE_SOFT_LEFT_();
	static jint KEYCODE_SOFT_RIGHT_();
	static jint KEYCODE_SOFT_SLEEP_();
	static jint KEYCODE_SPACE_();
	static jint KEYCODE_STAR_();
	static jint KEYCODE_STB_INPUT_();
	static jint KEYCODE_STB_POWER_();
	static jint KEYCODE_STEM_1_();
	static jint KEYCODE_STEM_2_();
	static jint KEYCODE_STEM_3_();
	static jint KEYCODE_STEM_PRIMARY_();
	static jint KEYCODE_SWITCH_CHARSET_();
	static jint KEYCODE_SYM_();
	static jint KEYCODE_SYSRQ_();
	static jint KEYCODE_SYSTEM_NAVIGATION_DOWN_();
	static jint KEYCODE_SYSTEM_NAVIGATION_LEFT_();
	static jint KEYCODE_SYSTEM_NAVIGATION_RIGHT_();
	static jint KEYCODE_SYSTEM_NAVIGATION_UP_();
	static jint KEYCODE_T_();
	static jint KEYCODE_TAB_();
	static jint KEYCODE_TV_();
	static jint KEYCODE_TV_ANTENNA_CABLE_();
	static jint KEYCODE_TV_AUDIO_DESCRIPTION_();
	static jint KEYCODE_TV_AUDIO_DESCRIPTION_MIX_DOWN_();
	static jint KEYCODE_TV_AUDIO_DESCRIPTION_MIX_UP_();
	static jint KEYCODE_TV_CONTENTS_MENU_();
	static jint KEYCODE_TV_DATA_SERVICE_();
	static jint KEYCODE_TV_INPUT_();
	static jint KEYCODE_TV_INPUT_COMPONENT_1_();
	static jint KEYCODE_TV_INPUT_COMPONENT_2_();
	static jint KEYCODE_TV_INPUT_COMPOSITE_1_();
	static jint KEYCODE_TV_INPUT_COMPOSITE_2_();
	static jint KEYCODE_TV_INPUT_HDMI_1_();
	static jint KEYCODE_TV_INPUT_HDMI_2_();
	static jint KEYCODE_TV_INPUT_HDMI_3_();
	static jint KEYCODE_TV_INPUT_HDMI_4_();
	static jint KEYCODE_TV_INPUT_VGA_1_();
	static jint KEYCODE_TV_MEDIA_CONTEXT_MENU_();
	static jint KEYCODE_TV_NETWORK_();
	static jint KEYCODE_TV_NUMBER_ENTRY_();
	static jint KEYCODE_TV_POWER_();
	static jint KEYCODE_TV_RADIO_SERVICE_();
	static jint KEYCODE_TV_SATELLITE_();
	static jint KEYCODE_TV_SATELLITE_BS_();
	static jint KEYCODE_TV_SATELLITE_CS_();
	static jint KEYCODE_TV_SATELLITE_SERVICE_();
	static jint KEYCODE_TV_TELETEXT_();
	static jint KEYCODE_TV_TERRESTRIAL_ANALOG_();
	static jint KEYCODE_TV_TERRESTRIAL_DIGITAL_();
	static jint KEYCODE_TV_TIMER_PROGRAMMING_();
	static jint KEYCODE_TV_ZOOM_MODE_();
	static jint KEYCODE_U_();
	static jint KEYCODE_UNKNOWN_();
	static jint KEYCODE_V_();
	static jint KEYCODE_VOICE_ASSIST_();
	static jint KEYCODE_VOLUME_DOWN_();
	static jint KEYCODE_VOLUME_MUTE_();
	static jint KEYCODE_VOLUME_UP_();
	static jint KEYCODE_W_();
	static jint KEYCODE_WAKEUP_();
	static jint KEYCODE_WINDOW_();
	static jint KEYCODE_X_();
	static jint KEYCODE_Y_();
	static jint KEYCODE_YEN_();
	static jint KEYCODE_Z_();
	static jint KEYCODE_ZENKAKU_HANKAKU_();
	static jint KEYCODE_ZOOM_IN_();
	static jint KEYCODE_ZOOM_OUT_();
	static jint MAX_KEYCODE_();
	static jint META_ALT_LEFT_ON_();
	static jint META_ALT_MASK_();
	static jint META_ALT_ON_();
	static jint META_ALT_RIGHT_ON_();
	static jint META_CAPS_LOCK_ON_();
	static jint META_CTRL_LEFT_ON_();
	static jint META_CTRL_MASK_();
	static jint META_CTRL_ON_();
	static jint META_CTRL_RIGHT_ON_();
	static jint META_FUNCTION_ON_();
	static jint META_META_LEFT_ON_();
	static jint META_META_MASK_();
	static jint META_META_ON_();
	static jint META_META_RIGHT_ON_();
	static jint META_NUM_LOCK_ON_();
	static jint META_SCROLL_LOCK_ON_();
	static jint META_SHIFT_LEFT_ON_();
	static jint META_SHIFT_MASK_();
	static jint META_SHIFT_ON_();
	static jint META_SHIFT_RIGHT_ON_();
	static jint META_SYM_ON_();

	static ref<KeyEvent> new_object(jint action, jint code);
	static ref<KeyEvent> new_object(jlong downTime, jlong p2, jint eventTime, jint p4, jint action);
	static ref<KeyEvent> new_object(jlong downTime, jlong p2, jint eventTime, jint p4, jint action, jint code);
	static ref<KeyEvent> new_object(jlong downTime, jlong p2, jint eventTime, jint p4, jint action, jint code, jint repeat, jint metaState);
	static ref<KeyEvent> new_object(jlong downTime, jlong p2, jint eventTime, jint p4, jint action, jint code, jint repeat, jint metaState, jint deviceId);
	static ref<KeyEvent> new_object(jlong downTime, jlong p2, jint eventTime, jint p4, jint action, jint code, jint repeat, jint metaState, jint deviceId, jint scancode);
	static ref<KeyEvent> new_object(jlong time, ref<java::lang::String> p2, jint characters, jint deviceId);
	static ref<KeyEvent> new_object(ref<android::view::KeyEvent> origEvent);
	static ref<KeyEvent> new_object(ref<android::view::KeyEvent> origEvent, jlong eventTime, jint p3);
	static jint getMaxKeyCode();
	static jint getDeadChar(jint accent, jint c);
	static ref<android::view::KeyEvent> changeTimeRepeat(ref<android::view::KeyEvent> event, jlong eventTime, jint p3);
	static ref<android::view::KeyEvent> changeTimeRepeat(ref<android::view::KeyEvent> event, jlong eventTime, jint p3, jint newRepeat);
	static ref<android::view::KeyEvent> changeAction(ref<android::view::KeyEvent> event, jint action);
	static ref<android::view::KeyEvent> changeFlags(ref<android::view::KeyEvent> event, jint flags);
	jboolean isSystem();
	static jboolean isGamepadButton(jint keyCode);
	jint getDeviceId();
	jint getSource();
	void setSource(jint source);
	jint getMetaState();
	jint getModifiers();
	jint getFlags();
	static jint getModifierMetaStateMask();
	static jboolean isModifierKey(jint keyCode);
	static jint normalizeMetaState(jint metaState);
	static jboolean metaStateHasNoModifiers(jint metaState);
	static jboolean metaStateHasModifiers(jint metaState, jint modifiers);
	jboolean hasNoModifiers();
	jboolean hasModifiers(jint modifiers);
	jboolean isAltPressed();
	jboolean isShiftPressed();
	jboolean isSymPressed();
	jboolean isCtrlPressed();
	jboolean isMetaPressed();
	jboolean isFunctionPressed();
	jboolean isCapsLockOn();
	jboolean isNumLockOn();
	jboolean isScrollLockOn();
	jint getAction();
	jboolean isCanceled();
	void startTracking();
	jboolean isTracking();
	jboolean isLongPress();
	jint getKeyCode();
	ref<java::lang::String> getCharacters();
	jint getScanCode();
	jint getRepeatCount();
	jlong getDownTime();
	jlong getEventTime();
	ref<android::view::KeyCharacterMap> getKeyCharacterMap();
	jchar getDisplayLabel();
	jint getUnicodeChar();
	jint getUnicodeChar(jint metaState);
	jboolean getKeyData(ref<android::view::KeyCharacterMap_KeyData> results);
	jchar getMatch(ref<link::java::array<jchar>> chars);
	jchar getMatch(ref<link::java::array<jchar>> chars, jint metaState);
	jchar getNumber();
	jboolean isPrintingKey();
	jboolean dispatch(ref<android::view::KeyEvent_Callback> receiver);
	jboolean dispatch(ref<android::view::KeyEvent_Callback> receiver, ref<android::view::KeyEvent_DispatcherState> state, ref<java::lang::Object> target);
	ref<java::lang::String> toString();
	static ref<java::lang::String> keyCodeToString(jint keyCode);
	static jint keyCodeFromString(ref<java::lang::String> symbolicName);
	void writeToParcel(ref<android::os::Parcel> out, jint flags);

protected:

	KeyEvent(handle_type h) : base_(h) {}

};

} // namespace android::view
} // namespace scapix::java_api

#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/android/view/KeyCharacterMap.h>
#include <scapix/java_api/android/view/KeyCharacterMap_KeyData.h>
#include <scapix/java_api/android/view/KeyEvent_Callback.h>
#include <scapix/java_api/android/view/KeyEvent_DispatcherState.h>
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::view {

inline jint KeyEvent::ACTION_DOWN_() { return get_static_field<SCAPIX_META_STRING("ACTION_DOWN"), jint>(); }
inline jint KeyEvent::ACTION_MULTIPLE_() { return get_static_field<SCAPIX_META_STRING("ACTION_MULTIPLE"), jint>(); }
inline jint KeyEvent::ACTION_UP_() { return get_static_field<SCAPIX_META_STRING("ACTION_UP"), jint>(); }
inline ref<android::os::Parcelable_Creator> KeyEvent::CREATOR_() { return get_static_field<SCAPIX_META_STRING("CREATOR"), ref<android::os::Parcelable_Creator>>(); }
inline jint KeyEvent::FLAG_CANCELED_() { return get_static_field<SCAPIX_META_STRING("FLAG_CANCELED"), jint>(); }
inline jint KeyEvent::FLAG_CANCELED_LONG_PRESS_() { return get_static_field<SCAPIX_META_STRING("FLAG_CANCELED_LONG_PRESS"), jint>(); }
inline jint KeyEvent::FLAG_EDITOR_ACTION_() { return get_static_field<SCAPIX_META_STRING("FLAG_EDITOR_ACTION"), jint>(); }
inline jint KeyEvent::FLAG_FALLBACK_() { return get_static_field<SCAPIX_META_STRING("FLAG_FALLBACK"), jint>(); }
inline jint KeyEvent::FLAG_FROM_SYSTEM_() { return get_static_field<SCAPIX_META_STRING("FLAG_FROM_SYSTEM"), jint>(); }
inline jint KeyEvent::FLAG_KEEP_TOUCH_MODE_() { return get_static_field<SCAPIX_META_STRING("FLAG_KEEP_TOUCH_MODE"), jint>(); }
inline jint KeyEvent::FLAG_LONG_PRESS_() { return get_static_field<SCAPIX_META_STRING("FLAG_LONG_PRESS"), jint>(); }
inline jint KeyEvent::FLAG_SOFT_KEYBOARD_() { return get_static_field<SCAPIX_META_STRING("FLAG_SOFT_KEYBOARD"), jint>(); }
inline jint KeyEvent::FLAG_TRACKING_() { return get_static_field<SCAPIX_META_STRING("FLAG_TRACKING"), jint>(); }
inline jint KeyEvent::FLAG_VIRTUAL_HARD_KEY_() { return get_static_field<SCAPIX_META_STRING("FLAG_VIRTUAL_HARD_KEY"), jint>(); }
inline jint KeyEvent::FLAG_WOKE_HERE_() { return get_static_field<SCAPIX_META_STRING("FLAG_WOKE_HERE"), jint>(); }
inline jint KeyEvent::KEYCODE_0_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_0"), jint>(); }
inline jint KeyEvent::KEYCODE_1_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_1"), jint>(); }
inline jint KeyEvent::KEYCODE_11_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_11"), jint>(); }
inline jint KeyEvent::KEYCODE_12_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_12"), jint>(); }
inline jint KeyEvent::KEYCODE_2_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_2"), jint>(); }
inline jint KeyEvent::KEYCODE_3_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_3"), jint>(); }
inline jint KeyEvent::KEYCODE_3D_MODE_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_3D_MODE"), jint>(); }
inline jint KeyEvent::KEYCODE_4_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_4"), jint>(); }
inline jint KeyEvent::KEYCODE_5_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_5"), jint>(); }
inline jint KeyEvent::KEYCODE_6_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_6"), jint>(); }
inline jint KeyEvent::KEYCODE_7_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_7"), jint>(); }
inline jint KeyEvent::KEYCODE_8_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_8"), jint>(); }
inline jint KeyEvent::KEYCODE_9_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_9"), jint>(); }
inline jint KeyEvent::KEYCODE_A_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_A"), jint>(); }
inline jint KeyEvent::KEYCODE_ALL_APPS_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_ALL_APPS"), jint>(); }
inline jint KeyEvent::KEYCODE_ALT_LEFT_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_ALT_LEFT"), jint>(); }
inline jint KeyEvent::KEYCODE_ALT_RIGHT_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_ALT_RIGHT"), jint>(); }
inline jint KeyEvent::KEYCODE_APOSTROPHE_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_APOSTROPHE"), jint>(); }
inline jint KeyEvent::KEYCODE_APP_SWITCH_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_APP_SWITCH"), jint>(); }
inline jint KeyEvent::KEYCODE_ASSIST_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_ASSIST"), jint>(); }
inline jint KeyEvent::KEYCODE_AT_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_AT"), jint>(); }
inline jint KeyEvent::KEYCODE_AVR_INPUT_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_AVR_INPUT"), jint>(); }
inline jint KeyEvent::KEYCODE_AVR_POWER_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_AVR_POWER"), jint>(); }
inline jint KeyEvent::KEYCODE_B_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_B"), jint>(); }
inline jint KeyEvent::KEYCODE_BACK_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_BACK"), jint>(); }
inline jint KeyEvent::KEYCODE_BACKSLASH_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_BACKSLASH"), jint>(); }
inline jint KeyEvent::KEYCODE_BOOKMARK_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_BOOKMARK"), jint>(); }
inline jint KeyEvent::KEYCODE_BREAK_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_BREAK"), jint>(); }
inline jint KeyEvent::KEYCODE_BRIGHTNESS_DOWN_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_BRIGHTNESS_DOWN"), jint>(); }
inline jint KeyEvent::KEYCODE_BRIGHTNESS_UP_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_BRIGHTNESS_UP"), jint>(); }
inline jint KeyEvent::KEYCODE_BUTTON_1_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_BUTTON_1"), jint>(); }
inline jint KeyEvent::KEYCODE_BUTTON_10_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_BUTTON_10"), jint>(); }
inline jint KeyEvent::KEYCODE_BUTTON_11_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_BUTTON_11"), jint>(); }
inline jint KeyEvent::KEYCODE_BUTTON_12_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_BUTTON_12"), jint>(); }
inline jint KeyEvent::KEYCODE_BUTTON_13_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_BUTTON_13"), jint>(); }
inline jint KeyEvent::KEYCODE_BUTTON_14_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_BUTTON_14"), jint>(); }
inline jint KeyEvent::KEYCODE_BUTTON_15_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_BUTTON_15"), jint>(); }
inline jint KeyEvent::KEYCODE_BUTTON_16_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_BUTTON_16"), jint>(); }
inline jint KeyEvent::KEYCODE_BUTTON_2_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_BUTTON_2"), jint>(); }
inline jint KeyEvent::KEYCODE_BUTTON_3_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_BUTTON_3"), jint>(); }
inline jint KeyEvent::KEYCODE_BUTTON_4_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_BUTTON_4"), jint>(); }
inline jint KeyEvent::KEYCODE_BUTTON_5_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_BUTTON_5"), jint>(); }
inline jint KeyEvent::KEYCODE_BUTTON_6_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_BUTTON_6"), jint>(); }
inline jint KeyEvent::KEYCODE_BUTTON_7_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_BUTTON_7"), jint>(); }
inline jint KeyEvent::KEYCODE_BUTTON_8_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_BUTTON_8"), jint>(); }
inline jint KeyEvent::KEYCODE_BUTTON_9_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_BUTTON_9"), jint>(); }
inline jint KeyEvent::KEYCODE_BUTTON_A_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_BUTTON_A"), jint>(); }
inline jint KeyEvent::KEYCODE_BUTTON_B_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_BUTTON_B"), jint>(); }
inline jint KeyEvent::KEYCODE_BUTTON_C_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_BUTTON_C"), jint>(); }
inline jint KeyEvent::KEYCODE_BUTTON_L1_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_BUTTON_L1"), jint>(); }
inline jint KeyEvent::KEYCODE_BUTTON_L2_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_BUTTON_L2"), jint>(); }
inline jint KeyEvent::KEYCODE_BUTTON_MODE_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_BUTTON_MODE"), jint>(); }
inline jint KeyEvent::KEYCODE_BUTTON_R1_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_BUTTON_R1"), jint>(); }
inline jint KeyEvent::KEYCODE_BUTTON_R2_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_BUTTON_R2"), jint>(); }
inline jint KeyEvent::KEYCODE_BUTTON_SELECT_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_BUTTON_SELECT"), jint>(); }
inline jint KeyEvent::KEYCODE_BUTTON_START_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_BUTTON_START"), jint>(); }
inline jint KeyEvent::KEYCODE_BUTTON_THUMBL_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_BUTTON_THUMBL"), jint>(); }
inline jint KeyEvent::KEYCODE_BUTTON_THUMBR_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_BUTTON_THUMBR"), jint>(); }
inline jint KeyEvent::KEYCODE_BUTTON_X_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_BUTTON_X"), jint>(); }
inline jint KeyEvent::KEYCODE_BUTTON_Y_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_BUTTON_Y"), jint>(); }
inline jint KeyEvent::KEYCODE_BUTTON_Z_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_BUTTON_Z"), jint>(); }
inline jint KeyEvent::KEYCODE_C_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_C"), jint>(); }
inline jint KeyEvent::KEYCODE_CALCULATOR_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_CALCULATOR"), jint>(); }
inline jint KeyEvent::KEYCODE_CALENDAR_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_CALENDAR"), jint>(); }
inline jint KeyEvent::KEYCODE_CALL_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_CALL"), jint>(); }
inline jint KeyEvent::KEYCODE_CAMERA_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_CAMERA"), jint>(); }
inline jint KeyEvent::KEYCODE_CAPS_LOCK_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_CAPS_LOCK"), jint>(); }
inline jint KeyEvent::KEYCODE_CAPTIONS_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_CAPTIONS"), jint>(); }
inline jint KeyEvent::KEYCODE_CHANNEL_DOWN_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_CHANNEL_DOWN"), jint>(); }
inline jint KeyEvent::KEYCODE_CHANNEL_UP_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_CHANNEL_UP"), jint>(); }
inline jint KeyEvent::KEYCODE_CLEAR_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_CLEAR"), jint>(); }
inline jint KeyEvent::KEYCODE_COMMA_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_COMMA"), jint>(); }
inline jint KeyEvent::KEYCODE_CONTACTS_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_CONTACTS"), jint>(); }
inline jint KeyEvent::KEYCODE_COPY_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_COPY"), jint>(); }
inline jint KeyEvent::KEYCODE_CTRL_LEFT_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_CTRL_LEFT"), jint>(); }
inline jint KeyEvent::KEYCODE_CTRL_RIGHT_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_CTRL_RIGHT"), jint>(); }
inline jint KeyEvent::KEYCODE_CUT_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_CUT"), jint>(); }
inline jint KeyEvent::KEYCODE_D_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_D"), jint>(); }
inline jint KeyEvent::KEYCODE_DEL_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_DEL"), jint>(); }
inline jint KeyEvent::KEYCODE_DPAD_CENTER_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_DPAD_CENTER"), jint>(); }
inline jint KeyEvent::KEYCODE_DPAD_DOWN_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_DPAD_DOWN"), jint>(); }
inline jint KeyEvent::KEYCODE_DPAD_DOWN_LEFT_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_DPAD_DOWN_LEFT"), jint>(); }
inline jint KeyEvent::KEYCODE_DPAD_DOWN_RIGHT_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_DPAD_DOWN_RIGHT"), jint>(); }
inline jint KeyEvent::KEYCODE_DPAD_LEFT_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_DPAD_LEFT"), jint>(); }
inline jint KeyEvent::KEYCODE_DPAD_RIGHT_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_DPAD_RIGHT"), jint>(); }
inline jint KeyEvent::KEYCODE_DPAD_UP_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_DPAD_UP"), jint>(); }
inline jint KeyEvent::KEYCODE_DPAD_UP_LEFT_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_DPAD_UP_LEFT"), jint>(); }
inline jint KeyEvent::KEYCODE_DPAD_UP_RIGHT_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_DPAD_UP_RIGHT"), jint>(); }
inline jint KeyEvent::KEYCODE_DVR_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_DVR"), jint>(); }
inline jint KeyEvent::KEYCODE_E_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_E"), jint>(); }
inline jint KeyEvent::KEYCODE_EISU_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_EISU"), jint>(); }
inline jint KeyEvent::KEYCODE_ENDCALL_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_ENDCALL"), jint>(); }
inline jint KeyEvent::KEYCODE_ENTER_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_ENTER"), jint>(); }
inline jint KeyEvent::KEYCODE_ENVELOPE_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_ENVELOPE"), jint>(); }
inline jint KeyEvent::KEYCODE_EQUALS_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_EQUALS"), jint>(); }
inline jint KeyEvent::KEYCODE_ESCAPE_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_ESCAPE"), jint>(); }
inline jint KeyEvent::KEYCODE_EXPLORER_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_EXPLORER"), jint>(); }
inline jint KeyEvent::KEYCODE_F_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_F"), jint>(); }
inline jint KeyEvent::KEYCODE_F1_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_F1"), jint>(); }
inline jint KeyEvent::KEYCODE_F10_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_F10"), jint>(); }
inline jint KeyEvent::KEYCODE_F11_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_F11"), jint>(); }
inline jint KeyEvent::KEYCODE_F12_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_F12"), jint>(); }
inline jint KeyEvent::KEYCODE_F2_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_F2"), jint>(); }
inline jint KeyEvent::KEYCODE_F3_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_F3"), jint>(); }
inline jint KeyEvent::KEYCODE_F4_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_F4"), jint>(); }
inline jint KeyEvent::KEYCODE_F5_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_F5"), jint>(); }
inline jint KeyEvent::KEYCODE_F6_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_F6"), jint>(); }
inline jint KeyEvent::KEYCODE_F7_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_F7"), jint>(); }
inline jint KeyEvent::KEYCODE_F8_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_F8"), jint>(); }
inline jint KeyEvent::KEYCODE_F9_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_F9"), jint>(); }
inline jint KeyEvent::KEYCODE_FOCUS_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_FOCUS"), jint>(); }
inline jint KeyEvent::KEYCODE_FORWARD_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_FORWARD"), jint>(); }
inline jint KeyEvent::KEYCODE_FORWARD_DEL_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_FORWARD_DEL"), jint>(); }
inline jint KeyEvent::KEYCODE_FUNCTION_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_FUNCTION"), jint>(); }
inline jint KeyEvent::KEYCODE_G_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_G"), jint>(); }
inline jint KeyEvent::KEYCODE_GRAVE_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_GRAVE"), jint>(); }
inline jint KeyEvent::KEYCODE_GUIDE_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_GUIDE"), jint>(); }
inline jint KeyEvent::KEYCODE_H_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_H"), jint>(); }
inline jint KeyEvent::KEYCODE_HEADSETHOOK_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_HEADSETHOOK"), jint>(); }
inline jint KeyEvent::KEYCODE_HELP_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_HELP"), jint>(); }
inline jint KeyEvent::KEYCODE_HENKAN_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_HENKAN"), jint>(); }
inline jint KeyEvent::KEYCODE_HOME_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_HOME"), jint>(); }
inline jint KeyEvent::KEYCODE_I_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_I"), jint>(); }
inline jint KeyEvent::KEYCODE_INFO_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_INFO"), jint>(); }
inline jint KeyEvent::KEYCODE_INSERT_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_INSERT"), jint>(); }
inline jint KeyEvent::KEYCODE_J_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_J"), jint>(); }
inline jint KeyEvent::KEYCODE_K_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_K"), jint>(); }
inline jint KeyEvent::KEYCODE_KANA_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_KANA"), jint>(); }
inline jint KeyEvent::KEYCODE_KATAKANA_HIRAGANA_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_KATAKANA_HIRAGANA"), jint>(); }
inline jint KeyEvent::KEYCODE_L_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_L"), jint>(); }
inline jint KeyEvent::KEYCODE_LANGUAGE_SWITCH_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_LANGUAGE_SWITCH"), jint>(); }
inline jint KeyEvent::KEYCODE_LAST_CHANNEL_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_LAST_CHANNEL"), jint>(); }
inline jint KeyEvent::KEYCODE_LEFT_BRACKET_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_LEFT_BRACKET"), jint>(); }
inline jint KeyEvent::KEYCODE_M_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_M"), jint>(); }
inline jint KeyEvent::KEYCODE_MANNER_MODE_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_MANNER_MODE"), jint>(); }
inline jint KeyEvent::KEYCODE_MEDIA_AUDIO_TRACK_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_MEDIA_AUDIO_TRACK"), jint>(); }
inline jint KeyEvent::KEYCODE_MEDIA_CLOSE_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_MEDIA_CLOSE"), jint>(); }
inline jint KeyEvent::KEYCODE_MEDIA_EJECT_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_MEDIA_EJECT"), jint>(); }
inline jint KeyEvent::KEYCODE_MEDIA_FAST_FORWARD_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_MEDIA_FAST_FORWARD"), jint>(); }
inline jint KeyEvent::KEYCODE_MEDIA_NEXT_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_MEDIA_NEXT"), jint>(); }
inline jint KeyEvent::KEYCODE_MEDIA_PAUSE_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_MEDIA_PAUSE"), jint>(); }
inline jint KeyEvent::KEYCODE_MEDIA_PLAY_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_MEDIA_PLAY"), jint>(); }
inline jint KeyEvent::KEYCODE_MEDIA_PLAY_PAUSE_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_MEDIA_PLAY_PAUSE"), jint>(); }
inline jint KeyEvent::KEYCODE_MEDIA_PREVIOUS_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_MEDIA_PREVIOUS"), jint>(); }
inline jint KeyEvent::KEYCODE_MEDIA_RECORD_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_MEDIA_RECORD"), jint>(); }
inline jint KeyEvent::KEYCODE_MEDIA_REWIND_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_MEDIA_REWIND"), jint>(); }
inline jint KeyEvent::KEYCODE_MEDIA_SKIP_BACKWARD_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_MEDIA_SKIP_BACKWARD"), jint>(); }
inline jint KeyEvent::KEYCODE_MEDIA_SKIP_FORWARD_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_MEDIA_SKIP_FORWARD"), jint>(); }
inline jint KeyEvent::KEYCODE_MEDIA_STEP_BACKWARD_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_MEDIA_STEP_BACKWARD"), jint>(); }
inline jint KeyEvent::KEYCODE_MEDIA_STEP_FORWARD_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_MEDIA_STEP_FORWARD"), jint>(); }
inline jint KeyEvent::KEYCODE_MEDIA_STOP_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_MEDIA_STOP"), jint>(); }
inline jint KeyEvent::KEYCODE_MEDIA_TOP_MENU_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_MEDIA_TOP_MENU"), jint>(); }
inline jint KeyEvent::KEYCODE_MENU_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_MENU"), jint>(); }
inline jint KeyEvent::KEYCODE_META_LEFT_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_META_LEFT"), jint>(); }
inline jint KeyEvent::KEYCODE_META_RIGHT_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_META_RIGHT"), jint>(); }
inline jint KeyEvent::KEYCODE_MINUS_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_MINUS"), jint>(); }
inline jint KeyEvent::KEYCODE_MOVE_END_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_MOVE_END"), jint>(); }
inline jint KeyEvent::KEYCODE_MOVE_HOME_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_MOVE_HOME"), jint>(); }
inline jint KeyEvent::KEYCODE_MUHENKAN_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_MUHENKAN"), jint>(); }
inline jint KeyEvent::KEYCODE_MUSIC_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_MUSIC"), jint>(); }
inline jint KeyEvent::KEYCODE_MUTE_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_MUTE"), jint>(); }
inline jint KeyEvent::KEYCODE_N_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_N"), jint>(); }
inline jint KeyEvent::KEYCODE_NAVIGATE_IN_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_NAVIGATE_IN"), jint>(); }
inline jint KeyEvent::KEYCODE_NAVIGATE_NEXT_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_NAVIGATE_NEXT"), jint>(); }
inline jint KeyEvent::KEYCODE_NAVIGATE_OUT_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_NAVIGATE_OUT"), jint>(); }
inline jint KeyEvent::KEYCODE_NAVIGATE_PREVIOUS_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_NAVIGATE_PREVIOUS"), jint>(); }
inline jint KeyEvent::KEYCODE_NOTIFICATION_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_NOTIFICATION"), jint>(); }
inline jint KeyEvent::KEYCODE_NUM_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_NUM"), jint>(); }
inline jint KeyEvent::KEYCODE_NUMPAD_0_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_NUMPAD_0"), jint>(); }
inline jint KeyEvent::KEYCODE_NUMPAD_1_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_NUMPAD_1"), jint>(); }
inline jint KeyEvent::KEYCODE_NUMPAD_2_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_NUMPAD_2"), jint>(); }
inline jint KeyEvent::KEYCODE_NUMPAD_3_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_NUMPAD_3"), jint>(); }
inline jint KeyEvent::KEYCODE_NUMPAD_4_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_NUMPAD_4"), jint>(); }
inline jint KeyEvent::KEYCODE_NUMPAD_5_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_NUMPAD_5"), jint>(); }
inline jint KeyEvent::KEYCODE_NUMPAD_6_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_NUMPAD_6"), jint>(); }
inline jint KeyEvent::KEYCODE_NUMPAD_7_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_NUMPAD_7"), jint>(); }
inline jint KeyEvent::KEYCODE_NUMPAD_8_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_NUMPAD_8"), jint>(); }
inline jint KeyEvent::KEYCODE_NUMPAD_9_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_NUMPAD_9"), jint>(); }
inline jint KeyEvent::KEYCODE_NUMPAD_ADD_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_NUMPAD_ADD"), jint>(); }
inline jint KeyEvent::KEYCODE_NUMPAD_COMMA_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_NUMPAD_COMMA"), jint>(); }
inline jint KeyEvent::KEYCODE_NUMPAD_DIVIDE_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_NUMPAD_DIVIDE"), jint>(); }
inline jint KeyEvent::KEYCODE_NUMPAD_DOT_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_NUMPAD_DOT"), jint>(); }
inline jint KeyEvent::KEYCODE_NUMPAD_ENTER_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_NUMPAD_ENTER"), jint>(); }
inline jint KeyEvent::KEYCODE_NUMPAD_EQUALS_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_NUMPAD_EQUALS"), jint>(); }
inline jint KeyEvent::KEYCODE_NUMPAD_LEFT_PAREN_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_NUMPAD_LEFT_PAREN"), jint>(); }
inline jint KeyEvent::KEYCODE_NUMPAD_MULTIPLY_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_NUMPAD_MULTIPLY"), jint>(); }
inline jint KeyEvent::KEYCODE_NUMPAD_RIGHT_PAREN_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_NUMPAD_RIGHT_PAREN"), jint>(); }
inline jint KeyEvent::KEYCODE_NUMPAD_SUBTRACT_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_NUMPAD_SUBTRACT"), jint>(); }
inline jint KeyEvent::KEYCODE_NUM_LOCK_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_NUM_LOCK"), jint>(); }
inline jint KeyEvent::KEYCODE_O_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_O"), jint>(); }
inline jint KeyEvent::KEYCODE_P_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_P"), jint>(); }
inline jint KeyEvent::KEYCODE_PAGE_DOWN_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_PAGE_DOWN"), jint>(); }
inline jint KeyEvent::KEYCODE_PAGE_UP_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_PAGE_UP"), jint>(); }
inline jint KeyEvent::KEYCODE_PAIRING_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_PAIRING"), jint>(); }
inline jint KeyEvent::KEYCODE_PASTE_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_PASTE"), jint>(); }
inline jint KeyEvent::KEYCODE_PERIOD_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_PERIOD"), jint>(); }
inline jint KeyEvent::KEYCODE_PICTSYMBOLS_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_PICTSYMBOLS"), jint>(); }
inline jint KeyEvent::KEYCODE_PLUS_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_PLUS"), jint>(); }
inline jint KeyEvent::KEYCODE_POUND_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_POUND"), jint>(); }
inline jint KeyEvent::KEYCODE_POWER_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_POWER"), jint>(); }
inline jint KeyEvent::KEYCODE_PROG_BLUE_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_PROG_BLUE"), jint>(); }
inline jint KeyEvent::KEYCODE_PROG_GREEN_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_PROG_GREEN"), jint>(); }
inline jint KeyEvent::KEYCODE_PROG_RED_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_PROG_RED"), jint>(); }
inline jint KeyEvent::KEYCODE_PROG_YELLOW_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_PROG_YELLOW"), jint>(); }
inline jint KeyEvent::KEYCODE_Q_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_Q"), jint>(); }
inline jint KeyEvent::KEYCODE_R_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_R"), jint>(); }
inline jint KeyEvent::KEYCODE_REFRESH_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_REFRESH"), jint>(); }
inline jint KeyEvent::KEYCODE_RIGHT_BRACKET_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_RIGHT_BRACKET"), jint>(); }
inline jint KeyEvent::KEYCODE_RO_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_RO"), jint>(); }
inline jint KeyEvent::KEYCODE_S_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_S"), jint>(); }
inline jint KeyEvent::KEYCODE_SCROLL_LOCK_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_SCROLL_LOCK"), jint>(); }
inline jint KeyEvent::KEYCODE_SEARCH_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_SEARCH"), jint>(); }
inline jint KeyEvent::KEYCODE_SEMICOLON_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_SEMICOLON"), jint>(); }
inline jint KeyEvent::KEYCODE_SETTINGS_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_SETTINGS"), jint>(); }
inline jint KeyEvent::KEYCODE_SHIFT_LEFT_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_SHIFT_LEFT"), jint>(); }
inline jint KeyEvent::KEYCODE_SHIFT_RIGHT_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_SHIFT_RIGHT"), jint>(); }
inline jint KeyEvent::KEYCODE_SLASH_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_SLASH"), jint>(); }
inline jint KeyEvent::KEYCODE_SLEEP_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_SLEEP"), jint>(); }
inline jint KeyEvent::KEYCODE_SOFT_LEFT_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_SOFT_LEFT"), jint>(); }
inline jint KeyEvent::KEYCODE_SOFT_RIGHT_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_SOFT_RIGHT"), jint>(); }
inline jint KeyEvent::KEYCODE_SOFT_SLEEP_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_SOFT_SLEEP"), jint>(); }
inline jint KeyEvent::KEYCODE_SPACE_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_SPACE"), jint>(); }
inline jint KeyEvent::KEYCODE_STAR_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_STAR"), jint>(); }
inline jint KeyEvent::KEYCODE_STB_INPUT_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_STB_INPUT"), jint>(); }
inline jint KeyEvent::KEYCODE_STB_POWER_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_STB_POWER"), jint>(); }
inline jint KeyEvent::KEYCODE_STEM_1_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_STEM_1"), jint>(); }
inline jint KeyEvent::KEYCODE_STEM_2_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_STEM_2"), jint>(); }
inline jint KeyEvent::KEYCODE_STEM_3_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_STEM_3"), jint>(); }
inline jint KeyEvent::KEYCODE_STEM_PRIMARY_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_STEM_PRIMARY"), jint>(); }
inline jint KeyEvent::KEYCODE_SWITCH_CHARSET_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_SWITCH_CHARSET"), jint>(); }
inline jint KeyEvent::KEYCODE_SYM_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_SYM"), jint>(); }
inline jint KeyEvent::KEYCODE_SYSRQ_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_SYSRQ"), jint>(); }
inline jint KeyEvent::KEYCODE_SYSTEM_NAVIGATION_DOWN_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_SYSTEM_NAVIGATION_DOWN"), jint>(); }
inline jint KeyEvent::KEYCODE_SYSTEM_NAVIGATION_LEFT_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_SYSTEM_NAVIGATION_LEFT"), jint>(); }
inline jint KeyEvent::KEYCODE_SYSTEM_NAVIGATION_RIGHT_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_SYSTEM_NAVIGATION_RIGHT"), jint>(); }
inline jint KeyEvent::KEYCODE_SYSTEM_NAVIGATION_UP_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_SYSTEM_NAVIGATION_UP"), jint>(); }
inline jint KeyEvent::KEYCODE_T_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_T"), jint>(); }
inline jint KeyEvent::KEYCODE_TAB_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_TAB"), jint>(); }
inline jint KeyEvent::KEYCODE_TV_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_TV"), jint>(); }
inline jint KeyEvent::KEYCODE_TV_ANTENNA_CABLE_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_TV_ANTENNA_CABLE"), jint>(); }
inline jint KeyEvent::KEYCODE_TV_AUDIO_DESCRIPTION_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_TV_AUDIO_DESCRIPTION"), jint>(); }
inline jint KeyEvent::KEYCODE_TV_AUDIO_DESCRIPTION_MIX_DOWN_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_TV_AUDIO_DESCRIPTION_MIX_DOWN"), jint>(); }
inline jint KeyEvent::KEYCODE_TV_AUDIO_DESCRIPTION_MIX_UP_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_TV_AUDIO_DESCRIPTION_MIX_UP"), jint>(); }
inline jint KeyEvent::KEYCODE_TV_CONTENTS_MENU_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_TV_CONTENTS_MENU"), jint>(); }
inline jint KeyEvent::KEYCODE_TV_DATA_SERVICE_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_TV_DATA_SERVICE"), jint>(); }
inline jint KeyEvent::KEYCODE_TV_INPUT_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_TV_INPUT"), jint>(); }
inline jint KeyEvent::KEYCODE_TV_INPUT_COMPONENT_1_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_TV_INPUT_COMPONENT_1"), jint>(); }
inline jint KeyEvent::KEYCODE_TV_INPUT_COMPONENT_2_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_TV_INPUT_COMPONENT_2"), jint>(); }
inline jint KeyEvent::KEYCODE_TV_INPUT_COMPOSITE_1_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_TV_INPUT_COMPOSITE_1"), jint>(); }
inline jint KeyEvent::KEYCODE_TV_INPUT_COMPOSITE_2_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_TV_INPUT_COMPOSITE_2"), jint>(); }
inline jint KeyEvent::KEYCODE_TV_INPUT_HDMI_1_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_TV_INPUT_HDMI_1"), jint>(); }
inline jint KeyEvent::KEYCODE_TV_INPUT_HDMI_2_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_TV_INPUT_HDMI_2"), jint>(); }
inline jint KeyEvent::KEYCODE_TV_INPUT_HDMI_3_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_TV_INPUT_HDMI_3"), jint>(); }
inline jint KeyEvent::KEYCODE_TV_INPUT_HDMI_4_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_TV_INPUT_HDMI_4"), jint>(); }
inline jint KeyEvent::KEYCODE_TV_INPUT_VGA_1_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_TV_INPUT_VGA_1"), jint>(); }
inline jint KeyEvent::KEYCODE_TV_MEDIA_CONTEXT_MENU_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_TV_MEDIA_CONTEXT_MENU"), jint>(); }
inline jint KeyEvent::KEYCODE_TV_NETWORK_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_TV_NETWORK"), jint>(); }
inline jint KeyEvent::KEYCODE_TV_NUMBER_ENTRY_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_TV_NUMBER_ENTRY"), jint>(); }
inline jint KeyEvent::KEYCODE_TV_POWER_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_TV_POWER"), jint>(); }
inline jint KeyEvent::KEYCODE_TV_RADIO_SERVICE_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_TV_RADIO_SERVICE"), jint>(); }
inline jint KeyEvent::KEYCODE_TV_SATELLITE_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_TV_SATELLITE"), jint>(); }
inline jint KeyEvent::KEYCODE_TV_SATELLITE_BS_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_TV_SATELLITE_BS"), jint>(); }
inline jint KeyEvent::KEYCODE_TV_SATELLITE_CS_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_TV_SATELLITE_CS"), jint>(); }
inline jint KeyEvent::KEYCODE_TV_SATELLITE_SERVICE_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_TV_SATELLITE_SERVICE"), jint>(); }
inline jint KeyEvent::KEYCODE_TV_TELETEXT_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_TV_TELETEXT"), jint>(); }
inline jint KeyEvent::KEYCODE_TV_TERRESTRIAL_ANALOG_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_TV_TERRESTRIAL_ANALOG"), jint>(); }
inline jint KeyEvent::KEYCODE_TV_TERRESTRIAL_DIGITAL_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_TV_TERRESTRIAL_DIGITAL"), jint>(); }
inline jint KeyEvent::KEYCODE_TV_TIMER_PROGRAMMING_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_TV_TIMER_PROGRAMMING"), jint>(); }
inline jint KeyEvent::KEYCODE_TV_ZOOM_MODE_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_TV_ZOOM_MODE"), jint>(); }
inline jint KeyEvent::KEYCODE_U_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_U"), jint>(); }
inline jint KeyEvent::KEYCODE_UNKNOWN_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_UNKNOWN"), jint>(); }
inline jint KeyEvent::KEYCODE_V_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_V"), jint>(); }
inline jint KeyEvent::KEYCODE_VOICE_ASSIST_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_VOICE_ASSIST"), jint>(); }
inline jint KeyEvent::KEYCODE_VOLUME_DOWN_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_VOLUME_DOWN"), jint>(); }
inline jint KeyEvent::KEYCODE_VOLUME_MUTE_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_VOLUME_MUTE"), jint>(); }
inline jint KeyEvent::KEYCODE_VOLUME_UP_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_VOLUME_UP"), jint>(); }
inline jint KeyEvent::KEYCODE_W_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_W"), jint>(); }
inline jint KeyEvent::KEYCODE_WAKEUP_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_WAKEUP"), jint>(); }
inline jint KeyEvent::KEYCODE_WINDOW_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_WINDOW"), jint>(); }
inline jint KeyEvent::KEYCODE_X_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_X"), jint>(); }
inline jint KeyEvent::KEYCODE_Y_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_Y"), jint>(); }
inline jint KeyEvent::KEYCODE_YEN_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_YEN"), jint>(); }
inline jint KeyEvent::KEYCODE_Z_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_Z"), jint>(); }
inline jint KeyEvent::KEYCODE_ZENKAKU_HANKAKU_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_ZENKAKU_HANKAKU"), jint>(); }
inline jint KeyEvent::KEYCODE_ZOOM_IN_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_ZOOM_IN"), jint>(); }
inline jint KeyEvent::KEYCODE_ZOOM_OUT_() { return get_static_field<SCAPIX_META_STRING("KEYCODE_ZOOM_OUT"), jint>(); }
inline jint KeyEvent::MAX_KEYCODE_() { return get_static_field<SCAPIX_META_STRING("MAX_KEYCODE"), jint>(); }
inline jint KeyEvent::META_ALT_LEFT_ON_() { return get_static_field<SCAPIX_META_STRING("META_ALT_LEFT_ON"), jint>(); }
inline jint KeyEvent::META_ALT_MASK_() { return get_static_field<SCAPIX_META_STRING("META_ALT_MASK"), jint>(); }
inline jint KeyEvent::META_ALT_ON_() { return get_static_field<SCAPIX_META_STRING("META_ALT_ON"), jint>(); }
inline jint KeyEvent::META_ALT_RIGHT_ON_() { return get_static_field<SCAPIX_META_STRING("META_ALT_RIGHT_ON"), jint>(); }
inline jint KeyEvent::META_CAPS_LOCK_ON_() { return get_static_field<SCAPIX_META_STRING("META_CAPS_LOCK_ON"), jint>(); }
inline jint KeyEvent::META_CTRL_LEFT_ON_() { return get_static_field<SCAPIX_META_STRING("META_CTRL_LEFT_ON"), jint>(); }
inline jint KeyEvent::META_CTRL_MASK_() { return get_static_field<SCAPIX_META_STRING("META_CTRL_MASK"), jint>(); }
inline jint KeyEvent::META_CTRL_ON_() { return get_static_field<SCAPIX_META_STRING("META_CTRL_ON"), jint>(); }
inline jint KeyEvent::META_CTRL_RIGHT_ON_() { return get_static_field<SCAPIX_META_STRING("META_CTRL_RIGHT_ON"), jint>(); }
inline jint KeyEvent::META_FUNCTION_ON_() { return get_static_field<SCAPIX_META_STRING("META_FUNCTION_ON"), jint>(); }
inline jint KeyEvent::META_META_LEFT_ON_() { return get_static_field<SCAPIX_META_STRING("META_META_LEFT_ON"), jint>(); }
inline jint KeyEvent::META_META_MASK_() { return get_static_field<SCAPIX_META_STRING("META_META_MASK"), jint>(); }
inline jint KeyEvent::META_META_ON_() { return get_static_field<SCAPIX_META_STRING("META_META_ON"), jint>(); }
inline jint KeyEvent::META_META_RIGHT_ON_() { return get_static_field<SCAPIX_META_STRING("META_META_RIGHT_ON"), jint>(); }
inline jint KeyEvent::META_NUM_LOCK_ON_() { return get_static_field<SCAPIX_META_STRING("META_NUM_LOCK_ON"), jint>(); }
inline jint KeyEvent::META_SCROLL_LOCK_ON_() { return get_static_field<SCAPIX_META_STRING("META_SCROLL_LOCK_ON"), jint>(); }
inline jint KeyEvent::META_SHIFT_LEFT_ON_() { return get_static_field<SCAPIX_META_STRING("META_SHIFT_LEFT_ON"), jint>(); }
inline jint KeyEvent::META_SHIFT_MASK_() { return get_static_field<SCAPIX_META_STRING("META_SHIFT_MASK"), jint>(); }
inline jint KeyEvent::META_SHIFT_ON_() { return get_static_field<SCAPIX_META_STRING("META_SHIFT_ON"), jint>(); }
inline jint KeyEvent::META_SHIFT_RIGHT_ON_() { return get_static_field<SCAPIX_META_STRING("META_SHIFT_RIGHT_ON"), jint>(); }
inline jint KeyEvent::META_SYM_ON_() { return get_static_field<SCAPIX_META_STRING("META_SYM_ON"), jint>(); }
inline ref<KeyEvent> KeyEvent::new_object(jint action, jint code) { return base_::new_object(action, code); }
inline ref<KeyEvent> KeyEvent::new_object(jlong downTime, jlong p2, jint eventTime, jint p4, jint action) { return base_::new_object(downTime, p2, eventTime, p4, action); }
inline ref<KeyEvent> KeyEvent::new_object(jlong downTime, jlong p2, jint eventTime, jint p4, jint action, jint code) { return base_::new_object(downTime, p2, eventTime, p4, action, code); }
inline ref<KeyEvent> KeyEvent::new_object(jlong downTime, jlong p2, jint eventTime, jint p4, jint action, jint code, jint repeat, jint metaState) { return base_::new_object(downTime, p2, eventTime, p4, action, code, repeat, metaState); }
inline ref<KeyEvent> KeyEvent::new_object(jlong downTime, jlong p2, jint eventTime, jint p4, jint action, jint code, jint repeat, jint metaState, jint deviceId) { return base_::new_object(downTime, p2, eventTime, p4, action, code, repeat, metaState, deviceId); }
inline ref<KeyEvent> KeyEvent::new_object(jlong downTime, jlong p2, jint eventTime, jint p4, jint action, jint code, jint repeat, jint metaState, jint deviceId, jint scancode) { return base_::new_object(downTime, p2, eventTime, p4, action, code, repeat, metaState, deviceId, scancode); }
inline ref<KeyEvent> KeyEvent::new_object(jlong time, ref<java::lang::String> p2, jint characters, jint deviceId) { return base_::new_object(time, p2, characters, deviceId); }
inline ref<KeyEvent> KeyEvent::new_object(ref<android::view::KeyEvent> origEvent) { return base_::new_object(origEvent); }
inline ref<KeyEvent> KeyEvent::new_object(ref<android::view::KeyEvent> origEvent, jlong eventTime, jint p3) { return base_::new_object(origEvent, eventTime, p3); }
inline jint KeyEvent::getMaxKeyCode() { return call_static_method<SCAPIX_META_STRING("getMaxKeyCode"), jint>(); }
inline jint KeyEvent::getDeadChar(jint accent, jint c) { return call_static_method<SCAPIX_META_STRING("getDeadChar"), jint>(accent, c); }
inline ref<android::view::KeyEvent> KeyEvent::changeTimeRepeat(ref<android::view::KeyEvent> event, jlong eventTime, jint p3) { return call_static_method<SCAPIX_META_STRING("changeTimeRepeat"), ref<android::view::KeyEvent>>(event, eventTime, p3); }
inline ref<android::view::KeyEvent> KeyEvent::changeTimeRepeat(ref<android::view::KeyEvent> event, jlong eventTime, jint p3, jint newRepeat) { return call_static_method<SCAPIX_META_STRING("changeTimeRepeat"), ref<android::view::KeyEvent>>(event, eventTime, p3, newRepeat); }
inline ref<android::view::KeyEvent> KeyEvent::changeAction(ref<android::view::KeyEvent> event, jint action) { return call_static_method<SCAPIX_META_STRING("changeAction"), ref<android::view::KeyEvent>>(event, action); }
inline ref<android::view::KeyEvent> KeyEvent::changeFlags(ref<android::view::KeyEvent> event, jint flags) { return call_static_method<SCAPIX_META_STRING("changeFlags"), ref<android::view::KeyEvent>>(event, flags); }
inline jboolean KeyEvent::isSystem() { return call_method<SCAPIX_META_STRING("isSystem"), jboolean>(); }
inline jboolean KeyEvent::isGamepadButton(jint keyCode) { return call_static_method<SCAPIX_META_STRING("isGamepadButton"), jboolean>(keyCode); }
inline jint KeyEvent::getDeviceId() { return call_method<SCAPIX_META_STRING("getDeviceId"), jint>(); }
inline jint KeyEvent::getSource() { return call_method<SCAPIX_META_STRING("getSource"), jint>(); }
inline void KeyEvent::setSource(jint source) { return call_method<SCAPIX_META_STRING("setSource"), void>(source); }
inline jint KeyEvent::getMetaState() { return call_method<SCAPIX_META_STRING("getMetaState"), jint>(); }
inline jint KeyEvent::getModifiers() { return call_method<SCAPIX_META_STRING("getModifiers"), jint>(); }
inline jint KeyEvent::getFlags() { return call_method<SCAPIX_META_STRING("getFlags"), jint>(); }
inline jint KeyEvent::getModifierMetaStateMask() { return call_static_method<SCAPIX_META_STRING("getModifierMetaStateMask"), jint>(); }
inline jboolean KeyEvent::isModifierKey(jint keyCode) { return call_static_method<SCAPIX_META_STRING("isModifierKey"), jboolean>(keyCode); }
inline jint KeyEvent::normalizeMetaState(jint metaState) { return call_static_method<SCAPIX_META_STRING("normalizeMetaState"), jint>(metaState); }
inline jboolean KeyEvent::metaStateHasNoModifiers(jint metaState) { return call_static_method<SCAPIX_META_STRING("metaStateHasNoModifiers"), jboolean>(metaState); }
inline jboolean KeyEvent::metaStateHasModifiers(jint metaState, jint modifiers) { return call_static_method<SCAPIX_META_STRING("metaStateHasModifiers"), jboolean>(metaState, modifiers); }
inline jboolean KeyEvent::hasNoModifiers() { return call_method<SCAPIX_META_STRING("hasNoModifiers"), jboolean>(); }
inline jboolean KeyEvent::hasModifiers(jint modifiers) { return call_method<SCAPIX_META_STRING("hasModifiers"), jboolean>(modifiers); }
inline jboolean KeyEvent::isAltPressed() { return call_method<SCAPIX_META_STRING("isAltPressed"), jboolean>(); }
inline jboolean KeyEvent::isShiftPressed() { return call_method<SCAPIX_META_STRING("isShiftPressed"), jboolean>(); }
inline jboolean KeyEvent::isSymPressed() { return call_method<SCAPIX_META_STRING("isSymPressed"), jboolean>(); }
inline jboolean KeyEvent::isCtrlPressed() { return call_method<SCAPIX_META_STRING("isCtrlPressed"), jboolean>(); }
inline jboolean KeyEvent::isMetaPressed() { return call_method<SCAPIX_META_STRING("isMetaPressed"), jboolean>(); }
inline jboolean KeyEvent::isFunctionPressed() { return call_method<SCAPIX_META_STRING("isFunctionPressed"), jboolean>(); }
inline jboolean KeyEvent::isCapsLockOn() { return call_method<SCAPIX_META_STRING("isCapsLockOn"), jboolean>(); }
inline jboolean KeyEvent::isNumLockOn() { return call_method<SCAPIX_META_STRING("isNumLockOn"), jboolean>(); }
inline jboolean KeyEvent::isScrollLockOn() { return call_method<SCAPIX_META_STRING("isScrollLockOn"), jboolean>(); }
inline jint KeyEvent::getAction() { return call_method<SCAPIX_META_STRING("getAction"), jint>(); }
inline jboolean KeyEvent::isCanceled() { return call_method<SCAPIX_META_STRING("isCanceled"), jboolean>(); }
inline void KeyEvent::startTracking() { return call_method<SCAPIX_META_STRING("startTracking"), void>(); }
inline jboolean KeyEvent::isTracking() { return call_method<SCAPIX_META_STRING("isTracking"), jboolean>(); }
inline jboolean KeyEvent::isLongPress() { return call_method<SCAPIX_META_STRING("isLongPress"), jboolean>(); }
inline jint KeyEvent::getKeyCode() { return call_method<SCAPIX_META_STRING("getKeyCode"), jint>(); }
inline ref<java::lang::String> KeyEvent::getCharacters() { return call_method<SCAPIX_META_STRING("getCharacters"), ref<java::lang::String>>(); }
inline jint KeyEvent::getScanCode() { return call_method<SCAPIX_META_STRING("getScanCode"), jint>(); }
inline jint KeyEvent::getRepeatCount() { return call_method<SCAPIX_META_STRING("getRepeatCount"), jint>(); }
inline jlong KeyEvent::getDownTime() { return call_method<SCAPIX_META_STRING("getDownTime"), jlong>(); }
inline jlong KeyEvent::getEventTime() { return call_method<SCAPIX_META_STRING("getEventTime"), jlong>(); }
inline ref<android::view::KeyCharacterMap> KeyEvent::getKeyCharacterMap() { return call_method<SCAPIX_META_STRING("getKeyCharacterMap"), ref<android::view::KeyCharacterMap>>(); }
inline jchar KeyEvent::getDisplayLabel() { return call_method<SCAPIX_META_STRING("getDisplayLabel"), jchar>(); }
inline jint KeyEvent::getUnicodeChar() { return call_method<SCAPIX_META_STRING("getUnicodeChar"), jint>(); }
inline jint KeyEvent::getUnicodeChar(jint metaState) { return call_method<SCAPIX_META_STRING("getUnicodeChar"), jint>(metaState); }
inline jboolean KeyEvent::getKeyData(ref<android::view::KeyCharacterMap_KeyData> results) { return call_method<SCAPIX_META_STRING("getKeyData"), jboolean>(results); }
inline jchar KeyEvent::getMatch(ref<link::java::array<jchar>> chars) { return call_method<SCAPIX_META_STRING("getMatch"), jchar>(chars); }
inline jchar KeyEvent::getMatch(ref<link::java::array<jchar>> chars, jint metaState) { return call_method<SCAPIX_META_STRING("getMatch"), jchar>(chars, metaState); }
inline jchar KeyEvent::getNumber() { return call_method<SCAPIX_META_STRING("getNumber"), jchar>(); }
inline jboolean KeyEvent::isPrintingKey() { return call_method<SCAPIX_META_STRING("isPrintingKey"), jboolean>(); }
inline jboolean KeyEvent::dispatch(ref<android::view::KeyEvent_Callback> receiver) { return call_method<SCAPIX_META_STRING("dispatch"), jboolean>(receiver); }
inline jboolean KeyEvent::dispatch(ref<android::view::KeyEvent_Callback> receiver, ref<android::view::KeyEvent_DispatcherState> state, ref<java::lang::Object> target) { return call_method<SCAPIX_META_STRING("dispatch"), jboolean>(receiver, state, target); }
inline ref<java::lang::String> KeyEvent::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }
inline ref<java::lang::String> KeyEvent::keyCodeToString(jint keyCode) { return call_static_method<SCAPIX_META_STRING("keyCodeToString"), ref<java::lang::String>>(keyCode); }
inline jint KeyEvent::keyCodeFromString(ref<java::lang::String> symbolicName) { return call_static_method<SCAPIX_META_STRING("keyCodeFromString"), jint>(symbolicName); }
inline void KeyEvent::writeToParcel(ref<android::os::Parcel> out, jint flags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(out, flags); }

} // namespace android::view
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_VIEW_KEYEVENT_H
