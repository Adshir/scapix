// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/annotation/Annotation.h>

#ifndef SCAPIX_ANDROID_VIEW_VIEWDEBUG_EXPORTEDPROPERTY_H
#define SCAPIX_ANDROID_VIEW_VIEWDEBUG_EXPORTEDPROPERTY_H

namespace scapix::java_api {

namespace android::view { class ViewDebug_FlagToString; }
namespace android::view { class ViewDebug_IntToString; }
namespace java::lang { class String; }

namespace android::view {

class ViewDebug_ExportedProperty : public object_base<SCAPIX_META_STRING("android/view/ViewDebug$ExportedProperty"),
	java::lang::Object,
	java::lang::annotation::Annotation>
{
public:

	jboolean resolveId();
	ref<link::java::array<android::view::ViewDebug_IntToString>> mapping();
	ref<link::java::array<android::view::ViewDebug_IntToString>> indexMapping();
	ref<link::java::array<android::view::ViewDebug_FlagToString>> flagMapping();
	jboolean deepExport();
	ref<java::lang::String> prefix();
	ref<java::lang::String> category();
	jboolean formatToHexString();
	jboolean hasAdjacentMapping();

protected:

	ViewDebug_ExportedProperty(handle_type h) : base_(h) {}

};

} // namespace android::view
} // namespace scapix::java_api

#include <scapix/java_api/android/view/ViewDebug_FlagToString.h>
#include <scapix/java_api/android/view/ViewDebug_IntToString.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::view {

inline jboolean ViewDebug_ExportedProperty::resolveId() { return call_method<SCAPIX_META_STRING("resolveId"), jboolean>(); }
inline ref<link::java::array<android::view::ViewDebug_IntToString>> ViewDebug_ExportedProperty::mapping() { return call_method<SCAPIX_META_STRING("mapping"), ref<link::java::array<android::view::ViewDebug_IntToString>>>(); }
inline ref<link::java::array<android::view::ViewDebug_IntToString>> ViewDebug_ExportedProperty::indexMapping() { return call_method<SCAPIX_META_STRING("indexMapping"), ref<link::java::array<android::view::ViewDebug_IntToString>>>(); }
inline ref<link::java::array<android::view::ViewDebug_FlagToString>> ViewDebug_ExportedProperty::flagMapping() { return call_method<SCAPIX_META_STRING("flagMapping"), ref<link::java::array<android::view::ViewDebug_FlagToString>>>(); }
inline jboolean ViewDebug_ExportedProperty::deepExport() { return call_method<SCAPIX_META_STRING("deepExport"), jboolean>(); }
inline ref<java::lang::String> ViewDebug_ExportedProperty::prefix() { return call_method<SCAPIX_META_STRING("prefix"), ref<java::lang::String>>(); }
inline ref<java::lang::String> ViewDebug_ExportedProperty::category() { return call_method<SCAPIX_META_STRING("category"), ref<java::lang::String>>(); }
inline jboolean ViewDebug_ExportedProperty::formatToHexString() { return call_method<SCAPIX_META_STRING("formatToHexString"), jboolean>(); }
inline jboolean ViewDebug_ExportedProperty::hasAdjacentMapping() { return call_method<SCAPIX_META_STRING("hasAdjacentMapping"), jboolean>(); }

} // namespace android::view
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_VIEW_VIEWDEBUG_EXPORTEDPROPERTY_H
