// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_VIEW_MOTIONEVENT_POINTERPROPERTIES_H
#define SCAPIX_ANDROID_VIEW_MOTIONEVENT_POINTERPROPERTIES_H

namespace scapix::java_api {


namespace android::view {

class MotionEvent_PointerProperties : public object_base<SCAPIX_META_STRING("android/view/MotionEvent$PointerProperties"),
	java::lang::Object>
{
public:

	jint id();
	void id(jint);
	jint toolType();
	void toolType(jint);

	static ref<MotionEvent_PointerProperties> new_object();
	static ref<MotionEvent_PointerProperties> new_object(ref<android::view::MotionEvent_PointerProperties> other);
	void clear();
	void copyFrom(ref<android::view::MotionEvent_PointerProperties> other);
	jboolean equals(ref<java::lang::Object> other);
	jint hashCode();

protected:

	MotionEvent_PointerProperties(handle_type h) : base_(h) {}

};

} // namespace android::view
} // namespace scapix::java_api


namespace scapix::java_api {
namespace android::view {

inline jint MotionEvent_PointerProperties::id() { return get_field<SCAPIX_META_STRING("id"), jint>(); }
inline void MotionEvent_PointerProperties::id(jint v) { set_field<SCAPIX_META_STRING("id"), jint>(v); }
inline jint MotionEvent_PointerProperties::toolType() { return get_field<SCAPIX_META_STRING("toolType"), jint>(); }
inline void MotionEvent_PointerProperties::toolType(jint v) { set_field<SCAPIX_META_STRING("toolType"), jint>(v); }
inline ref<MotionEvent_PointerProperties> MotionEvent_PointerProperties::new_object() { return base_::new_object(); }
inline ref<MotionEvent_PointerProperties> MotionEvent_PointerProperties::new_object(ref<android::view::MotionEvent_PointerProperties> other) { return base_::new_object(other); }
inline void MotionEvent_PointerProperties::clear() { return call_method<SCAPIX_META_STRING("clear"), void>(); }
inline void MotionEvent_PointerProperties::copyFrom(ref<android::view::MotionEvent_PointerProperties> other) { return call_method<SCAPIX_META_STRING("copyFrom"), void>(other); }
inline jboolean MotionEvent_PointerProperties::equals(ref<java::lang::Object> other) { return call_method<SCAPIX_META_STRING("equals"), jboolean>(other); }
inline jint MotionEvent_PointerProperties::hashCode() { return call_method<SCAPIX_META_STRING("hashCode"), jint>(); }

} // namespace android::view
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_VIEW_MOTIONEVENT_POINTERPROPERTIES_H
