// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/view/animation/LayoutAnimationController.h>

#ifndef SCAPIX_ANDROID_VIEW_ANIMATION_GRIDLAYOUTANIMATIONCONTROLLER_H
#define SCAPIX_ANDROID_VIEW_ANIMATION_GRIDLAYOUTANIMATIONCONTROLLER_H

namespace scapix::java_api {

namespace android::content { class Context; }
namespace android::util { class AttributeSet; }
namespace android::view::animation { class Animation; }
namespace android::view::animation { class GridLayoutAnimationController_AnimationParameters; }

namespace android::view::animation {

class GridLayoutAnimationController : public object_base<SCAPIX_META_STRING("android/view/animation/GridLayoutAnimationController"),
	android::view::animation::LayoutAnimationController>
{
public:

	using AnimationParameters = GridLayoutAnimationController_AnimationParameters;

	static jint DIRECTION_BOTTOM_TO_TOP_();
	static jint DIRECTION_HORIZONTAL_MASK_();
	static jint DIRECTION_LEFT_TO_RIGHT_();
	static jint DIRECTION_RIGHT_TO_LEFT_();
	static jint DIRECTION_TOP_TO_BOTTOM_();
	static jint DIRECTION_VERTICAL_MASK_();
	static jint PRIORITY_COLUMN_();
	static jint PRIORITY_NONE_();
	static jint PRIORITY_ROW_();

	static ref<GridLayoutAnimationController> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs);
	static ref<GridLayoutAnimationController> new_object(ref<android::view::animation::Animation> animation);
	static ref<GridLayoutAnimationController> new_object(ref<android::view::animation::Animation> animation, jfloat columnDelay, jfloat rowDelay);
	jfloat getColumnDelay();
	void setColumnDelay(jfloat columnDelay);
	jfloat getRowDelay();
	void setRowDelay(jfloat rowDelay);
	jint getDirection();
	void setDirection(jint direction);
	jint getDirectionPriority();
	void setDirectionPriority(jint directionPriority);
	jboolean willOverlap();

protected:

	GridLayoutAnimationController(handle_type h) : base_(h) {}

};

} // namespace android::view::animation
} // namespace scapix::java_api

#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/util/AttributeSet.h>
#include <scapix/java_api/android/view/animation/Animation.h>

namespace scapix::java_api {
namespace android::view::animation {

inline jint GridLayoutAnimationController::DIRECTION_BOTTOM_TO_TOP_() { return get_static_field<SCAPIX_META_STRING("DIRECTION_BOTTOM_TO_TOP"), jint>(); }
inline jint GridLayoutAnimationController::DIRECTION_HORIZONTAL_MASK_() { return get_static_field<SCAPIX_META_STRING("DIRECTION_HORIZONTAL_MASK"), jint>(); }
inline jint GridLayoutAnimationController::DIRECTION_LEFT_TO_RIGHT_() { return get_static_field<SCAPIX_META_STRING("DIRECTION_LEFT_TO_RIGHT"), jint>(); }
inline jint GridLayoutAnimationController::DIRECTION_RIGHT_TO_LEFT_() { return get_static_field<SCAPIX_META_STRING("DIRECTION_RIGHT_TO_LEFT"), jint>(); }
inline jint GridLayoutAnimationController::DIRECTION_TOP_TO_BOTTOM_() { return get_static_field<SCAPIX_META_STRING("DIRECTION_TOP_TO_BOTTOM"), jint>(); }
inline jint GridLayoutAnimationController::DIRECTION_VERTICAL_MASK_() { return get_static_field<SCAPIX_META_STRING("DIRECTION_VERTICAL_MASK"), jint>(); }
inline jint GridLayoutAnimationController::PRIORITY_COLUMN_() { return get_static_field<SCAPIX_META_STRING("PRIORITY_COLUMN"), jint>(); }
inline jint GridLayoutAnimationController::PRIORITY_NONE_() { return get_static_field<SCAPIX_META_STRING("PRIORITY_NONE"), jint>(); }
inline jint GridLayoutAnimationController::PRIORITY_ROW_() { return get_static_field<SCAPIX_META_STRING("PRIORITY_ROW"), jint>(); }
inline ref<GridLayoutAnimationController> GridLayoutAnimationController::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs) { return base_::new_object(context, attrs); }
inline ref<GridLayoutAnimationController> GridLayoutAnimationController::new_object(ref<android::view::animation::Animation> animation) { return base_::new_object(animation); }
inline ref<GridLayoutAnimationController> GridLayoutAnimationController::new_object(ref<android::view::animation::Animation> animation, jfloat columnDelay, jfloat rowDelay) { return base_::new_object(animation, columnDelay, rowDelay); }
inline jfloat GridLayoutAnimationController::getColumnDelay() { return call_method<SCAPIX_META_STRING("getColumnDelay"), jfloat>(); }
inline void GridLayoutAnimationController::setColumnDelay(jfloat columnDelay) { return call_method<SCAPIX_META_STRING("setColumnDelay"), void>(columnDelay); }
inline jfloat GridLayoutAnimationController::getRowDelay() { return call_method<SCAPIX_META_STRING("getRowDelay"), jfloat>(); }
inline void GridLayoutAnimationController::setRowDelay(jfloat rowDelay) { return call_method<SCAPIX_META_STRING("setRowDelay"), void>(rowDelay); }
inline jint GridLayoutAnimationController::getDirection() { return call_method<SCAPIX_META_STRING("getDirection"), jint>(); }
inline void GridLayoutAnimationController::setDirection(jint direction) { return call_method<SCAPIX_META_STRING("setDirection"), void>(direction); }
inline jint GridLayoutAnimationController::getDirectionPriority() { return call_method<SCAPIX_META_STRING("getDirectionPriority"), jint>(); }
inline void GridLayoutAnimationController::setDirectionPriority(jint directionPriority) { return call_method<SCAPIX_META_STRING("setDirectionPriority"), void>(directionPriority); }
inline jboolean GridLayoutAnimationController::willOverlap() { return call_method<SCAPIX_META_STRING("willOverlap"), jboolean>(); }

} // namespace android::view::animation
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_VIEW_ANIMATION_GRIDLAYOUTANIMATIONCONTROLLER_H
