// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/view/animation/Animation.h>

#ifndef SCAPIX_ANDROID_VIEW_ANIMATION_ANIMATIONSET_H
#define SCAPIX_ANDROID_VIEW_ANIMATION_ANIMATIONSET_H

namespace scapix::java_api {

namespace android::content { class Context; }
namespace android::util { class AttributeSet; }
namespace android::view::animation { class Transformation; }
namespace java::util { class List; }

namespace android::view::animation {

class AnimationSet : public object_base<SCAPIX_META_STRING("android/view/animation/AnimationSet"),
	android::view::animation::Animation>
{
public:

	static ref<AnimationSet> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs);
	static ref<AnimationSet> new_object(jboolean shareInterpolator);
	void setFillAfter(jboolean fillAfter);
	void setFillBefore(jboolean fillBefore);
	void setRepeatMode(jint repeatMode);
	void setStartOffset(jlong startOffset);
	void setDuration(jlong durationMillis);
	void addAnimation(ref<android::view::animation::Animation> a);
	void setStartTime(jlong startTimeMillis);
	jlong getStartTime();
	void restrictDuration(jlong durationMillis);
	jlong getDuration();
	jlong computeDurationHint();
	jboolean getTransformation(jlong currentTime, ref<android::view::animation::Transformation> p2);
	void scaleCurrentDuration(jfloat scale);
	void initialize(jint width, jint height, jint parentWidth, jint parentHeight);
	void reset();
	ref<java::util::List> getAnimations();
	jboolean willChangeTransformationMatrix();
	jboolean willChangeBounds();

protected:

	AnimationSet(handle_type h) : base_(h) {}

};

} // namespace android::view::animation
} // namespace scapix::java_api

#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/util/AttributeSet.h>
#include <scapix/java_api/android/view/animation/Transformation.h>
#include <scapix/java_api/java/util/List.h>

namespace scapix::java_api {
namespace android::view::animation {

inline ref<AnimationSet> AnimationSet::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs) { return base_::new_object(context, attrs); }
inline ref<AnimationSet> AnimationSet::new_object(jboolean shareInterpolator) { return base_::new_object(shareInterpolator); }
inline void AnimationSet::setFillAfter(jboolean fillAfter) { return call_method<SCAPIX_META_STRING("setFillAfter"), void>(fillAfter); }
inline void AnimationSet::setFillBefore(jboolean fillBefore) { return call_method<SCAPIX_META_STRING("setFillBefore"), void>(fillBefore); }
inline void AnimationSet::setRepeatMode(jint repeatMode) { return call_method<SCAPIX_META_STRING("setRepeatMode"), void>(repeatMode); }
inline void AnimationSet::setStartOffset(jlong startOffset) { return call_method<SCAPIX_META_STRING("setStartOffset"), void>(startOffset); }
inline void AnimationSet::setDuration(jlong durationMillis) { return call_method<SCAPIX_META_STRING("setDuration"), void>(durationMillis); }
inline void AnimationSet::addAnimation(ref<android::view::animation::Animation> a) { return call_method<SCAPIX_META_STRING("addAnimation"), void>(a); }
inline void AnimationSet::setStartTime(jlong startTimeMillis) { return call_method<SCAPIX_META_STRING("setStartTime"), void>(startTimeMillis); }
inline jlong AnimationSet::getStartTime() { return call_method<SCAPIX_META_STRING("getStartTime"), jlong>(); }
inline void AnimationSet::restrictDuration(jlong durationMillis) { return call_method<SCAPIX_META_STRING("restrictDuration"), void>(durationMillis); }
inline jlong AnimationSet::getDuration() { return call_method<SCAPIX_META_STRING("getDuration"), jlong>(); }
inline jlong AnimationSet::computeDurationHint() { return call_method<SCAPIX_META_STRING("computeDurationHint"), jlong>(); }
inline jboolean AnimationSet::getTransformation(jlong currentTime, ref<android::view::animation::Transformation> p2) { return call_method<SCAPIX_META_STRING("getTransformation"), jboolean>(currentTime, p2); }
inline void AnimationSet::scaleCurrentDuration(jfloat scale) { return call_method<SCAPIX_META_STRING("scaleCurrentDuration"), void>(scale); }
inline void AnimationSet::initialize(jint width, jint height, jint parentWidth, jint parentHeight) { return call_method<SCAPIX_META_STRING("initialize"), void>(width, height, parentWidth, parentHeight); }
inline void AnimationSet::reset() { return call_method<SCAPIX_META_STRING("reset"), void>(); }
inline ref<java::util::List> AnimationSet::getAnimations() { return call_method<SCAPIX_META_STRING("getAnimations"), ref<java::util::List>>(); }
inline jboolean AnimationSet::willChangeTransformationMatrix() { return call_method<SCAPIX_META_STRING("willChangeTransformationMatrix"), jboolean>(); }
inline jboolean AnimationSet::willChangeBounds() { return call_method<SCAPIX_META_STRING("willChangeBounds"), jboolean>(); }

} // namespace android::view::animation
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_VIEW_ANIMATION_ANIMATIONSET_H
