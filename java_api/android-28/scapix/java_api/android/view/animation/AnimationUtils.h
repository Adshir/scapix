// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_VIEW_ANIMATION_ANIMATIONUTILS_H
#define SCAPIX_ANDROID_VIEW_ANIMATION_ANIMATIONUTILS_H

namespace scapix::java_api {

namespace android::content { class Context; }
namespace android::view::animation { class Animation; }
namespace android::view::animation { class Interpolator; }
namespace android::view::animation { class LayoutAnimationController; }

namespace android::view::animation {

class AnimationUtils : public object_base<SCAPIX_META_STRING("android/view/animation/AnimationUtils"),
	java::lang::Object>
{
public:

	static ref<AnimationUtils> new_object();
	static jlong currentAnimationTimeMillis();
	static ref<android::view::animation::Animation> loadAnimation(ref<android::content::Context> context, jint id);
	static ref<android::view::animation::LayoutAnimationController> loadLayoutAnimation(ref<android::content::Context> context, jint id);
	static ref<android::view::animation::Animation> makeInAnimation(ref<android::content::Context> c, jboolean fromLeft);
	static ref<android::view::animation::Animation> makeOutAnimation(ref<android::content::Context> c, jboolean toRight);
	static ref<android::view::animation::Animation> makeInChildBottomAnimation(ref<android::content::Context> c);
	static ref<android::view::animation::Interpolator> loadInterpolator(ref<android::content::Context> context, jint id);

protected:

	AnimationUtils(handle_type h) : base_(h) {}

};

} // namespace android::view::animation
} // namespace scapix::java_api

#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/view/animation/Animation.h>
#include <scapix/java_api/android/view/animation/Interpolator.h>
#include <scapix/java_api/android/view/animation/LayoutAnimationController.h>

namespace scapix::java_api {
namespace android::view::animation {

inline ref<AnimationUtils> AnimationUtils::new_object() { return base_::new_object(); }
inline jlong AnimationUtils::currentAnimationTimeMillis() { return call_static_method<SCAPIX_META_STRING("currentAnimationTimeMillis"), jlong>(); }
inline ref<android::view::animation::Animation> AnimationUtils::loadAnimation(ref<android::content::Context> context, jint id) { return call_static_method<SCAPIX_META_STRING("loadAnimation"), ref<android::view::animation::Animation>>(context, id); }
inline ref<android::view::animation::LayoutAnimationController> AnimationUtils::loadLayoutAnimation(ref<android::content::Context> context, jint id) { return call_static_method<SCAPIX_META_STRING("loadLayoutAnimation"), ref<android::view::animation::LayoutAnimationController>>(context, id); }
inline ref<android::view::animation::Animation> AnimationUtils::makeInAnimation(ref<android::content::Context> c, jboolean fromLeft) { return call_static_method<SCAPIX_META_STRING("makeInAnimation"), ref<android::view::animation::Animation>>(c, fromLeft); }
inline ref<android::view::animation::Animation> AnimationUtils::makeOutAnimation(ref<android::content::Context> c, jboolean toRight) { return call_static_method<SCAPIX_META_STRING("makeOutAnimation"), ref<android::view::animation::Animation>>(c, toRight); }
inline ref<android::view::animation::Animation> AnimationUtils::makeInChildBottomAnimation(ref<android::content::Context> c) { return call_static_method<SCAPIX_META_STRING("makeInChildBottomAnimation"), ref<android::view::animation::Animation>>(c); }
inline ref<android::view::animation::Interpolator> AnimationUtils::loadInterpolator(ref<android::content::Context> context, jint id) { return call_static_method<SCAPIX_META_STRING("loadInterpolator"), ref<android::view::animation::Interpolator>>(context, id); }

} // namespace android::view::animation
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_VIEW_ANIMATION_ANIMATIONUTILS_H
