// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/view/View.h>

#ifndef SCAPIX_ANDROID_VIEW_VIEWSTUB_H
#define SCAPIX_ANDROID_VIEW_VIEWSTUB_H

namespace scapix::java_api {

namespace android::content { class Context; }
namespace android::graphics { class Canvas; }
namespace android::util { class AttributeSet; }
namespace android::view { class LayoutInflater; }
namespace android::view { class ViewStub_OnInflateListener; }

namespace android::view {

class ViewStub : public object_base<SCAPIX_META_STRING("android/view/ViewStub"),
	android::view::View>
{
public:

	using OnInflateListener = ViewStub_OnInflateListener;

	static ref<ViewStub> new_object(ref<android::content::Context> context);
	static ref<ViewStub> new_object(ref<android::content::Context> context, jint layoutResource);
	static ref<ViewStub> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs);
	static ref<ViewStub> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr);
	static ref<ViewStub> new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr, jint defStyleRes);
	jint getInflatedId();
	void setInflatedId(jint inflatedId);
	jint getLayoutResource();
	void setLayoutResource(jint layoutResource);
	void setLayoutInflater(ref<android::view::LayoutInflater> inflater);
	ref<android::view::LayoutInflater> getLayoutInflater();
	void draw(ref<android::graphics::Canvas> canvas);
	void setVisibility(jint visibility);
	ref<android::view::View> inflate();
	void setOnInflateListener(ref<android::view::ViewStub_OnInflateListener> inflateListener);

protected:

	ViewStub(handle_type h) : base_(h) {}

};

} // namespace android::view
} // namespace scapix::java_api

#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/graphics/Canvas.h>
#include <scapix/java_api/android/util/AttributeSet.h>
#include <scapix/java_api/android/view/LayoutInflater.h>
#include <scapix/java_api/android/view/ViewStub_OnInflateListener.h>

namespace scapix::java_api {
namespace android::view {

inline ref<ViewStub> ViewStub::new_object(ref<android::content::Context> context) { return base_::new_object(context); }
inline ref<ViewStub> ViewStub::new_object(ref<android::content::Context> context, jint layoutResource) { return base_::new_object(context, layoutResource); }
inline ref<ViewStub> ViewStub::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs) { return base_::new_object(context, attrs); }
inline ref<ViewStub> ViewStub::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr) { return base_::new_object(context, attrs, defStyleAttr); }
inline ref<ViewStub> ViewStub::new_object(ref<android::content::Context> context, ref<android::util::AttributeSet> attrs, jint defStyleAttr, jint defStyleRes) { return base_::new_object(context, attrs, defStyleAttr, defStyleRes); }
inline jint ViewStub::getInflatedId() { return call_method<SCAPIX_META_STRING("getInflatedId"), jint>(); }
inline void ViewStub::setInflatedId(jint inflatedId) { return call_method<SCAPIX_META_STRING("setInflatedId"), void>(inflatedId); }
inline jint ViewStub::getLayoutResource() { return call_method<SCAPIX_META_STRING("getLayoutResource"), jint>(); }
inline void ViewStub::setLayoutResource(jint layoutResource) { return call_method<SCAPIX_META_STRING("setLayoutResource"), void>(layoutResource); }
inline void ViewStub::setLayoutInflater(ref<android::view::LayoutInflater> inflater) { return call_method<SCAPIX_META_STRING("setLayoutInflater"), void>(inflater); }
inline ref<android::view::LayoutInflater> ViewStub::getLayoutInflater() { return call_method<SCAPIX_META_STRING("getLayoutInflater"), ref<android::view::LayoutInflater>>(); }
inline void ViewStub::draw(ref<android::graphics::Canvas> canvas) { return call_method<SCAPIX_META_STRING("draw"), void>(canvas); }
inline void ViewStub::setVisibility(jint visibility) { return call_method<SCAPIX_META_STRING("setVisibility"), void>(visibility); }
inline ref<android::view::View> ViewStub::inflate() { return call_method<SCAPIX_META_STRING("inflate"), ref<android::view::View>>(); }
inline void ViewStub::setOnInflateListener(ref<android::view::ViewStub_OnInflateListener> inflateListener) { return call_method<SCAPIX_META_STRING("setOnInflateListener"), void>(inflateListener); }

} // namespace android::view
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_VIEW_VIEWSTUB_H
