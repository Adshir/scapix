// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_R_H
#define SCAPIX_ANDROID_R_H

namespace scapix::java_api {

namespace android { class R_xml; }
namespace android { class R_transition; }
namespace android { class R_style; }
namespace android { class R_string; }
namespace android { class R_raw; }
namespace android { class R_plurals; }
namespace android { class R_mipmap; }
namespace android { class R_menu; }
namespace android { class R_layout; }
namespace android { class R_interpolator; }
namespace android { class R_integer; }
namespace android { class R_id; }
namespace android { class R_fraction; }
namespace android { class R_drawable; }
namespace android { class R_dimen; }
namespace android { class R_color; }
namespace android { class R_bool; }
namespace android { class R_attr; }
namespace android { class R_array; }
namespace android { class R_animator; }
namespace android { class R_anim; }

namespace android {

class R : public object_base<SCAPIX_META_STRING("android/R"),
	java::lang::Object>
{
public:

	using xml = R_xml;
	using transition = R_transition;
	using style = R_style;
	using string = R_string;
	using raw = R_raw;
	using plurals = R_plurals;
	using mipmap = R_mipmap;
	using menu = R_menu;
	using layout = R_layout;
	using interpolator = R_interpolator;
	using integer = R_integer;
	using id = R_id;
	using fraction = R_fraction;
	using drawable = R_drawable;
	using dimen = R_dimen;
	using color = R_color;
	using bool = R_bool;
	using attr = R_attr;
	using array = R_array;
	using animator = R_animator;
	using anim = R_anim;

	static ref<R> new_object();

protected:

	R(handle_type h) : base_(h) {}

};

} // namespace android
} // namespace scapix::java_api


namespace scapix::java_api {
namespace android {

inline ref<R> R::new_object() { return base_::new_object(); }

} // namespace android
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_R_H
