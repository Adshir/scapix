// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_ANDROID_NFC_NDEFMESSAGE_H
#define SCAPIX_ANDROID_NFC_NDEFMESSAGE_H

namespace scapix::java_api {

namespace android::nfc { class NdefRecord; }
namespace android::os { class Parcel; }
namespace android::os { class Parcelable_Creator; }
namespace java::lang { class String; }

namespace android::nfc {

class NdefMessage : public object_base<SCAPIX_META_STRING("android/nfc/NdefMessage"),
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static ref<android::os::Parcelable_Creator> CREATOR_();

	static ref<NdefMessage> new_object(ref<link::java::array<jbyte>> data);
	static ref<NdefMessage> new_object(ref<android::nfc::NdefRecord> record, ref<link::java::array<android::nfc::NdefRecord>> records);
	static ref<NdefMessage> new_object(ref<link::java::array<android::nfc::NdefRecord>> records);
	ref<link::java::array<android::nfc::NdefRecord>> getRecords();
	jint getByteArrayLength();
	ref<link::java::array<jbyte>> toByteArray();
	jint describeContents();
	void writeToParcel(ref<android::os::Parcel> dest, jint flags);
	jint hashCode();
	jboolean equals(ref<java::lang::Object> obj);
	ref<java::lang::String> toString();

protected:

	NdefMessage(handle_type h) : base_(h) {}

};

} // namespace android::nfc
} // namespace scapix::java_api

#include <scapix/java_api/android/nfc/NdefRecord.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::nfc {

inline ref<android::os::Parcelable_Creator> NdefMessage::CREATOR_() { return get_static_field<SCAPIX_META_STRING("CREATOR"), ref<android::os::Parcelable_Creator>>(); }
inline ref<NdefMessage> NdefMessage::new_object(ref<link::java::array<jbyte>> data) { return base_::new_object(data); }
inline ref<NdefMessage> NdefMessage::new_object(ref<android::nfc::NdefRecord> record, ref<link::java::array<android::nfc::NdefRecord>> records) { return base_::new_object(record, records); }
inline ref<NdefMessage> NdefMessage::new_object(ref<link::java::array<android::nfc::NdefRecord>> records) { return base_::new_object(records); }
inline ref<link::java::array<android::nfc::NdefRecord>> NdefMessage::getRecords() { return call_method<SCAPIX_META_STRING("getRecords"), ref<link::java::array<android::nfc::NdefRecord>>>(); }
inline jint NdefMessage::getByteArrayLength() { return call_method<SCAPIX_META_STRING("getByteArrayLength"), jint>(); }
inline ref<link::java::array<jbyte>> NdefMessage::toByteArray() { return call_method<SCAPIX_META_STRING("toByteArray"), ref<link::java::array<jbyte>>>(); }
inline jint NdefMessage::describeContents() { return call_method<SCAPIX_META_STRING("describeContents"), jint>(); }
inline void NdefMessage::writeToParcel(ref<android::os::Parcel> dest, jint flags) { return call_method<SCAPIX_META_STRING("writeToParcel"), void>(dest, flags); }
inline jint NdefMessage::hashCode() { return call_method<SCAPIX_META_STRING("hashCode"), jint>(); }
inline jboolean NdefMessage::equals(ref<java::lang::Object> obj) { return call_method<SCAPIX_META_STRING("equals"), jboolean>(obj); }
inline ref<java::lang::String> NdefMessage::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }

} // namespace android::nfc
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_NFC_NDEFMESSAGE_H
