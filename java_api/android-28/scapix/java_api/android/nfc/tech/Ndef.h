// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/nfc/tech/TagTechnology.h>

#ifndef SCAPIX_ANDROID_NFC_TECH_NDEF_H
#define SCAPIX_ANDROID_NFC_TECH_NDEF_H

namespace scapix::java_api {

namespace android::nfc { class NdefMessage; }
namespace android::nfc { class Tag; }
namespace java::lang { class String; }

namespace android::nfc::tech {

class Ndef : public object_base<SCAPIX_META_STRING("android/nfc/tech/Ndef"),
	java::lang::Object,
	android::nfc::tech::TagTechnology>
{
public:

	static ref<java::lang::String> MIFARE_CLASSIC_();
	static ref<java::lang::String> NFC_FORUM_TYPE_1_();
	static ref<java::lang::String> NFC_FORUM_TYPE_2_();
	static ref<java::lang::String> NFC_FORUM_TYPE_3_();
	static ref<java::lang::String> NFC_FORUM_TYPE_4_();

	static ref<android::nfc::tech::Ndef> get(ref<android::nfc::Tag> tag);
	ref<android::nfc::NdefMessage> getCachedNdefMessage();
	ref<java::lang::String> getType();
	jint getMaxSize();
	jboolean isWritable();
	ref<android::nfc::NdefMessage> getNdefMessage();
	void writeNdefMessage(ref<android::nfc::NdefMessage> msg);
	jboolean canMakeReadOnly();
	jboolean makeReadOnly();
	jboolean isConnected();
	ref<android::nfc::Tag> getTag();
	void close();
	void connect();

protected:

	Ndef(handle_type h) : base_(h) {}

};

} // namespace android::nfc::tech
} // namespace scapix::java_api

#include <scapix/java_api/android/nfc/NdefMessage.h>
#include <scapix/java_api/android/nfc/Tag.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::nfc::tech {

inline ref<java::lang::String> Ndef::MIFARE_CLASSIC_() { return get_static_field<SCAPIX_META_STRING("MIFARE_CLASSIC"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Ndef::NFC_FORUM_TYPE_1_() { return get_static_field<SCAPIX_META_STRING("NFC_FORUM_TYPE_1"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Ndef::NFC_FORUM_TYPE_2_() { return get_static_field<SCAPIX_META_STRING("NFC_FORUM_TYPE_2"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Ndef::NFC_FORUM_TYPE_3_() { return get_static_field<SCAPIX_META_STRING("NFC_FORUM_TYPE_3"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Ndef::NFC_FORUM_TYPE_4_() { return get_static_field<SCAPIX_META_STRING("NFC_FORUM_TYPE_4"), ref<java::lang::String>>(); }
inline ref<android::nfc::tech::Ndef> Ndef::get(ref<android::nfc::Tag> tag) { return call_static_method<SCAPIX_META_STRING("get"), ref<android::nfc::tech::Ndef>>(tag); }
inline ref<android::nfc::NdefMessage> Ndef::getCachedNdefMessage() { return call_method<SCAPIX_META_STRING("getCachedNdefMessage"), ref<android::nfc::NdefMessage>>(); }
inline ref<java::lang::String> Ndef::getType() { return call_method<SCAPIX_META_STRING("getType"), ref<java::lang::String>>(); }
inline jint Ndef::getMaxSize() { return call_method<SCAPIX_META_STRING("getMaxSize"), jint>(); }
inline jboolean Ndef::isWritable() { return call_method<SCAPIX_META_STRING("isWritable"), jboolean>(); }
inline ref<android::nfc::NdefMessage> Ndef::getNdefMessage() { return call_method<SCAPIX_META_STRING("getNdefMessage"), ref<android::nfc::NdefMessage>>(); }
inline void Ndef::writeNdefMessage(ref<android::nfc::NdefMessage> msg) { return call_method<SCAPIX_META_STRING("writeNdefMessage"), void>(msg); }
inline jboolean Ndef::canMakeReadOnly() { return call_method<SCAPIX_META_STRING("canMakeReadOnly"), jboolean>(); }
inline jboolean Ndef::makeReadOnly() { return call_method<SCAPIX_META_STRING("makeReadOnly"), jboolean>(); }
inline jboolean Ndef::isConnected() { return call_method<SCAPIX_META_STRING("isConnected"), jboolean>(); }
inline ref<android::nfc::Tag> Ndef::getTag() { return call_method<SCAPIX_META_STRING("getTag"), ref<android::nfc::Tag>>(); }
inline void Ndef::close() { return call_method<SCAPIX_META_STRING("close"), void>(); }
inline void Ndef::connect() { return call_method<SCAPIX_META_STRING("connect"), void>(); }

} // namespace android::nfc::tech
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_NFC_TECH_NDEF_H
