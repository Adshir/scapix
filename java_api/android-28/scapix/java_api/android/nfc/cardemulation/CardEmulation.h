// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_NFC_CARDEMULATION_CARDEMULATION_H
#define SCAPIX_ANDROID_NFC_CARDEMULATION_CARDEMULATION_H

namespace scapix::java_api {

namespace android::app { class Activity; }
namespace android::content { class ComponentName; }
namespace android::nfc { class NfcAdapter; }
namespace java::lang { class String; }
namespace java::util { class List; }

namespace android::nfc::cardemulation {

class CardEmulation : public object_base<SCAPIX_META_STRING("android/nfc/cardemulation/CardEmulation"),
	java::lang::Object>
{
public:

	static ref<java::lang::String> ACTION_CHANGE_DEFAULT_();
	static ref<java::lang::String> CATEGORY_OTHER_();
	static ref<java::lang::String> CATEGORY_PAYMENT_();
	static ref<java::lang::String> EXTRA_CATEGORY_();
	static ref<java::lang::String> EXTRA_SERVICE_COMPONENT_();
	static jint SELECTION_MODE_ALWAYS_ASK_();
	static jint SELECTION_MODE_ASK_IF_CONFLICT_();
	static jint SELECTION_MODE_PREFER_DEFAULT_();

	static ref<android::nfc::cardemulation::CardEmulation> getInstance(ref<android::nfc::NfcAdapter> adapter);
	jboolean isDefaultServiceForCategory(ref<android::content::ComponentName> service, ref<java::lang::String> category);
	jboolean isDefaultServiceForAid(ref<android::content::ComponentName> service, ref<java::lang::String> aid);
	jboolean categoryAllowsForegroundPreference(ref<java::lang::String> category);
	jint getSelectionModeForCategory(ref<java::lang::String> category);
	jboolean registerAidsForService(ref<android::content::ComponentName> service, ref<java::lang::String> category, ref<java::util::List> aids);
	ref<java::util::List> getAidsForService(ref<android::content::ComponentName> service, ref<java::lang::String> category);
	jboolean removeAidsForService(ref<android::content::ComponentName> service, ref<java::lang::String> category);
	jboolean setPreferredService(ref<android::app::Activity> activity, ref<android::content::ComponentName> service);
	jboolean unsetPreferredService(ref<android::app::Activity> activity);
	jboolean supportsAidPrefixRegistration();

protected:

	CardEmulation(handle_type h) : base_(h) {}

};

} // namespace android::nfc::cardemulation
} // namespace scapix::java_api

#include <scapix/java_api/android/app/Activity.h>
#include <scapix/java_api/android/content/ComponentName.h>
#include <scapix/java_api/android/nfc/NfcAdapter.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/List.h>

namespace scapix::java_api {
namespace android::nfc::cardemulation {

inline ref<java::lang::String> CardEmulation::ACTION_CHANGE_DEFAULT_() { return get_static_field<SCAPIX_META_STRING("ACTION_CHANGE_DEFAULT"), ref<java::lang::String>>(); }
inline ref<java::lang::String> CardEmulation::CATEGORY_OTHER_() { return get_static_field<SCAPIX_META_STRING("CATEGORY_OTHER"), ref<java::lang::String>>(); }
inline ref<java::lang::String> CardEmulation::CATEGORY_PAYMENT_() { return get_static_field<SCAPIX_META_STRING("CATEGORY_PAYMENT"), ref<java::lang::String>>(); }
inline ref<java::lang::String> CardEmulation::EXTRA_CATEGORY_() { return get_static_field<SCAPIX_META_STRING("EXTRA_CATEGORY"), ref<java::lang::String>>(); }
inline ref<java::lang::String> CardEmulation::EXTRA_SERVICE_COMPONENT_() { return get_static_field<SCAPIX_META_STRING("EXTRA_SERVICE_COMPONENT"), ref<java::lang::String>>(); }
inline jint CardEmulation::SELECTION_MODE_ALWAYS_ASK_() { return get_static_field<SCAPIX_META_STRING("SELECTION_MODE_ALWAYS_ASK"), jint>(); }
inline jint CardEmulation::SELECTION_MODE_ASK_IF_CONFLICT_() { return get_static_field<SCAPIX_META_STRING("SELECTION_MODE_ASK_IF_CONFLICT"), jint>(); }
inline jint CardEmulation::SELECTION_MODE_PREFER_DEFAULT_() { return get_static_field<SCAPIX_META_STRING("SELECTION_MODE_PREFER_DEFAULT"), jint>(); }
inline ref<android::nfc::cardemulation::CardEmulation> CardEmulation::getInstance(ref<android::nfc::NfcAdapter> adapter) { return call_static_method<SCAPIX_META_STRING("getInstance"), ref<android::nfc::cardemulation::CardEmulation>>(adapter); }
inline jboolean CardEmulation::isDefaultServiceForCategory(ref<android::content::ComponentName> service, ref<java::lang::String> category) { return call_method<SCAPIX_META_STRING("isDefaultServiceForCategory"), jboolean>(service, category); }
inline jboolean CardEmulation::isDefaultServiceForAid(ref<android::content::ComponentName> service, ref<java::lang::String> aid) { return call_method<SCAPIX_META_STRING("isDefaultServiceForAid"), jboolean>(service, aid); }
inline jboolean CardEmulation::categoryAllowsForegroundPreference(ref<java::lang::String> category) { return call_method<SCAPIX_META_STRING("categoryAllowsForegroundPreference"), jboolean>(category); }
inline jint CardEmulation::getSelectionModeForCategory(ref<java::lang::String> category) { return call_method<SCAPIX_META_STRING("getSelectionModeForCategory"), jint>(category); }
inline jboolean CardEmulation::registerAidsForService(ref<android::content::ComponentName> service, ref<java::lang::String> category, ref<java::util::List> aids) { return call_method<SCAPIX_META_STRING("registerAidsForService"), jboolean>(service, category, aids); }
inline ref<java::util::List> CardEmulation::getAidsForService(ref<android::content::ComponentName> service, ref<java::lang::String> category) { return call_method<SCAPIX_META_STRING("getAidsForService"), ref<java::util::List>>(service, category); }
inline jboolean CardEmulation::removeAidsForService(ref<android::content::ComponentName> service, ref<java::lang::String> category) { return call_method<SCAPIX_META_STRING("removeAidsForService"), jboolean>(service, category); }
inline jboolean CardEmulation::setPreferredService(ref<android::app::Activity> activity, ref<android::content::ComponentName> service) { return call_method<SCAPIX_META_STRING("setPreferredService"), jboolean>(activity, service); }
inline jboolean CardEmulation::unsetPreferredService(ref<android::app::Activity> activity) { return call_method<SCAPIX_META_STRING("unsetPreferredService"), jboolean>(activity); }
inline jboolean CardEmulation::supportsAidPrefixRegistration() { return call_method<SCAPIX_META_STRING("supportsAidPrefixRegistration"), jboolean>(); }

} // namespace android::nfc::cardemulation
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_NFC_CARDEMULATION_CARDEMULATION_H
