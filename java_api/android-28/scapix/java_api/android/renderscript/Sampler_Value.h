// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Enum.h>

#ifndef SCAPIX_ANDROID_RENDERSCRIPT_SAMPLER_VALUE_H
#define SCAPIX_ANDROID_RENDERSCRIPT_SAMPLER_VALUE_H

namespace scapix::java_api {

namespace java::lang { class String; }

namespace android::renderscript {

class Sampler_Value : public object_base<SCAPIX_META_STRING("android/renderscript/Sampler$Value"),
	java::lang::Enum>
{
public:

	static ref<android::renderscript::Sampler_Value> NEAREST_();
	static ref<android::renderscript::Sampler_Value> LINEAR_();
	static ref<android::renderscript::Sampler_Value> LINEAR_MIP_LINEAR_();
	static ref<android::renderscript::Sampler_Value> LINEAR_MIP_NEAREST_();
	static ref<android::renderscript::Sampler_Value> WRAP_();
	static ref<android::renderscript::Sampler_Value> CLAMP_();
	static ref<android::renderscript::Sampler_Value> MIRRORED_REPEAT_();

	static ref<link::java::array<android::renderscript::Sampler_Value>> values();
	static ref<android::renderscript::Sampler_Value> valueOf(ref<java::lang::String> name);

protected:

	Sampler_Value(handle_type h) : base_(h) {}

};

} // namespace android::renderscript
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::renderscript {

inline ref<android::renderscript::Sampler_Value> Sampler_Value::NEAREST_() { return get_static_field<SCAPIX_META_STRING("NEAREST"), ref<android::renderscript::Sampler_Value>>(); }
inline ref<android::renderscript::Sampler_Value> Sampler_Value::LINEAR_() { return get_static_field<SCAPIX_META_STRING("LINEAR"), ref<android::renderscript::Sampler_Value>>(); }
inline ref<android::renderscript::Sampler_Value> Sampler_Value::LINEAR_MIP_LINEAR_() { return get_static_field<SCAPIX_META_STRING("LINEAR_MIP_LINEAR"), ref<android::renderscript::Sampler_Value>>(); }
inline ref<android::renderscript::Sampler_Value> Sampler_Value::LINEAR_MIP_NEAREST_() { return get_static_field<SCAPIX_META_STRING("LINEAR_MIP_NEAREST"), ref<android::renderscript::Sampler_Value>>(); }
inline ref<android::renderscript::Sampler_Value> Sampler_Value::WRAP_() { return get_static_field<SCAPIX_META_STRING("WRAP"), ref<android::renderscript::Sampler_Value>>(); }
inline ref<android::renderscript::Sampler_Value> Sampler_Value::CLAMP_() { return get_static_field<SCAPIX_META_STRING("CLAMP"), ref<android::renderscript::Sampler_Value>>(); }
inline ref<android::renderscript::Sampler_Value> Sampler_Value::MIRRORED_REPEAT_() { return get_static_field<SCAPIX_META_STRING("MIRRORED_REPEAT"), ref<android::renderscript::Sampler_Value>>(); }
inline ref<link::java::array<android::renderscript::Sampler_Value>> Sampler_Value::values() { return call_static_method<SCAPIX_META_STRING("values"), ref<link::java::array<android::renderscript::Sampler_Value>>>(); }
inline ref<android::renderscript::Sampler_Value> Sampler_Value::valueOf(ref<java::lang::String> name) { return call_static_method<SCAPIX_META_STRING("valueOf"), ref<android::renderscript::Sampler_Value>>(name); }

} // namespace android::renderscript
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_RENDERSCRIPT_SAMPLER_VALUE_H
