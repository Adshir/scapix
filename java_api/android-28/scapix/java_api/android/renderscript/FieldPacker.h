// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_RENDERSCRIPT_FIELDPACKER_H
#define SCAPIX_ANDROID_RENDERSCRIPT_FIELDPACKER_H

namespace scapix::java_api {

namespace android::renderscript { class BaseObj; }
namespace android::renderscript { class Byte2; }
namespace android::renderscript { class Byte3; }
namespace android::renderscript { class Byte4; }
namespace android::renderscript { class Double2; }
namespace android::renderscript { class Double3; }
namespace android::renderscript { class Double4; }
namespace android::renderscript { class Float2; }
namespace android::renderscript { class Float3; }
namespace android::renderscript { class Float4; }
namespace android::renderscript { class Int2; }
namespace android::renderscript { class Int3; }
namespace android::renderscript { class Int4; }
namespace android::renderscript { class Long2; }
namespace android::renderscript { class Long3; }
namespace android::renderscript { class Long4; }
namespace android::renderscript { class Matrix2f; }
namespace android::renderscript { class Matrix3f; }
namespace android::renderscript { class Matrix4f; }
namespace android::renderscript { class Short2; }
namespace android::renderscript { class Short3; }
namespace android::renderscript { class Short4; }

namespace android::renderscript {

class FieldPacker : public object_base<SCAPIX_META_STRING("android/renderscript/FieldPacker"),
	java::lang::Object>
{
public:

	static ref<FieldPacker> new_object(jint len);
	static ref<FieldPacker> new_object(ref<link::java::array<jbyte>> data);
	void align(jint v);
	void subalign(jint v);
	void reset();
	void reset(jint i);
	void skip(jint i);
	void addI8(jbyte v);
	jbyte subI8();
	void addI16(jshort v);
	jshort subI16();
	void addI32(jint v);
	jint subI32();
	void addI64(jlong v);
	jlong subI64();
	void addU8(jshort v);
	void addU16(jint v);
	void addU32(jlong v);
	void addU64(jlong v);
	void addF32(jfloat v);
	jfloat subF32();
	void addF64(jdouble v);
	jdouble subF64();
	void addObj(ref<android::renderscript::BaseObj> obj);
	void addF32(ref<android::renderscript::Float2> v);
	void addF32(ref<android::renderscript::Float3> v);
	void addF32(ref<android::renderscript::Float4> v);
	void addF64(ref<android::renderscript::Double2> v);
	void addF64(ref<android::renderscript::Double3> v);
	void addF64(ref<android::renderscript::Double4> v);
	void addI8(ref<android::renderscript::Byte2> v);
	void addI8(ref<android::renderscript::Byte3> v);
	void addI8(ref<android::renderscript::Byte4> v);
	void addU8(ref<android::renderscript::Short2> v);
	void addU8(ref<android::renderscript::Short3> v);
	void addU8(ref<android::renderscript::Short4> v);
	void addI16(ref<android::renderscript::Short2> v);
	void addI16(ref<android::renderscript::Short3> v);
	void addI16(ref<android::renderscript::Short4> v);
	void addU16(ref<android::renderscript::Int2> v);
	void addU16(ref<android::renderscript::Int3> v);
	void addU16(ref<android::renderscript::Int4> v);
	void addI32(ref<android::renderscript::Int2> v);
	void addI32(ref<android::renderscript::Int3> v);
	void addI32(ref<android::renderscript::Int4> v);
	void addU32(ref<android::renderscript::Long2> v);
	void addU32(ref<android::renderscript::Long3> v);
	void addU32(ref<android::renderscript::Long4> v);
	void addI64(ref<android::renderscript::Long2> v);
	void addI64(ref<android::renderscript::Long3> v);
	void addI64(ref<android::renderscript::Long4> v);
	void addU64(ref<android::renderscript::Long2> v);
	void addU64(ref<android::renderscript::Long3> v);
	void addU64(ref<android::renderscript::Long4> v);
	ref<android::renderscript::Float2> subFloat2();
	ref<android::renderscript::Float3> subFloat3();
	ref<android::renderscript::Float4> subFloat4();
	ref<android::renderscript::Double2> subDouble2();
	ref<android::renderscript::Double3> subDouble3();
	ref<android::renderscript::Double4> subDouble4();
	ref<android::renderscript::Byte2> subByte2();
	ref<android::renderscript::Byte3> subByte3();
	ref<android::renderscript::Byte4> subByte4();
	ref<android::renderscript::Short2> subShort2();
	ref<android::renderscript::Short3> subShort3();
	ref<android::renderscript::Short4> subShort4();
	ref<android::renderscript::Int2> subInt2();
	ref<android::renderscript::Int3> subInt3();
	ref<android::renderscript::Int4> subInt4();
	ref<android::renderscript::Long2> subLong2();
	ref<android::renderscript::Long3> subLong3();
	ref<android::renderscript::Long4> subLong4();
	void addMatrix(ref<android::renderscript::Matrix4f> v);
	ref<android::renderscript::Matrix4f> subMatrix4f();
	void addMatrix(ref<android::renderscript::Matrix3f> v);
	ref<android::renderscript::Matrix3f> subMatrix3f();
	void addMatrix(ref<android::renderscript::Matrix2f> v);
	ref<android::renderscript::Matrix2f> subMatrix2f();
	void addBoolean(jboolean v);
	jboolean subBoolean();
	ref<link::java::array<jbyte>> getData();

protected:

	FieldPacker(handle_type h) : base_(h) {}

};

} // namespace android::renderscript
} // namespace scapix::java_api

#include <scapix/java_api/android/renderscript/BaseObj.h>
#include <scapix/java_api/android/renderscript/Byte2.h>
#include <scapix/java_api/android/renderscript/Byte3.h>
#include <scapix/java_api/android/renderscript/Byte4.h>
#include <scapix/java_api/android/renderscript/Double2.h>
#include <scapix/java_api/android/renderscript/Double3.h>
#include <scapix/java_api/android/renderscript/Double4.h>
#include <scapix/java_api/android/renderscript/Float2.h>
#include <scapix/java_api/android/renderscript/Float3.h>
#include <scapix/java_api/android/renderscript/Float4.h>
#include <scapix/java_api/android/renderscript/Int2.h>
#include <scapix/java_api/android/renderscript/Int3.h>
#include <scapix/java_api/android/renderscript/Int4.h>
#include <scapix/java_api/android/renderscript/Long2.h>
#include <scapix/java_api/android/renderscript/Long3.h>
#include <scapix/java_api/android/renderscript/Long4.h>
#include <scapix/java_api/android/renderscript/Matrix2f.h>
#include <scapix/java_api/android/renderscript/Matrix3f.h>
#include <scapix/java_api/android/renderscript/Matrix4f.h>
#include <scapix/java_api/android/renderscript/Short2.h>
#include <scapix/java_api/android/renderscript/Short3.h>
#include <scapix/java_api/android/renderscript/Short4.h>

namespace scapix::java_api {
namespace android::renderscript {

inline ref<FieldPacker> FieldPacker::new_object(jint len) { return base_::new_object(len); }
inline ref<FieldPacker> FieldPacker::new_object(ref<link::java::array<jbyte>> data) { return base_::new_object(data); }
inline void FieldPacker::align(jint v) { return call_method<SCAPIX_META_STRING("align"), void>(v); }
inline void FieldPacker::subalign(jint v) { return call_method<SCAPIX_META_STRING("subalign"), void>(v); }
inline void FieldPacker::reset() { return call_method<SCAPIX_META_STRING("reset"), void>(); }
inline void FieldPacker::reset(jint i) { return call_method<SCAPIX_META_STRING("reset"), void>(i); }
inline void FieldPacker::skip(jint i) { return call_method<SCAPIX_META_STRING("skip"), void>(i); }
inline void FieldPacker::addI8(jbyte v) { return call_method<SCAPIX_META_STRING("addI8"), void>(v); }
inline jbyte FieldPacker::subI8() { return call_method<SCAPIX_META_STRING("subI8"), jbyte>(); }
inline void FieldPacker::addI16(jshort v) { return call_method<SCAPIX_META_STRING("addI16"), void>(v); }
inline jshort FieldPacker::subI16() { return call_method<SCAPIX_META_STRING("subI16"), jshort>(); }
inline void FieldPacker::addI32(jint v) { return call_method<SCAPIX_META_STRING("addI32"), void>(v); }
inline jint FieldPacker::subI32() { return call_method<SCAPIX_META_STRING("subI32"), jint>(); }
inline void FieldPacker::addI64(jlong v) { return call_method<SCAPIX_META_STRING("addI64"), void>(v); }
inline jlong FieldPacker::subI64() { return call_method<SCAPIX_META_STRING("subI64"), jlong>(); }
inline void FieldPacker::addU8(jshort v) { return call_method<SCAPIX_META_STRING("addU8"), void>(v); }
inline void FieldPacker::addU16(jint v) { return call_method<SCAPIX_META_STRING("addU16"), void>(v); }
inline void FieldPacker::addU32(jlong v) { return call_method<SCAPIX_META_STRING("addU32"), void>(v); }
inline void FieldPacker::addU64(jlong v) { return call_method<SCAPIX_META_STRING("addU64"), void>(v); }
inline void FieldPacker::addF32(jfloat v) { return call_method<SCAPIX_META_STRING("addF32"), void>(v); }
inline jfloat FieldPacker::subF32() { return call_method<SCAPIX_META_STRING("subF32"), jfloat>(); }
inline void FieldPacker::addF64(jdouble v) { return call_method<SCAPIX_META_STRING("addF64"), void>(v); }
inline jdouble FieldPacker::subF64() { return call_method<SCAPIX_META_STRING("subF64"), jdouble>(); }
inline void FieldPacker::addObj(ref<android::renderscript::BaseObj> obj) { return call_method<SCAPIX_META_STRING("addObj"), void>(obj); }
inline void FieldPacker::addF32(ref<android::renderscript::Float2> v) { return call_method<SCAPIX_META_STRING("addF32"), void>(v); }
inline void FieldPacker::addF32(ref<android::renderscript::Float3> v) { return call_method<SCAPIX_META_STRING("addF32"), void>(v); }
inline void FieldPacker::addF32(ref<android::renderscript::Float4> v) { return call_method<SCAPIX_META_STRING("addF32"), void>(v); }
inline void FieldPacker::addF64(ref<android::renderscript::Double2> v) { return call_method<SCAPIX_META_STRING("addF64"), void>(v); }
inline void FieldPacker::addF64(ref<android::renderscript::Double3> v) { return call_method<SCAPIX_META_STRING("addF64"), void>(v); }
inline void FieldPacker::addF64(ref<android::renderscript::Double4> v) { return call_method<SCAPIX_META_STRING("addF64"), void>(v); }
inline void FieldPacker::addI8(ref<android::renderscript::Byte2> v) { return call_method<SCAPIX_META_STRING("addI8"), void>(v); }
inline void FieldPacker::addI8(ref<android::renderscript::Byte3> v) { return call_method<SCAPIX_META_STRING("addI8"), void>(v); }
inline void FieldPacker::addI8(ref<android::renderscript::Byte4> v) { return call_method<SCAPIX_META_STRING("addI8"), void>(v); }
inline void FieldPacker::addU8(ref<android::renderscript::Short2> v) { return call_method<SCAPIX_META_STRING("addU8"), void>(v); }
inline void FieldPacker::addU8(ref<android::renderscript::Short3> v) { return call_method<SCAPIX_META_STRING("addU8"), void>(v); }
inline void FieldPacker::addU8(ref<android::renderscript::Short4> v) { return call_method<SCAPIX_META_STRING("addU8"), void>(v); }
inline void FieldPacker::addI16(ref<android::renderscript::Short2> v) { return call_method<SCAPIX_META_STRING("addI16"), void>(v); }
inline void FieldPacker::addI16(ref<android::renderscript::Short3> v) { return call_method<SCAPIX_META_STRING("addI16"), void>(v); }
inline void FieldPacker::addI16(ref<android::renderscript::Short4> v) { return call_method<SCAPIX_META_STRING("addI16"), void>(v); }
inline void FieldPacker::addU16(ref<android::renderscript::Int2> v) { return call_method<SCAPIX_META_STRING("addU16"), void>(v); }
inline void FieldPacker::addU16(ref<android::renderscript::Int3> v) { return call_method<SCAPIX_META_STRING("addU16"), void>(v); }
inline void FieldPacker::addU16(ref<android::renderscript::Int4> v) { return call_method<SCAPIX_META_STRING("addU16"), void>(v); }
inline void FieldPacker::addI32(ref<android::renderscript::Int2> v) { return call_method<SCAPIX_META_STRING("addI32"), void>(v); }
inline void FieldPacker::addI32(ref<android::renderscript::Int3> v) { return call_method<SCAPIX_META_STRING("addI32"), void>(v); }
inline void FieldPacker::addI32(ref<android::renderscript::Int4> v) { return call_method<SCAPIX_META_STRING("addI32"), void>(v); }
inline void FieldPacker::addU32(ref<android::renderscript::Long2> v) { return call_method<SCAPIX_META_STRING("addU32"), void>(v); }
inline void FieldPacker::addU32(ref<android::renderscript::Long3> v) { return call_method<SCAPIX_META_STRING("addU32"), void>(v); }
inline void FieldPacker::addU32(ref<android::renderscript::Long4> v) { return call_method<SCAPIX_META_STRING("addU32"), void>(v); }
inline void FieldPacker::addI64(ref<android::renderscript::Long2> v) { return call_method<SCAPIX_META_STRING("addI64"), void>(v); }
inline void FieldPacker::addI64(ref<android::renderscript::Long3> v) { return call_method<SCAPIX_META_STRING("addI64"), void>(v); }
inline void FieldPacker::addI64(ref<android::renderscript::Long4> v) { return call_method<SCAPIX_META_STRING("addI64"), void>(v); }
inline void FieldPacker::addU64(ref<android::renderscript::Long2> v) { return call_method<SCAPIX_META_STRING("addU64"), void>(v); }
inline void FieldPacker::addU64(ref<android::renderscript::Long3> v) { return call_method<SCAPIX_META_STRING("addU64"), void>(v); }
inline void FieldPacker::addU64(ref<android::renderscript::Long4> v) { return call_method<SCAPIX_META_STRING("addU64"), void>(v); }
inline ref<android::renderscript::Float2> FieldPacker::subFloat2() { return call_method<SCAPIX_META_STRING("subFloat2"), ref<android::renderscript::Float2>>(); }
inline ref<android::renderscript::Float3> FieldPacker::subFloat3() { return call_method<SCAPIX_META_STRING("subFloat3"), ref<android::renderscript::Float3>>(); }
inline ref<android::renderscript::Float4> FieldPacker::subFloat4() { return call_method<SCAPIX_META_STRING("subFloat4"), ref<android::renderscript::Float4>>(); }
inline ref<android::renderscript::Double2> FieldPacker::subDouble2() { return call_method<SCAPIX_META_STRING("subDouble2"), ref<android::renderscript::Double2>>(); }
inline ref<android::renderscript::Double3> FieldPacker::subDouble3() { return call_method<SCAPIX_META_STRING("subDouble3"), ref<android::renderscript::Double3>>(); }
inline ref<android::renderscript::Double4> FieldPacker::subDouble4() { return call_method<SCAPIX_META_STRING("subDouble4"), ref<android::renderscript::Double4>>(); }
inline ref<android::renderscript::Byte2> FieldPacker::subByte2() { return call_method<SCAPIX_META_STRING("subByte2"), ref<android::renderscript::Byte2>>(); }
inline ref<android::renderscript::Byte3> FieldPacker::subByte3() { return call_method<SCAPIX_META_STRING("subByte3"), ref<android::renderscript::Byte3>>(); }
inline ref<android::renderscript::Byte4> FieldPacker::subByte4() { return call_method<SCAPIX_META_STRING("subByte4"), ref<android::renderscript::Byte4>>(); }
inline ref<android::renderscript::Short2> FieldPacker::subShort2() { return call_method<SCAPIX_META_STRING("subShort2"), ref<android::renderscript::Short2>>(); }
inline ref<android::renderscript::Short3> FieldPacker::subShort3() { return call_method<SCAPIX_META_STRING("subShort3"), ref<android::renderscript::Short3>>(); }
inline ref<android::renderscript::Short4> FieldPacker::subShort4() { return call_method<SCAPIX_META_STRING("subShort4"), ref<android::renderscript::Short4>>(); }
inline ref<android::renderscript::Int2> FieldPacker::subInt2() { return call_method<SCAPIX_META_STRING("subInt2"), ref<android::renderscript::Int2>>(); }
inline ref<android::renderscript::Int3> FieldPacker::subInt3() { return call_method<SCAPIX_META_STRING("subInt3"), ref<android::renderscript::Int3>>(); }
inline ref<android::renderscript::Int4> FieldPacker::subInt4() { return call_method<SCAPIX_META_STRING("subInt4"), ref<android::renderscript::Int4>>(); }
inline ref<android::renderscript::Long2> FieldPacker::subLong2() { return call_method<SCAPIX_META_STRING("subLong2"), ref<android::renderscript::Long2>>(); }
inline ref<android::renderscript::Long3> FieldPacker::subLong3() { return call_method<SCAPIX_META_STRING("subLong3"), ref<android::renderscript::Long3>>(); }
inline ref<android::renderscript::Long4> FieldPacker::subLong4() { return call_method<SCAPIX_META_STRING("subLong4"), ref<android::renderscript::Long4>>(); }
inline void FieldPacker::addMatrix(ref<android::renderscript::Matrix4f> v) { return call_method<SCAPIX_META_STRING("addMatrix"), void>(v); }
inline ref<android::renderscript::Matrix4f> FieldPacker::subMatrix4f() { return call_method<SCAPIX_META_STRING("subMatrix4f"), ref<android::renderscript::Matrix4f>>(); }
inline void FieldPacker::addMatrix(ref<android::renderscript::Matrix3f> v) { return call_method<SCAPIX_META_STRING("addMatrix"), void>(v); }
inline ref<android::renderscript::Matrix3f> FieldPacker::subMatrix3f() { return call_method<SCAPIX_META_STRING("subMatrix3f"), ref<android::renderscript::Matrix3f>>(); }
inline void FieldPacker::addMatrix(ref<android::renderscript::Matrix2f> v) { return call_method<SCAPIX_META_STRING("addMatrix"), void>(v); }
inline ref<android::renderscript::Matrix2f> FieldPacker::subMatrix2f() { return call_method<SCAPIX_META_STRING("subMatrix2f"), ref<android::renderscript::Matrix2f>>(); }
inline void FieldPacker::addBoolean(jboolean v) { return call_method<SCAPIX_META_STRING("addBoolean"), void>(v); }
inline jboolean FieldPacker::subBoolean() { return call_method<SCAPIX_META_STRING("subBoolean"), jboolean>(); }
inline ref<link::java::array<jbyte>> FieldPacker::getData() { return call_method<SCAPIX_META_STRING("getData"), ref<link::java::array<jbyte>>>(); }

} // namespace android::renderscript
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_RENDERSCRIPT_FIELDPACKER_H
