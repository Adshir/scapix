// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_RENDERSCRIPT_TYPE_BUILDER_H
#define SCAPIX_ANDROID_RENDERSCRIPT_TYPE_BUILDER_H

namespace scapix::java_api {

namespace android::renderscript { class Element; }
namespace android::renderscript { class RenderScript; }
namespace android::renderscript { class Type; }

namespace android::renderscript {

class Type_Builder : public object_base<SCAPIX_META_STRING("android/renderscript/Type$Builder"),
	java::lang::Object>
{
public:

	static ref<Type_Builder> new_object(ref<android::renderscript::RenderScript> rs, ref<android::renderscript::Element> e);
	ref<android::renderscript::Type_Builder> setX(jint value);
	ref<android::renderscript::Type_Builder> setY(jint value);
	ref<android::renderscript::Type_Builder> setZ(jint value);
	ref<android::renderscript::Type_Builder> setMipmaps(jboolean value);
	ref<android::renderscript::Type_Builder> setFaces(jboolean value);
	ref<android::renderscript::Type_Builder> setYuvFormat(jint yuvFormat);
	ref<android::renderscript::Type> create();

protected:

	Type_Builder(handle_type h) : base_(h) {}

};

} // namespace android::renderscript
} // namespace scapix::java_api

#include <scapix/java_api/android/renderscript/Element.h>
#include <scapix/java_api/android/renderscript/RenderScript.h>
#include <scapix/java_api/android/renderscript/Type.h>

namespace scapix::java_api {
namespace android::renderscript {

inline ref<Type_Builder> Type_Builder::new_object(ref<android::renderscript::RenderScript> rs, ref<android::renderscript::Element> e) { return base_::new_object(rs, e); }
inline ref<android::renderscript::Type_Builder> Type_Builder::setX(jint value) { return call_method<SCAPIX_META_STRING("setX"), ref<android::renderscript::Type_Builder>>(value); }
inline ref<android::renderscript::Type_Builder> Type_Builder::setY(jint value) { return call_method<SCAPIX_META_STRING("setY"), ref<android::renderscript::Type_Builder>>(value); }
inline ref<android::renderscript::Type_Builder> Type_Builder::setZ(jint value) { return call_method<SCAPIX_META_STRING("setZ"), ref<android::renderscript::Type_Builder>>(value); }
inline ref<android::renderscript::Type_Builder> Type_Builder::setMipmaps(jboolean value) { return call_method<SCAPIX_META_STRING("setMipmaps"), ref<android::renderscript::Type_Builder>>(value); }
inline ref<android::renderscript::Type_Builder> Type_Builder::setFaces(jboolean value) { return call_method<SCAPIX_META_STRING("setFaces"), ref<android::renderscript::Type_Builder>>(value); }
inline ref<android::renderscript::Type_Builder> Type_Builder::setYuvFormat(jint yuvFormat) { return call_method<SCAPIX_META_STRING("setYuvFormat"), ref<android::renderscript::Type_Builder>>(yuvFormat); }
inline ref<android::renderscript::Type> Type_Builder::create() { return call_method<SCAPIX_META_STRING("create"), ref<android::renderscript::Type>>(); }

} // namespace android::renderscript
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_RENDERSCRIPT_TYPE_BUILDER_H
