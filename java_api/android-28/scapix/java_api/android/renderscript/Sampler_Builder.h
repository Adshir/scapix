// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ANDROID_RENDERSCRIPT_SAMPLER_BUILDER_H
#define SCAPIX_ANDROID_RENDERSCRIPT_SAMPLER_BUILDER_H

namespace scapix::java_api {

namespace android::renderscript { class RenderScript; }
namespace android::renderscript { class Sampler; }
namespace android::renderscript { class Sampler_Value; }

namespace android::renderscript {

class Sampler_Builder : public object_base<SCAPIX_META_STRING("android/renderscript/Sampler$Builder"),
	java::lang::Object>
{
public:

	static ref<Sampler_Builder> new_object(ref<android::renderscript::RenderScript> rs);
	void setMinification(ref<android::renderscript::Sampler_Value> v);
	void setMagnification(ref<android::renderscript::Sampler_Value> v);
	void setWrapS(ref<android::renderscript::Sampler_Value> v);
	void setWrapT(ref<android::renderscript::Sampler_Value> v);
	void setAnisotropy(jfloat v);
	ref<android::renderscript::Sampler> create();

protected:

	Sampler_Builder(handle_type h) : base_(h) {}

};

} // namespace android::renderscript
} // namespace scapix::java_api

#include <scapix/java_api/android/renderscript/RenderScript.h>
#include <scapix/java_api/android/renderscript/Sampler.h>
#include <scapix/java_api/android/renderscript/Sampler_Value.h>

namespace scapix::java_api {
namespace android::renderscript {

inline ref<Sampler_Builder> Sampler_Builder::new_object(ref<android::renderscript::RenderScript> rs) { return base_::new_object(rs); }
inline void Sampler_Builder::setMinification(ref<android::renderscript::Sampler_Value> v) { return call_method<SCAPIX_META_STRING("setMinification"), void>(v); }
inline void Sampler_Builder::setMagnification(ref<android::renderscript::Sampler_Value> v) { return call_method<SCAPIX_META_STRING("setMagnification"), void>(v); }
inline void Sampler_Builder::setWrapS(ref<android::renderscript::Sampler_Value> v) { return call_method<SCAPIX_META_STRING("setWrapS"), void>(v); }
inline void Sampler_Builder::setWrapT(ref<android::renderscript::Sampler_Value> v) { return call_method<SCAPIX_META_STRING("setWrapT"), void>(v); }
inline void Sampler_Builder::setAnisotropy(jfloat v) { return call_method<SCAPIX_META_STRING("setAnisotropy"), void>(v); }
inline ref<android::renderscript::Sampler> Sampler_Builder::create() { return call_method<SCAPIX_META_STRING("create"), ref<android::renderscript::Sampler>>(); }

} // namespace android::renderscript
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_RENDERSCRIPT_SAMPLER_BUILDER_H
