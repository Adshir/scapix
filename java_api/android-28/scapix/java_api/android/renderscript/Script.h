// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/android/renderscript/BaseObj.h>

#ifndef SCAPIX_ANDROID_RENDERSCRIPT_SCRIPT_H
#define SCAPIX_ANDROID_RENDERSCRIPT_SCRIPT_H

namespace scapix::java_api {

namespace android::renderscript { class Allocation; }
namespace android::renderscript { class Element; }
namespace android::renderscript { class FieldPacker; }
namespace java::lang { class String; }
namespace android::renderscript { class Script_LaunchOptions; }
namespace android::renderscript { class Script_KernelID; }
namespace android::renderscript { class Script_InvokeID; }
namespace android::renderscript { class Script_FieldID; }
namespace android::renderscript { class Script_FieldBase; }
namespace android::renderscript { class Script_Builder; }

namespace android::renderscript {

class Script : public object_base<SCAPIX_META_STRING("android/renderscript/Script"),
	android::renderscript::BaseObj>
{
public:

	using LaunchOptions = Script_LaunchOptions;
	using KernelID = Script_KernelID;
	using InvokeID = Script_InvokeID;
	using FieldID = Script_FieldID;
	using FieldBase = Script_FieldBase;
	using Builder = Script_Builder;

	void bindAllocation(ref<android::renderscript::Allocation> va, jint slot);
	void setVar(jint index, jfloat v);
	jfloat getVarF(jint index);
	void setVar(jint index, jdouble v);
	jdouble getVarD(jint index);
	void setVar(jint index, jint v);
	jint getVarI(jint index);
	void setVar(jint index, jlong v);
	jlong getVarJ(jint index);
	void setVar(jint index, jboolean v);
	jboolean getVarB(jint index);
	void setVar(jint index, ref<android::renderscript::BaseObj> o);
	void setVar(jint index, ref<android::renderscript::FieldPacker> v);
	void setVar(jint index, ref<android::renderscript::FieldPacker> v, ref<android::renderscript::Element> e, ref<link::java::array<jint>> dims);
	void getVarV(jint index, ref<android::renderscript::FieldPacker> v);
	void setTimeZone(ref<java::lang::String> timeZone);

protected:

	Script(handle_type h) : base_(h) {}

};

} // namespace android::renderscript
} // namespace scapix::java_api

#include <scapix/java_api/android/renderscript/Allocation.h>
#include <scapix/java_api/android/renderscript/Element.h>
#include <scapix/java_api/android/renderscript/FieldPacker.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace android::renderscript {

inline void Script::bindAllocation(ref<android::renderscript::Allocation> va, jint slot) { return call_method<SCAPIX_META_STRING("bindAllocation"), void>(va, slot); }
inline void Script::setVar(jint index, jfloat v) { return call_method<SCAPIX_META_STRING("setVar"), void>(index, v); }
inline jfloat Script::getVarF(jint index) { return call_method<SCAPIX_META_STRING("getVarF"), jfloat>(index); }
inline void Script::setVar(jint index, jdouble v) { return call_method<SCAPIX_META_STRING("setVar"), void>(index, v); }
inline jdouble Script::getVarD(jint index) { return call_method<SCAPIX_META_STRING("getVarD"), jdouble>(index); }
inline void Script::setVar(jint index, jint v) { return call_method<SCAPIX_META_STRING("setVar"), void>(index, v); }
inline jint Script::getVarI(jint index) { return call_method<SCAPIX_META_STRING("getVarI"), jint>(index); }
inline void Script::setVar(jint index, jlong v) { return call_method<SCAPIX_META_STRING("setVar"), void>(index, v); }
inline jlong Script::getVarJ(jint index) { return call_method<SCAPIX_META_STRING("getVarJ"), jlong>(index); }
inline void Script::setVar(jint index, jboolean v) { return call_method<SCAPIX_META_STRING("setVar"), void>(index, v); }
inline jboolean Script::getVarB(jint index) { return call_method<SCAPIX_META_STRING("getVarB"), jboolean>(index); }
inline void Script::setVar(jint index, ref<android::renderscript::BaseObj> o) { return call_method<SCAPIX_META_STRING("setVar"), void>(index, o); }
inline void Script::setVar(jint index, ref<android::renderscript::FieldPacker> v) { return call_method<SCAPIX_META_STRING("setVar"), void>(index, v); }
inline void Script::setVar(jint index, ref<android::renderscript::FieldPacker> v, ref<android::renderscript::Element> e, ref<link::java::array<jint>> dims) { return call_method<SCAPIX_META_STRING("setVar"), void>(index, v, e, dims); }
inline void Script::getVarV(jint index, ref<android::renderscript::FieldPacker> v) { return call_method<SCAPIX_META_STRING("getVarV"), void>(index, v); }
inline void Script::setTimeZone(ref<java::lang::String> timeZone) { return call_method<SCAPIX_META_STRING("setTimeZone"), void>(timeZone); }

} // namespace android::renderscript
} // namespace scapix::java_api

#endif // SCAPIX_ANDROID_RENDERSCRIPT_SCRIPT_H
