// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/org/apache/http/conn/scheme/SocketFactory.h>

#ifndef SCAPIX_ORG_APACHE_HTTP_CONN_SCHEME_LAYEREDSOCKETFACTORY_H
#define SCAPIX_ORG_APACHE_HTTP_CONN_SCHEME_LAYEREDSOCKETFACTORY_H

namespace scapix::java_api {

namespace java::lang { class String; }
namespace java::net { class Socket; }

namespace org::apache::http::conn::scheme {

class LayeredSocketFactory : public object_base<SCAPIX_META_STRING("org/apache/http/conn/scheme/LayeredSocketFactory"),
	java::lang::Object,
	org::apache::http::conn::scheme::SocketFactory>
{
public:

	ref<java::net::Socket> createSocket(ref<java::net::Socket> p1, ref<java::lang::String> p2, jint p3, jboolean p4);

protected:

	LayeredSocketFactory(handle_type h) : base_(h) {}

};

} // namespace org::apache::http::conn::scheme
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/net/Socket.h>

namespace scapix::java_api {
namespace org::apache::http::conn::scheme {

inline ref<java::net::Socket> LayeredSocketFactory::createSocket(ref<java::net::Socket> p1, ref<java::lang::String> p2, jint p3, jboolean p4) { return call_method<SCAPIX_META_STRING("createSocket"), ref<java::net::Socket>>(p1, p2, p3, p4); }

} // namespace org::apache::http::conn::scheme
} // namespace scapix::java_api

#endif // SCAPIX_ORG_APACHE_HTTP_CONN_SCHEME_LAYEREDSOCKETFACTORY_H
