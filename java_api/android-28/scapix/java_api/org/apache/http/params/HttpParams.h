// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ORG_APACHE_HTTP_PARAMS_HTTPPARAMS_H
#define SCAPIX_ORG_APACHE_HTTP_PARAMS_HTTPPARAMS_H

namespace scapix::java_api {

namespace java::lang { class String; }

namespace org::apache::http::params {

class HttpParams : public object_base<SCAPIX_META_STRING("org/apache/http/params/HttpParams"),
	java::lang::Object>
{
public:

	ref<java::lang::Object> getParameter(ref<java::lang::String> p1);
	ref<org::apache::http::params::HttpParams> setParameter(ref<java::lang::String> p1, ref<java::lang::Object> p2);
	ref<org::apache::http::params::HttpParams> copy();
	jboolean removeParameter(ref<java::lang::String> p1);
	jlong getLongParameter(ref<java::lang::String> p1, jlong p2);
	ref<org::apache::http::params::HttpParams> setLongParameter(ref<java::lang::String> p1, jlong p2);
	jint getIntParameter(ref<java::lang::String> p1, jint p2);
	ref<org::apache::http::params::HttpParams> setIntParameter(ref<java::lang::String> p1, jint p2);
	jdouble getDoubleParameter(ref<java::lang::String> p1, jdouble p2);
	ref<org::apache::http::params::HttpParams> setDoubleParameter(ref<java::lang::String> p1, jdouble p2);
	jboolean getBooleanParameter(ref<java::lang::String> p1, jboolean p2);
	ref<org::apache::http::params::HttpParams> setBooleanParameter(ref<java::lang::String> p1, jboolean p2);
	jboolean isParameterTrue(ref<java::lang::String> p1);
	jboolean isParameterFalse(ref<java::lang::String> p1);

protected:

	HttpParams(handle_type h) : base_(h) {}

};

} // namespace org::apache::http::params
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace org::apache::http::params {

inline ref<java::lang::Object> HttpParams::getParameter(ref<java::lang::String> p1) { return call_method<SCAPIX_META_STRING("getParameter"), ref<java::lang::Object>>(p1); }
inline ref<org::apache::http::params::HttpParams> HttpParams::setParameter(ref<java::lang::String> p1, ref<java::lang::Object> p2) { return call_method<SCAPIX_META_STRING("setParameter"), ref<org::apache::http::params::HttpParams>>(p1, p2); }
inline ref<org::apache::http::params::HttpParams> HttpParams::copy() { return call_method<SCAPIX_META_STRING("copy"), ref<org::apache::http::params::HttpParams>>(); }
inline jboolean HttpParams::removeParameter(ref<java::lang::String> p1) { return call_method<SCAPIX_META_STRING("removeParameter"), jboolean>(p1); }
inline jlong HttpParams::getLongParameter(ref<java::lang::String> p1, jlong p2) { return call_method<SCAPIX_META_STRING("getLongParameter"), jlong>(p1, p2); }
inline ref<org::apache::http::params::HttpParams> HttpParams::setLongParameter(ref<java::lang::String> p1, jlong p2) { return call_method<SCAPIX_META_STRING("setLongParameter"), ref<org::apache::http::params::HttpParams>>(p1, p2); }
inline jint HttpParams::getIntParameter(ref<java::lang::String> p1, jint p2) { return call_method<SCAPIX_META_STRING("getIntParameter"), jint>(p1, p2); }
inline ref<org::apache::http::params::HttpParams> HttpParams::setIntParameter(ref<java::lang::String> p1, jint p2) { return call_method<SCAPIX_META_STRING("setIntParameter"), ref<org::apache::http::params::HttpParams>>(p1, p2); }
inline jdouble HttpParams::getDoubleParameter(ref<java::lang::String> p1, jdouble p2) { return call_method<SCAPIX_META_STRING("getDoubleParameter"), jdouble>(p1, p2); }
inline ref<org::apache::http::params::HttpParams> HttpParams::setDoubleParameter(ref<java::lang::String> p1, jdouble p2) { return call_method<SCAPIX_META_STRING("setDoubleParameter"), ref<org::apache::http::params::HttpParams>>(p1, p2); }
inline jboolean HttpParams::getBooleanParameter(ref<java::lang::String> p1, jboolean p2) { return call_method<SCAPIX_META_STRING("getBooleanParameter"), jboolean>(p1, p2); }
inline ref<org::apache::http::params::HttpParams> HttpParams::setBooleanParameter(ref<java::lang::String> p1, jboolean p2) { return call_method<SCAPIX_META_STRING("setBooleanParameter"), ref<org::apache::http::params::HttpParams>>(p1, p2); }
inline jboolean HttpParams::isParameterTrue(ref<java::lang::String> p1) { return call_method<SCAPIX_META_STRING("isParameterTrue"), jboolean>(p1); }
inline jboolean HttpParams::isParameterFalse(ref<java::lang::String> p1) { return call_method<SCAPIX_META_STRING("isParameterFalse"), jboolean>(p1); }

} // namespace org::apache::http::params
} // namespace scapix::java_api

#endif // SCAPIX_ORG_APACHE_HTTP_PARAMS_HTTPPARAMS_H
