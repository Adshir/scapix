// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ORG_W3C_DOM_NODE_H
#define SCAPIX_ORG_W3C_DOM_NODE_H

namespace scapix::java_api {

namespace java::lang { class String; }
namespace org::w3c::dom { class Document; }
namespace org::w3c::dom { class NamedNodeMap; }
namespace org::w3c::dom { class NodeList; }
namespace org::w3c::dom { class UserDataHandler; }

namespace org::w3c::dom {

class Node : public object_base<SCAPIX_META_STRING("org/w3c/dom/Node"),
	java::lang::Object>
{
public:

	static jshort ATTRIBUTE_NODE_();
	static jshort CDATA_SECTION_NODE_();
	static jshort COMMENT_NODE_();
	static jshort DOCUMENT_FRAGMENT_NODE_();
	static jshort DOCUMENT_NODE_();
	static jshort DOCUMENT_POSITION_CONTAINED_BY_();
	static jshort DOCUMENT_POSITION_CONTAINS_();
	static jshort DOCUMENT_POSITION_DISCONNECTED_();
	static jshort DOCUMENT_POSITION_FOLLOWING_();
	static jshort DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC_();
	static jshort DOCUMENT_POSITION_PRECEDING_();
	static jshort DOCUMENT_TYPE_NODE_();
	static jshort ELEMENT_NODE_();
	static jshort ENTITY_NODE_();
	static jshort ENTITY_REFERENCE_NODE_();
	static jshort NOTATION_NODE_();
	static jshort PROCESSING_INSTRUCTION_NODE_();
	static jshort TEXT_NODE_();

	ref<java::lang::String> getNodeName();
	ref<java::lang::String> getNodeValue();
	void setNodeValue(ref<java::lang::String> p1);
	jshort getNodeType();
	ref<org::w3c::dom::Node> getParentNode();
	ref<org::w3c::dom::NodeList> getChildNodes();
	ref<org::w3c::dom::Node> getFirstChild();
	ref<org::w3c::dom::Node> getLastChild();
	ref<org::w3c::dom::Node> getPreviousSibling();
	ref<org::w3c::dom::Node> getNextSibling();
	ref<org::w3c::dom::NamedNodeMap> getAttributes();
	ref<org::w3c::dom::Document> getOwnerDocument();
	ref<org::w3c::dom::Node> insertBefore(ref<org::w3c::dom::Node> p1, ref<org::w3c::dom::Node> p2);
	ref<org::w3c::dom::Node> replaceChild(ref<org::w3c::dom::Node> p1, ref<org::w3c::dom::Node> p2);
	ref<org::w3c::dom::Node> removeChild(ref<org::w3c::dom::Node> p1);
	ref<org::w3c::dom::Node> appendChild(ref<org::w3c::dom::Node> p1);
	jboolean hasChildNodes();
	ref<org::w3c::dom::Node> cloneNode(jboolean p1);
	void normalize();
	jboolean isSupported(ref<java::lang::String> p1, ref<java::lang::String> p2);
	ref<java::lang::String> getNamespaceURI();
	ref<java::lang::String> getPrefix();
	void setPrefix(ref<java::lang::String> p1);
	ref<java::lang::String> getLocalName();
	jboolean hasAttributes();
	ref<java::lang::String> getBaseURI();
	jshort compareDocumentPosition(ref<org::w3c::dom::Node> p1);
	ref<java::lang::String> getTextContent();
	void setTextContent(ref<java::lang::String> p1);
	jboolean isSameNode(ref<org::w3c::dom::Node> p1);
	ref<java::lang::String> lookupPrefix(ref<java::lang::String> p1);
	jboolean isDefaultNamespace(ref<java::lang::String> p1);
	ref<java::lang::String> lookupNamespaceURI(ref<java::lang::String> p1);
	jboolean isEqualNode(ref<org::w3c::dom::Node> p1);
	ref<java::lang::Object> getFeature(ref<java::lang::String> p1, ref<java::lang::String> p2);
	ref<java::lang::Object> setUserData(ref<java::lang::String> p1, ref<java::lang::Object> p2, ref<org::w3c::dom::UserDataHandler> p3);
	ref<java::lang::Object> getUserData(ref<java::lang::String> p1);

protected:

	Node(handle_type h) : base_(h) {}

};

} // namespace org::w3c::dom
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/org/w3c/dom/Document.h>
#include <scapix/java_api/org/w3c/dom/NamedNodeMap.h>
#include <scapix/java_api/org/w3c/dom/NodeList.h>
#include <scapix/java_api/org/w3c/dom/UserDataHandler.h>

namespace scapix::java_api {
namespace org::w3c::dom {

inline jshort Node::ATTRIBUTE_NODE_() { return get_static_field<SCAPIX_META_STRING("ATTRIBUTE_NODE"), jshort>(); }
inline jshort Node::CDATA_SECTION_NODE_() { return get_static_field<SCAPIX_META_STRING("CDATA_SECTION_NODE"), jshort>(); }
inline jshort Node::COMMENT_NODE_() { return get_static_field<SCAPIX_META_STRING("COMMENT_NODE"), jshort>(); }
inline jshort Node::DOCUMENT_FRAGMENT_NODE_() { return get_static_field<SCAPIX_META_STRING("DOCUMENT_FRAGMENT_NODE"), jshort>(); }
inline jshort Node::DOCUMENT_NODE_() { return get_static_field<SCAPIX_META_STRING("DOCUMENT_NODE"), jshort>(); }
inline jshort Node::DOCUMENT_POSITION_CONTAINED_BY_() { return get_static_field<SCAPIX_META_STRING("DOCUMENT_POSITION_CONTAINED_BY"), jshort>(); }
inline jshort Node::DOCUMENT_POSITION_CONTAINS_() { return get_static_field<SCAPIX_META_STRING("DOCUMENT_POSITION_CONTAINS"), jshort>(); }
inline jshort Node::DOCUMENT_POSITION_DISCONNECTED_() { return get_static_field<SCAPIX_META_STRING("DOCUMENT_POSITION_DISCONNECTED"), jshort>(); }
inline jshort Node::DOCUMENT_POSITION_FOLLOWING_() { return get_static_field<SCAPIX_META_STRING("DOCUMENT_POSITION_FOLLOWING"), jshort>(); }
inline jshort Node::DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC_() { return get_static_field<SCAPIX_META_STRING("DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC"), jshort>(); }
inline jshort Node::DOCUMENT_POSITION_PRECEDING_() { return get_static_field<SCAPIX_META_STRING("DOCUMENT_POSITION_PRECEDING"), jshort>(); }
inline jshort Node::DOCUMENT_TYPE_NODE_() { return get_static_field<SCAPIX_META_STRING("DOCUMENT_TYPE_NODE"), jshort>(); }
inline jshort Node::ELEMENT_NODE_() { return get_static_field<SCAPIX_META_STRING("ELEMENT_NODE"), jshort>(); }
inline jshort Node::ENTITY_NODE_() { return get_static_field<SCAPIX_META_STRING("ENTITY_NODE"), jshort>(); }
inline jshort Node::ENTITY_REFERENCE_NODE_() { return get_static_field<SCAPIX_META_STRING("ENTITY_REFERENCE_NODE"), jshort>(); }
inline jshort Node::NOTATION_NODE_() { return get_static_field<SCAPIX_META_STRING("NOTATION_NODE"), jshort>(); }
inline jshort Node::PROCESSING_INSTRUCTION_NODE_() { return get_static_field<SCAPIX_META_STRING("PROCESSING_INSTRUCTION_NODE"), jshort>(); }
inline jshort Node::TEXT_NODE_() { return get_static_field<SCAPIX_META_STRING("TEXT_NODE"), jshort>(); }
inline ref<java::lang::String> Node::getNodeName() { return call_method<SCAPIX_META_STRING("getNodeName"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Node::getNodeValue() { return call_method<SCAPIX_META_STRING("getNodeValue"), ref<java::lang::String>>(); }
inline void Node::setNodeValue(ref<java::lang::String> p1) { return call_method<SCAPIX_META_STRING("setNodeValue"), void>(p1); }
inline jshort Node::getNodeType() { return call_method<SCAPIX_META_STRING("getNodeType"), jshort>(); }
inline ref<org::w3c::dom::Node> Node::getParentNode() { return call_method<SCAPIX_META_STRING("getParentNode"), ref<org::w3c::dom::Node>>(); }
inline ref<org::w3c::dom::NodeList> Node::getChildNodes() { return call_method<SCAPIX_META_STRING("getChildNodes"), ref<org::w3c::dom::NodeList>>(); }
inline ref<org::w3c::dom::Node> Node::getFirstChild() { return call_method<SCAPIX_META_STRING("getFirstChild"), ref<org::w3c::dom::Node>>(); }
inline ref<org::w3c::dom::Node> Node::getLastChild() { return call_method<SCAPIX_META_STRING("getLastChild"), ref<org::w3c::dom::Node>>(); }
inline ref<org::w3c::dom::Node> Node::getPreviousSibling() { return call_method<SCAPIX_META_STRING("getPreviousSibling"), ref<org::w3c::dom::Node>>(); }
inline ref<org::w3c::dom::Node> Node::getNextSibling() { return call_method<SCAPIX_META_STRING("getNextSibling"), ref<org::w3c::dom::Node>>(); }
inline ref<org::w3c::dom::NamedNodeMap> Node::getAttributes() { return call_method<SCAPIX_META_STRING("getAttributes"), ref<org::w3c::dom::NamedNodeMap>>(); }
inline ref<org::w3c::dom::Document> Node::getOwnerDocument() { return call_method<SCAPIX_META_STRING("getOwnerDocument"), ref<org::w3c::dom::Document>>(); }
inline ref<org::w3c::dom::Node> Node::insertBefore(ref<org::w3c::dom::Node> p1, ref<org::w3c::dom::Node> p2) { return call_method<SCAPIX_META_STRING("insertBefore"), ref<org::w3c::dom::Node>>(p1, p2); }
inline ref<org::w3c::dom::Node> Node::replaceChild(ref<org::w3c::dom::Node> p1, ref<org::w3c::dom::Node> p2) { return call_method<SCAPIX_META_STRING("replaceChild"), ref<org::w3c::dom::Node>>(p1, p2); }
inline ref<org::w3c::dom::Node> Node::removeChild(ref<org::w3c::dom::Node> p1) { return call_method<SCAPIX_META_STRING("removeChild"), ref<org::w3c::dom::Node>>(p1); }
inline ref<org::w3c::dom::Node> Node::appendChild(ref<org::w3c::dom::Node> p1) { return call_method<SCAPIX_META_STRING("appendChild"), ref<org::w3c::dom::Node>>(p1); }
inline jboolean Node::hasChildNodes() { return call_method<SCAPIX_META_STRING("hasChildNodes"), jboolean>(); }
inline ref<org::w3c::dom::Node> Node::cloneNode(jboolean p1) { return call_method<SCAPIX_META_STRING("cloneNode"), ref<org::w3c::dom::Node>>(p1); }
inline void Node::normalize() { return call_method<SCAPIX_META_STRING("normalize"), void>(); }
inline jboolean Node::isSupported(ref<java::lang::String> p1, ref<java::lang::String> p2) { return call_method<SCAPIX_META_STRING("isSupported"), jboolean>(p1, p2); }
inline ref<java::lang::String> Node::getNamespaceURI() { return call_method<SCAPIX_META_STRING("getNamespaceURI"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Node::getPrefix() { return call_method<SCAPIX_META_STRING("getPrefix"), ref<java::lang::String>>(); }
inline void Node::setPrefix(ref<java::lang::String> p1) { return call_method<SCAPIX_META_STRING("setPrefix"), void>(p1); }
inline ref<java::lang::String> Node::getLocalName() { return call_method<SCAPIX_META_STRING("getLocalName"), ref<java::lang::String>>(); }
inline jboolean Node::hasAttributes() { return call_method<SCAPIX_META_STRING("hasAttributes"), jboolean>(); }
inline ref<java::lang::String> Node::getBaseURI() { return call_method<SCAPIX_META_STRING("getBaseURI"), ref<java::lang::String>>(); }
inline jshort Node::compareDocumentPosition(ref<org::w3c::dom::Node> p1) { return call_method<SCAPIX_META_STRING("compareDocumentPosition"), jshort>(p1); }
inline ref<java::lang::String> Node::getTextContent() { return call_method<SCAPIX_META_STRING("getTextContent"), ref<java::lang::String>>(); }
inline void Node::setTextContent(ref<java::lang::String> p1) { return call_method<SCAPIX_META_STRING("setTextContent"), void>(p1); }
inline jboolean Node::isSameNode(ref<org::w3c::dom::Node> p1) { return call_method<SCAPIX_META_STRING("isSameNode"), jboolean>(p1); }
inline ref<java::lang::String> Node::lookupPrefix(ref<java::lang::String> p1) { return call_method<SCAPIX_META_STRING("lookupPrefix"), ref<java::lang::String>>(p1); }
inline jboolean Node::isDefaultNamespace(ref<java::lang::String> p1) { return call_method<SCAPIX_META_STRING("isDefaultNamespace"), jboolean>(p1); }
inline ref<java::lang::String> Node::lookupNamespaceURI(ref<java::lang::String> p1) { return call_method<SCAPIX_META_STRING("lookupNamespaceURI"), ref<java::lang::String>>(p1); }
inline jboolean Node::isEqualNode(ref<org::w3c::dom::Node> p1) { return call_method<SCAPIX_META_STRING("isEqualNode"), jboolean>(p1); }
inline ref<java::lang::Object> Node::getFeature(ref<java::lang::String> p1, ref<java::lang::String> p2) { return call_method<SCAPIX_META_STRING("getFeature"), ref<java::lang::Object>>(p1, p2); }
inline ref<java::lang::Object> Node::setUserData(ref<java::lang::String> p1, ref<java::lang::Object> p2, ref<org::w3c::dom::UserDataHandler> p3) { return call_method<SCAPIX_META_STRING("setUserData"), ref<java::lang::Object>>(p1, p2, p3); }
inline ref<java::lang::Object> Node::getUserData(ref<java::lang::String> p1) { return call_method<SCAPIX_META_STRING("getUserData"), ref<java::lang::Object>>(p1); }

} // namespace org::w3c::dom
} // namespace scapix::java_api

#endif // SCAPIX_ORG_W3C_DOM_NODE_H
