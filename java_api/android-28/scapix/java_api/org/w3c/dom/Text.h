// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/org/w3c/dom/CharacterData.h>

#ifndef SCAPIX_ORG_W3C_DOM_TEXT_H
#define SCAPIX_ORG_W3C_DOM_TEXT_H

namespace scapix::java_api {

namespace java::lang { class String; }

namespace org::w3c::dom {

class Text : public object_base<SCAPIX_META_STRING("org/w3c/dom/Text"),
	java::lang::Object,
	org::w3c::dom::CharacterData>
{
public:

	ref<org::w3c::dom::Text> splitText(jint p1);
	jboolean isElementContentWhitespace();
	ref<java::lang::String> getWholeText();
	ref<org::w3c::dom::Text> replaceWholeText(ref<java::lang::String> p1);

protected:

	Text(handle_type h) : base_(h) {}

};

} // namespace org::w3c::dom
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace org::w3c::dom {

inline ref<org::w3c::dom::Text> Text::splitText(jint p1) { return call_method<SCAPIX_META_STRING("splitText"), ref<org::w3c::dom::Text>>(p1); }
inline jboolean Text::isElementContentWhitespace() { return call_method<SCAPIX_META_STRING("isElementContentWhitespace"), jboolean>(); }
inline ref<java::lang::String> Text::getWholeText() { return call_method<SCAPIX_META_STRING("getWholeText"), ref<java::lang::String>>(); }
inline ref<org::w3c::dom::Text> Text::replaceWholeText(ref<java::lang::String> p1) { return call_method<SCAPIX_META_STRING("replaceWholeText"), ref<org::w3c::dom::Text>>(p1); }

} // namespace org::w3c::dom
} // namespace scapix::java_api

#endif // SCAPIX_ORG_W3C_DOM_TEXT_H
