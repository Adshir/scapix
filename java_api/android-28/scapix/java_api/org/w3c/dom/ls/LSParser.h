// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ORG_W3C_DOM_LS_LSPARSER_H
#define SCAPIX_ORG_W3C_DOM_LS_LSPARSER_H

namespace scapix::java_api {

namespace java::lang { class String; }
namespace org::w3c::dom { class DOMConfiguration; }
namespace org::w3c::dom { class Document; }
namespace org::w3c::dom { class Node; }
namespace org::w3c::dom::ls { class LSInput; }
namespace org::w3c::dom::ls { class LSParserFilter; }

namespace org::w3c::dom::ls {

class LSParser : public object_base<SCAPIX_META_STRING("org/w3c/dom/ls/LSParser"),
	java::lang::Object>
{
public:

	static jshort ACTION_APPEND_AS_CHILDREN_();
	static jshort ACTION_INSERT_AFTER_();
	static jshort ACTION_INSERT_BEFORE_();
	static jshort ACTION_REPLACE_();
	static jshort ACTION_REPLACE_CHILDREN_();

	ref<org::w3c::dom::DOMConfiguration> getDomConfig();
	ref<org::w3c::dom::ls::LSParserFilter> getFilter();
	void setFilter(ref<org::w3c::dom::ls::LSParserFilter> p1);
	jboolean getAsync();
	jboolean getBusy();
	ref<org::w3c::dom::Document> parse(ref<org::w3c::dom::ls::LSInput> p1);
	ref<org::w3c::dom::Document> parseURI(ref<java::lang::String> p1);
	ref<org::w3c::dom::Node> parseWithContext(ref<org::w3c::dom::ls::LSInput> p1, ref<org::w3c::dom::Node> p2, jshort p3);
	void abort();

protected:

	LSParser(handle_type h) : base_(h) {}

};

} // namespace org::w3c::dom::ls
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/org/w3c/dom/DOMConfiguration.h>
#include <scapix/java_api/org/w3c/dom/Document.h>
#include <scapix/java_api/org/w3c/dom/Node.h>
#include <scapix/java_api/org/w3c/dom/ls/LSInput.h>
#include <scapix/java_api/org/w3c/dom/ls/LSParserFilter.h>

namespace scapix::java_api {
namespace org::w3c::dom::ls {

inline jshort LSParser::ACTION_APPEND_AS_CHILDREN_() { return get_static_field<SCAPIX_META_STRING("ACTION_APPEND_AS_CHILDREN"), jshort>(); }
inline jshort LSParser::ACTION_INSERT_AFTER_() { return get_static_field<SCAPIX_META_STRING("ACTION_INSERT_AFTER"), jshort>(); }
inline jshort LSParser::ACTION_INSERT_BEFORE_() { return get_static_field<SCAPIX_META_STRING("ACTION_INSERT_BEFORE"), jshort>(); }
inline jshort LSParser::ACTION_REPLACE_() { return get_static_field<SCAPIX_META_STRING("ACTION_REPLACE"), jshort>(); }
inline jshort LSParser::ACTION_REPLACE_CHILDREN_() { return get_static_field<SCAPIX_META_STRING("ACTION_REPLACE_CHILDREN"), jshort>(); }
inline ref<org::w3c::dom::DOMConfiguration> LSParser::getDomConfig() { return call_method<SCAPIX_META_STRING("getDomConfig"), ref<org::w3c::dom::DOMConfiguration>>(); }
inline ref<org::w3c::dom::ls::LSParserFilter> LSParser::getFilter() { return call_method<SCAPIX_META_STRING("getFilter"), ref<org::w3c::dom::ls::LSParserFilter>>(); }
inline void LSParser::setFilter(ref<org::w3c::dom::ls::LSParserFilter> p1) { return call_method<SCAPIX_META_STRING("setFilter"), void>(p1); }
inline jboolean LSParser::getAsync() { return call_method<SCAPIX_META_STRING("getAsync"), jboolean>(); }
inline jboolean LSParser::getBusy() { return call_method<SCAPIX_META_STRING("getBusy"), jboolean>(); }
inline ref<org::w3c::dom::Document> LSParser::parse(ref<org::w3c::dom::ls::LSInput> p1) { return call_method<SCAPIX_META_STRING("parse"), ref<org::w3c::dom::Document>>(p1); }
inline ref<org::w3c::dom::Document> LSParser::parseURI(ref<java::lang::String> p1) { return call_method<SCAPIX_META_STRING("parseURI"), ref<org::w3c::dom::Document>>(p1); }
inline ref<org::w3c::dom::Node> LSParser::parseWithContext(ref<org::w3c::dom::ls::LSInput> p1, ref<org::w3c::dom::Node> p2, jshort p3) { return call_method<SCAPIX_META_STRING("parseWithContext"), ref<org::w3c::dom::Node>>(p1, p2, p3); }
inline void LSParser::abort() { return call_method<SCAPIX_META_STRING("abort"), void>(); }

} // namespace org::w3c::dom::ls
} // namespace scapix::java_api

#endif // SCAPIX_ORG_W3C_DOM_LS_LSPARSER_H
