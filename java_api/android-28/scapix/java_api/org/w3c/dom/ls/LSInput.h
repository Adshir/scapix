// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ORG_W3C_DOM_LS_LSINPUT_H
#define SCAPIX_ORG_W3C_DOM_LS_LSINPUT_H

namespace scapix::java_api {

namespace java::io { class InputStream; }
namespace java::io { class Reader; }
namespace java::lang { class String; }

namespace org::w3c::dom::ls {

class LSInput : public object_base<SCAPIX_META_STRING("org/w3c/dom/ls/LSInput"),
	java::lang::Object>
{
public:

	ref<java::io::Reader> getCharacterStream();
	void setCharacterStream(ref<java::io::Reader> p1);
	ref<java::io::InputStream> getByteStream();
	void setByteStream(ref<java::io::InputStream> p1);
	ref<java::lang::String> getStringData();
	void setStringData(ref<java::lang::String> p1);
	ref<java::lang::String> getSystemId();
	void setSystemId(ref<java::lang::String> p1);
	ref<java::lang::String> getPublicId();
	void setPublicId(ref<java::lang::String> p1);
	ref<java::lang::String> getBaseURI();
	void setBaseURI(ref<java::lang::String> p1);
	ref<java::lang::String> getEncoding();
	void setEncoding(ref<java::lang::String> p1);
	jboolean getCertifiedText();
	void setCertifiedText(jboolean p1);

protected:

	LSInput(handle_type h) : base_(h) {}

};

} // namespace org::w3c::dom::ls
} // namespace scapix::java_api

#include <scapix/java_api/java/io/InputStream.h>
#include <scapix/java_api/java/io/Reader.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace org::w3c::dom::ls {

inline ref<java::io::Reader> LSInput::getCharacterStream() { return call_method<SCAPIX_META_STRING("getCharacterStream"), ref<java::io::Reader>>(); }
inline void LSInput::setCharacterStream(ref<java::io::Reader> p1) { return call_method<SCAPIX_META_STRING("setCharacterStream"), void>(p1); }
inline ref<java::io::InputStream> LSInput::getByteStream() { return call_method<SCAPIX_META_STRING("getByteStream"), ref<java::io::InputStream>>(); }
inline void LSInput::setByteStream(ref<java::io::InputStream> p1) { return call_method<SCAPIX_META_STRING("setByteStream"), void>(p1); }
inline ref<java::lang::String> LSInput::getStringData() { return call_method<SCAPIX_META_STRING("getStringData"), ref<java::lang::String>>(); }
inline void LSInput::setStringData(ref<java::lang::String> p1) { return call_method<SCAPIX_META_STRING("setStringData"), void>(p1); }
inline ref<java::lang::String> LSInput::getSystemId() { return call_method<SCAPIX_META_STRING("getSystemId"), ref<java::lang::String>>(); }
inline void LSInput::setSystemId(ref<java::lang::String> p1) { return call_method<SCAPIX_META_STRING("setSystemId"), void>(p1); }
inline ref<java::lang::String> LSInput::getPublicId() { return call_method<SCAPIX_META_STRING("getPublicId"), ref<java::lang::String>>(); }
inline void LSInput::setPublicId(ref<java::lang::String> p1) { return call_method<SCAPIX_META_STRING("setPublicId"), void>(p1); }
inline ref<java::lang::String> LSInput::getBaseURI() { return call_method<SCAPIX_META_STRING("getBaseURI"), ref<java::lang::String>>(); }
inline void LSInput::setBaseURI(ref<java::lang::String> p1) { return call_method<SCAPIX_META_STRING("setBaseURI"), void>(p1); }
inline ref<java::lang::String> LSInput::getEncoding() { return call_method<SCAPIX_META_STRING("getEncoding"), ref<java::lang::String>>(); }
inline void LSInput::setEncoding(ref<java::lang::String> p1) { return call_method<SCAPIX_META_STRING("setEncoding"), void>(p1); }
inline jboolean LSInput::getCertifiedText() { return call_method<SCAPIX_META_STRING("getCertifiedText"), jboolean>(); }
inline void LSInput::setCertifiedText(jboolean p1) { return call_method<SCAPIX_META_STRING("setCertifiedText"), void>(p1); }

} // namespace org::w3c::dom::ls
} // namespace scapix::java_api

#endif // SCAPIX_ORG_W3C_DOM_LS_LSINPUT_H
