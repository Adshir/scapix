// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/RuntimeException.h>

#ifndef SCAPIX_ORG_W3C_DOM_DOMEXCEPTION_H
#define SCAPIX_ORG_W3C_DOM_DOMEXCEPTION_H

namespace scapix::java_api {

namespace java::lang { class String; }

namespace org::w3c::dom {

class DOMException : public object_base<SCAPIX_META_STRING("org/w3c/dom/DOMException"),
	java::lang::RuntimeException>
{
public:

	static jshort DOMSTRING_SIZE_ERR_();
	static jshort HIERARCHY_REQUEST_ERR_();
	static jshort INDEX_SIZE_ERR_();
	static jshort INUSE_ATTRIBUTE_ERR_();
	static jshort INVALID_ACCESS_ERR_();
	static jshort INVALID_CHARACTER_ERR_();
	static jshort INVALID_MODIFICATION_ERR_();
	static jshort INVALID_STATE_ERR_();
	static jshort NAMESPACE_ERR_();
	static jshort NOT_FOUND_ERR_();
	static jshort NOT_SUPPORTED_ERR_();
	static jshort NO_DATA_ALLOWED_ERR_();
	static jshort NO_MODIFICATION_ALLOWED_ERR_();
	static jshort SYNTAX_ERR_();
	static jshort TYPE_MISMATCH_ERR_();
	static jshort VALIDATION_ERR_();
	static jshort WRONG_DOCUMENT_ERR_();
	jshort code();
	void code(jshort);

	static ref<DOMException> new_object(jshort code, ref<java::lang::String> message);

protected:

	DOMException(handle_type h) : base_(h) {}

};

} // namespace org::w3c::dom
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace org::w3c::dom {

inline jshort DOMException::DOMSTRING_SIZE_ERR_() { return get_static_field<SCAPIX_META_STRING("DOMSTRING_SIZE_ERR"), jshort>(); }
inline jshort DOMException::HIERARCHY_REQUEST_ERR_() { return get_static_field<SCAPIX_META_STRING("HIERARCHY_REQUEST_ERR"), jshort>(); }
inline jshort DOMException::INDEX_SIZE_ERR_() { return get_static_field<SCAPIX_META_STRING("INDEX_SIZE_ERR"), jshort>(); }
inline jshort DOMException::INUSE_ATTRIBUTE_ERR_() { return get_static_field<SCAPIX_META_STRING("INUSE_ATTRIBUTE_ERR"), jshort>(); }
inline jshort DOMException::INVALID_ACCESS_ERR_() { return get_static_field<SCAPIX_META_STRING("INVALID_ACCESS_ERR"), jshort>(); }
inline jshort DOMException::INVALID_CHARACTER_ERR_() { return get_static_field<SCAPIX_META_STRING("INVALID_CHARACTER_ERR"), jshort>(); }
inline jshort DOMException::INVALID_MODIFICATION_ERR_() { return get_static_field<SCAPIX_META_STRING("INVALID_MODIFICATION_ERR"), jshort>(); }
inline jshort DOMException::INVALID_STATE_ERR_() { return get_static_field<SCAPIX_META_STRING("INVALID_STATE_ERR"), jshort>(); }
inline jshort DOMException::NAMESPACE_ERR_() { return get_static_field<SCAPIX_META_STRING("NAMESPACE_ERR"), jshort>(); }
inline jshort DOMException::NOT_FOUND_ERR_() { return get_static_field<SCAPIX_META_STRING("NOT_FOUND_ERR"), jshort>(); }
inline jshort DOMException::NOT_SUPPORTED_ERR_() { return get_static_field<SCAPIX_META_STRING("NOT_SUPPORTED_ERR"), jshort>(); }
inline jshort DOMException::NO_DATA_ALLOWED_ERR_() { return get_static_field<SCAPIX_META_STRING("NO_DATA_ALLOWED_ERR"), jshort>(); }
inline jshort DOMException::NO_MODIFICATION_ALLOWED_ERR_() { return get_static_field<SCAPIX_META_STRING("NO_MODIFICATION_ALLOWED_ERR"), jshort>(); }
inline jshort DOMException::SYNTAX_ERR_() { return get_static_field<SCAPIX_META_STRING("SYNTAX_ERR"), jshort>(); }
inline jshort DOMException::TYPE_MISMATCH_ERR_() { return get_static_field<SCAPIX_META_STRING("TYPE_MISMATCH_ERR"), jshort>(); }
inline jshort DOMException::VALIDATION_ERR_() { return get_static_field<SCAPIX_META_STRING("VALIDATION_ERR"), jshort>(); }
inline jshort DOMException::WRONG_DOCUMENT_ERR_() { return get_static_field<SCAPIX_META_STRING("WRONG_DOCUMENT_ERR"), jshort>(); }
inline jshort DOMException::code() { return get_field<SCAPIX_META_STRING("code"), jshort>(); }
inline void DOMException::code(jshort v) { set_field<SCAPIX_META_STRING("code"), jshort>(v); }
inline ref<DOMException> DOMException::new_object(jshort code, ref<java::lang::String> message) { return base_::new_object(code, message); }

} // namespace org::w3c::dom
} // namespace scapix::java_api

#endif // SCAPIX_ORG_W3C_DOM_DOMEXCEPTION_H
