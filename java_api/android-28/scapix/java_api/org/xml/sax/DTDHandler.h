// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ORG_XML_SAX_DTDHANDLER_H
#define SCAPIX_ORG_XML_SAX_DTDHANDLER_H

namespace scapix::java_api {

namespace java::lang { class String; }

namespace org::xml::sax {

class DTDHandler : public object_base<SCAPIX_META_STRING("org/xml/sax/DTDHandler"),
	java::lang::Object>
{
public:

	void notationDecl(ref<java::lang::String> p1, ref<java::lang::String> p2, ref<java::lang::String> p3);
	void unparsedEntityDecl(ref<java::lang::String> p1, ref<java::lang::String> p2, ref<java::lang::String> p3, ref<java::lang::String> p4);

protected:

	DTDHandler(handle_type h) : base_(h) {}

};

} // namespace org::xml::sax
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace org::xml::sax {

inline void DTDHandler::notationDecl(ref<java::lang::String> p1, ref<java::lang::String> p2, ref<java::lang::String> p3) { return call_method<SCAPIX_META_STRING("notationDecl"), void>(p1, p2, p3); }
inline void DTDHandler::unparsedEntityDecl(ref<java::lang::String> p1, ref<java::lang::String> p2, ref<java::lang::String> p3, ref<java::lang::String> p4) { return call_method<SCAPIX_META_STRING("unparsedEntityDecl"), void>(p1, p2, p3, p4); }

} // namespace org::xml::sax
} // namespace scapix::java_api

#endif // SCAPIX_ORG_XML_SAX_DTDHANDLER_H
