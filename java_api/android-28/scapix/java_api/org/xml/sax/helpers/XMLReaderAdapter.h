// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/org/xml/sax/Parser.h>
#include <scapix/java_api/org/xml/sax/ContentHandler.h>

#ifndef SCAPIX_ORG_XML_SAX_HELPERS_XMLREADERADAPTER_H
#define SCAPIX_ORG_XML_SAX_HELPERS_XMLREADERADAPTER_H

namespace scapix::java_api {

namespace java::lang { class String; }
namespace java::util { class Locale; }
namespace org::xml::sax { class Attributes; }
namespace org::xml::sax { class DTDHandler; }
namespace org::xml::sax { class DocumentHandler; }
namespace org::xml::sax { class EntityResolver; }
namespace org::xml::sax { class ErrorHandler; }
namespace org::xml::sax { class InputSource; }
namespace org::xml::sax { class Locator; }
namespace org::xml::sax { class XMLReader; }

namespace org::xml::sax::helpers {

class XMLReaderAdapter : public object_base<SCAPIX_META_STRING("org/xml/sax/helpers/XMLReaderAdapter"),
	java::lang::Object,
	org::xml::sax::Parser,
	org::xml::sax::ContentHandler>
{
public:

	static ref<XMLReaderAdapter> new_object();
	static ref<XMLReaderAdapter> new_object(ref<org::xml::sax::XMLReader> xmlReader);
	void setLocale(ref<java::util::Locale> locale);
	void setEntityResolver(ref<org::xml::sax::EntityResolver> resolver);
	void setDTDHandler(ref<org::xml::sax::DTDHandler> handler);
	void setDocumentHandler(ref<org::xml::sax::DocumentHandler> handler);
	void setErrorHandler(ref<org::xml::sax::ErrorHandler> handler);
	void parse(ref<java::lang::String> systemId);
	void parse(ref<org::xml::sax::InputSource> input);
	void setDocumentLocator(ref<org::xml::sax::Locator> locator);
	void startDocument();
	void endDocument();
	void startPrefixMapping(ref<java::lang::String> prefix, ref<java::lang::String> uri);
	void endPrefixMapping(ref<java::lang::String> prefix);
	void startElement(ref<java::lang::String> uri, ref<java::lang::String> localName, ref<java::lang::String> qName, ref<org::xml::sax::Attributes> atts);
	void endElement(ref<java::lang::String> uri, ref<java::lang::String> localName, ref<java::lang::String> qName);
	void characters(ref<link::java::array<jchar>> ch, jint start, jint length);
	void ignorableWhitespace(ref<link::java::array<jchar>> ch, jint start, jint length);
	void processingInstruction(ref<java::lang::String> target, ref<java::lang::String> data);
	void skippedEntity(ref<java::lang::String> name);

protected:

	XMLReaderAdapter(handle_type h) : base_(h) {}

};

} // namespace org::xml::sax::helpers
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Locale.h>
#include <scapix/java_api/org/xml/sax/Attributes.h>
#include <scapix/java_api/org/xml/sax/DTDHandler.h>
#include <scapix/java_api/org/xml/sax/DocumentHandler.h>
#include <scapix/java_api/org/xml/sax/EntityResolver.h>
#include <scapix/java_api/org/xml/sax/ErrorHandler.h>
#include <scapix/java_api/org/xml/sax/InputSource.h>
#include <scapix/java_api/org/xml/sax/Locator.h>
#include <scapix/java_api/org/xml/sax/XMLReader.h>

namespace scapix::java_api {
namespace org::xml::sax::helpers {

inline ref<XMLReaderAdapter> XMLReaderAdapter::new_object() { return base_::new_object(); }
inline ref<XMLReaderAdapter> XMLReaderAdapter::new_object(ref<org::xml::sax::XMLReader> xmlReader) { return base_::new_object(xmlReader); }
inline void XMLReaderAdapter::setLocale(ref<java::util::Locale> locale) { return call_method<SCAPIX_META_STRING("setLocale"), void>(locale); }
inline void XMLReaderAdapter::setEntityResolver(ref<org::xml::sax::EntityResolver> resolver) { return call_method<SCAPIX_META_STRING("setEntityResolver"), void>(resolver); }
inline void XMLReaderAdapter::setDTDHandler(ref<org::xml::sax::DTDHandler> handler) { return call_method<SCAPIX_META_STRING("setDTDHandler"), void>(handler); }
inline void XMLReaderAdapter::setDocumentHandler(ref<org::xml::sax::DocumentHandler> handler) { return call_method<SCAPIX_META_STRING("setDocumentHandler"), void>(handler); }
inline void XMLReaderAdapter::setErrorHandler(ref<org::xml::sax::ErrorHandler> handler) { return call_method<SCAPIX_META_STRING("setErrorHandler"), void>(handler); }
inline void XMLReaderAdapter::parse(ref<java::lang::String> systemId) { return call_method<SCAPIX_META_STRING("parse"), void>(systemId); }
inline void XMLReaderAdapter::parse(ref<org::xml::sax::InputSource> input) { return call_method<SCAPIX_META_STRING("parse"), void>(input); }
inline void XMLReaderAdapter::setDocumentLocator(ref<org::xml::sax::Locator> locator) { return call_method<SCAPIX_META_STRING("setDocumentLocator"), void>(locator); }
inline void XMLReaderAdapter::startDocument() { return call_method<SCAPIX_META_STRING("startDocument"), void>(); }
inline void XMLReaderAdapter::endDocument() { return call_method<SCAPIX_META_STRING("endDocument"), void>(); }
inline void XMLReaderAdapter::startPrefixMapping(ref<java::lang::String> prefix, ref<java::lang::String> uri) { return call_method<SCAPIX_META_STRING("startPrefixMapping"), void>(prefix, uri); }
inline void XMLReaderAdapter::endPrefixMapping(ref<java::lang::String> prefix) { return call_method<SCAPIX_META_STRING("endPrefixMapping"), void>(prefix); }
inline void XMLReaderAdapter::startElement(ref<java::lang::String> uri, ref<java::lang::String> localName, ref<java::lang::String> qName, ref<org::xml::sax::Attributes> atts) { return call_method<SCAPIX_META_STRING("startElement"), void>(uri, localName, qName, atts); }
inline void XMLReaderAdapter::endElement(ref<java::lang::String> uri, ref<java::lang::String> localName, ref<java::lang::String> qName) { return call_method<SCAPIX_META_STRING("endElement"), void>(uri, localName, qName); }
inline void XMLReaderAdapter::characters(ref<link::java::array<jchar>> ch, jint start, jint length) { return call_method<SCAPIX_META_STRING("characters"), void>(ch, start, length); }
inline void XMLReaderAdapter::ignorableWhitespace(ref<link::java::array<jchar>> ch, jint start, jint length) { return call_method<SCAPIX_META_STRING("ignorableWhitespace"), void>(ch, start, length); }
inline void XMLReaderAdapter::processingInstruction(ref<java::lang::String> target, ref<java::lang::String> data) { return call_method<SCAPIX_META_STRING("processingInstruction"), void>(target, data); }
inline void XMLReaderAdapter::skippedEntity(ref<java::lang::String> name) { return call_method<SCAPIX_META_STRING("skippedEntity"), void>(name); }

} // namespace org::xml::sax::helpers
} // namespace scapix::java_api

#endif // SCAPIX_ORG_XML_SAX_HELPERS_XMLREADERADAPTER_H
