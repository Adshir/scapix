// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_ORG_XML_SAX_EXT_LEXICALHANDLER_H
#define SCAPIX_ORG_XML_SAX_EXT_LEXICALHANDLER_H

namespace scapix::java_api {

namespace java::lang { class String; }

namespace org::xml::sax::ext {

class LexicalHandler : public object_base<SCAPIX_META_STRING("org/xml/sax/ext/LexicalHandler"),
	java::lang::Object>
{
public:

	void startDTD(ref<java::lang::String> p1, ref<java::lang::String> p2, ref<java::lang::String> p3);
	void endDTD();
	void startEntity(ref<java::lang::String> p1);
	void endEntity(ref<java::lang::String> p1);
	void startCDATA();
	void endCDATA();
	void comment(ref<link::java::array<jchar>> p1, jint p2, jint p3);

protected:

	LexicalHandler(handle_type h) : base_(h) {}

};

} // namespace org::xml::sax::ext
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace org::xml::sax::ext {

inline void LexicalHandler::startDTD(ref<java::lang::String> p1, ref<java::lang::String> p2, ref<java::lang::String> p3) { return call_method<SCAPIX_META_STRING("startDTD"), void>(p1, p2, p3); }
inline void LexicalHandler::endDTD() { return call_method<SCAPIX_META_STRING("endDTD"), void>(); }
inline void LexicalHandler::startEntity(ref<java::lang::String> p1) { return call_method<SCAPIX_META_STRING("startEntity"), void>(p1); }
inline void LexicalHandler::endEntity(ref<java::lang::String> p1) { return call_method<SCAPIX_META_STRING("endEntity"), void>(p1); }
inline void LexicalHandler::startCDATA() { return call_method<SCAPIX_META_STRING("startCDATA"), void>(); }
inline void LexicalHandler::endCDATA() { return call_method<SCAPIX_META_STRING("endCDATA"), void>(); }
inline void LexicalHandler::comment(ref<link::java::array<jchar>> p1, jint p2, jint p3) { return call_method<SCAPIX_META_STRING("comment"), void>(p1, p2, p3); }

} // namespace org::xml::sax::ext
} // namespace scapix::java_api

#endif // SCAPIX_ORG_XML_SAX_EXT_LEXICALHANDLER_H
