// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/org/xml/sax/helpers/DefaultHandler.h>
#include <scapix/java_api/org/xml/sax/ext/LexicalHandler.h>
#include <scapix/java_api/org/xml/sax/ext/DeclHandler.h>
#include <scapix/java_api/org/xml/sax/ext/EntityResolver2.h>

#ifndef SCAPIX_ORG_XML_SAX_EXT_DEFAULTHANDLER2_H
#define SCAPIX_ORG_XML_SAX_EXT_DEFAULTHANDLER2_H

namespace scapix::java_api {

namespace java::lang { class String; }
namespace org::xml::sax { class InputSource; }

namespace org::xml::sax::ext {

class DefaultHandler2 : public object_base<SCAPIX_META_STRING("org/xml/sax/ext/DefaultHandler2"),
	org::xml::sax::helpers::DefaultHandler,
	org::xml::sax::ext::LexicalHandler,
	org::xml::sax::ext::DeclHandler,
	org::xml::sax::ext::EntityResolver2>
{
public:

	static ref<DefaultHandler2> new_object();
	void startCDATA();
	void endCDATA();
	void startDTD(ref<java::lang::String> name, ref<java::lang::String> publicId, ref<java::lang::String> systemId);
	void endDTD();
	void startEntity(ref<java::lang::String> name);
	void endEntity(ref<java::lang::String> name);
	void comment(ref<link::java::array<jchar>> ch, jint start, jint length);
	void attributeDecl(ref<java::lang::String> eName, ref<java::lang::String> aName, ref<java::lang::String> type, ref<java::lang::String> mode, ref<java::lang::String> value);
	void elementDecl(ref<java::lang::String> name, ref<java::lang::String> model);
	void externalEntityDecl(ref<java::lang::String> name, ref<java::lang::String> publicId, ref<java::lang::String> systemId);
	void internalEntityDecl(ref<java::lang::String> name, ref<java::lang::String> value);
	ref<org::xml::sax::InputSource> getExternalSubset(ref<java::lang::String> name, ref<java::lang::String> baseURI);
	ref<org::xml::sax::InputSource> resolveEntity(ref<java::lang::String> name, ref<java::lang::String> publicId, ref<java::lang::String> baseURI, ref<java::lang::String> systemId);
	ref<org::xml::sax::InputSource> resolveEntity(ref<java::lang::String> publicId, ref<java::lang::String> systemId);

protected:

	DefaultHandler2(handle_type h) : base_(h) {}

};

} // namespace org::xml::sax::ext
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/org/xml/sax/InputSource.h>

namespace scapix::java_api {
namespace org::xml::sax::ext {

inline ref<DefaultHandler2> DefaultHandler2::new_object() { return base_::new_object(); }
inline void DefaultHandler2::startCDATA() { return call_method<SCAPIX_META_STRING("startCDATA"), void>(); }
inline void DefaultHandler2::endCDATA() { return call_method<SCAPIX_META_STRING("endCDATA"), void>(); }
inline void DefaultHandler2::startDTD(ref<java::lang::String> name, ref<java::lang::String> publicId, ref<java::lang::String> systemId) { return call_method<SCAPIX_META_STRING("startDTD"), void>(name, publicId, systemId); }
inline void DefaultHandler2::endDTD() { return call_method<SCAPIX_META_STRING("endDTD"), void>(); }
inline void DefaultHandler2::startEntity(ref<java::lang::String> name) { return call_method<SCAPIX_META_STRING("startEntity"), void>(name); }
inline void DefaultHandler2::endEntity(ref<java::lang::String> name) { return call_method<SCAPIX_META_STRING("endEntity"), void>(name); }
inline void DefaultHandler2::comment(ref<link::java::array<jchar>> ch, jint start, jint length) { return call_method<SCAPIX_META_STRING("comment"), void>(ch, start, length); }
inline void DefaultHandler2::attributeDecl(ref<java::lang::String> eName, ref<java::lang::String> aName, ref<java::lang::String> type, ref<java::lang::String> mode, ref<java::lang::String> value) { return call_method<SCAPIX_META_STRING("attributeDecl"), void>(eName, aName, type, mode, value); }
inline void DefaultHandler2::elementDecl(ref<java::lang::String> name, ref<java::lang::String> model) { return call_method<SCAPIX_META_STRING("elementDecl"), void>(name, model); }
inline void DefaultHandler2::externalEntityDecl(ref<java::lang::String> name, ref<java::lang::String> publicId, ref<java::lang::String> systemId) { return call_method<SCAPIX_META_STRING("externalEntityDecl"), void>(name, publicId, systemId); }
inline void DefaultHandler2::internalEntityDecl(ref<java::lang::String> name, ref<java::lang::String> value) { return call_method<SCAPIX_META_STRING("internalEntityDecl"), void>(name, value); }
inline ref<org::xml::sax::InputSource> DefaultHandler2::getExternalSubset(ref<java::lang::String> name, ref<java::lang::String> baseURI) { return call_method<SCAPIX_META_STRING("getExternalSubset"), ref<org::xml::sax::InputSource>>(name, baseURI); }
inline ref<org::xml::sax::InputSource> DefaultHandler2::resolveEntity(ref<java::lang::String> name, ref<java::lang::String> publicId, ref<java::lang::String> baseURI, ref<java::lang::String> systemId) { return call_method<SCAPIX_META_STRING("resolveEntity"), ref<org::xml::sax::InputSource>>(name, publicId, baseURI, systemId); }
inline ref<org::xml::sax::InputSource> DefaultHandler2::resolveEntity(ref<java::lang::String> publicId, ref<java::lang::String> systemId) { return call_method<SCAPIX_META_STRING("resolveEntity"), ref<org::xml::sax::InputSource>>(publicId, systemId); }

} // namespace org::xml::sax::ext
} // namespace scapix::java_api

#endif // SCAPIX_ORG_XML_SAX_EXT_DEFAULTHANDLER2_H
