// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/org/xml/sax/helpers/AttributesImpl.h>
#include <scapix/java_api/org/xml/sax/ext/Attributes2.h>

#ifndef SCAPIX_ORG_XML_SAX_EXT_ATTRIBUTES2IMPL_H
#define SCAPIX_ORG_XML_SAX_EXT_ATTRIBUTES2IMPL_H

namespace scapix::java_api {

namespace java::lang { class String; }
namespace org::xml::sax { class Attributes; }

namespace org::xml::sax::ext {

class Attributes2Impl : public object_base<SCAPIX_META_STRING("org/xml/sax/ext/Attributes2Impl"),
	org::xml::sax::helpers::AttributesImpl,
	org::xml::sax::ext::Attributes2>
{
public:

	static ref<Attributes2Impl> new_object();
	static ref<Attributes2Impl> new_object(ref<org::xml::sax::Attributes> atts);
	jboolean isDeclared(jint index);
	jboolean isDeclared(ref<java::lang::String> uri, ref<java::lang::String> localName);
	jboolean isDeclared(ref<java::lang::String> qName);
	jboolean isSpecified(jint index);
	jboolean isSpecified(ref<java::lang::String> uri, ref<java::lang::String> localName);
	jboolean isSpecified(ref<java::lang::String> qName);
	void setAttributes(ref<org::xml::sax::Attributes> atts);
	void addAttribute(ref<java::lang::String> uri, ref<java::lang::String> localName, ref<java::lang::String> qName, ref<java::lang::String> type, ref<java::lang::String> value);
	void removeAttribute(jint index);
	void setDeclared(jint index, jboolean value);
	void setSpecified(jint index, jboolean value);

protected:

	Attributes2Impl(handle_type h) : base_(h) {}

};

} // namespace org::xml::sax::ext
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/org/xml/sax/Attributes.h>

namespace scapix::java_api {
namespace org::xml::sax::ext {

inline ref<Attributes2Impl> Attributes2Impl::new_object() { return base_::new_object(); }
inline ref<Attributes2Impl> Attributes2Impl::new_object(ref<org::xml::sax::Attributes> atts) { return base_::new_object(atts); }
inline jboolean Attributes2Impl::isDeclared(jint index) { return call_method<SCAPIX_META_STRING("isDeclared"), jboolean>(index); }
inline jboolean Attributes2Impl::isDeclared(ref<java::lang::String> uri, ref<java::lang::String> localName) { return call_method<SCAPIX_META_STRING("isDeclared"), jboolean>(uri, localName); }
inline jboolean Attributes2Impl::isDeclared(ref<java::lang::String> qName) { return call_method<SCAPIX_META_STRING("isDeclared"), jboolean>(qName); }
inline jboolean Attributes2Impl::isSpecified(jint index) { return call_method<SCAPIX_META_STRING("isSpecified"), jboolean>(index); }
inline jboolean Attributes2Impl::isSpecified(ref<java::lang::String> uri, ref<java::lang::String> localName) { return call_method<SCAPIX_META_STRING("isSpecified"), jboolean>(uri, localName); }
inline jboolean Attributes2Impl::isSpecified(ref<java::lang::String> qName) { return call_method<SCAPIX_META_STRING("isSpecified"), jboolean>(qName); }
inline void Attributes2Impl::setAttributes(ref<org::xml::sax::Attributes> atts) { return call_method<SCAPIX_META_STRING("setAttributes"), void>(atts); }
inline void Attributes2Impl::addAttribute(ref<java::lang::String> uri, ref<java::lang::String> localName, ref<java::lang::String> qName, ref<java::lang::String> type, ref<java::lang::String> value) { return call_method<SCAPIX_META_STRING("addAttribute"), void>(uri, localName, qName, type, value); }
inline void Attributes2Impl::removeAttribute(jint index) { return call_method<SCAPIX_META_STRING("removeAttribute"), void>(index); }
inline void Attributes2Impl::setDeclared(jint index, jboolean value) { return call_method<SCAPIX_META_STRING("setDeclared"), void>(index, value); }
inline void Attributes2Impl::setSpecified(jint index, jboolean value) { return call_method<SCAPIX_META_STRING("setSpecified"), void>(index, value); }

} // namespace org::xml::sax::ext
} // namespace scapix::java_api

#endif // SCAPIX_ORG_XML_SAX_EXT_ATTRIBUTES2IMPL_H
