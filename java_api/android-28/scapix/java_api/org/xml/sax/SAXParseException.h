// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/org/xml/sax/SAXException.h>

#ifndef SCAPIX_ORG_XML_SAX_SAXPARSEEXCEPTION_H
#define SCAPIX_ORG_XML_SAX_SAXPARSEEXCEPTION_H

namespace scapix::java_api {

namespace java::lang { class Exception; }
namespace java::lang { class String; }
namespace org::xml::sax { class Locator; }

namespace org::xml::sax {

class SAXParseException : public object_base<SCAPIX_META_STRING("org/xml/sax/SAXParseException"),
	org::xml::sax::SAXException>
{
public:

	static ref<SAXParseException> new_object(ref<java::lang::String> message, ref<org::xml::sax::Locator> locator);
	static ref<SAXParseException> new_object(ref<java::lang::String> message, ref<org::xml::sax::Locator> locator, ref<java::lang::Exception> e);
	static ref<SAXParseException> new_object(ref<java::lang::String> message, ref<java::lang::String> publicId, ref<java::lang::String> systemId, jint lineNumber, jint columnNumber);
	static ref<SAXParseException> new_object(ref<java::lang::String> message, ref<java::lang::String> publicId, ref<java::lang::String> systemId, jint lineNumber, jint columnNumber, ref<java::lang::Exception> e);
	ref<java::lang::String> getPublicId();
	ref<java::lang::String> getSystemId();
	jint getLineNumber();
	jint getColumnNumber();

protected:

	SAXParseException(handle_type h) : base_(h) {}

};

} // namespace org::xml::sax
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/Exception.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/org/xml/sax/Locator.h>

namespace scapix::java_api {
namespace org::xml::sax {

inline ref<SAXParseException> SAXParseException::new_object(ref<java::lang::String> message, ref<org::xml::sax::Locator> locator) { return base_::new_object(message, locator); }
inline ref<SAXParseException> SAXParseException::new_object(ref<java::lang::String> message, ref<org::xml::sax::Locator> locator, ref<java::lang::Exception> e) { return base_::new_object(message, locator, e); }
inline ref<SAXParseException> SAXParseException::new_object(ref<java::lang::String> message, ref<java::lang::String> publicId, ref<java::lang::String> systemId, jint lineNumber, jint columnNumber) { return base_::new_object(message, publicId, systemId, lineNumber, columnNumber); }
inline ref<SAXParseException> SAXParseException::new_object(ref<java::lang::String> message, ref<java::lang::String> publicId, ref<java::lang::String> systemId, jint lineNumber, jint columnNumber, ref<java::lang::Exception> e) { return base_::new_object(message, publicId, systemId, lineNumber, columnNumber, e); }
inline ref<java::lang::String> SAXParseException::getPublicId() { return call_method<SCAPIX_META_STRING("getPublicId"), ref<java::lang::String>>(); }
inline ref<java::lang::String> SAXParseException::getSystemId() { return call_method<SCAPIX_META_STRING("getSystemId"), ref<java::lang::String>>(); }
inline jint SAXParseException::getLineNumber() { return call_method<SCAPIX_META_STRING("getLineNumber"), jint>(); }
inline jint SAXParseException::getColumnNumber() { return call_method<SCAPIX_META_STRING("getColumnNumber"), jint>(); }

} // namespace org::xml::sax
} // namespace scapix::java_api

#endif // SCAPIX_ORG_XML_SAX_SAXPARSEEXCEPTION_H
