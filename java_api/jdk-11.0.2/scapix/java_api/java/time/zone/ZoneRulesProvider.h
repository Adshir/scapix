// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_TIME_ZONE_ZONERULESPROVIDER_H
#define SCAPIX_JAVA_TIME_ZONE_ZONERULESPROVIDER_H

namespace scapix::java_api {

namespace java::lang { class String; }
namespace java::time::zone { class ZoneRules; }
namespace java::util { class NavigableMap; }
namespace java::util { class Set; }

namespace java::time::zone {

class ZoneRulesProvider : public object_base<SCAPIX_META_STRING("java/time/zone/ZoneRulesProvider"),
	java::lang::Object>
{
public:

	static ref<java::util::Set> getAvailableZoneIds();
	static ref<java::time::zone::ZoneRules> getRules(ref<java::lang::String> zoneId, jboolean forCaching);
	static ref<java::util::NavigableMap> getVersions(ref<java::lang::String> zoneId);
	static void registerProvider(ref<java::time::zone::ZoneRulesProvider> provider);
	static jboolean refresh();

protected:

	ZoneRulesProvider(handle_type h) : base_(h) {}

};

} // namespace java::time::zone
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/time/zone/ZoneRules.h>
#include <scapix/java_api/java/util/NavigableMap.h>
#include <scapix/java_api/java/util/Set.h>

namespace scapix::java_api {
namespace java::time::zone {

inline ref<java::util::Set> ZoneRulesProvider::getAvailableZoneIds() { return call_static_method<SCAPIX_META_STRING("getAvailableZoneIds"), ref<java::util::Set>>(); }
inline ref<java::time::zone::ZoneRules> ZoneRulesProvider::getRules(ref<java::lang::String> zoneId, jboolean forCaching) { return call_static_method<SCAPIX_META_STRING("getRules"), ref<java::time::zone::ZoneRules>>(zoneId, forCaching); }
inline ref<java::util::NavigableMap> ZoneRulesProvider::getVersions(ref<java::lang::String> zoneId) { return call_static_method<SCAPIX_META_STRING("getVersions"), ref<java::util::NavigableMap>>(zoneId); }
inline void ZoneRulesProvider::registerProvider(ref<java::time::zone::ZoneRulesProvider> provider) { return call_static_method<SCAPIX_META_STRING("registerProvider"), void>(provider); }
inline jboolean ZoneRulesProvider::refresh() { return call_static_method<SCAPIX_META_STRING("refresh"), jboolean>(); }

} // namespace java::time::zone
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_TIME_ZONE_ZONERULESPROVIDER_H
