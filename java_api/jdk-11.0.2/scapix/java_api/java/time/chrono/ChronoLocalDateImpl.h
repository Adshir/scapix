// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/time/chrono/ChronoLocalDate.h>
#include <scapix/java_api/java/time/temporal/Temporal.h>
#include <scapix/java_api/java/time/temporal/TemporalAdjuster.h>
#include <scapix/java_api/java/io/Serializable.h>

#ifndef SCAPIX_JAVA_TIME_CHRONO_CHRONOLOCALDATEIMPL_H
#define SCAPIX_JAVA_TIME_CHRONO_CHRONOLOCALDATEIMPL_H

namespace scapix::java_api {

namespace java::lang { class String; }
namespace java::time::temporal { class TemporalAmount; }
namespace java::time::temporal { class TemporalField; }
namespace java::time::temporal { class TemporalUnit; }

namespace java::time::chrono {

// private
class ChronoLocalDateImpl : public object_base<SCAPIX_META_STRING("java/time/chrono/ChronoLocalDateImpl"),
	java::lang::Object,
	java::time::chrono::ChronoLocalDate,
	java::time::temporal::Temporal,
	java::time::temporal::TemporalAdjuster,
	java::io::Serializable>
{
public:

	ref<java::time::chrono::ChronoLocalDate> with(ref<java::time::temporal::TemporalAdjuster> adjuster);
	ref<java::time::chrono::ChronoLocalDate> with(ref<java::time::temporal::TemporalField> field, jlong value);
	ref<java::time::chrono::ChronoLocalDate> plus(ref<java::time::temporal::TemporalAmount> amount);
	ref<java::time::chrono::ChronoLocalDate> plus(jlong amountToAdd, ref<java::time::temporal::TemporalUnit> p2);
	ref<java::time::chrono::ChronoLocalDate> minus(ref<java::time::temporal::TemporalAmount> amount);
	ref<java::time::chrono::ChronoLocalDate> minus(jlong amountToSubtract, ref<java::time::temporal::TemporalUnit> p2);
	jlong until(ref<java::time::temporal::Temporal> endExclusive, ref<java::time::temporal::TemporalUnit> unit);
	jboolean equals(ref<java::lang::Object> obj);
	jint hashCode();
	ref<java::lang::String> toString();

protected:

	ChronoLocalDateImpl(handle_type h) : base_(h) {}

};

} // namespace java::time::chrono
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/time/temporal/TemporalAmount.h>
#include <scapix/java_api/java/time/temporal/TemporalField.h>
#include <scapix/java_api/java/time/temporal/TemporalUnit.h>

namespace scapix::java_api {
namespace java::time::chrono {

inline ref<java::time::chrono::ChronoLocalDate> ChronoLocalDateImpl::with(ref<java::time::temporal::TemporalAdjuster> adjuster) { return call_method<SCAPIX_META_STRING("with"), ref<java::time::chrono::ChronoLocalDate>>(adjuster); }
inline ref<java::time::chrono::ChronoLocalDate> ChronoLocalDateImpl::with(ref<java::time::temporal::TemporalField> field, jlong value) { return call_method<SCAPIX_META_STRING("with"), ref<java::time::chrono::ChronoLocalDate>>(field, value); }
inline ref<java::time::chrono::ChronoLocalDate> ChronoLocalDateImpl::plus(ref<java::time::temporal::TemporalAmount> amount) { return call_method<SCAPIX_META_STRING("plus"), ref<java::time::chrono::ChronoLocalDate>>(amount); }
inline ref<java::time::chrono::ChronoLocalDate> ChronoLocalDateImpl::plus(jlong amountToAdd, ref<java::time::temporal::TemporalUnit> p2) { return call_method<SCAPIX_META_STRING("plus"), ref<java::time::chrono::ChronoLocalDate>>(amountToAdd, p2); }
inline ref<java::time::chrono::ChronoLocalDate> ChronoLocalDateImpl::minus(ref<java::time::temporal::TemporalAmount> amount) { return call_method<SCAPIX_META_STRING("minus"), ref<java::time::chrono::ChronoLocalDate>>(amount); }
inline ref<java::time::chrono::ChronoLocalDate> ChronoLocalDateImpl::minus(jlong amountToSubtract, ref<java::time::temporal::TemporalUnit> p2) { return call_method<SCAPIX_META_STRING("minus"), ref<java::time::chrono::ChronoLocalDate>>(amountToSubtract, p2); }
inline jlong ChronoLocalDateImpl::until(ref<java::time::temporal::Temporal> endExclusive, ref<java::time::temporal::TemporalUnit> unit) { return call_method<SCAPIX_META_STRING("until"), jlong>(endExclusive, unit); }
inline jboolean ChronoLocalDateImpl::equals(ref<java::lang::Object> obj) { return call_method<SCAPIX_META_STRING("equals"), jboolean>(obj); }
inline jint ChronoLocalDateImpl::hashCode() { return call_method<SCAPIX_META_STRING("hashCode"), jint>(); }
inline ref<java::lang::String> ChronoLocalDateImpl::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }

} // namespace java::time::chrono
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_TIME_CHRONO_CHRONOLOCALDATEIMPL_H
