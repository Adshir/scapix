// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_TIME_TEMPORAL_TEMPORALACCESSOR_H
#define SCAPIX_JAVA_TIME_TEMPORAL_TEMPORALACCESSOR_H

namespace scapix::java_api {

namespace java::time::temporal { class TemporalField; }
namespace java::time::temporal { class TemporalQuery; }
namespace java::time::temporal { class ValueRange; }

namespace java::time::temporal {

class TemporalAccessor : public object_base<SCAPIX_META_STRING("java/time/temporal/TemporalAccessor"),
	java::lang::Object>
{
public:

	jboolean isSupported(ref<java::time::temporal::TemporalField> p1);
	ref<java::time::temporal::ValueRange> range(ref<java::time::temporal::TemporalField> field);
	jint get(ref<java::time::temporal::TemporalField> field);
	jlong getLong(ref<java::time::temporal::TemporalField> p1);
	ref<java::lang::Object> query(ref<java::time::temporal::TemporalQuery> query);

protected:

	TemporalAccessor(handle_type h) : base_(h) {}

};

} // namespace java::time::temporal
} // namespace scapix::java_api

#include <scapix/java_api/java/time/temporal/TemporalField.h>
#include <scapix/java_api/java/time/temporal/TemporalQuery.h>
#include <scapix/java_api/java/time/temporal/ValueRange.h>

namespace scapix::java_api {
namespace java::time::temporal {

inline jboolean TemporalAccessor::isSupported(ref<java::time::temporal::TemporalField> p1) { return call_method<SCAPIX_META_STRING("isSupported"), jboolean>(p1); }
inline ref<java::time::temporal::ValueRange> TemporalAccessor::range(ref<java::time::temporal::TemporalField> field) { return call_method<SCAPIX_META_STRING("range"), ref<java::time::temporal::ValueRange>>(field); }
inline jint TemporalAccessor::get(ref<java::time::temporal::TemporalField> field) { return call_method<SCAPIX_META_STRING("get"), jint>(field); }
inline jlong TemporalAccessor::getLong(ref<java::time::temporal::TemporalField> p1) { return call_method<SCAPIX_META_STRING("getLong"), jlong>(p1); }
inline ref<java::lang::Object> TemporalAccessor::query(ref<java::time::temporal::TemporalQuery> query) { return call_method<SCAPIX_META_STRING("query"), ref<java::lang::Object>>(query); }

} // namespace java::time::temporal
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_TIME_TEMPORAL_TEMPORALACCESSOR_H
