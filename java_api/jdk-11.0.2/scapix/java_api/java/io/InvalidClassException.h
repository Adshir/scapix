// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/io/ObjectStreamException.h>

#ifndef SCAPIX_JAVA_IO_INVALIDCLASSEXCEPTION_H
#define SCAPIX_JAVA_IO_INVALIDCLASSEXCEPTION_H

namespace scapix::java_api {

namespace java::lang { class String; }

namespace java::io {

class InvalidClassException : public object_base<SCAPIX_META_STRING("java/io/InvalidClassException"),
	java::io::ObjectStreamException>
{
public:

	ref<java::lang::String> classname();
	void classname(ref<java::lang::String>);

	static ref<InvalidClassException> new_object(ref<java::lang::String> reason);
	static ref<InvalidClassException> new_object(ref<java::lang::String> cname, ref<java::lang::String> reason);
	ref<java::lang::String> getMessage();

protected:

	InvalidClassException(handle_type h) : base_(h) {}

};

} // namespace java::io
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace java::io {

inline ref<java::lang::String> InvalidClassException::classname() { return get_field<SCAPIX_META_STRING("classname"), ref<java::lang::String>>(); }
inline void InvalidClassException::classname(ref<java::lang::String> v) { set_field<SCAPIX_META_STRING("classname"), ref<java::lang::String>>(v); }
inline ref<InvalidClassException> InvalidClassException::new_object(ref<java::lang::String> reason) { return base_::new_object(reason); }
inline ref<InvalidClassException> InvalidClassException::new_object(ref<java::lang::String> cname, ref<java::lang::String> reason) { return base_::new_object(cname, reason); }
inline ref<java::lang::String> InvalidClassException::getMessage() { return call_method<SCAPIX_META_STRING("getMessage"), ref<java::lang::String>>(); }

} // namespace java::io
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_IO_INVALIDCLASSEXCEPTION_H
