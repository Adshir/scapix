// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_IO_OBJECTOUTPUTSTREAM_PUTFIELD_H
#define SCAPIX_JAVA_IO_OBJECTOUTPUTSTREAM_PUTFIELD_H

namespace scapix::java_api {

namespace java::io { class ObjectOutput; }
namespace java::lang { class String; }

namespace java::io {

class ObjectOutputStream_PutField : public object_base<SCAPIX_META_STRING("java/io/ObjectOutputStream$PutField"),
	java::lang::Object>
{
public:

	static ref<ObjectOutputStream_PutField> new_object();
	void put(ref<java::lang::String> p1, jboolean p2);
	void put(ref<java::lang::String> p1, jbyte p2);
	void put(ref<java::lang::String> p1, jchar p2);
	void put(ref<java::lang::String> p1, jshort p2);
	void put(ref<java::lang::String> p1, jint p2);
	void put(ref<java::lang::String> p1, jlong p2);
	void put(ref<java::lang::String> p1, jfloat p2);
	void put(ref<java::lang::String> p1, jdouble p2);
	void put(ref<java::lang::String> p1, ref<java::lang::Object> p2);
	void write(ref<java::io::ObjectOutput> p1);

protected:

	ObjectOutputStream_PutField(handle_type h) : base_(h) {}

};

} // namespace java::io
} // namespace scapix::java_api

#include <scapix/java_api/java/io/ObjectOutput.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace java::io {

inline ref<ObjectOutputStream_PutField> ObjectOutputStream_PutField::new_object() { return base_::new_object(); }
inline void ObjectOutputStream_PutField::put(ref<java::lang::String> p1, jboolean p2) { return call_method<SCAPIX_META_STRING("put"), void>(p1, p2); }
inline void ObjectOutputStream_PutField::put(ref<java::lang::String> p1, jbyte p2) { return call_method<SCAPIX_META_STRING("put"), void>(p1, p2); }
inline void ObjectOutputStream_PutField::put(ref<java::lang::String> p1, jchar p2) { return call_method<SCAPIX_META_STRING("put"), void>(p1, p2); }
inline void ObjectOutputStream_PutField::put(ref<java::lang::String> p1, jshort p2) { return call_method<SCAPIX_META_STRING("put"), void>(p1, p2); }
inline void ObjectOutputStream_PutField::put(ref<java::lang::String> p1, jint p2) { return call_method<SCAPIX_META_STRING("put"), void>(p1, p2); }
inline void ObjectOutputStream_PutField::put(ref<java::lang::String> p1, jlong p2) { return call_method<SCAPIX_META_STRING("put"), void>(p1, p2); }
inline void ObjectOutputStream_PutField::put(ref<java::lang::String> p1, jfloat p2) { return call_method<SCAPIX_META_STRING("put"), void>(p1, p2); }
inline void ObjectOutputStream_PutField::put(ref<java::lang::String> p1, jdouble p2) { return call_method<SCAPIX_META_STRING("put"), void>(p1, p2); }
inline void ObjectOutputStream_PutField::put(ref<java::lang::String> p1, ref<java::lang::Object> p2) { return call_method<SCAPIX_META_STRING("put"), void>(p1, p2); }
inline void ObjectOutputStream_PutField::write(ref<java::io::ObjectOutput> p1) { return call_method<SCAPIX_META_STRING("write"), void>(p1); }

} // namespace java::io
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_IO_OBJECTOUTPUTSTREAM_PUTFIELD_H
