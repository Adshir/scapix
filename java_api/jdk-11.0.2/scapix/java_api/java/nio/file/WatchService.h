// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/io/Closeable.h>

#ifndef SCAPIX_JAVA_NIO_FILE_WATCHSERVICE_H
#define SCAPIX_JAVA_NIO_FILE_WATCHSERVICE_H

namespace scapix::java_api {

namespace java::nio::file { class WatchKey; }
namespace java::util::concurrent { class TimeUnit; }

namespace java::nio::file {

class WatchService : public object_base<SCAPIX_META_STRING("java/nio/file/WatchService"),
	java::lang::Object,
	java::io::Closeable>
{
public:

	void close();
	ref<java::nio::file::WatchKey> poll();
	ref<java::nio::file::WatchKey> poll(jlong p1, ref<java::util::concurrent::TimeUnit> p2);
	ref<java::nio::file::WatchKey> take();

protected:

	WatchService(handle_type h) : base_(h) {}

};

} // namespace java::nio::file
} // namespace scapix::java_api

#include <scapix/java_api/java/nio/file/WatchKey.h>
#include <scapix/java_api/java/util/concurrent/TimeUnit.h>

namespace scapix::java_api {
namespace java::nio::file {

inline void WatchService::close() { return call_method<SCAPIX_META_STRING("close"), void>(); }
inline ref<java::nio::file::WatchKey> WatchService::poll() { return call_method<SCAPIX_META_STRING("poll"), ref<java::nio::file::WatchKey>>(); }
inline ref<java::nio::file::WatchKey> WatchService::poll(jlong p1, ref<java::util::concurrent::TimeUnit> p2) { return call_method<SCAPIX_META_STRING("poll"), ref<java::nio::file::WatchKey>>(p1, p2); }
inline ref<java::nio::file::WatchKey> WatchService::take() { return call_method<SCAPIX_META_STRING("take"), ref<java::nio::file::WatchKey>>(); }

} // namespace java::nio::file
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_NIO_FILE_WATCHSERVICE_H
