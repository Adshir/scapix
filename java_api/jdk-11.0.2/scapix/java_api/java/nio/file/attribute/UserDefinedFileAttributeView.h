// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/nio/file/attribute/FileAttributeView.h>

#ifndef SCAPIX_JAVA_NIO_FILE_ATTRIBUTE_USERDEFINEDFILEATTRIBUTEVIEW_H
#define SCAPIX_JAVA_NIO_FILE_ATTRIBUTE_USERDEFINEDFILEATTRIBUTEVIEW_H

namespace scapix::java_api {

namespace java::lang { class String; }
namespace java::nio { class ByteBuffer; }
namespace java::util { class List; }

namespace java::nio::file::attribute {

class UserDefinedFileAttributeView : public object_base<SCAPIX_META_STRING("java/nio/file/attribute/UserDefinedFileAttributeView"),
	java::lang::Object,
	java::nio::file::attribute::FileAttributeView>
{
public:

	ref<java::lang::String> name();
	ref<java::util::List> list();
	jint size(ref<java::lang::String> p1);
	jint read(ref<java::lang::String> p1, ref<java::nio::ByteBuffer> p2);
	jint write(ref<java::lang::String> p1, ref<java::nio::ByteBuffer> p2);
	void delete_(ref<java::lang::String> p1);

protected:

	UserDefinedFileAttributeView(handle_type h) : base_(h) {}

};

} // namespace java::nio::file::attribute
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/nio/ByteBuffer.h>
#include <scapix/java_api/java/util/List.h>

namespace scapix::java_api {
namespace java::nio::file::attribute {

inline ref<java::lang::String> UserDefinedFileAttributeView::name() { return call_method<SCAPIX_META_STRING("name"), ref<java::lang::String>>(); }
inline ref<java::util::List> UserDefinedFileAttributeView::list() { return call_method<SCAPIX_META_STRING("list"), ref<java::util::List>>(); }
inline jint UserDefinedFileAttributeView::size(ref<java::lang::String> p1) { return call_method<SCAPIX_META_STRING("size"), jint>(p1); }
inline jint UserDefinedFileAttributeView::read(ref<java::lang::String> p1, ref<java::nio::ByteBuffer> p2) { return call_method<SCAPIX_META_STRING("read"), jint>(p1, p2); }
inline jint UserDefinedFileAttributeView::write(ref<java::lang::String> p1, ref<java::nio::ByteBuffer> p2) { return call_method<SCAPIX_META_STRING("write"), jint>(p1, p2); }
inline void UserDefinedFileAttributeView::delete_(ref<java::lang::String> p1) { return call_method<SCAPIX_META_STRING("delete"), void>(p1); }

} // namespace java::nio::file::attribute
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_NIO_FILE_ATTRIBUTE_USERDEFINEDFILEATTRIBUTEVIEW_H
