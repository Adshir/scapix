// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/security/spec/ECField.h>

#ifndef SCAPIX_JAVA_SECURITY_SPEC_ECFIELDFP_H
#define SCAPIX_JAVA_SECURITY_SPEC_ECFIELDFP_H

namespace scapix::java_api {

namespace java::math { class BigInteger; }

namespace java::security::spec {

class ECFieldFp : public object_base<SCAPIX_META_STRING("java/security/spec/ECFieldFp"),
	java::lang::Object,
	java::security::spec::ECField>
{
public:

	static ref<ECFieldFp> new_object(ref<java::math::BigInteger> p);
	jint getFieldSize();
	ref<java::math::BigInteger> getP();
	jboolean equals(ref<java::lang::Object> obj);
	jint hashCode();

protected:

	ECFieldFp(handle_type h) : base_(h) {}

};

} // namespace java::security::spec
} // namespace scapix::java_api

#include <scapix/java_api/java/math/BigInteger.h>

namespace scapix::java_api {
namespace java::security::spec {

inline ref<ECFieldFp> ECFieldFp::new_object(ref<java::math::BigInteger> p) { return base_::new_object(p); }
inline jint ECFieldFp::getFieldSize() { return call_method<SCAPIX_META_STRING("getFieldSize"), jint>(); }
inline ref<java::math::BigInteger> ECFieldFp::getP() { return call_method<SCAPIX_META_STRING("getP"), ref<java::math::BigInteger>>(); }
inline jboolean ECFieldFp::equals(ref<java::lang::Object> obj) { return call_method<SCAPIX_META_STRING("equals"), jboolean>(obj); }
inline jint ECFieldFp::hashCode() { return call_method<SCAPIX_META_STRING("hashCode"), jint>(); }

} // namespace java::security::spec
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_SECURITY_SPEC_ECFIELDFP_H
