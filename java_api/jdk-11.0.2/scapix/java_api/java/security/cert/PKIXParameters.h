// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/security/cert/CertPathParameters.h>

#ifndef SCAPIX_JAVA_SECURITY_CERT_PKIXPARAMETERS_H
#define SCAPIX_JAVA_SECURITY_CERT_PKIXPARAMETERS_H

namespace scapix::java_api {

namespace java::lang { class String; }
namespace java::security { class KeyStore; }
namespace java::security::cert { class CertSelector; }
namespace java::security::cert { class CertStore; }
namespace java::security::cert { class PKIXCertPathChecker; }
namespace java::util { class Date; }
namespace java::util { class List; }
namespace java::util { class Set; }

namespace java::security::cert {

class PKIXParameters : public object_base<SCAPIX_META_STRING("java/security/cert/PKIXParameters"),
	java::lang::Object,
	java::security::cert::CertPathParameters>
{
public:

	static ref<PKIXParameters> new_object(ref<java::util::Set> trustAnchors);
	static ref<PKIXParameters> new_object(ref<java::security::KeyStore> keystore);
	ref<java::util::Set> getTrustAnchors();
	void setTrustAnchors(ref<java::util::Set> trustAnchors);
	ref<java::util::Set> getInitialPolicies();
	void setInitialPolicies(ref<java::util::Set> initialPolicies);
	void setCertStores(ref<java::util::List> stores);
	void addCertStore(ref<java::security::cert::CertStore> store);
	ref<java::util::List> getCertStores();
	void setRevocationEnabled(jboolean val);
	jboolean isRevocationEnabled();
	void setExplicitPolicyRequired(jboolean val);
	jboolean isExplicitPolicyRequired();
	void setPolicyMappingInhibited(jboolean val);
	jboolean isPolicyMappingInhibited();
	void setAnyPolicyInhibited(jboolean val);
	jboolean isAnyPolicyInhibited();
	void setPolicyQualifiersRejected(jboolean qualifiersRejected);
	jboolean getPolicyQualifiersRejected();
	ref<java::util::Date> getDate();
	void setDate(ref<java::util::Date> date);
	void setCertPathCheckers(ref<java::util::List> checkers);
	ref<java::util::List> getCertPathCheckers();
	void addCertPathChecker(ref<java::security::cert::PKIXCertPathChecker> checker);
	ref<java::lang::String> getSigProvider();
	void setSigProvider(ref<java::lang::String> sigProvider);
	ref<java::security::cert::CertSelector> getTargetCertConstraints();
	void setTargetCertConstraints(ref<java::security::cert::CertSelector> selector);
	ref<java::lang::Object> clone();
	ref<java::lang::String> toString();

protected:

	PKIXParameters(handle_type h) : base_(h) {}

};

} // namespace java::security::cert
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/security/KeyStore.h>
#include <scapix/java_api/java/security/cert/CertSelector.h>
#include <scapix/java_api/java/security/cert/CertStore.h>
#include <scapix/java_api/java/security/cert/PKIXCertPathChecker.h>
#include <scapix/java_api/java/util/Date.h>
#include <scapix/java_api/java/util/List.h>
#include <scapix/java_api/java/util/Set.h>

namespace scapix::java_api {
namespace java::security::cert {

inline ref<PKIXParameters> PKIXParameters::new_object(ref<java::util::Set> trustAnchors) { return base_::new_object(trustAnchors); }
inline ref<PKIXParameters> PKIXParameters::new_object(ref<java::security::KeyStore> keystore) { return base_::new_object(keystore); }
inline ref<java::util::Set> PKIXParameters::getTrustAnchors() { return call_method<SCAPIX_META_STRING("getTrustAnchors"), ref<java::util::Set>>(); }
inline void PKIXParameters::setTrustAnchors(ref<java::util::Set> trustAnchors) { return call_method<SCAPIX_META_STRING("setTrustAnchors"), void>(trustAnchors); }
inline ref<java::util::Set> PKIXParameters::getInitialPolicies() { return call_method<SCAPIX_META_STRING("getInitialPolicies"), ref<java::util::Set>>(); }
inline void PKIXParameters::setInitialPolicies(ref<java::util::Set> initialPolicies) { return call_method<SCAPIX_META_STRING("setInitialPolicies"), void>(initialPolicies); }
inline void PKIXParameters::setCertStores(ref<java::util::List> stores) { return call_method<SCAPIX_META_STRING("setCertStores"), void>(stores); }
inline void PKIXParameters::addCertStore(ref<java::security::cert::CertStore> store) { return call_method<SCAPIX_META_STRING("addCertStore"), void>(store); }
inline ref<java::util::List> PKIXParameters::getCertStores() { return call_method<SCAPIX_META_STRING("getCertStores"), ref<java::util::List>>(); }
inline void PKIXParameters::setRevocationEnabled(jboolean val) { return call_method<SCAPIX_META_STRING("setRevocationEnabled"), void>(val); }
inline jboolean PKIXParameters::isRevocationEnabled() { return call_method<SCAPIX_META_STRING("isRevocationEnabled"), jboolean>(); }
inline void PKIXParameters::setExplicitPolicyRequired(jboolean val) { return call_method<SCAPIX_META_STRING("setExplicitPolicyRequired"), void>(val); }
inline jboolean PKIXParameters::isExplicitPolicyRequired() { return call_method<SCAPIX_META_STRING("isExplicitPolicyRequired"), jboolean>(); }
inline void PKIXParameters::setPolicyMappingInhibited(jboolean val) { return call_method<SCAPIX_META_STRING("setPolicyMappingInhibited"), void>(val); }
inline jboolean PKIXParameters::isPolicyMappingInhibited() { return call_method<SCAPIX_META_STRING("isPolicyMappingInhibited"), jboolean>(); }
inline void PKIXParameters::setAnyPolicyInhibited(jboolean val) { return call_method<SCAPIX_META_STRING("setAnyPolicyInhibited"), void>(val); }
inline jboolean PKIXParameters::isAnyPolicyInhibited() { return call_method<SCAPIX_META_STRING("isAnyPolicyInhibited"), jboolean>(); }
inline void PKIXParameters::setPolicyQualifiersRejected(jboolean qualifiersRejected) { return call_method<SCAPIX_META_STRING("setPolicyQualifiersRejected"), void>(qualifiersRejected); }
inline jboolean PKIXParameters::getPolicyQualifiersRejected() { return call_method<SCAPIX_META_STRING("getPolicyQualifiersRejected"), jboolean>(); }
inline ref<java::util::Date> PKIXParameters::getDate() { return call_method<SCAPIX_META_STRING("getDate"), ref<java::util::Date>>(); }
inline void PKIXParameters::setDate(ref<java::util::Date> date) { return call_method<SCAPIX_META_STRING("setDate"), void>(date); }
inline void PKIXParameters::setCertPathCheckers(ref<java::util::List> checkers) { return call_method<SCAPIX_META_STRING("setCertPathCheckers"), void>(checkers); }
inline ref<java::util::List> PKIXParameters::getCertPathCheckers() { return call_method<SCAPIX_META_STRING("getCertPathCheckers"), ref<java::util::List>>(); }
inline void PKIXParameters::addCertPathChecker(ref<java::security::cert::PKIXCertPathChecker> checker) { return call_method<SCAPIX_META_STRING("addCertPathChecker"), void>(checker); }
inline ref<java::lang::String> PKIXParameters::getSigProvider() { return call_method<SCAPIX_META_STRING("getSigProvider"), ref<java::lang::String>>(); }
inline void PKIXParameters::setSigProvider(ref<java::lang::String> sigProvider) { return call_method<SCAPIX_META_STRING("setSigProvider"), void>(sigProvider); }
inline ref<java::security::cert::CertSelector> PKIXParameters::getTargetCertConstraints() { return call_method<SCAPIX_META_STRING("getTargetCertConstraints"), ref<java::security::cert::CertSelector>>(); }
inline void PKIXParameters::setTargetCertConstraints(ref<java::security::cert::CertSelector> selector) { return call_method<SCAPIX_META_STRING("setTargetCertConstraints"), void>(selector); }
inline ref<java::lang::Object> PKIXParameters::clone() { return call_method<SCAPIX_META_STRING("clone"), ref<java::lang::Object>>(); }
inline ref<java::lang::String> PKIXParameters::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }

} // namespace java::security::cert
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_SECURITY_CERT_PKIXPARAMETERS_H
