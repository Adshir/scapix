// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/security/cert/CRL.h>
#include <scapix/java_api/java/security/cert/X509Extension.h>

#ifndef SCAPIX_JAVA_SECURITY_CERT_X509CRL_H
#define SCAPIX_JAVA_SECURITY_CERT_X509CRL_H

namespace scapix::java_api {

namespace java::lang { class Object; }
namespace java::lang { class String; }
namespace java::math { class BigInteger; }
namespace java::security { class Principal; }
namespace java::security { class Provider; }
namespace java::security { class PublicKey; }
namespace java::security::cert { class X509CRLEntry; }
namespace java::security::cert { class X509Certificate; }
namespace java::util { class Date; }
namespace java::util { class Set; }
namespace javax::security::auth::x500 { class X500Principal; }

namespace java::security::cert {

class X509CRL : public object_base<SCAPIX_META_STRING("java/security/cert/X509CRL"),
	java::security::cert::CRL,
	java::security::cert::X509Extension>
{
public:

	jboolean equals(ref<java::lang::Object> other);
	jint hashCode();
	ref<link::java::array<jbyte>> getEncoded();
	void verify(ref<java::security::PublicKey> p1);
	void verify(ref<java::security::PublicKey> p1, ref<java::lang::String> p2);
	void verify(ref<java::security::PublicKey> key, ref<java::security::Provider> sigProvider);
	jint getVersion();
	ref<java::security::Principal> getIssuerDN();
	ref<javax::security::auth::x500::X500Principal> getIssuerX500Principal();
	ref<java::util::Date> getThisUpdate();
	ref<java::util::Date> getNextUpdate();
	ref<java::security::cert::X509CRLEntry> getRevokedCertificate(ref<java::math::BigInteger> p1);
	ref<java::security::cert::X509CRLEntry> getRevokedCertificate(ref<java::security::cert::X509Certificate> certificate);
	ref<java::util::Set> getRevokedCertificates();
	ref<link::java::array<jbyte>> getTBSCertList();
	ref<link::java::array<jbyte>> getSignature();
	ref<java::lang::String> getSigAlgName();
	ref<java::lang::String> getSigAlgOID();
	ref<link::java::array<jbyte>> getSigAlgParams();

protected:

	X509CRL(handle_type h) : base_(h) {}

};

} // namespace java::security::cert
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/math/BigInteger.h>
#include <scapix/java_api/java/security/Principal.h>
#include <scapix/java_api/java/security/Provider.h>
#include <scapix/java_api/java/security/PublicKey.h>
#include <scapix/java_api/java/security/cert/X509CRLEntry.h>
#include <scapix/java_api/java/security/cert/X509Certificate.h>
#include <scapix/java_api/java/util/Date.h>
#include <scapix/java_api/java/util/Set.h>
#include <scapix/java_api/javax/security/auth/x500/X500Principal.h>

namespace scapix::java_api {
namespace java::security::cert {

inline jboolean X509CRL::equals(ref<java::lang::Object> other) { return call_method<SCAPIX_META_STRING("equals"), jboolean>(other); }
inline jint X509CRL::hashCode() { return call_method<SCAPIX_META_STRING("hashCode"), jint>(); }
inline ref<link::java::array<jbyte>> X509CRL::getEncoded() { return call_method<SCAPIX_META_STRING("getEncoded"), ref<link::java::array<jbyte>>>(); }
inline void X509CRL::verify(ref<java::security::PublicKey> p1) { return call_method<SCAPIX_META_STRING("verify"), void>(p1); }
inline void X509CRL::verify(ref<java::security::PublicKey> p1, ref<java::lang::String> p2) { return call_method<SCAPIX_META_STRING("verify"), void>(p1, p2); }
inline void X509CRL::verify(ref<java::security::PublicKey> key, ref<java::security::Provider> sigProvider) { return call_method<SCAPIX_META_STRING("verify"), void>(key, sigProvider); }
inline jint X509CRL::getVersion() { return call_method<SCAPIX_META_STRING("getVersion"), jint>(); }
inline ref<java::security::Principal> X509CRL::getIssuerDN() { return call_method<SCAPIX_META_STRING("getIssuerDN"), ref<java::security::Principal>>(); }
inline ref<javax::security::auth::x500::X500Principal> X509CRL::getIssuerX500Principal() { return call_method<SCAPIX_META_STRING("getIssuerX500Principal"), ref<javax::security::auth::x500::X500Principal>>(); }
inline ref<java::util::Date> X509CRL::getThisUpdate() { return call_method<SCAPIX_META_STRING("getThisUpdate"), ref<java::util::Date>>(); }
inline ref<java::util::Date> X509CRL::getNextUpdate() { return call_method<SCAPIX_META_STRING("getNextUpdate"), ref<java::util::Date>>(); }
inline ref<java::security::cert::X509CRLEntry> X509CRL::getRevokedCertificate(ref<java::math::BigInteger> p1) { return call_method<SCAPIX_META_STRING("getRevokedCertificate"), ref<java::security::cert::X509CRLEntry>>(p1); }
inline ref<java::security::cert::X509CRLEntry> X509CRL::getRevokedCertificate(ref<java::security::cert::X509Certificate> certificate) { return call_method<SCAPIX_META_STRING("getRevokedCertificate"), ref<java::security::cert::X509CRLEntry>>(certificate); }
inline ref<java::util::Set> X509CRL::getRevokedCertificates() { return call_method<SCAPIX_META_STRING("getRevokedCertificates"), ref<java::util::Set>>(); }
inline ref<link::java::array<jbyte>> X509CRL::getTBSCertList() { return call_method<SCAPIX_META_STRING("getTBSCertList"), ref<link::java::array<jbyte>>>(); }
inline ref<link::java::array<jbyte>> X509CRL::getSignature() { return call_method<SCAPIX_META_STRING("getSignature"), ref<link::java::array<jbyte>>>(); }
inline ref<java::lang::String> X509CRL::getSigAlgName() { return call_method<SCAPIX_META_STRING("getSigAlgName"), ref<java::lang::String>>(); }
inline ref<java::lang::String> X509CRL::getSigAlgOID() { return call_method<SCAPIX_META_STRING("getSigAlgOID"), ref<java::lang::String>>(); }
inline ref<link::java::array<jbyte>> X509CRL::getSigAlgParams() { return call_method<SCAPIX_META_STRING("getSigAlgParams"), ref<link::java::array<jbyte>>>(); }

} // namespace java::security::cert
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_SECURITY_CERT_X509CRL_H
