// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_SECURITY_ALGORITHMPARAMETERS_H
#define SCAPIX_JAVA_SECURITY_ALGORITHMPARAMETERS_H

namespace scapix::java_api {

namespace java::lang { class Class; }
namespace java::lang { class String; }
namespace java::security { class Provider; }
namespace java::security::spec { class AlgorithmParameterSpec; }

namespace java::security {

class AlgorithmParameters : public object_base<SCAPIX_META_STRING("java/security/AlgorithmParameters"),
	java::lang::Object>
{
public:

	ref<java::lang::String> getAlgorithm();
	static ref<java::security::AlgorithmParameters> getInstance(ref<java::lang::String> algorithm);
	static ref<java::security::AlgorithmParameters> getInstance(ref<java::lang::String> algorithm, ref<java::lang::String> provider);
	static ref<java::security::AlgorithmParameters> getInstance(ref<java::lang::String> algorithm, ref<java::security::Provider> provider);
	ref<java::security::Provider> getProvider();
	void init(ref<java::security::spec::AlgorithmParameterSpec> paramSpec);
	void init(ref<link::java::array<jbyte>> params);
	void init(ref<link::java::array<jbyte>> params, ref<java::lang::String> format);
	ref<java::security::spec::AlgorithmParameterSpec> getParameterSpec(ref<java::lang::Class> paramSpec);
	ref<link::java::array<jbyte>> getEncoded();
	ref<link::java::array<jbyte>> getEncoded(ref<java::lang::String> format);
	ref<java::lang::String> toString();

protected:

	AlgorithmParameters(handle_type h) : base_(h) {}

};

} // namespace java::security
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/Class.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/security/Provider.h>
#include <scapix/java_api/java/security/spec/AlgorithmParameterSpec.h>

namespace scapix::java_api {
namespace java::security {

inline ref<java::lang::String> AlgorithmParameters::getAlgorithm() { return call_method<SCAPIX_META_STRING("getAlgorithm"), ref<java::lang::String>>(); }
inline ref<java::security::AlgorithmParameters> AlgorithmParameters::getInstance(ref<java::lang::String> algorithm) { return call_static_method<SCAPIX_META_STRING("getInstance"), ref<java::security::AlgorithmParameters>>(algorithm); }
inline ref<java::security::AlgorithmParameters> AlgorithmParameters::getInstance(ref<java::lang::String> algorithm, ref<java::lang::String> provider) { return call_static_method<SCAPIX_META_STRING("getInstance"), ref<java::security::AlgorithmParameters>>(algorithm, provider); }
inline ref<java::security::AlgorithmParameters> AlgorithmParameters::getInstance(ref<java::lang::String> algorithm, ref<java::security::Provider> provider) { return call_static_method<SCAPIX_META_STRING("getInstance"), ref<java::security::AlgorithmParameters>>(algorithm, provider); }
inline ref<java::security::Provider> AlgorithmParameters::getProvider() { return call_method<SCAPIX_META_STRING("getProvider"), ref<java::security::Provider>>(); }
inline void AlgorithmParameters::init(ref<java::security::spec::AlgorithmParameterSpec> paramSpec) { return call_method<SCAPIX_META_STRING("init"), void>(paramSpec); }
inline void AlgorithmParameters::init(ref<link::java::array<jbyte>> params) { return call_method<SCAPIX_META_STRING("init"), void>(params); }
inline void AlgorithmParameters::init(ref<link::java::array<jbyte>> params, ref<java::lang::String> format) { return call_method<SCAPIX_META_STRING("init"), void>(params, format); }
inline ref<java::security::spec::AlgorithmParameterSpec> AlgorithmParameters::getParameterSpec(ref<java::lang::Class> paramSpec) { return call_method<SCAPIX_META_STRING("getParameterSpec"), ref<java::security::spec::AlgorithmParameterSpec>>(paramSpec); }
inline ref<link::java::array<jbyte>> AlgorithmParameters::getEncoded() { return call_method<SCAPIX_META_STRING("getEncoded"), ref<link::java::array<jbyte>>>(); }
inline ref<link::java::array<jbyte>> AlgorithmParameters::getEncoded(ref<java::lang::String> format) { return call_method<SCAPIX_META_STRING("getEncoded"), ref<link::java::array<jbyte>>>(format); }
inline ref<java::lang::String> AlgorithmParameters::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }

} // namespace java::security
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_SECURITY_ALGORITHMPARAMETERS_H
