// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_SECURITY_PROVIDER_SERVICE_H
#define SCAPIX_JAVA_SECURITY_PROVIDER_SERVICE_H

namespace scapix::java_api {

namespace java::lang { class String; }
namespace java::security { class Provider; }
namespace java::util { class List; }
namespace java::util { class Map; }

namespace java::security {

class Provider_Service : public object_base<SCAPIX_META_STRING("java/security/Provider$Service"),
	java::lang::Object>
{
public:

	static ref<Provider_Service> new_object(ref<java::security::Provider> provider, ref<java::lang::String> type, ref<java::lang::String> algorithm, ref<java::lang::String> className, ref<java::util::List> aliases, ref<java::util::Map> attributes);
	ref<java::lang::String> getType();
	ref<java::lang::String> getAlgorithm();
	ref<java::security::Provider> getProvider();
	ref<java::lang::String> getClassName();
	ref<java::lang::String> getAttribute(ref<java::lang::String> name);
	ref<java::lang::Object> newInstance(ref<java::lang::Object> constructorParameter);
	jboolean supportsParameter(ref<java::lang::Object> parameter);
	ref<java::lang::String> toString();

protected:

	Provider_Service(handle_type h) : base_(h) {}

};

} // namespace java::security
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/security/Provider.h>
#include <scapix/java_api/java/util/List.h>
#include <scapix/java_api/java/util/Map.h>

namespace scapix::java_api {
namespace java::security {

inline ref<Provider_Service> Provider_Service::new_object(ref<java::security::Provider> provider, ref<java::lang::String> type, ref<java::lang::String> algorithm, ref<java::lang::String> className, ref<java::util::List> aliases, ref<java::util::Map> attributes) { return base_::new_object(provider, type, algorithm, className, aliases, attributes); }
inline ref<java::lang::String> Provider_Service::getType() { return call_method<SCAPIX_META_STRING("getType"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Provider_Service::getAlgorithm() { return call_method<SCAPIX_META_STRING("getAlgorithm"), ref<java::lang::String>>(); }
inline ref<java::security::Provider> Provider_Service::getProvider() { return call_method<SCAPIX_META_STRING("getProvider"), ref<java::security::Provider>>(); }
inline ref<java::lang::String> Provider_Service::getClassName() { return call_method<SCAPIX_META_STRING("getClassName"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Provider_Service::getAttribute(ref<java::lang::String> name) { return call_method<SCAPIX_META_STRING("getAttribute"), ref<java::lang::String>>(name); }
inline ref<java::lang::Object> Provider_Service::newInstance(ref<java::lang::Object> constructorParameter) { return call_method<SCAPIX_META_STRING("newInstance"), ref<java::lang::Object>>(constructorParameter); }
inline jboolean Provider_Service::supportsParameter(ref<java::lang::Object> parameter) { return call_method<SCAPIX_META_STRING("supportsParameter"), jboolean>(parameter); }
inline ref<java::lang::String> Provider_Service::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }

} // namespace java::security
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_SECURITY_PROVIDER_SERVICE_H
