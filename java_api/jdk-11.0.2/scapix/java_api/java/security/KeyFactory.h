// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_SECURITY_KEYFACTORY_H
#define SCAPIX_JAVA_SECURITY_KEYFACTORY_H

namespace scapix::java_api {

namespace java::lang { class Class; }
namespace java::lang { class String; }
namespace java::security { class Key; }
namespace java::security { class PrivateKey; }
namespace java::security { class Provider; }
namespace java::security { class PublicKey; }
namespace java::security::spec { class KeySpec; }

namespace java::security {

class KeyFactory : public object_base<SCAPIX_META_STRING("java/security/KeyFactory"),
	java::lang::Object>
{
public:

	static ref<java::security::KeyFactory> getInstance(ref<java::lang::String> algorithm);
	static ref<java::security::KeyFactory> getInstance(ref<java::lang::String> algorithm, ref<java::lang::String> provider);
	static ref<java::security::KeyFactory> getInstance(ref<java::lang::String> algorithm, ref<java::security::Provider> provider);
	ref<java::security::Provider> getProvider();
	ref<java::lang::String> getAlgorithm();
	ref<java::security::PublicKey> generatePublic(ref<java::security::spec::KeySpec> keySpec);
	ref<java::security::PrivateKey> generatePrivate(ref<java::security::spec::KeySpec> keySpec);
	ref<java::security::spec::KeySpec> getKeySpec(ref<java::security::Key> key, ref<java::lang::Class> keySpec);
	ref<java::security::Key> translateKey(ref<java::security::Key> key);

protected:

	KeyFactory(handle_type h) : base_(h) {}

};

} // namespace java::security
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/Class.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/security/Key.h>
#include <scapix/java_api/java/security/PrivateKey.h>
#include <scapix/java_api/java/security/Provider.h>
#include <scapix/java_api/java/security/PublicKey.h>
#include <scapix/java_api/java/security/spec/KeySpec.h>

namespace scapix::java_api {
namespace java::security {

inline ref<java::security::KeyFactory> KeyFactory::getInstance(ref<java::lang::String> algorithm) { return call_static_method<SCAPIX_META_STRING("getInstance"), ref<java::security::KeyFactory>>(algorithm); }
inline ref<java::security::KeyFactory> KeyFactory::getInstance(ref<java::lang::String> algorithm, ref<java::lang::String> provider) { return call_static_method<SCAPIX_META_STRING("getInstance"), ref<java::security::KeyFactory>>(algorithm, provider); }
inline ref<java::security::KeyFactory> KeyFactory::getInstance(ref<java::lang::String> algorithm, ref<java::security::Provider> provider) { return call_static_method<SCAPIX_META_STRING("getInstance"), ref<java::security::KeyFactory>>(algorithm, provider); }
inline ref<java::security::Provider> KeyFactory::getProvider() { return call_method<SCAPIX_META_STRING("getProvider"), ref<java::security::Provider>>(); }
inline ref<java::lang::String> KeyFactory::getAlgorithm() { return call_method<SCAPIX_META_STRING("getAlgorithm"), ref<java::lang::String>>(); }
inline ref<java::security::PublicKey> KeyFactory::generatePublic(ref<java::security::spec::KeySpec> keySpec) { return call_method<SCAPIX_META_STRING("generatePublic"), ref<java::security::PublicKey>>(keySpec); }
inline ref<java::security::PrivateKey> KeyFactory::generatePrivate(ref<java::security::spec::KeySpec> keySpec) { return call_method<SCAPIX_META_STRING("generatePrivate"), ref<java::security::PrivateKey>>(keySpec); }
inline ref<java::security::spec::KeySpec> KeyFactory::getKeySpec(ref<java::security::Key> key, ref<java::lang::Class> keySpec) { return call_method<SCAPIX_META_STRING("getKeySpec"), ref<java::security::spec::KeySpec>>(key, keySpec); }
inline ref<java::security::Key> KeyFactory::translateKey(ref<java::security::Key> key) { return call_method<SCAPIX_META_STRING("translateKey"), ref<java::security::Key>>(key); }

} // namespace java::security
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_SECURITY_KEYFACTORY_H
