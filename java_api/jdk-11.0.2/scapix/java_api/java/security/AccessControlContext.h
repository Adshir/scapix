// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_SECURITY_ACCESSCONTROLCONTEXT_H
#define SCAPIX_JAVA_SECURITY_ACCESSCONTROLCONTEXT_H

namespace scapix::java_api {

namespace java::security { class DomainCombiner; }
namespace java::security { class Permission; }
namespace java::security { class ProtectionDomain; }

namespace java::security {

class AccessControlContext : public object_base<SCAPIX_META_STRING("java/security/AccessControlContext"),
	java::lang::Object>
{
public:

	static ref<AccessControlContext> new_object(ref<link::java::array<java::security::ProtectionDomain>> context);
	static ref<AccessControlContext> new_object(ref<java::security::AccessControlContext> acc, ref<java::security::DomainCombiner> combiner);
	ref<java::security::DomainCombiner> getDomainCombiner();
	void checkPermission(ref<java::security::Permission> perm);
	jboolean equals(ref<java::lang::Object> obj);
	jint hashCode();

protected:

	AccessControlContext(handle_type h) : base_(h) {}

};

} // namespace java::security
} // namespace scapix::java_api

#include <scapix/java_api/java/security/DomainCombiner.h>
#include <scapix/java_api/java/security/Permission.h>
#include <scapix/java_api/java/security/ProtectionDomain.h>

namespace scapix::java_api {
namespace java::security {

inline ref<AccessControlContext> AccessControlContext::new_object(ref<link::java::array<java::security::ProtectionDomain>> context) { return base_::new_object(context); }
inline ref<AccessControlContext> AccessControlContext::new_object(ref<java::security::AccessControlContext> acc, ref<java::security::DomainCombiner> combiner) { return base_::new_object(acc, combiner); }
inline ref<java::security::DomainCombiner> AccessControlContext::getDomainCombiner() { return call_method<SCAPIX_META_STRING("getDomainCombiner"), ref<java::security::DomainCombiner>>(); }
inline void AccessControlContext::checkPermission(ref<java::security::Permission> perm) { return call_method<SCAPIX_META_STRING("checkPermission"), void>(perm); }
inline jboolean AccessControlContext::equals(ref<java::lang::Object> obj) { return call_method<SCAPIX_META_STRING("equals"), jboolean>(obj); }
inline jint AccessControlContext::hashCode() { return call_method<SCAPIX_META_STRING("hashCode"), jint>(); }

} // namespace java::security
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_SECURITY_ACCESSCONTROLCONTEXT_H
