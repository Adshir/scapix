// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/security/acl/Owner.h>

#ifndef SCAPIX_JAVA_SECURITY_ACL_ACL_H
#define SCAPIX_JAVA_SECURITY_ACL_ACL_H

namespace scapix::java_api {

namespace java::lang { class String; }
namespace java::security { class Principal; }
namespace java::security::acl { class AclEntry; }
namespace java::security::acl { class Permission; }
namespace java::util { class Enumeration; }

namespace java::security::acl {

class Acl : public object_base<SCAPIX_META_STRING("java/security/acl/Acl"),
	java::lang::Object,
	java::security::acl::Owner>
{
public:

	void setName(ref<java::security::Principal> p1, ref<java::lang::String> p2);
	ref<java::lang::String> getName();
	jboolean addEntry(ref<java::security::Principal> p1, ref<java::security::acl::AclEntry> p2);
	jboolean removeEntry(ref<java::security::Principal> p1, ref<java::security::acl::AclEntry> p2);
	ref<java::util::Enumeration> getPermissions(ref<java::security::Principal> p1);
	ref<java::util::Enumeration> entries();
	jboolean checkPermission(ref<java::security::Principal> p1, ref<java::security::acl::Permission> p2);
	ref<java::lang::String> toString();

protected:

	Acl(handle_type h) : base_(h) {}

};

} // namespace java::security::acl
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/security/Principal.h>
#include <scapix/java_api/java/security/acl/AclEntry.h>
#include <scapix/java_api/java/security/acl/Permission.h>
#include <scapix/java_api/java/util/Enumeration.h>

namespace scapix::java_api {
namespace java::security::acl {

inline void Acl::setName(ref<java::security::Principal> p1, ref<java::lang::String> p2) { return call_method<SCAPIX_META_STRING("setName"), void>(p1, p2); }
inline ref<java::lang::String> Acl::getName() { return call_method<SCAPIX_META_STRING("getName"), ref<java::lang::String>>(); }
inline jboolean Acl::addEntry(ref<java::security::Principal> p1, ref<java::security::acl::AclEntry> p2) { return call_method<SCAPIX_META_STRING("addEntry"), jboolean>(p1, p2); }
inline jboolean Acl::removeEntry(ref<java::security::Principal> p1, ref<java::security::acl::AclEntry> p2) { return call_method<SCAPIX_META_STRING("removeEntry"), jboolean>(p1, p2); }
inline ref<java::util::Enumeration> Acl::getPermissions(ref<java::security::Principal> p1) { return call_method<SCAPIX_META_STRING("getPermissions"), ref<java::util::Enumeration>>(p1); }
inline ref<java::util::Enumeration> Acl::entries() { return call_method<SCAPIX_META_STRING("entries"), ref<java::util::Enumeration>>(); }
inline jboolean Acl::checkPermission(ref<java::security::Principal> p1, ref<java::security::acl::Permission> p2) { return call_method<SCAPIX_META_STRING("checkPermission"), jboolean>(p1, p2); }
inline ref<java::lang::String> Acl::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }

} // namespace java::security::acl
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_SECURITY_ACL_ACL_H
