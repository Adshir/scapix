// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_NET_INTERFACEADDRESS_H
#define SCAPIX_JAVA_NET_INTERFACEADDRESS_H

namespace scapix::java_api {

namespace java::lang { class String; }
namespace java::net { class InetAddress; }

namespace java::net {

class InterfaceAddress : public object_base<SCAPIX_META_STRING("java/net/InterfaceAddress"),
	java::lang::Object>
{
public:

	ref<java::net::InetAddress> getAddress();
	ref<java::net::InetAddress> getBroadcast();
	jshort getNetworkPrefixLength();
	jboolean equals(ref<java::lang::Object> obj);
	jint hashCode();
	ref<java::lang::String> toString();

protected:

	InterfaceAddress(handle_type h) : base_(h) {}

};

} // namespace java::net
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/net/InetAddress.h>

namespace scapix::java_api {
namespace java::net {

inline ref<java::net::InetAddress> InterfaceAddress::getAddress() { return call_method<SCAPIX_META_STRING("getAddress"), ref<java::net::InetAddress>>(); }
inline ref<java::net::InetAddress> InterfaceAddress::getBroadcast() { return call_method<SCAPIX_META_STRING("getBroadcast"), ref<java::net::InetAddress>>(); }
inline jshort InterfaceAddress::getNetworkPrefixLength() { return call_method<SCAPIX_META_STRING("getNetworkPrefixLength"), jshort>(); }
inline jboolean InterfaceAddress::equals(ref<java::lang::Object> obj) { return call_method<SCAPIX_META_STRING("equals"), jboolean>(obj); }
inline jint InterfaceAddress::hashCode() { return call_method<SCAPIX_META_STRING("hashCode"), jint>(); }
inline ref<java::lang::String> InterfaceAddress::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }

} // namespace java::net
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_NET_INTERFACEADDRESS_H
