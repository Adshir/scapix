// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_NET_SOCKSCONSTS_H
#define SCAPIX_JAVA_NET_SOCKSCONSTS_H

namespace scapix::java_api {
namespace java::net {

// private
class SocksConsts : public object_base<SCAPIX_META_STRING("java/net/SocksConsts"),
	java::lang::Object>
{
public:

	static jint PROTO_VERS4_();
	static jint PROTO_VERS_();
	static jint DEFAULT_PORT_();
	static jint NO_AUTH_();
	static jint GSSAPI_();
	static jint USER_PASSW_();
	static jint NO_METHODS_();
	static jint CONNECT_();
	static jint BIND_();
	static jint UDP_ASSOC_();
	static jint IPV4_();
	static jint DOMAIN_NAME_();
	static jint IPV6_();
	static jint REQUEST_OK_();
	static jint GENERAL_FAILURE_();
	static jint NOT_ALLOWED_();
	static jint NET_UNREACHABLE_();
	static jint HOST_UNREACHABLE_();
	static jint CONN_REFUSED_();
	static jint TTL_EXPIRED_();
	static jint CMD_NOT_SUPPORTED_();
	static jint ADDR_TYPE_NOT_SUP_();


protected:

	SocksConsts(handle_type h) : base_(h) {}

};

} // namespace java::net
} // namespace scapix::java_api


namespace scapix::java_api {
namespace java::net {

inline jint SocksConsts::PROTO_VERS4_() { return get_static_field<SCAPIX_META_STRING("PROTO_VERS4"), jint>(); }
inline jint SocksConsts::PROTO_VERS_() { return get_static_field<SCAPIX_META_STRING("PROTO_VERS"), jint>(); }
inline jint SocksConsts::DEFAULT_PORT_() { return get_static_field<SCAPIX_META_STRING("DEFAULT_PORT"), jint>(); }
inline jint SocksConsts::NO_AUTH_() { return get_static_field<SCAPIX_META_STRING("NO_AUTH"), jint>(); }
inline jint SocksConsts::GSSAPI_() { return get_static_field<SCAPIX_META_STRING("GSSAPI"), jint>(); }
inline jint SocksConsts::USER_PASSW_() { return get_static_field<SCAPIX_META_STRING("USER_PASSW"), jint>(); }
inline jint SocksConsts::NO_METHODS_() { return get_static_field<SCAPIX_META_STRING("NO_METHODS"), jint>(); }
inline jint SocksConsts::CONNECT_() { return get_static_field<SCAPIX_META_STRING("CONNECT"), jint>(); }
inline jint SocksConsts::BIND_() { return get_static_field<SCAPIX_META_STRING("BIND"), jint>(); }
inline jint SocksConsts::UDP_ASSOC_() { return get_static_field<SCAPIX_META_STRING("UDP_ASSOC"), jint>(); }
inline jint SocksConsts::IPV4_() { return get_static_field<SCAPIX_META_STRING("IPV4"), jint>(); }
inline jint SocksConsts::DOMAIN_NAME_() { return get_static_field<SCAPIX_META_STRING("DOMAIN_NAME"), jint>(); }
inline jint SocksConsts::IPV6_() { return get_static_field<SCAPIX_META_STRING("IPV6"), jint>(); }
inline jint SocksConsts::REQUEST_OK_() { return get_static_field<SCAPIX_META_STRING("REQUEST_OK"), jint>(); }
inline jint SocksConsts::GENERAL_FAILURE_() { return get_static_field<SCAPIX_META_STRING("GENERAL_FAILURE"), jint>(); }
inline jint SocksConsts::NOT_ALLOWED_() { return get_static_field<SCAPIX_META_STRING("NOT_ALLOWED"), jint>(); }
inline jint SocksConsts::NET_UNREACHABLE_() { return get_static_field<SCAPIX_META_STRING("NET_UNREACHABLE"), jint>(); }
inline jint SocksConsts::HOST_UNREACHABLE_() { return get_static_field<SCAPIX_META_STRING("HOST_UNREACHABLE"), jint>(); }
inline jint SocksConsts::CONN_REFUSED_() { return get_static_field<SCAPIX_META_STRING("CONN_REFUSED"), jint>(); }
inline jint SocksConsts::TTL_EXPIRED_() { return get_static_field<SCAPIX_META_STRING("TTL_EXPIRED"), jint>(); }
inline jint SocksConsts::CMD_NOT_SUPPORTED_() { return get_static_field<SCAPIX_META_STRING("CMD_NOT_SUPPORTED"), jint>(); }
inline jint SocksConsts::ADDR_TYPE_NOT_SUP_() { return get_static_field<SCAPIX_META_STRING("ADDR_TYPE_NOT_SUP"), jint>(); }

} // namespace java::net
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_NET_SOCKSCONSTS_H
