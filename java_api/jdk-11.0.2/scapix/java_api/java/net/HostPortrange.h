// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_NET_HOSTPORTRANGE_H
#define SCAPIX_JAVA_NET_HOSTPORTRANGE_H

namespace scapix::java_api {

namespace java::lang { class String; }

namespace java::net {

// private
class HostPortrange : public object_base<SCAPIX_META_STRING("java/net/HostPortrange"),
	java::lang::Object>
{
public:

	jint hashCode();
	jboolean literal();
	jboolean ipv4Literal();
	jboolean ipv6Literal();
	ref<java::lang::String> hostname();
	ref<link::java::array<jint>> portrange();
	jboolean wildcard();

protected:

	HostPortrange(handle_type h) : base_(h) {}

};

} // namespace java::net
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace java::net {

inline jint HostPortrange::hashCode() { return call_method<SCAPIX_META_STRING("hashCode"), jint>(); }
inline jboolean HostPortrange::literal() { return call_method<SCAPIX_META_STRING("literal"), jboolean>(); }
inline jboolean HostPortrange::ipv4Literal() { return call_method<SCAPIX_META_STRING("ipv4Literal"), jboolean>(); }
inline jboolean HostPortrange::ipv6Literal() { return call_method<SCAPIX_META_STRING("ipv6Literal"), jboolean>(); }
inline ref<java::lang::String> HostPortrange::hostname() { return call_method<SCAPIX_META_STRING("hostname"), ref<java::lang::String>>(); }
inline ref<link::java::array<jint>> HostPortrange::portrange() { return call_method<SCAPIX_META_STRING("portrange"), ref<link::java::array<jint>>>(); }
inline jboolean HostPortrange::wildcard() { return call_method<SCAPIX_META_STRING("wildcard"), jboolean>(); }

} // namespace java::net
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_NET_HOSTPORTRANGE_H
