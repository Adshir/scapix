// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_NET_INETADDRESSIMPL_H
#define SCAPIX_JAVA_NET_INETADDRESSIMPL_H

namespace scapix::java_api {

namespace java::lang { class String; }
namespace java::net { class InetAddress; }
namespace java::net { class NetworkInterface; }

namespace java::net {

// private
class InetAddressImpl : public object_base<SCAPIX_META_STRING("java/net/InetAddressImpl"),
	java::lang::Object>
{
public:

	ref<java::lang::String> getLocalHostName();
	ref<link::java::array<java::net::InetAddress>> lookupAllHostAddr(ref<java::lang::String> p1);
	ref<java::lang::String> getHostByAddr(ref<link::java::array<jbyte>> p1);
	ref<java::net::InetAddress> anyLocalAddress();
	ref<java::net::InetAddress> loopbackAddress();
	jboolean isReachable(ref<java::net::InetAddress> p1, jint p2, ref<java::net::NetworkInterface> p3, jint p4);

protected:

	InetAddressImpl(handle_type h) : base_(h) {}

};

} // namespace java::net
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/net/InetAddress.h>
#include <scapix/java_api/java/net/NetworkInterface.h>

namespace scapix::java_api {
namespace java::net {

inline ref<java::lang::String> InetAddressImpl::getLocalHostName() { return call_method<SCAPIX_META_STRING("getLocalHostName"), ref<java::lang::String>>(); }
inline ref<link::java::array<java::net::InetAddress>> InetAddressImpl::lookupAllHostAddr(ref<java::lang::String> p1) { return call_method<SCAPIX_META_STRING("lookupAllHostAddr"), ref<link::java::array<java::net::InetAddress>>>(p1); }
inline ref<java::lang::String> InetAddressImpl::getHostByAddr(ref<link::java::array<jbyte>> p1) { return call_method<SCAPIX_META_STRING("getHostByAddr"), ref<java::lang::String>>(p1); }
inline ref<java::net::InetAddress> InetAddressImpl::anyLocalAddress() { return call_method<SCAPIX_META_STRING("anyLocalAddress"), ref<java::net::InetAddress>>(); }
inline ref<java::net::InetAddress> InetAddressImpl::loopbackAddress() { return call_method<SCAPIX_META_STRING("loopbackAddress"), ref<java::net::InetAddress>>(); }
inline jboolean InetAddressImpl::isReachable(ref<java::net::InetAddress> p1, jint p2, ref<java::net::NetworkInterface> p3, jint p4) { return call_method<SCAPIX_META_STRING("isReachable"), jboolean>(p1, p2, p3, p4); }

} // namespace java::net
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_NET_INETADDRESSIMPL_H
