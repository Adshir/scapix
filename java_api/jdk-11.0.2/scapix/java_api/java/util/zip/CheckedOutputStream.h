// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/io/FilterOutputStream.h>

#ifndef SCAPIX_JAVA_UTIL_ZIP_CHECKEDOUTPUTSTREAM_H
#define SCAPIX_JAVA_UTIL_ZIP_CHECKEDOUTPUTSTREAM_H

namespace scapix::java_api {

namespace java::io { class OutputStream; }
namespace java::util::zip { class Checksum; }

namespace java::util::zip {

class CheckedOutputStream : public object_base<SCAPIX_META_STRING("java/util/zip/CheckedOutputStream"),
	java::io::FilterOutputStream>
{
public:

	static ref<CheckedOutputStream> new_object(ref<java::io::OutputStream> out, ref<java::util::zip::Checksum> cksum);
	void write(jint b);
	void write(ref<link::java::array<jbyte>> b, jint off, jint len);
	ref<java::util::zip::Checksum> getChecksum();

protected:

	CheckedOutputStream(handle_type h) : base_(h) {}

};

} // namespace java::util::zip
} // namespace scapix::java_api

#include <scapix/java_api/java/io/OutputStream.h>
#include <scapix/java_api/java/util/zip/Checksum.h>

namespace scapix::java_api {
namespace java::util::zip {

inline ref<CheckedOutputStream> CheckedOutputStream::new_object(ref<java::io::OutputStream> out, ref<java::util::zip::Checksum> cksum) { return base_::new_object(out, cksum); }
inline void CheckedOutputStream::write(jint b) { return call_method<SCAPIX_META_STRING("write"), void>(b); }
inline void CheckedOutputStream::write(ref<link::java::array<jbyte>> b, jint off, jint len) { return call_method<SCAPIX_META_STRING("write"), void>(b, off, len); }
inline ref<java::util::zip::Checksum> CheckedOutputStream::getChecksum() { return call_method<SCAPIX_META_STRING("getChecksum"), ref<java::util::zip::Checksum>>(); }

} // namespace java::util::zip
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_UTIL_ZIP_CHECKEDOUTPUTSTREAM_H
