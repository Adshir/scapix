// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/util/zip/ZipConstants.h>
#include <scapix/java_api/java/lang/Cloneable.h>

#ifndef SCAPIX_JAVA_UTIL_ZIP_ZIPENTRY_H
#define SCAPIX_JAVA_UTIL_ZIP_ZIPENTRY_H

namespace scapix::java_api {

namespace java::lang { class String; }
namespace java::nio::file::attribute { class FileTime; }
namespace java::time { class LocalDateTime; }

namespace java::util::zip {

class ZipEntry : public object_base<SCAPIX_META_STRING("java/util/zip/ZipEntry"),
	java::lang::Object,
	java::util::zip::ZipConstants,
	java::lang::Cloneable>
{
public:

	static jint STORED_();
	static jint DEFLATED_();

	static ref<ZipEntry> new_object(ref<java::lang::String> name);
	static ref<ZipEntry> new_object(ref<java::util::zip::ZipEntry> e);
	ref<java::lang::String> getName();
	void setTime(jlong time);
	jlong getTime();
	void setTimeLocal(ref<java::time::LocalDateTime> time);
	ref<java::time::LocalDateTime> getTimeLocal();
	ref<java::util::zip::ZipEntry> setLastModifiedTime(ref<java::nio::file::attribute::FileTime> time);
	ref<java::nio::file::attribute::FileTime> getLastModifiedTime();
	ref<java::util::zip::ZipEntry> setLastAccessTime(ref<java::nio::file::attribute::FileTime> time);
	ref<java::nio::file::attribute::FileTime> getLastAccessTime();
	ref<java::util::zip::ZipEntry> setCreationTime(ref<java::nio::file::attribute::FileTime> time);
	ref<java::nio::file::attribute::FileTime> getCreationTime();
	void setSize(jlong size);
	jlong getSize();
	jlong getCompressedSize();
	void setCompressedSize(jlong csize);
	void setCrc(jlong crc);
	jlong getCrc();
	void setMethod(jint method);
	jint getMethod();
	void setExtra(ref<link::java::array<jbyte>> extra);
	ref<link::java::array<jbyte>> getExtra();
	void setComment(ref<java::lang::String> comment);
	ref<java::lang::String> getComment();
	jboolean isDirectory();
	ref<java::lang::String> toString();
	jint hashCode();
	ref<java::lang::Object> clone();

protected:

	ZipEntry(handle_type h) : base_(h) {}

};

} // namespace java::util::zip
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/nio/file/attribute/FileTime.h>
#include <scapix/java_api/java/time/LocalDateTime.h>

namespace scapix::java_api {
namespace java::util::zip {

inline jint ZipEntry::STORED_() { return get_static_field<SCAPIX_META_STRING("STORED"), jint>(); }
inline jint ZipEntry::DEFLATED_() { return get_static_field<SCAPIX_META_STRING("DEFLATED"), jint>(); }
inline ref<ZipEntry> ZipEntry::new_object(ref<java::lang::String> name) { return base_::new_object(name); }
inline ref<ZipEntry> ZipEntry::new_object(ref<java::util::zip::ZipEntry> e) { return base_::new_object(e); }
inline ref<java::lang::String> ZipEntry::getName() { return call_method<SCAPIX_META_STRING("getName"), ref<java::lang::String>>(); }
inline void ZipEntry::setTime(jlong time) { return call_method<SCAPIX_META_STRING("setTime"), void>(time); }
inline jlong ZipEntry::getTime() { return call_method<SCAPIX_META_STRING("getTime"), jlong>(); }
inline void ZipEntry::setTimeLocal(ref<java::time::LocalDateTime> time) { return call_method<SCAPIX_META_STRING("setTimeLocal"), void>(time); }
inline ref<java::time::LocalDateTime> ZipEntry::getTimeLocal() { return call_method<SCAPIX_META_STRING("getTimeLocal"), ref<java::time::LocalDateTime>>(); }
inline ref<java::util::zip::ZipEntry> ZipEntry::setLastModifiedTime(ref<java::nio::file::attribute::FileTime> time) { return call_method<SCAPIX_META_STRING("setLastModifiedTime"), ref<java::util::zip::ZipEntry>>(time); }
inline ref<java::nio::file::attribute::FileTime> ZipEntry::getLastModifiedTime() { return call_method<SCAPIX_META_STRING("getLastModifiedTime"), ref<java::nio::file::attribute::FileTime>>(); }
inline ref<java::util::zip::ZipEntry> ZipEntry::setLastAccessTime(ref<java::nio::file::attribute::FileTime> time) { return call_method<SCAPIX_META_STRING("setLastAccessTime"), ref<java::util::zip::ZipEntry>>(time); }
inline ref<java::nio::file::attribute::FileTime> ZipEntry::getLastAccessTime() { return call_method<SCAPIX_META_STRING("getLastAccessTime"), ref<java::nio::file::attribute::FileTime>>(); }
inline ref<java::util::zip::ZipEntry> ZipEntry::setCreationTime(ref<java::nio::file::attribute::FileTime> time) { return call_method<SCAPIX_META_STRING("setCreationTime"), ref<java::util::zip::ZipEntry>>(time); }
inline ref<java::nio::file::attribute::FileTime> ZipEntry::getCreationTime() { return call_method<SCAPIX_META_STRING("getCreationTime"), ref<java::nio::file::attribute::FileTime>>(); }
inline void ZipEntry::setSize(jlong size) { return call_method<SCAPIX_META_STRING("setSize"), void>(size); }
inline jlong ZipEntry::getSize() { return call_method<SCAPIX_META_STRING("getSize"), jlong>(); }
inline jlong ZipEntry::getCompressedSize() { return call_method<SCAPIX_META_STRING("getCompressedSize"), jlong>(); }
inline void ZipEntry::setCompressedSize(jlong csize) { return call_method<SCAPIX_META_STRING("setCompressedSize"), void>(csize); }
inline void ZipEntry::setCrc(jlong crc) { return call_method<SCAPIX_META_STRING("setCrc"), void>(crc); }
inline jlong ZipEntry::getCrc() { return call_method<SCAPIX_META_STRING("getCrc"), jlong>(); }
inline void ZipEntry::setMethod(jint method) { return call_method<SCAPIX_META_STRING("setMethod"), void>(method); }
inline jint ZipEntry::getMethod() { return call_method<SCAPIX_META_STRING("getMethod"), jint>(); }
inline void ZipEntry::setExtra(ref<link::java::array<jbyte>> extra) { return call_method<SCAPIX_META_STRING("setExtra"), void>(extra); }
inline ref<link::java::array<jbyte>> ZipEntry::getExtra() { return call_method<SCAPIX_META_STRING("getExtra"), ref<link::java::array<jbyte>>>(); }
inline void ZipEntry::setComment(ref<java::lang::String> comment) { return call_method<SCAPIX_META_STRING("setComment"), void>(comment); }
inline ref<java::lang::String> ZipEntry::getComment() { return call_method<SCAPIX_META_STRING("getComment"), ref<java::lang::String>>(); }
inline jboolean ZipEntry::isDirectory() { return call_method<SCAPIX_META_STRING("isDirectory"), jboolean>(); }
inline ref<java::lang::String> ZipEntry::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }
inline jint ZipEntry::hashCode() { return call_method<SCAPIX_META_STRING("hashCode"), jint>(); }
inline ref<java::lang::Object> ZipEntry::clone() { return call_method<SCAPIX_META_STRING("clone"), ref<java::lang::Object>>(); }

} // namespace java::util::zip
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_UTIL_ZIP_ZIPENTRY_H
