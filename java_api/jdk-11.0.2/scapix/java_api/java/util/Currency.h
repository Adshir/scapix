// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/io/Serializable.h>

#ifndef SCAPIX_JAVA_UTIL_CURRENCY_H
#define SCAPIX_JAVA_UTIL_CURRENCY_H

namespace scapix::java_api {

namespace java::lang { class String; }
namespace java::util { class Locale; }
namespace java::util { class Set; }

namespace java::util {

class Currency : public object_base<SCAPIX_META_STRING("java/util/Currency"),
	java::lang::Object,
	java::io::Serializable>
{
public:

	static ref<java::util::Currency> getInstance(ref<java::lang::String> currencyCode);
	static ref<java::util::Currency> getInstance(ref<java::util::Locale> locale);
	static ref<java::util::Set> getAvailableCurrencies();
	ref<java::lang::String> getCurrencyCode();
	ref<java::lang::String> getSymbol();
	ref<java::lang::String> getSymbol(ref<java::util::Locale> locale);
	jint getDefaultFractionDigits();
	jint getNumericCode();
	ref<java::lang::String> getNumericCodeAsString();
	ref<java::lang::String> getDisplayName();
	ref<java::lang::String> getDisplayName(ref<java::util::Locale> locale);
	ref<java::lang::String> toString();

protected:

	Currency(handle_type h) : base_(h) {}

};

} // namespace java::util
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Locale.h>
#include <scapix/java_api/java/util/Set.h>

namespace scapix::java_api {
namespace java::util {

inline ref<java::util::Currency> Currency::getInstance(ref<java::lang::String> currencyCode) { return call_static_method<SCAPIX_META_STRING("getInstance"), ref<java::util::Currency>>(currencyCode); }
inline ref<java::util::Currency> Currency::getInstance(ref<java::util::Locale> locale) { return call_static_method<SCAPIX_META_STRING("getInstance"), ref<java::util::Currency>>(locale); }
inline ref<java::util::Set> Currency::getAvailableCurrencies() { return call_static_method<SCAPIX_META_STRING("getAvailableCurrencies"), ref<java::util::Set>>(); }
inline ref<java::lang::String> Currency::getCurrencyCode() { return call_method<SCAPIX_META_STRING("getCurrencyCode"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Currency::getSymbol() { return call_method<SCAPIX_META_STRING("getSymbol"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Currency::getSymbol(ref<java::util::Locale> locale) { return call_method<SCAPIX_META_STRING("getSymbol"), ref<java::lang::String>>(locale); }
inline jint Currency::getDefaultFractionDigits() { return call_method<SCAPIX_META_STRING("getDefaultFractionDigits"), jint>(); }
inline jint Currency::getNumericCode() { return call_method<SCAPIX_META_STRING("getNumericCode"), jint>(); }
inline ref<java::lang::String> Currency::getNumericCodeAsString() { return call_method<SCAPIX_META_STRING("getNumericCodeAsString"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Currency::getDisplayName() { return call_method<SCAPIX_META_STRING("getDisplayName"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Currency::getDisplayName(ref<java::util::Locale> locale) { return call_method<SCAPIX_META_STRING("getDisplayName"), ref<java::lang::String>>(locale); }
inline ref<java::lang::String> Currency::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }

} // namespace java::util
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_UTIL_CURRENCY_H
