// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/util/AbstractCollection.h>
#include <scapix/java_api/java/util/Queue.h>

#ifndef SCAPIX_JAVA_UTIL_ABSTRACTQUEUE_H
#define SCAPIX_JAVA_UTIL_ABSTRACTQUEUE_H

namespace scapix::java_api {

namespace java::lang { class Object; }
namespace java::util { class Collection; }

namespace java::util {

class AbstractQueue : public object_base<SCAPIX_META_STRING("java/util/AbstractQueue"),
	java::util::AbstractCollection,
	java::util::Queue>
{
public:

	jboolean add(ref<java::lang::Object> e);
	ref<java::lang::Object> remove();
	ref<java::lang::Object> element();
	void clear();
	jboolean addAll(ref<java::util::Collection> c);

protected:

	AbstractQueue(handle_type h) : base_(h) {}

};

} // namespace java::util
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/util/Collection.h>

namespace scapix::java_api {
namespace java::util {

inline jboolean AbstractQueue::add(ref<java::lang::Object> e) { return call_method<SCAPIX_META_STRING("add"), jboolean>(e); }
inline ref<java::lang::Object> AbstractQueue::remove() { return call_method<SCAPIX_META_STRING("remove"), ref<java::lang::Object>>(); }
inline ref<java::lang::Object> AbstractQueue::element() { return call_method<SCAPIX_META_STRING("element"), ref<java::lang::Object>>(); }
inline void AbstractQueue::clear() { return call_method<SCAPIX_META_STRING("clear"), void>(); }
inline jboolean AbstractQueue::addAll(ref<java::util::Collection> c) { return call_method<SCAPIX_META_STRING("addAll"), jboolean>(c); }

} // namespace java::util
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_UTIL_ABSTRACTQUEUE_H
