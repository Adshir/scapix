// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_UTIL_CONCURRENT_LOCKS_READWRITELOCK_H
#define SCAPIX_JAVA_UTIL_CONCURRENT_LOCKS_READWRITELOCK_H

namespace scapix::java_api {

namespace java::util::concurrent::locks { class Lock; }

namespace java::util::concurrent::locks {

class ReadWriteLock : public object_base<SCAPIX_META_STRING("java/util/concurrent/locks/ReadWriteLock"),
	java::lang::Object>
{
public:

	ref<java::util::concurrent::locks::Lock> readLock();
	ref<java::util::concurrent::locks::Lock> writeLock();

protected:

	ReadWriteLock(handle_type h) : base_(h) {}

};

} // namespace java::util::concurrent::locks
} // namespace scapix::java_api

#include <scapix/java_api/java/util/concurrent/locks/Lock.h>

namespace scapix::java_api {
namespace java::util::concurrent::locks {

inline ref<java::util::concurrent::locks::Lock> ReadWriteLock::readLock() { return call_method<SCAPIX_META_STRING("readLock"), ref<java::util::concurrent::locks::Lock>>(); }
inline ref<java::util::concurrent::locks::Lock> ReadWriteLock::writeLock() { return call_method<SCAPIX_META_STRING("writeLock"), ref<java::util::concurrent::locks::Lock>>(); }

} // namespace java::util::concurrent::locks
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_UTIL_CONCURRENT_LOCKS_READWRITELOCK_H
