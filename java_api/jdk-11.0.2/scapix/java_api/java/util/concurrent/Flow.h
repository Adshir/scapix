// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_UTIL_CONCURRENT_FLOW_H
#define SCAPIX_JAVA_UTIL_CONCURRENT_FLOW_H

namespace scapix::java_api {

namespace java::util::concurrent { class Flow_Processor; }
namespace java::util::concurrent { class Flow_Subscription; }
namespace java::util::concurrent { class Flow_Subscriber; }
namespace java::util::concurrent { class Flow_Publisher; }

namespace java::util::concurrent {

class Flow : public object_base<SCAPIX_META_STRING("java/util/concurrent/Flow"),
	java::lang::Object>
{
public:

	using Processor = Flow_Processor;
	using Subscription = Flow_Subscription;
	using Subscriber = Flow_Subscriber;
	using Publisher = Flow_Publisher;

	static jint defaultBufferSize();

protected:

	Flow(handle_type h) : base_(h) {}

};

} // namespace java::util::concurrent
} // namespace scapix::java_api


namespace scapix::java_api {
namespace java::util::concurrent {

inline jint Flow::defaultBufferSize() { return call_static_method<SCAPIX_META_STRING("defaultBufferSize"), jint>(); }

} // namespace java::util::concurrent
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_UTIL_CONCURRENT_FLOW_H
