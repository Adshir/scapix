// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_UTIL_JAR_PACK200_PACKER_H
#define SCAPIX_JAVA_UTIL_JAR_PACK200_PACKER_H

namespace scapix::java_api {

namespace java::io { class OutputStream; }
namespace java::lang { class String; }
namespace java::util { class SortedMap; }
namespace java::util::jar { class JarFile; }
namespace java::util::jar { class JarInputStream; }

namespace java::util::jar {

class Pack200_Packer : public object_base<SCAPIX_META_STRING("java/util/jar/Pack200$Packer"),
	java::lang::Object>
{
public:

	static ref<java::lang::String> SEGMENT_LIMIT_();
	static ref<java::lang::String> KEEP_FILE_ORDER_();
	static ref<java::lang::String> EFFORT_();
	static ref<java::lang::String> DEFLATE_HINT_();
	static ref<java::lang::String> MODIFICATION_TIME_();
	static ref<java::lang::String> PASS_FILE_PFX_();
	static ref<java::lang::String> UNKNOWN_ATTRIBUTE_();
	static ref<java::lang::String> CLASS_ATTRIBUTE_PFX_();
	static ref<java::lang::String> FIELD_ATTRIBUTE_PFX_();
	static ref<java::lang::String> METHOD_ATTRIBUTE_PFX_();
	static ref<java::lang::String> CODE_ATTRIBUTE_PFX_();
	static ref<java::lang::String> PROGRESS_();
	static ref<java::lang::String> KEEP_();
	static ref<java::lang::String> PASS_();
	static ref<java::lang::String> STRIP_();
	static ref<java::lang::String> ERROR_();
	static ref<java::lang::String> TRUE_();
	static ref<java::lang::String> FALSE_();
	static ref<java::lang::String> LATEST_();

	ref<java::util::SortedMap> properties();
	void pack(ref<java::util::jar::JarFile> p1, ref<java::io::OutputStream> p2);
	void pack(ref<java::util::jar::JarInputStream> p1, ref<java::io::OutputStream> p2);

protected:

	Pack200_Packer(handle_type h) : base_(h) {}

};

} // namespace java::util::jar
} // namespace scapix::java_api

#include <scapix/java_api/java/io/OutputStream.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/SortedMap.h>
#include <scapix/java_api/java/util/jar/JarFile.h>
#include <scapix/java_api/java/util/jar/JarInputStream.h>

namespace scapix::java_api {
namespace java::util::jar {

inline ref<java::lang::String> Pack200_Packer::SEGMENT_LIMIT_() { return get_static_field<SCAPIX_META_STRING("SEGMENT_LIMIT"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Pack200_Packer::KEEP_FILE_ORDER_() { return get_static_field<SCAPIX_META_STRING("KEEP_FILE_ORDER"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Pack200_Packer::EFFORT_() { return get_static_field<SCAPIX_META_STRING("EFFORT"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Pack200_Packer::DEFLATE_HINT_() { return get_static_field<SCAPIX_META_STRING("DEFLATE_HINT"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Pack200_Packer::MODIFICATION_TIME_() { return get_static_field<SCAPIX_META_STRING("MODIFICATION_TIME"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Pack200_Packer::PASS_FILE_PFX_() { return get_static_field<SCAPIX_META_STRING("PASS_FILE_PFX"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Pack200_Packer::UNKNOWN_ATTRIBUTE_() { return get_static_field<SCAPIX_META_STRING("UNKNOWN_ATTRIBUTE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Pack200_Packer::CLASS_ATTRIBUTE_PFX_() { return get_static_field<SCAPIX_META_STRING("CLASS_ATTRIBUTE_PFX"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Pack200_Packer::FIELD_ATTRIBUTE_PFX_() { return get_static_field<SCAPIX_META_STRING("FIELD_ATTRIBUTE_PFX"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Pack200_Packer::METHOD_ATTRIBUTE_PFX_() { return get_static_field<SCAPIX_META_STRING("METHOD_ATTRIBUTE_PFX"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Pack200_Packer::CODE_ATTRIBUTE_PFX_() { return get_static_field<SCAPIX_META_STRING("CODE_ATTRIBUTE_PFX"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Pack200_Packer::PROGRESS_() { return get_static_field<SCAPIX_META_STRING("PROGRESS"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Pack200_Packer::KEEP_() { return get_static_field<SCAPIX_META_STRING("KEEP"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Pack200_Packer::PASS_() { return get_static_field<SCAPIX_META_STRING("PASS"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Pack200_Packer::STRIP_() { return get_static_field<SCAPIX_META_STRING("STRIP"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Pack200_Packer::ERROR_() { return get_static_field<SCAPIX_META_STRING("ERROR"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Pack200_Packer::TRUE_() { return get_static_field<SCAPIX_META_STRING("TRUE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Pack200_Packer::FALSE_() { return get_static_field<SCAPIX_META_STRING("FALSE"), ref<java::lang::String>>(); }
inline ref<java::lang::String> Pack200_Packer::LATEST_() { return get_static_field<SCAPIX_META_STRING("LATEST"), ref<java::lang::String>>(); }
inline ref<java::util::SortedMap> Pack200_Packer::properties() { return call_method<SCAPIX_META_STRING("properties"), ref<java::util::SortedMap>>(); }
inline void Pack200_Packer::pack(ref<java::util::jar::JarFile> p1, ref<java::io::OutputStream> p2) { return call_method<SCAPIX_META_STRING("pack"), void>(p1, p2); }
inline void Pack200_Packer::pack(ref<java::util::jar::JarInputStream> p1, ref<java::io::OutputStream> p2) { return call_method<SCAPIX_META_STRING("pack"), void>(p1, p2); }

} // namespace java::util::jar
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_UTIL_JAR_PACK200_PACKER_H
