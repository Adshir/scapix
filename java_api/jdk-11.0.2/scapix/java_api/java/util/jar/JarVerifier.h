// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_UTIL_JAR_JARVERIFIER_H
#define SCAPIX_JAVA_UTIL_JAR_JARVERIFIER_H

namespace scapix::java_api {

namespace java::lang { class String; }
namespace java::net { class URL; }
namespace java::security { class CodeSigner; }
namespace java::security { class CodeSource; }
namespace java::security::cert { class Certificate; }
namespace java::util { class Enumeration; }
namespace java::util { class List; }
namespace java::util::jar { class JarEntry; }
namespace java::util::jar { class JarFile; }
namespace sun::security::util { class ManifestEntryVerifier; }

namespace java::util::jar {

// private
class JarVerifier : public object_base<SCAPIX_META_STRING("java/util/jar/JarVerifier"),
	java::lang::Object>
{
public:

	static ref<JarVerifier> new_object(ref<link::java::array<jbyte>> rawBytes);
	void beginEntry(ref<java::util::jar::JarEntry> je, ref<sun::security::util::ManifestEntryVerifier> mev);
	void update(jint b, ref<sun::security::util::ManifestEntryVerifier> mev);
	void update(jint n, ref<link::java::array<jbyte>> b, jint off, jint len, ref<sun::security::util::ManifestEntryVerifier> mev);
	ref<link::java::array<java::security::cert::Certificate>> getCerts(ref<java::lang::String> name);
	ref<link::java::array<java::security::cert::Certificate>> getCerts(ref<java::util::jar::JarFile> jar, ref<java::util::jar::JarEntry> entry);
	ref<link::java::array<java::security::CodeSigner>> getCodeSigners(ref<java::lang::String> name);
	ref<link::java::array<java::security::CodeSigner>> getCodeSigners(ref<java::util::jar::JarFile> jar, ref<java::util::jar::JarEntry> entry);
	ref<java::util::Enumeration> entryNames(ref<java::util::jar::JarFile> jar, ref<link::java::array<java::security::CodeSource>> cs);
	ref<java::util::Enumeration> entries2(ref<java::util::jar::JarFile> jar, ref<java::util::Enumeration> e);
	ref<link::java::array<java::security::CodeSource>> getCodeSources(ref<java::util::jar::JarFile> jar, ref<java::net::URL> url);
	ref<java::security::CodeSource> getCodeSource(ref<java::net::URL> url, ref<java::lang::String> name);
	ref<java::security::CodeSource> getCodeSource(ref<java::net::URL> url, ref<java::util::jar::JarFile> jar, ref<java::util::jar::JarEntry> je);
	void setEagerValidation(jboolean eager);
	ref<java::util::List> getManifestDigests();

protected:

	JarVerifier(handle_type h) : base_(h) {}

};

} // namespace java::util::jar
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/net/URL.h>
#include <scapix/java_api/java/security/CodeSigner.h>
#include <scapix/java_api/java/security/CodeSource.h>
#include <scapix/java_api/java/security/cert/Certificate.h>
#include <scapix/java_api/java/util/Enumeration.h>
#include <scapix/java_api/java/util/List.h>
#include <scapix/java_api/java/util/jar/JarEntry.h>
#include <scapix/java_api/java/util/jar/JarFile.h>
#include <scapix/java_api/sun/security/util/ManifestEntryVerifier.h>

namespace scapix::java_api {
namespace java::util::jar {

inline ref<JarVerifier> JarVerifier::new_object(ref<link::java::array<jbyte>> rawBytes) { return base_::new_object(rawBytes); }
inline void JarVerifier::beginEntry(ref<java::util::jar::JarEntry> je, ref<sun::security::util::ManifestEntryVerifier> mev) { return call_method<SCAPIX_META_STRING("beginEntry"), void>(je, mev); }
inline void JarVerifier::update(jint b, ref<sun::security::util::ManifestEntryVerifier> mev) { return call_method<SCAPIX_META_STRING("update"), void>(b, mev); }
inline void JarVerifier::update(jint n, ref<link::java::array<jbyte>> b, jint off, jint len, ref<sun::security::util::ManifestEntryVerifier> mev) { return call_method<SCAPIX_META_STRING("update"), void>(n, b, off, len, mev); }
inline ref<link::java::array<java::security::cert::Certificate>> JarVerifier::getCerts(ref<java::lang::String> name) { return call_method<SCAPIX_META_STRING("getCerts"), ref<link::java::array<java::security::cert::Certificate>>>(name); }
inline ref<link::java::array<java::security::cert::Certificate>> JarVerifier::getCerts(ref<java::util::jar::JarFile> jar, ref<java::util::jar::JarEntry> entry) { return call_method<SCAPIX_META_STRING("getCerts"), ref<link::java::array<java::security::cert::Certificate>>>(jar, entry); }
inline ref<link::java::array<java::security::CodeSigner>> JarVerifier::getCodeSigners(ref<java::lang::String> name) { return call_method<SCAPIX_META_STRING("getCodeSigners"), ref<link::java::array<java::security::CodeSigner>>>(name); }
inline ref<link::java::array<java::security::CodeSigner>> JarVerifier::getCodeSigners(ref<java::util::jar::JarFile> jar, ref<java::util::jar::JarEntry> entry) { return call_method<SCAPIX_META_STRING("getCodeSigners"), ref<link::java::array<java::security::CodeSigner>>>(jar, entry); }
inline ref<java::util::Enumeration> JarVerifier::entryNames(ref<java::util::jar::JarFile> jar, ref<link::java::array<java::security::CodeSource>> cs) { return call_method<SCAPIX_META_STRING("entryNames"), ref<java::util::Enumeration>>(jar, cs); }
inline ref<java::util::Enumeration> JarVerifier::entries2(ref<java::util::jar::JarFile> jar, ref<java::util::Enumeration> e) { return call_method<SCAPIX_META_STRING("entries2"), ref<java::util::Enumeration>>(jar, e); }
inline ref<link::java::array<java::security::CodeSource>> JarVerifier::getCodeSources(ref<java::util::jar::JarFile> jar, ref<java::net::URL> url) { return call_method<SCAPIX_META_STRING("getCodeSources"), ref<link::java::array<java::security::CodeSource>>>(jar, url); }
inline ref<java::security::CodeSource> JarVerifier::getCodeSource(ref<java::net::URL> url, ref<java::lang::String> name) { return call_method<SCAPIX_META_STRING("getCodeSource"), ref<java::security::CodeSource>>(url, name); }
inline ref<java::security::CodeSource> JarVerifier::getCodeSource(ref<java::net::URL> url, ref<java::util::jar::JarFile> jar, ref<java::util::jar::JarEntry> je) { return call_method<SCAPIX_META_STRING("getCodeSource"), ref<java::security::CodeSource>>(url, jar, je); }
inline void JarVerifier::setEagerValidation(jboolean eager) { return call_method<SCAPIX_META_STRING("setEagerValidation"), void>(eager); }
inline ref<java::util::List> JarVerifier::getManifestDigests() { return call_method<SCAPIX_META_STRING("getManifestDigests"), ref<java::util::List>>(); }

} // namespace java::util::jar
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_UTIL_JAR_JARVERIFIER_H
