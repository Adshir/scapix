// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/util/Map_Entry.h>

#ifndef SCAPIX_JAVA_UTIL_KEYVALUEHOLDER_H
#define SCAPIX_JAVA_UTIL_KEYVALUEHOLDER_H

namespace scapix::java_api {

namespace java::lang { class String; }

namespace java::util {

// private
class KeyValueHolder : public object_base<SCAPIX_META_STRING("java/util/KeyValueHolder"),
	java::lang::Object,
	java::util::Map_Entry>
{
public:

	ref<java::lang::Object> getKey();
	ref<java::lang::Object> getValue();
	ref<java::lang::Object> setValue(ref<java::lang::Object> value);
	jboolean equals(ref<java::lang::Object> o);
	jint hashCode();
	ref<java::lang::String> toString();

protected:

	KeyValueHolder(handle_type h) : base_(h) {}

};

} // namespace java::util
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace java::util {

inline ref<java::lang::Object> KeyValueHolder::getKey() { return call_method<SCAPIX_META_STRING("getKey"), ref<java::lang::Object>>(); }
inline ref<java::lang::Object> KeyValueHolder::getValue() { return call_method<SCAPIX_META_STRING("getValue"), ref<java::lang::Object>>(); }
inline ref<java::lang::Object> KeyValueHolder::setValue(ref<java::lang::Object> value) { return call_method<SCAPIX_META_STRING("setValue"), ref<java::lang::Object>>(value); }
inline jboolean KeyValueHolder::equals(ref<java::lang::Object> o) { return call_method<SCAPIX_META_STRING("equals"), jboolean>(o); }
inline jint KeyValueHolder::hashCode() { return call_method<SCAPIX_META_STRING("hashCode"), jint>(); }
inline ref<java::lang::String> KeyValueHolder::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }

} // namespace java::util
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_UTIL_KEYVALUEHOLDER_H
