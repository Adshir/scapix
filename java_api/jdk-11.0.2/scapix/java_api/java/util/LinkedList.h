// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/util/AbstractSequentialList.h>
#include <scapix/java_api/java/util/List.h>
#include <scapix/java_api/java/util/Deque.h>
#include <scapix/java_api/java/lang/Cloneable.h>
#include <scapix/java_api/java/io/Serializable.h>

#ifndef SCAPIX_JAVA_UTIL_LINKEDLIST_H
#define SCAPIX_JAVA_UTIL_LINKEDLIST_H

namespace scapix::java_api {

namespace java::lang { class Object; }
namespace java::util { class Collection; }
namespace java::util { class Iterator; }
namespace java::util { class ListIterator; }
namespace java::util { class Spliterator; }

namespace java::util {

class LinkedList : public object_base<SCAPIX_META_STRING("java/util/LinkedList"),
	java::util::AbstractSequentialList,
	java::util::List,
	java::util::Deque,
	java::lang::Cloneable,
	java::io::Serializable>
{
public:

	static ref<LinkedList> new_object();
	static ref<LinkedList> new_object(ref<java::util::Collection> c);
	ref<java::lang::Object> getFirst();
	ref<java::lang::Object> getLast();
	ref<java::lang::Object> removeFirst();
	ref<java::lang::Object> removeLast();
	void addFirst(ref<java::lang::Object> e);
	void addLast(ref<java::lang::Object> e);
	jboolean contains(ref<java::lang::Object> o);
	jint size();
	jboolean add(ref<java::lang::Object> e);
	jboolean remove(ref<java::lang::Object> o);
	jboolean addAll(ref<java::util::Collection> c);
	jboolean addAll(jint index, ref<java::util::Collection> c);
	void clear();
	ref<java::lang::Object> get(jint index);
	ref<java::lang::Object> set(jint index, ref<java::lang::Object> element);
	void add(jint index, ref<java::lang::Object> element);
	ref<java::lang::Object> remove(jint index);
	jint indexOf(ref<java::lang::Object> o);
	jint lastIndexOf(ref<java::lang::Object> o);
	ref<java::lang::Object> peek();
	ref<java::lang::Object> element();
	ref<java::lang::Object> poll();
	ref<java::lang::Object> remove();
	jboolean offer(ref<java::lang::Object> e);
	jboolean offerFirst(ref<java::lang::Object> e);
	jboolean offerLast(ref<java::lang::Object> e);
	ref<java::lang::Object> peekFirst();
	ref<java::lang::Object> peekLast();
	ref<java::lang::Object> pollFirst();
	ref<java::lang::Object> pollLast();
	void push(ref<java::lang::Object> e);
	ref<java::lang::Object> pop();
	jboolean removeFirstOccurrence(ref<java::lang::Object> o);
	jboolean removeLastOccurrence(ref<java::lang::Object> o);
	ref<java::util::ListIterator> listIterator(jint index);
	ref<java::util::Iterator> descendingIterator();
	ref<java::lang::Object> clone();
	ref<link::java::array<java::lang::Object>> toArray();
	ref<link::java::array<java::lang::Object>> toArray(ref<link::java::array<java::lang::Object>> a);
	ref<java::util::Spliterator> spliterator();

protected:

	LinkedList(handle_type h) : base_(h) {}

};

} // namespace java::util
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/util/Collection.h>
#include <scapix/java_api/java/util/Iterator.h>
#include <scapix/java_api/java/util/ListIterator.h>
#include <scapix/java_api/java/util/Spliterator.h>

namespace scapix::java_api {
namespace java::util {

inline ref<LinkedList> LinkedList::new_object() { return base_::new_object(); }
inline ref<LinkedList> LinkedList::new_object(ref<java::util::Collection> c) { return base_::new_object(c); }
inline ref<java::lang::Object> LinkedList::getFirst() { return call_method<SCAPIX_META_STRING("getFirst"), ref<java::lang::Object>>(); }
inline ref<java::lang::Object> LinkedList::getLast() { return call_method<SCAPIX_META_STRING("getLast"), ref<java::lang::Object>>(); }
inline ref<java::lang::Object> LinkedList::removeFirst() { return call_method<SCAPIX_META_STRING("removeFirst"), ref<java::lang::Object>>(); }
inline ref<java::lang::Object> LinkedList::removeLast() { return call_method<SCAPIX_META_STRING("removeLast"), ref<java::lang::Object>>(); }
inline void LinkedList::addFirst(ref<java::lang::Object> e) { return call_method<SCAPIX_META_STRING("addFirst"), void>(e); }
inline void LinkedList::addLast(ref<java::lang::Object> e) { return call_method<SCAPIX_META_STRING("addLast"), void>(e); }
inline jboolean LinkedList::contains(ref<java::lang::Object> o) { return call_method<SCAPIX_META_STRING("contains"), jboolean>(o); }
inline jint LinkedList::size() { return call_method<SCAPIX_META_STRING("size"), jint>(); }
inline jboolean LinkedList::add(ref<java::lang::Object> e) { return call_method<SCAPIX_META_STRING("add"), jboolean>(e); }
inline jboolean LinkedList::remove(ref<java::lang::Object> o) { return call_method<SCAPIX_META_STRING("remove"), jboolean>(o); }
inline jboolean LinkedList::addAll(ref<java::util::Collection> c) { return call_method<SCAPIX_META_STRING("addAll"), jboolean>(c); }
inline jboolean LinkedList::addAll(jint index, ref<java::util::Collection> c) { return call_method<SCAPIX_META_STRING("addAll"), jboolean>(index, c); }
inline void LinkedList::clear() { return call_method<SCAPIX_META_STRING("clear"), void>(); }
inline ref<java::lang::Object> LinkedList::get(jint index) { return call_method<SCAPIX_META_STRING("get"), ref<java::lang::Object>>(index); }
inline ref<java::lang::Object> LinkedList::set(jint index, ref<java::lang::Object> element) { return call_method<SCAPIX_META_STRING("set"), ref<java::lang::Object>>(index, element); }
inline void LinkedList::add(jint index, ref<java::lang::Object> element) { return call_method<SCAPIX_META_STRING("add"), void>(index, element); }
inline ref<java::lang::Object> LinkedList::remove(jint index) { return call_method<SCAPIX_META_STRING("remove"), ref<java::lang::Object>>(index); }
inline jint LinkedList::indexOf(ref<java::lang::Object> o) { return call_method<SCAPIX_META_STRING("indexOf"), jint>(o); }
inline jint LinkedList::lastIndexOf(ref<java::lang::Object> o) { return call_method<SCAPIX_META_STRING("lastIndexOf"), jint>(o); }
inline ref<java::lang::Object> LinkedList::peek() { return call_method<SCAPIX_META_STRING("peek"), ref<java::lang::Object>>(); }
inline ref<java::lang::Object> LinkedList::element() { return call_method<SCAPIX_META_STRING("element"), ref<java::lang::Object>>(); }
inline ref<java::lang::Object> LinkedList::poll() { return call_method<SCAPIX_META_STRING("poll"), ref<java::lang::Object>>(); }
inline ref<java::lang::Object> LinkedList::remove() { return call_method<SCAPIX_META_STRING("remove"), ref<java::lang::Object>>(); }
inline jboolean LinkedList::offer(ref<java::lang::Object> e) { return call_method<SCAPIX_META_STRING("offer"), jboolean>(e); }
inline jboolean LinkedList::offerFirst(ref<java::lang::Object> e) { return call_method<SCAPIX_META_STRING("offerFirst"), jboolean>(e); }
inline jboolean LinkedList::offerLast(ref<java::lang::Object> e) { return call_method<SCAPIX_META_STRING("offerLast"), jboolean>(e); }
inline ref<java::lang::Object> LinkedList::peekFirst() { return call_method<SCAPIX_META_STRING("peekFirst"), ref<java::lang::Object>>(); }
inline ref<java::lang::Object> LinkedList::peekLast() { return call_method<SCAPIX_META_STRING("peekLast"), ref<java::lang::Object>>(); }
inline ref<java::lang::Object> LinkedList::pollFirst() { return call_method<SCAPIX_META_STRING("pollFirst"), ref<java::lang::Object>>(); }
inline ref<java::lang::Object> LinkedList::pollLast() { return call_method<SCAPIX_META_STRING("pollLast"), ref<java::lang::Object>>(); }
inline void LinkedList::push(ref<java::lang::Object> e) { return call_method<SCAPIX_META_STRING("push"), void>(e); }
inline ref<java::lang::Object> LinkedList::pop() { return call_method<SCAPIX_META_STRING("pop"), ref<java::lang::Object>>(); }
inline jboolean LinkedList::removeFirstOccurrence(ref<java::lang::Object> o) { return call_method<SCAPIX_META_STRING("removeFirstOccurrence"), jboolean>(o); }
inline jboolean LinkedList::removeLastOccurrence(ref<java::lang::Object> o) { return call_method<SCAPIX_META_STRING("removeLastOccurrence"), jboolean>(o); }
inline ref<java::util::ListIterator> LinkedList::listIterator(jint index) { return call_method<SCAPIX_META_STRING("listIterator"), ref<java::util::ListIterator>>(index); }
inline ref<java::util::Iterator> LinkedList::descendingIterator() { return call_method<SCAPIX_META_STRING("descendingIterator"), ref<java::util::Iterator>>(); }
inline ref<java::lang::Object> LinkedList::clone() { return call_method<SCAPIX_META_STRING("clone"), ref<java::lang::Object>>(); }
inline ref<link::java::array<java::lang::Object>> LinkedList::toArray() { return call_method<SCAPIX_META_STRING("toArray"), ref<link::java::array<java::lang::Object>>>(); }
inline ref<link::java::array<java::lang::Object>> LinkedList::toArray(ref<link::java::array<java::lang::Object>> a) { return call_method<SCAPIX_META_STRING("toArray"), ref<link::java::array<java::lang::Object>>>(a); }
inline ref<java::util::Spliterator> LinkedList::spliterator() { return call_method<SCAPIX_META_STRING("spliterator"), ref<java::util::Spliterator>>(); }

} // namespace java::util
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_UTIL_LINKEDLIST_H
