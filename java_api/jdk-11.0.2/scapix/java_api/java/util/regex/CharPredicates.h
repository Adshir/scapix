// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_UTIL_REGEX_CHARPREDICATES_H
#define SCAPIX_JAVA_UTIL_REGEX_CHARPREDICATES_H

namespace scapix::java_api {

namespace java::lang { class String; }
namespace java::util::regex { class Pattern_CharPredicate; }

namespace java::util::regex {

// private
class CharPredicates : public object_base<SCAPIX_META_STRING("java/util/regex/CharPredicates"),
	java::lang::Object>
{
public:

	static ref<java::util::regex::Pattern_CharPredicate> forUnicodeProperty(ref<java::lang::String> propName);
	static ref<java::util::regex::Pattern_CharPredicate> forPOSIXName(ref<java::lang::String> propName);

protected:

	CharPredicates(handle_type h) : base_(h) {}

};

} // namespace java::util::regex
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/regex/Pattern_CharPredicate.h>

namespace scapix::java_api {
namespace java::util::regex {

inline ref<java::util::regex::Pattern_CharPredicate> CharPredicates::forUnicodeProperty(ref<java::lang::String> propName) { return call_static_method<SCAPIX_META_STRING("forUnicodeProperty"), ref<java::util::regex::Pattern_CharPredicate>>(propName); }
inline ref<java::util::regex::Pattern_CharPredicate> CharPredicates::forPOSIXName(ref<java::lang::String> propName) { return call_static_method<SCAPIX_META_STRING("forPOSIXName"), ref<java::util::regex::Pattern_CharPredicate>>(propName); }

} // namespace java::util::regex
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_UTIL_REGEX_CHARPREDICATES_H
