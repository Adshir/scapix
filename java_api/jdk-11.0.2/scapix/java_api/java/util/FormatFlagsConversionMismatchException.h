// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/util/IllegalFormatException.h>

#ifndef SCAPIX_JAVA_UTIL_FORMATFLAGSCONVERSIONMISMATCHEXCEPTION_H
#define SCAPIX_JAVA_UTIL_FORMATFLAGSCONVERSIONMISMATCHEXCEPTION_H

namespace scapix::java_api {

namespace java::lang { class String; }

namespace java::util {

class FormatFlagsConversionMismatchException : public object_base<SCAPIX_META_STRING("java/util/FormatFlagsConversionMismatchException"),
	java::util::IllegalFormatException>
{
public:

	static ref<FormatFlagsConversionMismatchException> new_object(ref<java::lang::String> f, jchar c);
	ref<java::lang::String> getFlags();
	jchar getConversion();
	ref<java::lang::String> getMessage();

protected:

	FormatFlagsConversionMismatchException(handle_type h) : base_(h) {}

};

} // namespace java::util
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace java::util {

inline ref<FormatFlagsConversionMismatchException> FormatFlagsConversionMismatchException::new_object(ref<java::lang::String> f, jchar c) { return base_::new_object(f, c); }
inline ref<java::lang::String> FormatFlagsConversionMismatchException::getFlags() { return call_method<SCAPIX_META_STRING("getFlags"), ref<java::lang::String>>(); }
inline jchar FormatFlagsConversionMismatchException::getConversion() { return call_method<SCAPIX_META_STRING("getConversion"), jchar>(); }
inline ref<java::lang::String> FormatFlagsConversionMismatchException::getMessage() { return call_method<SCAPIX_META_STRING("getMessage"), ref<java::lang::String>>(); }

} // namespace java::util
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_UTIL_FORMATFLAGSCONVERSIONMISMATCHEXCEPTION_H
