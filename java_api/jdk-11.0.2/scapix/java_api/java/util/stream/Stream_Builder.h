// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/util/function/Consumer.h>

#ifndef SCAPIX_JAVA_UTIL_STREAM_STREAM_BUILDER_H
#define SCAPIX_JAVA_UTIL_STREAM_STREAM_BUILDER_H

namespace scapix::java_api {

namespace java::util::stream { class Stream; }

namespace java::util::stream {

class Stream_Builder : public object_base<SCAPIX_META_STRING("java/util/stream/Stream$Builder"),
	java::lang::Object,
	java::util::function::Consumer>
{
public:

	void accept(ref<java::lang::Object> p1);
	ref<java::util::stream::Stream_Builder> add(ref<java::lang::Object> t);
	ref<java::util::stream::Stream> build();

protected:

	Stream_Builder(handle_type h) : base_(h) {}

};

} // namespace java::util::stream
} // namespace scapix::java_api

#include <scapix/java_api/java/util/stream/Stream.h>

namespace scapix::java_api {
namespace java::util::stream {

inline void Stream_Builder::accept(ref<java::lang::Object> p1) { return call_method<SCAPIX_META_STRING("accept"), void>(p1); }
inline ref<java::util::stream::Stream_Builder> Stream_Builder::add(ref<java::lang::Object> t) { return call_method<SCAPIX_META_STRING("add"), ref<java::util::stream::Stream_Builder>>(t); }
inline ref<java::util::stream::Stream> Stream_Builder::build() { return call_method<SCAPIX_META_STRING("build"), ref<java::util::stream::Stream>>(); }

} // namespace java::util::stream
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_UTIL_STREAM_STREAM_BUILDER_H
