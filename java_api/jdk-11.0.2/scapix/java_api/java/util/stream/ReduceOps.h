// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_UTIL_STREAM_REDUCEOPS_H
#define SCAPIX_JAVA_UTIL_STREAM_REDUCEOPS_H

namespace scapix::java_api {

namespace java::util::function { class BiConsumer; }
namespace java::util::function { class BiFunction; }
namespace java::util::function { class BinaryOperator; }
namespace java::util::function { class DoubleBinaryOperator; }
namespace java::util::function { class IntBinaryOperator; }
namespace java::util::function { class LongBinaryOperator; }
namespace java::util::function { class ObjDoubleConsumer; }
namespace java::util::function { class ObjIntConsumer; }
namespace java::util::function { class ObjLongConsumer; }
namespace java::util::function { class Supplier; }
namespace java::util::stream { class Collector; }
namespace java::util::stream { class TerminalOp; }

namespace java::util::stream {

// private
class ReduceOps : public object_base<SCAPIX_META_STRING("java/util/stream/ReduceOps"),
	java::lang::Object>
{
public:

	static ref<java::util::stream::TerminalOp> makeRef(ref<java::lang::Object> seed, ref<java::util::function::BiFunction> reducer, ref<java::util::function::BinaryOperator> combiner);
	static ref<java::util::stream::TerminalOp> makeRef(ref<java::util::function::BinaryOperator> operator_);
	static ref<java::util::stream::TerminalOp> makeRef(ref<java::util::stream::Collector> collector);
	static ref<java::util::stream::TerminalOp> makeRef(ref<java::util::function::Supplier> seedFactory, ref<java::util::function::BiConsumer> accumulator, ref<java::util::function::BiConsumer> reducer);
	static ref<java::util::stream::TerminalOp> makeRefCounting();
	static ref<java::util::stream::TerminalOp> makeInt(jint identity, ref<java::util::function::IntBinaryOperator> operator_);
	static ref<java::util::stream::TerminalOp> makeInt(ref<java::util::function::IntBinaryOperator> operator_);
	static ref<java::util::stream::TerminalOp> makeInt(ref<java::util::function::Supplier> supplier, ref<java::util::function::ObjIntConsumer> accumulator, ref<java::util::function::BinaryOperator> combiner);
	static ref<java::util::stream::TerminalOp> makeIntCounting();
	static ref<java::util::stream::TerminalOp> makeLong(jlong identity, ref<java::util::function::LongBinaryOperator> p2);
	static ref<java::util::stream::TerminalOp> makeLong(ref<java::util::function::LongBinaryOperator> operator_);
	static ref<java::util::stream::TerminalOp> makeLong(ref<java::util::function::Supplier> supplier, ref<java::util::function::ObjLongConsumer> accumulator, ref<java::util::function::BinaryOperator> combiner);
	static ref<java::util::stream::TerminalOp> makeLongCounting();
	static ref<java::util::stream::TerminalOp> makeDouble(jdouble identity, ref<java::util::function::DoubleBinaryOperator> p2);
	static ref<java::util::stream::TerminalOp> makeDouble(ref<java::util::function::DoubleBinaryOperator> operator_);
	static ref<java::util::stream::TerminalOp> makeDouble(ref<java::util::function::Supplier> supplier, ref<java::util::function::ObjDoubleConsumer> accumulator, ref<java::util::function::BinaryOperator> combiner);
	static ref<java::util::stream::TerminalOp> makeDoubleCounting();

protected:

	ReduceOps(handle_type h) : base_(h) {}

};

} // namespace java::util::stream
} // namespace scapix::java_api

#include <scapix/java_api/java/util/function/BiConsumer.h>
#include <scapix/java_api/java/util/function/BiFunction.h>
#include <scapix/java_api/java/util/function/BinaryOperator.h>
#include <scapix/java_api/java/util/function/DoubleBinaryOperator.h>
#include <scapix/java_api/java/util/function/IntBinaryOperator.h>
#include <scapix/java_api/java/util/function/LongBinaryOperator.h>
#include <scapix/java_api/java/util/function/ObjDoubleConsumer.h>
#include <scapix/java_api/java/util/function/ObjIntConsumer.h>
#include <scapix/java_api/java/util/function/ObjLongConsumer.h>
#include <scapix/java_api/java/util/function/Supplier.h>
#include <scapix/java_api/java/util/stream/Collector.h>
#include <scapix/java_api/java/util/stream/TerminalOp.h>

namespace scapix::java_api {
namespace java::util::stream {

inline ref<java::util::stream::TerminalOp> ReduceOps::makeRef(ref<java::lang::Object> seed, ref<java::util::function::BiFunction> reducer, ref<java::util::function::BinaryOperator> combiner) { return call_static_method<SCAPIX_META_STRING("makeRef"), ref<java::util::stream::TerminalOp>>(seed, reducer, combiner); }
inline ref<java::util::stream::TerminalOp> ReduceOps::makeRef(ref<java::util::function::BinaryOperator> operator_) { return call_static_method<SCAPIX_META_STRING("makeRef"), ref<java::util::stream::TerminalOp>>(operator_); }
inline ref<java::util::stream::TerminalOp> ReduceOps::makeRef(ref<java::util::stream::Collector> collector) { return call_static_method<SCAPIX_META_STRING("makeRef"), ref<java::util::stream::TerminalOp>>(collector); }
inline ref<java::util::stream::TerminalOp> ReduceOps::makeRef(ref<java::util::function::Supplier> seedFactory, ref<java::util::function::BiConsumer> accumulator, ref<java::util::function::BiConsumer> reducer) { return call_static_method<SCAPIX_META_STRING("makeRef"), ref<java::util::stream::TerminalOp>>(seedFactory, accumulator, reducer); }
inline ref<java::util::stream::TerminalOp> ReduceOps::makeRefCounting() { return call_static_method<SCAPIX_META_STRING("makeRefCounting"), ref<java::util::stream::TerminalOp>>(); }
inline ref<java::util::stream::TerminalOp> ReduceOps::makeInt(jint identity, ref<java::util::function::IntBinaryOperator> operator_) { return call_static_method<SCAPIX_META_STRING("makeInt"), ref<java::util::stream::TerminalOp>>(identity, operator_); }
inline ref<java::util::stream::TerminalOp> ReduceOps::makeInt(ref<java::util::function::IntBinaryOperator> operator_) { return call_static_method<SCAPIX_META_STRING("makeInt"), ref<java::util::stream::TerminalOp>>(operator_); }
inline ref<java::util::stream::TerminalOp> ReduceOps::makeInt(ref<java::util::function::Supplier> supplier, ref<java::util::function::ObjIntConsumer> accumulator, ref<java::util::function::BinaryOperator> combiner) { return call_static_method<SCAPIX_META_STRING("makeInt"), ref<java::util::stream::TerminalOp>>(supplier, accumulator, combiner); }
inline ref<java::util::stream::TerminalOp> ReduceOps::makeIntCounting() { return call_static_method<SCAPIX_META_STRING("makeIntCounting"), ref<java::util::stream::TerminalOp>>(); }
inline ref<java::util::stream::TerminalOp> ReduceOps::makeLong(jlong identity, ref<java::util::function::LongBinaryOperator> p2) { return call_static_method<SCAPIX_META_STRING("makeLong"), ref<java::util::stream::TerminalOp>>(identity, p2); }
inline ref<java::util::stream::TerminalOp> ReduceOps::makeLong(ref<java::util::function::LongBinaryOperator> operator_) { return call_static_method<SCAPIX_META_STRING("makeLong"), ref<java::util::stream::TerminalOp>>(operator_); }
inline ref<java::util::stream::TerminalOp> ReduceOps::makeLong(ref<java::util::function::Supplier> supplier, ref<java::util::function::ObjLongConsumer> accumulator, ref<java::util::function::BinaryOperator> combiner) { return call_static_method<SCAPIX_META_STRING("makeLong"), ref<java::util::stream::TerminalOp>>(supplier, accumulator, combiner); }
inline ref<java::util::stream::TerminalOp> ReduceOps::makeLongCounting() { return call_static_method<SCAPIX_META_STRING("makeLongCounting"), ref<java::util::stream::TerminalOp>>(); }
inline ref<java::util::stream::TerminalOp> ReduceOps::makeDouble(jdouble identity, ref<java::util::function::DoubleBinaryOperator> p2) { return call_static_method<SCAPIX_META_STRING("makeDouble"), ref<java::util::stream::TerminalOp>>(identity, p2); }
inline ref<java::util::stream::TerminalOp> ReduceOps::makeDouble(ref<java::util::function::DoubleBinaryOperator> operator_) { return call_static_method<SCAPIX_META_STRING("makeDouble"), ref<java::util::stream::TerminalOp>>(operator_); }
inline ref<java::util::stream::TerminalOp> ReduceOps::makeDouble(ref<java::util::function::Supplier> supplier, ref<java::util::function::ObjDoubleConsumer> accumulator, ref<java::util::function::BinaryOperator> combiner) { return call_static_method<SCAPIX_META_STRING("makeDouble"), ref<java::util::stream::TerminalOp>>(supplier, accumulator, combiner); }
inline ref<java::util::stream::TerminalOp> ReduceOps::makeDoubleCounting() { return call_static_method<SCAPIX_META_STRING("makeDoubleCounting"), ref<java::util::stream::TerminalOp>>(); }

} // namespace java::util::stream
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_UTIL_STREAM_REDUCEOPS_H
