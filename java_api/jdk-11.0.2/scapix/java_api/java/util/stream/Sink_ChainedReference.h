// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/util/stream/Sink.h>

#ifndef SCAPIX_JAVA_UTIL_STREAM_SINK_CHAINEDREFERENCE_H
#define SCAPIX_JAVA_UTIL_STREAM_SINK_CHAINEDREFERENCE_H

namespace scapix::java_api {


namespace java::util::stream {

class Sink_ChainedReference : public object_base<SCAPIX_META_STRING("java/util/stream/Sink$ChainedReference"),
	java::lang::Object,
	java::util::stream::Sink>
{
public:

	static ref<Sink_ChainedReference> new_object(ref<java::util::stream::Sink> downstream);
	void begin(jlong size);
	void end();
	jboolean cancellationRequested();

protected:

	Sink_ChainedReference(handle_type h) : base_(h) {}

};

} // namespace java::util::stream
} // namespace scapix::java_api


namespace scapix::java_api {
namespace java::util::stream {

inline ref<Sink_ChainedReference> Sink_ChainedReference::new_object(ref<java::util::stream::Sink> downstream) { return base_::new_object(downstream); }
inline void Sink_ChainedReference::begin(jlong size) { return call_method<SCAPIX_META_STRING("begin"), void>(size); }
inline void Sink_ChainedReference::end() { return call_method<SCAPIX_META_STRING("end"), void>(); }
inline jboolean Sink_ChainedReference::cancellationRequested() { return call_method<SCAPIX_META_STRING("cancellationRequested"), jboolean>(); }

} // namespace java::util::stream
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_UTIL_STREAM_SINK_CHAINEDREFERENCE_H
