// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_UTIL_STREAM_FOREACHOPS_H
#define SCAPIX_JAVA_UTIL_STREAM_FOREACHOPS_H

namespace scapix::java_api {

namespace java::util::function { class Consumer; }
namespace java::util::function { class DoubleConsumer; }
namespace java::util::function { class IntConsumer; }
namespace java::util::function { class LongConsumer; }
namespace java::util::stream { class TerminalOp; }

namespace java::util::stream {

// private
class ForEachOps : public object_base<SCAPIX_META_STRING("java/util/stream/ForEachOps"),
	java::lang::Object>
{
public:

	static ref<java::util::stream::TerminalOp> makeRef(ref<java::util::function::Consumer> action, jboolean ordered);
	static ref<java::util::stream::TerminalOp> makeInt(ref<java::util::function::IntConsumer> action, jboolean ordered);
	static ref<java::util::stream::TerminalOp> makeLong(ref<java::util::function::LongConsumer> action, jboolean ordered);
	static ref<java::util::stream::TerminalOp> makeDouble(ref<java::util::function::DoubleConsumer> action, jboolean ordered);

protected:

	ForEachOps(handle_type h) : base_(h) {}

};

} // namespace java::util::stream
} // namespace scapix::java_api

#include <scapix/java_api/java/util/function/Consumer.h>
#include <scapix/java_api/java/util/function/DoubleConsumer.h>
#include <scapix/java_api/java/util/function/IntConsumer.h>
#include <scapix/java_api/java/util/function/LongConsumer.h>
#include <scapix/java_api/java/util/stream/TerminalOp.h>

namespace scapix::java_api {
namespace java::util::stream {

inline ref<java::util::stream::TerminalOp> ForEachOps::makeRef(ref<java::util::function::Consumer> action, jboolean ordered) { return call_static_method<SCAPIX_META_STRING("makeRef"), ref<java::util::stream::TerminalOp>>(action, ordered); }
inline ref<java::util::stream::TerminalOp> ForEachOps::makeInt(ref<java::util::function::IntConsumer> action, jboolean ordered) { return call_static_method<SCAPIX_META_STRING("makeInt"), ref<java::util::stream::TerminalOp>>(action, ordered); }
inline ref<java::util::stream::TerminalOp> ForEachOps::makeLong(ref<java::util::function::LongConsumer> action, jboolean ordered) { return call_static_method<SCAPIX_META_STRING("makeLong"), ref<java::util::stream::TerminalOp>>(action, ordered); }
inline ref<java::util::stream::TerminalOp> ForEachOps::makeDouble(ref<java::util::function::DoubleConsumer> action, jboolean ordered) { return call_static_method<SCAPIX_META_STRING("makeDouble"), ref<java::util::stream::TerminalOp>>(action, ordered); }

} // namespace java::util::stream
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_UTIL_STREAM_FOREACHOPS_H
