// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/util/function/IntConsumer.h>

#ifndef SCAPIX_JAVA_UTIL_STREAM_INTSTREAM_BUILDER_H
#define SCAPIX_JAVA_UTIL_STREAM_INTSTREAM_BUILDER_H

namespace scapix::java_api {

namespace java::util::stream { class IntStream; }

namespace java::util::stream {

class IntStream_Builder : public object_base<SCAPIX_META_STRING("java/util/stream/IntStream$Builder"),
	java::lang::Object,
	java::util::function::IntConsumer>
{
public:

	void accept(jint p1);
	ref<java::util::stream::IntStream_Builder> add(jint t);
	ref<java::util::stream::IntStream> build();

protected:

	IntStream_Builder(handle_type h) : base_(h) {}

};

} // namespace java::util::stream
} // namespace scapix::java_api

#include <scapix/java_api/java/util/stream/IntStream.h>

namespace scapix::java_api {
namespace java::util::stream {

inline void IntStream_Builder::accept(jint p1) { return call_method<SCAPIX_META_STRING("accept"), void>(p1); }
inline ref<java::util::stream::IntStream_Builder> IntStream_Builder::add(jint t) { return call_method<SCAPIX_META_STRING("add"), ref<java::util::stream::IntStream_Builder>>(t); }
inline ref<java::util::stream::IntStream> IntStream_Builder::build() { return call_method<SCAPIX_META_STRING("build"), ref<java::util::stream::IntStream>>(); }

} // namespace java::util::stream
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_UTIL_STREAM_INTSTREAM_BUILDER_H
