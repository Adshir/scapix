// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/util/function/BiFunction.h>

#ifndef SCAPIX_JAVA_UTIL_FUNCTION_BINARYOPERATOR_H
#define SCAPIX_JAVA_UTIL_FUNCTION_BINARYOPERATOR_H

namespace scapix::java_api {

namespace java::util { class Comparator; }

namespace java::util::function {

class BinaryOperator : public object_base<SCAPIX_META_STRING("java/util/function/BinaryOperator"),
	java::lang::Object,
	java::util::function::BiFunction>
{
public:

	static ref<java::util::function::BinaryOperator> minBy(ref<java::util::Comparator> comparator);
	static ref<java::util::function::BinaryOperator> maxBy(ref<java::util::Comparator> comparator);

protected:

	BinaryOperator(handle_type h) : base_(h) {}

};

} // namespace java::util::function
} // namespace scapix::java_api

#include <scapix/java_api/java/util/Comparator.h>

namespace scapix::java_api {
namespace java::util::function {

inline ref<java::util::function::BinaryOperator> BinaryOperator::minBy(ref<java::util::Comparator> comparator) { return call_static_method<SCAPIX_META_STRING("minBy"), ref<java::util::function::BinaryOperator>>(comparator); }
inline ref<java::util::function::BinaryOperator> BinaryOperator::maxBy(ref<java::util::Comparator> comparator) { return call_static_method<SCAPIX_META_STRING("maxBy"), ref<java::util::function::BinaryOperator>>(comparator); }

} // namespace java::util::function
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_UTIL_FUNCTION_BINARYOPERATOR_H
