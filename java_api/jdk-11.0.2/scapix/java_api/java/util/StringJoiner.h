// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_UTIL_STRINGJOINER_H
#define SCAPIX_JAVA_UTIL_STRINGJOINER_H

namespace scapix::java_api {

namespace java::lang { class CharSequence; }
namespace java::lang { class String; }

namespace java::util {

class StringJoiner : public object_base<SCAPIX_META_STRING("java/util/StringJoiner"),
	java::lang::Object>
{
public:

	static ref<StringJoiner> new_object(ref<java::lang::CharSequence> delimiter);
	static ref<StringJoiner> new_object(ref<java::lang::CharSequence> delimiter, ref<java::lang::CharSequence> prefix, ref<java::lang::CharSequence> suffix);
	ref<java::util::StringJoiner> setEmptyValue(ref<java::lang::CharSequence> emptyValue);
	ref<java::lang::String> toString();
	ref<java::util::StringJoiner> add(ref<java::lang::CharSequence> newElement);
	ref<java::util::StringJoiner> merge(ref<java::util::StringJoiner> other);
	jint length();

protected:

	StringJoiner(handle_type h) : base_(h) {}

};

} // namespace java::util
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace java::util {

inline ref<StringJoiner> StringJoiner::new_object(ref<java::lang::CharSequence> delimiter) { return base_::new_object(delimiter); }
inline ref<StringJoiner> StringJoiner::new_object(ref<java::lang::CharSequence> delimiter, ref<java::lang::CharSequence> prefix, ref<java::lang::CharSequence> suffix) { return base_::new_object(delimiter, prefix, suffix); }
inline ref<java::util::StringJoiner> StringJoiner::setEmptyValue(ref<java::lang::CharSequence> emptyValue) { return call_method<SCAPIX_META_STRING("setEmptyValue"), ref<java::util::StringJoiner>>(emptyValue); }
inline ref<java::lang::String> StringJoiner::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }
inline ref<java::util::StringJoiner> StringJoiner::add(ref<java::lang::CharSequence> newElement) { return call_method<SCAPIX_META_STRING("add"), ref<java::util::StringJoiner>>(newElement); }
inline ref<java::util::StringJoiner> StringJoiner::merge(ref<java::util::StringJoiner> other) { return call_method<SCAPIX_META_STRING("merge"), ref<java::util::StringJoiner>>(other); }
inline jint StringJoiner::length() { return call_method<SCAPIX_META_STRING("length"), jint>(); }

} // namespace java::util
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_UTIL_STRINGJOINER_H
