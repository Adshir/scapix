// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/util/EnumSet.h>

#ifndef SCAPIX_JAVA_UTIL_JUMBOENUMSET_H
#define SCAPIX_JAVA_UTIL_JUMBOENUMSET_H

namespace scapix::java_api {

namespace java::lang { class Enum; }
namespace java::lang { class Object; }
namespace java::util { class Collection; }
namespace java::util { class Iterator; }

namespace java::util {

// private
class JumboEnumSet : public object_base<SCAPIX_META_STRING("java/util/JumboEnumSet"),
	java::util::EnumSet>
{
public:

	ref<java::util::Iterator> iterator();
	jint size();
	jboolean isEmpty();
	jboolean contains(ref<java::lang::Object> e);
	jboolean add(ref<java::lang::Enum> e);
	jboolean remove(ref<java::lang::Object> e);
	jboolean containsAll(ref<java::util::Collection> c);
	jboolean addAll(ref<java::util::Collection> c);
	jboolean removeAll(ref<java::util::Collection> c);
	jboolean retainAll(ref<java::util::Collection> c);
	void clear();
	jboolean equals(ref<java::lang::Object> o);
	ref<java::util::EnumSet> clone();

protected:

	JumboEnumSet(handle_type h) : base_(h) {}

};

} // namespace java::util
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/Enum.h>
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/util/Collection.h>
#include <scapix/java_api/java/util/Iterator.h>

namespace scapix::java_api {
namespace java::util {

inline ref<java::util::Iterator> JumboEnumSet::iterator() { return call_method<SCAPIX_META_STRING("iterator"), ref<java::util::Iterator>>(); }
inline jint JumboEnumSet::size() { return call_method<SCAPIX_META_STRING("size"), jint>(); }
inline jboolean JumboEnumSet::isEmpty() { return call_method<SCAPIX_META_STRING("isEmpty"), jboolean>(); }
inline jboolean JumboEnumSet::contains(ref<java::lang::Object> e) { return call_method<SCAPIX_META_STRING("contains"), jboolean>(e); }
inline jboolean JumboEnumSet::add(ref<java::lang::Enum> e) { return call_method<SCAPIX_META_STRING("add"), jboolean>(e); }
inline jboolean JumboEnumSet::remove(ref<java::lang::Object> e) { return call_method<SCAPIX_META_STRING("remove"), jboolean>(e); }
inline jboolean JumboEnumSet::containsAll(ref<java::util::Collection> c) { return call_method<SCAPIX_META_STRING("containsAll"), jboolean>(c); }
inline jboolean JumboEnumSet::addAll(ref<java::util::Collection> c) { return call_method<SCAPIX_META_STRING("addAll"), jboolean>(c); }
inline jboolean JumboEnumSet::removeAll(ref<java::util::Collection> c) { return call_method<SCAPIX_META_STRING("removeAll"), jboolean>(c); }
inline jboolean JumboEnumSet::retainAll(ref<java::util::Collection> c) { return call_method<SCAPIX_META_STRING("retainAll"), jboolean>(c); }
inline void JumboEnumSet::clear() { return call_method<SCAPIX_META_STRING("clear"), void>(); }
inline jboolean JumboEnumSet::equals(ref<java::lang::Object> o) { return call_method<SCAPIX_META_STRING("equals"), jboolean>(o); }
inline ref<java::util::EnumSet> JumboEnumSet::clone() { return call_method<SCAPIX_META_STRING("clone"), ref<java::util::EnumSet>>(); }

} // namespace java::util
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_UTIL_JUMBOENUMSET_H
