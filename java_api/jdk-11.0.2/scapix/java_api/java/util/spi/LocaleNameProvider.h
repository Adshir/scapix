// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/util/spi/LocaleServiceProvider.h>

#ifndef SCAPIX_JAVA_UTIL_SPI_LOCALENAMEPROVIDER_H
#define SCAPIX_JAVA_UTIL_SPI_LOCALENAMEPROVIDER_H

namespace scapix::java_api {

namespace java::lang { class String; }
namespace java::util { class Locale; }

namespace java::util::spi {

class LocaleNameProvider : public object_base<SCAPIX_META_STRING("java/util/spi/LocaleNameProvider"),
	java::util::spi::LocaleServiceProvider>
{
public:

	ref<java::lang::String> getDisplayLanguage(ref<java::lang::String> p1, ref<java::util::Locale> p2);
	ref<java::lang::String> getDisplayScript(ref<java::lang::String> scriptCode, ref<java::util::Locale> locale);
	ref<java::lang::String> getDisplayCountry(ref<java::lang::String> p1, ref<java::util::Locale> p2);
	ref<java::lang::String> getDisplayVariant(ref<java::lang::String> p1, ref<java::util::Locale> p2);
	ref<java::lang::String> getDisplayUnicodeExtensionKey(ref<java::lang::String> key, ref<java::util::Locale> locale);
	ref<java::lang::String> getDisplayUnicodeExtensionType(ref<java::lang::String> type, ref<java::lang::String> key, ref<java::util::Locale> locale);

protected:

	LocaleNameProvider(handle_type h) : base_(h) {}

};

} // namespace java::util::spi
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Locale.h>

namespace scapix::java_api {
namespace java::util::spi {

inline ref<java::lang::String> LocaleNameProvider::getDisplayLanguage(ref<java::lang::String> p1, ref<java::util::Locale> p2) { return call_method<SCAPIX_META_STRING("getDisplayLanguage"), ref<java::lang::String>>(p1, p2); }
inline ref<java::lang::String> LocaleNameProvider::getDisplayScript(ref<java::lang::String> scriptCode, ref<java::util::Locale> locale) { return call_method<SCAPIX_META_STRING("getDisplayScript"), ref<java::lang::String>>(scriptCode, locale); }
inline ref<java::lang::String> LocaleNameProvider::getDisplayCountry(ref<java::lang::String> p1, ref<java::util::Locale> p2) { return call_method<SCAPIX_META_STRING("getDisplayCountry"), ref<java::lang::String>>(p1, p2); }
inline ref<java::lang::String> LocaleNameProvider::getDisplayVariant(ref<java::lang::String> p1, ref<java::util::Locale> p2) { return call_method<SCAPIX_META_STRING("getDisplayVariant"), ref<java::lang::String>>(p1, p2); }
inline ref<java::lang::String> LocaleNameProvider::getDisplayUnicodeExtensionKey(ref<java::lang::String> key, ref<java::util::Locale> locale) { return call_method<SCAPIX_META_STRING("getDisplayUnicodeExtensionKey"), ref<java::lang::String>>(key, locale); }
inline ref<java::lang::String> LocaleNameProvider::getDisplayUnicodeExtensionType(ref<java::lang::String> type, ref<java::lang::String> key, ref<java::util::Locale> locale) { return call_method<SCAPIX_META_STRING("getDisplayUnicodeExtensionType"), ref<java::lang::String>>(type, key, locale); }

} // namespace java::util::spi
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_UTIL_SPI_LOCALENAMEPROVIDER_H
