// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_LANG_WEAKPAIRMAP_H
#define SCAPIX_JAVA_LANG_WEAKPAIRMAP_H

namespace scapix::java_api {

namespace java::util { class Collection; }
namespace java::util::function { class BiFunction; }

namespace java::lang {

// private
class WeakPairMap : public object_base<SCAPIX_META_STRING("java/lang/WeakPairMap"),
	java::lang::Object>
{
public:

	jboolean containsKeyPair(ref<java::lang::Object> k1, ref<java::lang::Object> k2);
	ref<java::lang::Object> get(ref<java::lang::Object> k1, ref<java::lang::Object> k2);
	ref<java::lang::Object> put(ref<java::lang::Object> k1, ref<java::lang::Object> k2, ref<java::lang::Object> v);
	ref<java::lang::Object> putIfAbsent(ref<java::lang::Object> k1, ref<java::lang::Object> k2, ref<java::lang::Object> v);
	ref<java::lang::Object> computeIfAbsent(ref<java::lang::Object> k1, ref<java::lang::Object> k2, ref<java::util::function::BiFunction> mappingFunction);
	ref<java::util::Collection> values();

protected:

	WeakPairMap(handle_type h) : base_(h) {}

};

} // namespace java::lang
} // namespace scapix::java_api

#include <scapix/java_api/java/util/Collection.h>
#include <scapix/java_api/java/util/function/BiFunction.h>

namespace scapix::java_api {
namespace java::lang {

inline jboolean WeakPairMap::containsKeyPair(ref<java::lang::Object> k1, ref<java::lang::Object> k2) { return call_method<SCAPIX_META_STRING("containsKeyPair"), jboolean>(k1, k2); }
inline ref<java::lang::Object> WeakPairMap::get(ref<java::lang::Object> k1, ref<java::lang::Object> k2) { return call_method<SCAPIX_META_STRING("get"), ref<java::lang::Object>>(k1, k2); }
inline ref<java::lang::Object> WeakPairMap::put(ref<java::lang::Object> k1, ref<java::lang::Object> k2, ref<java::lang::Object> v) { return call_method<SCAPIX_META_STRING("put"), ref<java::lang::Object>>(k1, k2, v); }
inline ref<java::lang::Object> WeakPairMap::putIfAbsent(ref<java::lang::Object> k1, ref<java::lang::Object> k2, ref<java::lang::Object> v) { return call_method<SCAPIX_META_STRING("putIfAbsent"), ref<java::lang::Object>>(k1, k2, v); }
inline ref<java::lang::Object> WeakPairMap::computeIfAbsent(ref<java::lang::Object> k1, ref<java::lang::Object> k2, ref<java::util::function::BiFunction> mappingFunction) { return call_method<SCAPIX_META_STRING("computeIfAbsent"), ref<java::lang::Object>>(k1, k2, mappingFunction); }
inline ref<java::util::Collection> WeakPairMap::values() { return call_method<SCAPIX_META_STRING("values"), ref<java::util::Collection>>(); }

} // namespace java::lang
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_LANG_WEAKPAIRMAP_H
