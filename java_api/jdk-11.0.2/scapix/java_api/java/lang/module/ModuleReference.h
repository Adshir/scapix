// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_LANG_MODULE_MODULEREFERENCE_H
#define SCAPIX_JAVA_LANG_MODULE_MODULEREFERENCE_H

namespace scapix::java_api {

namespace java::lang::module { class ModuleDescriptor; }
namespace java::lang::module { class ModuleReader; }
namespace java::util { class Optional; }

namespace java::lang::module {

class ModuleReference : public object_base<SCAPIX_META_STRING("java/lang/module/ModuleReference"),
	java::lang::Object>
{
public:

	ref<java::lang::module::ModuleDescriptor> descriptor();
	ref<java::util::Optional> location();
	ref<java::lang::module::ModuleReader> open();

protected:

	ModuleReference(handle_type h) : base_(h) {}

};

} // namespace java::lang::module
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/module/ModuleDescriptor.h>
#include <scapix/java_api/java/lang/module/ModuleReader.h>
#include <scapix/java_api/java/util/Optional.h>

namespace scapix::java_api {
namespace java::lang::module {

inline ref<java::lang::module::ModuleDescriptor> ModuleReference::descriptor() { return call_method<SCAPIX_META_STRING("descriptor"), ref<java::lang::module::ModuleDescriptor>>(); }
inline ref<java::util::Optional> ModuleReference::location() { return call_method<SCAPIX_META_STRING("location"), ref<java::util::Optional>>(); }
inline ref<java::lang::module::ModuleReader> ModuleReference::open() { return call_method<SCAPIX_META_STRING("open"), ref<java::lang::module::ModuleReader>>(); }

} // namespace java::lang::module
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_LANG_MODULE_MODULEREFERENCE_H
