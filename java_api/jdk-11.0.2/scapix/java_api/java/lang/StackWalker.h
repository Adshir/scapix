// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_LANG_STACKWALKER_H
#define SCAPIX_JAVA_LANG_STACKWALKER_H

namespace scapix::java_api {

namespace java::lang { class Class; }
namespace java::lang { class StackWalker_Option; }
namespace java::util { class Set; }
namespace java::util::function { class Consumer; }
namespace java::util::function { class Function; }
namespace java::lang { class StackWalker_StackFrame; }

namespace java::lang {

class StackWalker : public object_base<SCAPIX_META_STRING("java/lang/StackWalker"),
	java::lang::Object>
{
public:

	using Option = StackWalker_Option;
	using StackFrame = StackWalker_StackFrame;

	static ref<java::lang::StackWalker> getInstance();
	static ref<java::lang::StackWalker> getInstance(ref<java::lang::StackWalker_Option> option);
	static ref<java::lang::StackWalker> getInstance(ref<java::util::Set> options);
	static ref<java::lang::StackWalker> getInstance(ref<java::util::Set> options, jint estimateDepth);
	ref<java::lang::Object> walk(ref<java::util::function::Function> function);
	void forEach(ref<java::util::function::Consumer> action);
	ref<java::lang::Class> getCallerClass();

protected:

	StackWalker(handle_type h) : base_(h) {}

};

} // namespace java::lang
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/Class.h>
#include <scapix/java_api/java/lang/StackWalker_Option.h>
#include <scapix/java_api/java/util/Set.h>
#include <scapix/java_api/java/util/function/Consumer.h>
#include <scapix/java_api/java/util/function/Function.h>

namespace scapix::java_api {
namespace java::lang {

inline ref<java::lang::StackWalker> StackWalker::getInstance() { return call_static_method<SCAPIX_META_STRING("getInstance"), ref<java::lang::StackWalker>>(); }
inline ref<java::lang::StackWalker> StackWalker::getInstance(ref<java::lang::StackWalker_Option> option) { return call_static_method<SCAPIX_META_STRING("getInstance"), ref<java::lang::StackWalker>>(option); }
inline ref<java::lang::StackWalker> StackWalker::getInstance(ref<java::util::Set> options) { return call_static_method<SCAPIX_META_STRING("getInstance"), ref<java::lang::StackWalker>>(options); }
inline ref<java::lang::StackWalker> StackWalker::getInstance(ref<java::util::Set> options, jint estimateDepth) { return call_static_method<SCAPIX_META_STRING("getInstance"), ref<java::lang::StackWalker>>(options, estimateDepth); }
inline ref<java::lang::Object> StackWalker::walk(ref<java::util::function::Function> function) { return call_method<SCAPIX_META_STRING("walk"), ref<java::lang::Object>>(function); }
inline void StackWalker::forEach(ref<java::util::function::Consumer> action) { return call_method<SCAPIX_META_STRING("forEach"), void>(action); }
inline ref<java::lang::Class> StackWalker::getCallerClass() { return call_method<SCAPIX_META_STRING("getCallerClass"), ref<java::lang::Class>>(); }

} // namespace java::lang
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_LANG_STACKWALKER_H
