// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/ReflectiveOperationException.h>

#ifndef SCAPIX_JAVA_LANG_REFLECT_INVOCATIONTARGETEXCEPTION_H
#define SCAPIX_JAVA_LANG_REFLECT_INVOCATIONTARGETEXCEPTION_H

namespace scapix::java_api {

namespace java::lang { class String; }
namespace java::lang { class Throwable; }

namespace java::lang::reflect {

class InvocationTargetException : public object_base<SCAPIX_META_STRING("java/lang/reflect/InvocationTargetException"),
	java::lang::ReflectiveOperationException>
{
public:

	static ref<InvocationTargetException> new_object(ref<java::lang::Throwable> target);
	static ref<InvocationTargetException> new_object(ref<java::lang::Throwable> target, ref<java::lang::String> s);
	ref<java::lang::Throwable> getTargetException();
	ref<java::lang::Throwable> getCause();

protected:

	InvocationTargetException(handle_type h) : base_(h) {}

};

} // namespace java::lang::reflect
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/lang/Throwable.h>

namespace scapix::java_api {
namespace java::lang::reflect {

inline ref<InvocationTargetException> InvocationTargetException::new_object(ref<java::lang::Throwable> target) { return base_::new_object(target); }
inline ref<InvocationTargetException> InvocationTargetException::new_object(ref<java::lang::Throwable> target, ref<java::lang::String> s) { return base_::new_object(target, s); }
inline ref<java::lang::Throwable> InvocationTargetException::getTargetException() { return call_method<SCAPIX_META_STRING("getTargetException"), ref<java::lang::Throwable>>(); }
inline ref<java::lang::Throwable> InvocationTargetException::getCause() { return call_method<SCAPIX_META_STRING("getCause"), ref<java::lang::Throwable>>(); }

} // namespace java::lang::reflect
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_LANG_REFLECT_INVOCATIONTARGETEXCEPTION_H
