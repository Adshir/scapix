// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_LANG_REFLECT_ARRAY_H
#define SCAPIX_JAVA_LANG_REFLECT_ARRAY_H

namespace scapix::java_api {

namespace java::lang { class Class; }

namespace java::lang::reflect {

class Array : public object_base<SCAPIX_META_STRING("java/lang/reflect/Array"),
	java::lang::Object>
{
public:

	static ref<java::lang::Object> newInstance(ref<java::lang::Class> componentType, jint length);
	static ref<java::lang::Object> newInstance(ref<java::lang::Class> componentType, ref<link::java::array<jint>> dimensions);
	static jint getLength(ref<java::lang::Object> p1);
	static ref<java::lang::Object> get(ref<java::lang::Object> p1, jint p2);
	static jboolean getBoolean(ref<java::lang::Object> p1, jint p2);
	static jbyte getByte(ref<java::lang::Object> p1, jint p2);
	static jchar getChar(ref<java::lang::Object> p1, jint p2);
	static jshort getShort(ref<java::lang::Object> p1, jint p2);
	static jint getInt(ref<java::lang::Object> p1, jint p2);
	static jlong getLong(ref<java::lang::Object> p1, jint p2);
	static jfloat getFloat(ref<java::lang::Object> p1, jint p2);
	static jdouble getDouble(ref<java::lang::Object> p1, jint p2);
	static void set(ref<java::lang::Object> p1, jint p2, ref<java::lang::Object> p3);
	static void setBoolean(ref<java::lang::Object> p1, jint p2, jboolean p3);
	static void setByte(ref<java::lang::Object> p1, jint p2, jbyte p3);
	static void setChar(ref<java::lang::Object> p1, jint p2, jchar p3);
	static void setShort(ref<java::lang::Object> p1, jint p2, jshort p3);
	static void setInt(ref<java::lang::Object> p1, jint p2, jint p3);
	static void setLong(ref<java::lang::Object> p1, jint p2, jlong p3);
	static void setFloat(ref<java::lang::Object> p1, jint p2, jfloat p3);
	static void setDouble(ref<java::lang::Object> p1, jint p2, jdouble p3);

protected:

	Array(handle_type h) : base_(h) {}

};

} // namespace java::lang::reflect
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/Class.h>

namespace scapix::java_api {
namespace java::lang::reflect {

inline ref<java::lang::Object> Array::newInstance(ref<java::lang::Class> componentType, jint length) { return call_static_method<SCAPIX_META_STRING("newInstance"), ref<java::lang::Object>>(componentType, length); }
inline ref<java::lang::Object> Array::newInstance(ref<java::lang::Class> componentType, ref<link::java::array<jint>> dimensions) { return call_static_method<SCAPIX_META_STRING("newInstance"), ref<java::lang::Object>>(componentType, dimensions); }
inline jint Array::getLength(ref<java::lang::Object> p1) { return call_static_method<SCAPIX_META_STRING("getLength"), jint>(p1); }
inline ref<java::lang::Object> Array::get(ref<java::lang::Object> p1, jint p2) { return call_static_method<SCAPIX_META_STRING("get"), ref<java::lang::Object>>(p1, p2); }
inline jboolean Array::getBoolean(ref<java::lang::Object> p1, jint p2) { return call_static_method<SCAPIX_META_STRING("getBoolean"), jboolean>(p1, p2); }
inline jbyte Array::getByte(ref<java::lang::Object> p1, jint p2) { return call_static_method<SCAPIX_META_STRING("getByte"), jbyte>(p1, p2); }
inline jchar Array::getChar(ref<java::lang::Object> p1, jint p2) { return call_static_method<SCAPIX_META_STRING("getChar"), jchar>(p1, p2); }
inline jshort Array::getShort(ref<java::lang::Object> p1, jint p2) { return call_static_method<SCAPIX_META_STRING("getShort"), jshort>(p1, p2); }
inline jint Array::getInt(ref<java::lang::Object> p1, jint p2) { return call_static_method<SCAPIX_META_STRING("getInt"), jint>(p1, p2); }
inline jlong Array::getLong(ref<java::lang::Object> p1, jint p2) { return call_static_method<SCAPIX_META_STRING("getLong"), jlong>(p1, p2); }
inline jfloat Array::getFloat(ref<java::lang::Object> p1, jint p2) { return call_static_method<SCAPIX_META_STRING("getFloat"), jfloat>(p1, p2); }
inline jdouble Array::getDouble(ref<java::lang::Object> p1, jint p2) { return call_static_method<SCAPIX_META_STRING("getDouble"), jdouble>(p1, p2); }
inline void Array::set(ref<java::lang::Object> p1, jint p2, ref<java::lang::Object> p3) { return call_static_method<SCAPIX_META_STRING("set"), void>(p1, p2, p3); }
inline void Array::setBoolean(ref<java::lang::Object> p1, jint p2, jboolean p3) { return call_static_method<SCAPIX_META_STRING("setBoolean"), void>(p1, p2, p3); }
inline void Array::setByte(ref<java::lang::Object> p1, jint p2, jbyte p3) { return call_static_method<SCAPIX_META_STRING("setByte"), void>(p1, p2, p3); }
inline void Array::setChar(ref<java::lang::Object> p1, jint p2, jchar p3) { return call_static_method<SCAPIX_META_STRING("setChar"), void>(p1, p2, p3); }
inline void Array::setShort(ref<java::lang::Object> p1, jint p2, jshort p3) { return call_static_method<SCAPIX_META_STRING("setShort"), void>(p1, p2, p3); }
inline void Array::setInt(ref<java::lang::Object> p1, jint p2, jint p3) { return call_static_method<SCAPIX_META_STRING("setInt"), void>(p1, p2, p3); }
inline void Array::setLong(ref<java::lang::Object> p1, jint p2, jlong p3) { return call_static_method<SCAPIX_META_STRING("setLong"), void>(p1, p2, p3); }
inline void Array::setFloat(ref<java::lang::Object> p1, jint p2, jfloat p3) { return call_static_method<SCAPIX_META_STRING("setFloat"), void>(p1, p2, p3); }
inline void Array::setDouble(ref<java::lang::Object> p1, jint p2, jdouble p3) { return call_static_method<SCAPIX_META_STRING("setDouble"), void>(p1, p2, p3); }

} // namespace java::lang::reflect
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_LANG_REFLECT_ARRAY_H
