// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Enum.h>

#ifndef SCAPIX_JAVA_LANG_ANNOTATION_ELEMENTTYPE_H
#define SCAPIX_JAVA_LANG_ANNOTATION_ELEMENTTYPE_H

namespace scapix::java_api {

namespace java::lang { class String; }

namespace java::lang::annotation {

class ElementType : public object_base<SCAPIX_META_STRING("java/lang/annotation/ElementType"),
	java::lang::Enum>
{
public:

	static ref<java::lang::annotation::ElementType> TYPE_();
	static ref<java::lang::annotation::ElementType> FIELD_();
	static ref<java::lang::annotation::ElementType> METHOD_();
	static ref<java::lang::annotation::ElementType> PARAMETER_();
	static ref<java::lang::annotation::ElementType> CONSTRUCTOR_();
	static ref<java::lang::annotation::ElementType> LOCAL_VARIABLE_();
	static ref<java::lang::annotation::ElementType> ANNOTATION_TYPE_();
	static ref<java::lang::annotation::ElementType> PACKAGE_();
	static ref<java::lang::annotation::ElementType> TYPE_PARAMETER_();
	static ref<java::lang::annotation::ElementType> TYPE_USE_();
	static ref<java::lang::annotation::ElementType> MODULE_();

	static ref<link::java::array<java::lang::annotation::ElementType>> values();
	static ref<java::lang::annotation::ElementType> valueOf(ref<java::lang::String> name);

protected:

	ElementType(handle_type h) : base_(h) {}

};

} // namespace java::lang::annotation
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace java::lang::annotation {

inline ref<java::lang::annotation::ElementType> ElementType::TYPE_() { return get_static_field<SCAPIX_META_STRING("TYPE"), ref<java::lang::annotation::ElementType>>(); }
inline ref<java::lang::annotation::ElementType> ElementType::FIELD_() { return get_static_field<SCAPIX_META_STRING("FIELD"), ref<java::lang::annotation::ElementType>>(); }
inline ref<java::lang::annotation::ElementType> ElementType::METHOD_() { return get_static_field<SCAPIX_META_STRING("METHOD"), ref<java::lang::annotation::ElementType>>(); }
inline ref<java::lang::annotation::ElementType> ElementType::PARAMETER_() { return get_static_field<SCAPIX_META_STRING("PARAMETER"), ref<java::lang::annotation::ElementType>>(); }
inline ref<java::lang::annotation::ElementType> ElementType::CONSTRUCTOR_() { return get_static_field<SCAPIX_META_STRING("CONSTRUCTOR"), ref<java::lang::annotation::ElementType>>(); }
inline ref<java::lang::annotation::ElementType> ElementType::LOCAL_VARIABLE_() { return get_static_field<SCAPIX_META_STRING("LOCAL_VARIABLE"), ref<java::lang::annotation::ElementType>>(); }
inline ref<java::lang::annotation::ElementType> ElementType::ANNOTATION_TYPE_() { return get_static_field<SCAPIX_META_STRING("ANNOTATION_TYPE"), ref<java::lang::annotation::ElementType>>(); }
inline ref<java::lang::annotation::ElementType> ElementType::PACKAGE_() { return get_static_field<SCAPIX_META_STRING("PACKAGE"), ref<java::lang::annotation::ElementType>>(); }
inline ref<java::lang::annotation::ElementType> ElementType::TYPE_PARAMETER_() { return get_static_field<SCAPIX_META_STRING("TYPE_PARAMETER"), ref<java::lang::annotation::ElementType>>(); }
inline ref<java::lang::annotation::ElementType> ElementType::TYPE_USE_() { return get_static_field<SCAPIX_META_STRING("TYPE_USE"), ref<java::lang::annotation::ElementType>>(); }
inline ref<java::lang::annotation::ElementType> ElementType::MODULE_() { return get_static_field<SCAPIX_META_STRING("MODULE"), ref<java::lang::annotation::ElementType>>(); }
inline ref<link::java::array<java::lang::annotation::ElementType>> ElementType::values() { return call_static_method<SCAPIX_META_STRING("values"), ref<link::java::array<java::lang::annotation::ElementType>>>(); }
inline ref<java::lang::annotation::ElementType> ElementType::valueOf(ref<java::lang::String> name) { return call_static_method<SCAPIX_META_STRING("valueOf"), ref<java::lang::annotation::ElementType>>(name); }

} // namespace java::lang::annotation
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_LANG_ANNOTATION_ELEMENTTYPE_H
