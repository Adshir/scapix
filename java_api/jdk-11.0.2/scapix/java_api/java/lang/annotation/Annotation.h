// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_LANG_ANNOTATION_ANNOTATION_H
#define SCAPIX_JAVA_LANG_ANNOTATION_ANNOTATION_H

namespace scapix::java_api {

namespace java::lang { class Class; }
namespace java::lang { class String; }

namespace java::lang::annotation {

class Annotation : public object_base<SCAPIX_META_STRING("java/lang/annotation/Annotation"),
	java::lang::Object>
{
public:

	jboolean equals(ref<java::lang::Object> p1);
	jint hashCode();
	ref<java::lang::String> toString();
	ref<java::lang::Class> annotationType();

protected:

	Annotation(handle_type h) : base_(h) {}

};

} // namespace java::lang::annotation
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/Class.h>
#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace java::lang::annotation {

inline jboolean Annotation::equals(ref<java::lang::Object> p1) { return call_method<SCAPIX_META_STRING("equals"), jboolean>(p1); }
inline jint Annotation::hashCode() { return call_method<SCAPIX_META_STRING("hashCode"), jint>(); }
inline ref<java::lang::String> Annotation::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }
inline ref<java::lang::Class> Annotation::annotationType() { return call_method<SCAPIX_META_STRING("annotationType"), ref<java::lang::Class>>(); }

} // namespace java::lang::annotation
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_LANG_ANNOTATION_ANNOTATION_H
