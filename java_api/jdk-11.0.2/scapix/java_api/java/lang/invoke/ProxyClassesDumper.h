// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_LANG_INVOKE_PROXYCLASSESDUMPER_H
#define SCAPIX_JAVA_LANG_INVOKE_PROXYCLASSESDUMPER_H

namespace scapix::java_api {

namespace java::lang { class String; }

namespace java::lang::invoke {

// private
class ProxyClassesDumper : public object_base<SCAPIX_META_STRING("java/lang/invoke/ProxyClassesDumper"),
	java::lang::Object>
{
public:

	static ref<java::lang::invoke::ProxyClassesDumper> getInstance(ref<java::lang::String> path);
	static ref<java::lang::String> encodeForFilename(ref<java::lang::String> className);
	void dumpClass(ref<java::lang::String> className, ref<link::java::array<jbyte>> classBytes);

protected:

	ProxyClassesDumper(handle_type h) : base_(h) {}

};

} // namespace java::lang::invoke
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace java::lang::invoke {

inline ref<java::lang::invoke::ProxyClassesDumper> ProxyClassesDumper::getInstance(ref<java::lang::String> path) { return call_static_method<SCAPIX_META_STRING("getInstance"), ref<java::lang::invoke::ProxyClassesDumper>>(path); }
inline ref<java::lang::String> ProxyClassesDumper::encodeForFilename(ref<java::lang::String> className) { return call_static_method<SCAPIX_META_STRING("encodeForFilename"), ref<java::lang::String>>(className); }
inline void ProxyClassesDumper::dumpClass(ref<java::lang::String> className, ref<link::java::array<jbyte>> classBytes) { return call_method<SCAPIX_META_STRING("dumpClass"), void>(className, classBytes); }

} // namespace java::lang::invoke
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_LANG_INVOKE_PROXYCLASSESDUMPER_H
