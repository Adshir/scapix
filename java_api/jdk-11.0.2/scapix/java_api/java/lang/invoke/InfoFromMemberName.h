// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/invoke/MethodHandleInfo.h>

#ifndef SCAPIX_JAVA_LANG_INVOKE_INFOFROMMEMBERNAME_H
#define SCAPIX_JAVA_LANG_INVOKE_INFOFROMMEMBERNAME_H

namespace scapix::java_api {

namespace java::lang { class Class; }
namespace java::lang { class String; }
namespace java::lang::invoke { class MethodHandles_Lookup; }
namespace java::lang::invoke { class MethodType; }
namespace java::lang::reflect { class Member; }

namespace java::lang::invoke {

// private
class InfoFromMemberName : public object_base<SCAPIX_META_STRING("java/lang/invoke/InfoFromMemberName"),
	java::lang::Object,
	java::lang::invoke::MethodHandleInfo>
{
public:

	ref<java::lang::Class> getDeclaringClass();
	ref<java::lang::String> getName();
	ref<java::lang::invoke::MethodType> getMethodType();
	jint getModifiers();
	jint getReferenceKind();
	ref<java::lang::String> toString();
	ref<java::lang::reflect::Member> reflectAs(ref<java::lang::Class> expected, ref<java::lang::invoke::MethodHandles_Lookup> lookup);

protected:

	InfoFromMemberName(handle_type h) : base_(h) {}

};

} // namespace java::lang::invoke
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/Class.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/lang/invoke/MethodHandles_Lookup.h>
#include <scapix/java_api/java/lang/invoke/MethodType.h>
#include <scapix/java_api/java/lang/reflect/Member.h>

namespace scapix::java_api {
namespace java::lang::invoke {

inline ref<java::lang::Class> InfoFromMemberName::getDeclaringClass() { return call_method<SCAPIX_META_STRING("getDeclaringClass"), ref<java::lang::Class>>(); }
inline ref<java::lang::String> InfoFromMemberName::getName() { return call_method<SCAPIX_META_STRING("getName"), ref<java::lang::String>>(); }
inline ref<java::lang::invoke::MethodType> InfoFromMemberName::getMethodType() { return call_method<SCAPIX_META_STRING("getMethodType"), ref<java::lang::invoke::MethodType>>(); }
inline jint InfoFromMemberName::getModifiers() { return call_method<SCAPIX_META_STRING("getModifiers"), jint>(); }
inline jint InfoFromMemberName::getReferenceKind() { return call_method<SCAPIX_META_STRING("getReferenceKind"), jint>(); }
inline ref<java::lang::String> InfoFromMemberName::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }
inline ref<java::lang::reflect::Member> InfoFromMemberName::reflectAs(ref<java::lang::Class> expected, ref<java::lang::invoke::MethodHandles_Lookup> lookup) { return call_method<SCAPIX_META_STRING("reflectAs"), ref<java::lang::reflect::Member>>(expected, lookup); }

} // namespace java::lang::invoke
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_LANG_INVOKE_INFOFROMMEMBERNAME_H
