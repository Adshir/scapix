// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_LANG_INVOKE_CONSTANTGROUP_H
#define SCAPIX_JAVA_LANG_INVOKE_CONSTANTGROUP_H

namespace scapix::java_api {

namespace java::util { class List; }
namespace java::util::function { class IntFunction; }

namespace java::lang::invoke {

// private
class ConstantGroup : public object_base<SCAPIX_META_STRING("java/lang/invoke/ConstantGroup"),
	java::lang::Object>
{
public:

	jint size();
	ref<java::lang::Object> get(jint p1);
	ref<java::lang::Object> get(jint p1, ref<java::lang::Object> p2);
	jboolean isPresent(jint p1);
	ref<java::util::List> asList();
	ref<java::util::List> asList(ref<java::lang::Object> ifNotPresent);
	ref<java::lang::invoke::ConstantGroup> subGroup(jint start, jint end);
	jint copyConstants(jint start, jint end, ref<link::java::array<java::lang::Object>> buf, jint pos);
	jint copyConstants(jint start, jint end, ref<link::java::array<java::lang::Object>> buf, jint pos, ref<java::lang::Object> ifNotPresent);
	static ref<java::lang::invoke::ConstantGroup> makeConstantGroup(ref<java::util::List> constants, ref<java::lang::Object> ifNotPresent, ref<java::util::function::IntFunction> constantProvider);
	static ref<java::lang::invoke::ConstantGroup> makeConstantGroup(ref<java::util::List> constants);

protected:

	ConstantGroup(handle_type h) : base_(h) {}

};

} // namespace java::lang::invoke
} // namespace scapix::java_api

#include <scapix/java_api/java/util/List.h>
#include <scapix/java_api/java/util/function/IntFunction.h>

namespace scapix::java_api {
namespace java::lang::invoke {

inline jint ConstantGroup::size() { return call_method<SCAPIX_META_STRING("size"), jint>(); }
inline ref<java::lang::Object> ConstantGroup::get(jint p1) { return call_method<SCAPIX_META_STRING("get"), ref<java::lang::Object>>(p1); }
inline ref<java::lang::Object> ConstantGroup::get(jint p1, ref<java::lang::Object> p2) { return call_method<SCAPIX_META_STRING("get"), ref<java::lang::Object>>(p1, p2); }
inline jboolean ConstantGroup::isPresent(jint p1) { return call_method<SCAPIX_META_STRING("isPresent"), jboolean>(p1); }
inline ref<java::util::List> ConstantGroup::asList() { return call_method<SCAPIX_META_STRING("asList"), ref<java::util::List>>(); }
inline ref<java::util::List> ConstantGroup::asList(ref<java::lang::Object> ifNotPresent) { return call_method<SCAPIX_META_STRING("asList"), ref<java::util::List>>(ifNotPresent); }
inline ref<java::lang::invoke::ConstantGroup> ConstantGroup::subGroup(jint start, jint end) { return call_method<SCAPIX_META_STRING("subGroup"), ref<java::lang::invoke::ConstantGroup>>(start, end); }
inline jint ConstantGroup::copyConstants(jint start, jint end, ref<link::java::array<java::lang::Object>> buf, jint pos) { return call_method<SCAPIX_META_STRING("copyConstants"), jint>(start, end, buf, pos); }
inline jint ConstantGroup::copyConstants(jint start, jint end, ref<link::java::array<java::lang::Object>> buf, jint pos, ref<java::lang::Object> ifNotPresent) { return call_method<SCAPIX_META_STRING("copyConstants"), jint>(start, end, buf, pos, ifNotPresent); }
inline ref<java::lang::invoke::ConstantGroup> ConstantGroup::makeConstantGroup(ref<java::util::List> constants, ref<java::lang::Object> ifNotPresent, ref<java::util::function::IntFunction> constantProvider) { return call_static_method<SCAPIX_META_STRING("makeConstantGroup"), ref<java::lang::invoke::ConstantGroup>>(constants, ifNotPresent, constantProvider); }
inline ref<java::lang::invoke::ConstantGroup> ConstantGroup::makeConstantGroup(ref<java::util::List> constants) { return call_static_method<SCAPIX_META_STRING("makeConstantGroup"), ref<java::lang::invoke::ConstantGroup>>(constants); }

} // namespace java::lang::invoke
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_LANG_INVOKE_CONSTANTGROUP_H
