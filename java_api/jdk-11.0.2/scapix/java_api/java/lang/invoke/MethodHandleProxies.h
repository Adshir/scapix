// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_LANG_INVOKE_METHODHANDLEPROXIES_H
#define SCAPIX_JAVA_LANG_INVOKE_METHODHANDLEPROXIES_H

namespace scapix::java_api {

namespace java::lang { class Class; }
namespace java::lang::invoke { class MethodHandle; }

namespace java::lang::invoke {

class MethodHandleProxies : public object_base<SCAPIX_META_STRING("java/lang/invoke/MethodHandleProxies"),
	java::lang::Object>
{
public:

	static ref<java::lang::Object> asInterfaceInstance(ref<java::lang::Class> intfc, ref<java::lang::invoke::MethodHandle> target);
	static jboolean isWrapperInstance(ref<java::lang::Object> x);
	static ref<java::lang::invoke::MethodHandle> wrapperInstanceTarget(ref<java::lang::Object> x);
	static ref<java::lang::Class> wrapperInstanceType(ref<java::lang::Object> x);

protected:

	MethodHandleProxies(handle_type h) : base_(h) {}

};

} // namespace java::lang::invoke
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/Class.h>
#include <scapix/java_api/java/lang/invoke/MethodHandle.h>

namespace scapix::java_api {
namespace java::lang::invoke {

inline ref<java::lang::Object> MethodHandleProxies::asInterfaceInstance(ref<java::lang::Class> intfc, ref<java::lang::invoke::MethodHandle> target) { return call_static_method<SCAPIX_META_STRING("asInterfaceInstance"), ref<java::lang::Object>>(intfc, target); }
inline jboolean MethodHandleProxies::isWrapperInstance(ref<java::lang::Object> x) { return call_static_method<SCAPIX_META_STRING("isWrapperInstance"), jboolean>(x); }
inline ref<java::lang::invoke::MethodHandle> MethodHandleProxies::wrapperInstanceTarget(ref<java::lang::Object> x) { return call_static_method<SCAPIX_META_STRING("wrapperInstanceTarget"), ref<java::lang::invoke::MethodHandle>>(x); }
inline ref<java::lang::Class> MethodHandleProxies::wrapperInstanceType(ref<java::lang::Object> x) { return call_static_method<SCAPIX_META_STRING("wrapperInstanceType"), ref<java::lang::Class>>(x); }

} // namespace java::lang::invoke
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_LANG_INVOKE_METHODHANDLEPROXIES_H
