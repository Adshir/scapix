// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_LANG_INVOKE_SWITCHPOINT_H
#define SCAPIX_JAVA_LANG_INVOKE_SWITCHPOINT_H

namespace scapix::java_api {

namespace java::lang::invoke { class MethodHandle; }

namespace java::lang::invoke {

class SwitchPoint : public object_base<SCAPIX_META_STRING("java/lang/invoke/SwitchPoint"),
	java::lang::Object>
{
public:

	static ref<SwitchPoint> new_object();
	jboolean hasBeenInvalidated();
	ref<java::lang::invoke::MethodHandle> guardWithTest(ref<java::lang::invoke::MethodHandle> target, ref<java::lang::invoke::MethodHandle> fallback);
	static void invalidateAll(ref<link::java::array<java::lang::invoke::SwitchPoint>> switchPoints);

protected:

	SwitchPoint(handle_type h) : base_(h) {}

};

} // namespace java::lang::invoke
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/invoke/MethodHandle.h>

namespace scapix::java_api {
namespace java::lang::invoke {

inline ref<SwitchPoint> SwitchPoint::new_object() { return base_::new_object(); }
inline jboolean SwitchPoint::hasBeenInvalidated() { return call_method<SCAPIX_META_STRING("hasBeenInvalidated"), jboolean>(); }
inline ref<java::lang::invoke::MethodHandle> SwitchPoint::guardWithTest(ref<java::lang::invoke::MethodHandle> target, ref<java::lang::invoke::MethodHandle> fallback) { return call_method<SCAPIX_META_STRING("guardWithTest"), ref<java::lang::invoke::MethodHandle>>(target, fallback); }
inline void SwitchPoint::invalidateAll(ref<link::java::array<java::lang::invoke::SwitchPoint>> switchPoints) { return call_static_method<SCAPIX_META_STRING("invalidateAll"), void>(switchPoints); }

} // namespace java::lang::invoke
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_LANG_INVOKE_SWITCHPOINT_H
