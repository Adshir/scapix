// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/invoke/ConstantGroup.h>

#ifndef SCAPIX_JAVA_LANG_INVOKE_ABSTRACTCONSTANTGROUP_H
#define SCAPIX_JAVA_LANG_INVOKE_ABSTRACTCONSTANTGROUP_H

namespace scapix::java_api {

namespace java::lang { class String; }

namespace java::lang::invoke {

// private
class AbstractConstantGroup : public object_base<SCAPIX_META_STRING("java/lang/invoke/AbstractConstantGroup"),
	java::lang::Object,
	java::lang::invoke::ConstantGroup>
{
public:

	jint size();
	ref<java::lang::Object> get(jint p1);
	ref<java::lang::Object> get(jint p1, ref<java::lang::Object> p2);
	jboolean isPresent(jint p1);
	ref<java::lang::String> toString();

protected:

	AbstractConstantGroup(handle_type h) : base_(h) {}

};

} // namespace java::lang::invoke
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>

namespace scapix::java_api {
namespace java::lang::invoke {

inline jint AbstractConstantGroup::size() { return call_method<SCAPIX_META_STRING("size"), jint>(); }
inline ref<java::lang::Object> AbstractConstantGroup::get(jint p1) { return call_method<SCAPIX_META_STRING("get"), ref<java::lang::Object>>(p1); }
inline ref<java::lang::Object> AbstractConstantGroup::get(jint p1, ref<java::lang::Object> p2) { return call_method<SCAPIX_META_STRING("get"), ref<java::lang::Object>>(p1, p2); }
inline jboolean AbstractConstantGroup::isPresent(jint p1) { return call_method<SCAPIX_META_STRING("isPresent"), jboolean>(p1); }
inline ref<java::lang::String> AbstractConstantGroup::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }

} // namespace java::lang::invoke
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_LANG_INVOKE_ABSTRACTCONSTANTGROUP_H
