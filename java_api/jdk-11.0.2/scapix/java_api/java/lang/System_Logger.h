// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_LANG_SYSTEM_LOGGER_H
#define SCAPIX_JAVA_LANG_SYSTEM_LOGGER_H

namespace scapix::java_api {

namespace java::lang { class String; }
namespace java::lang { class System_Logger_Level; }
namespace java::lang { class Throwable; }
namespace java::util { class ResourceBundle; }
namespace java::util::function { class Supplier; }

namespace java::lang {

class System_Logger : public object_base<SCAPIX_META_STRING("java/lang/System$Logger"),
	java::lang::Object>
{
public:

	using Level = System_Logger_Level;

	ref<java::lang::String> getName();
	jboolean isLoggable(ref<java::lang::System_Logger_Level> p1);
	void log(ref<java::lang::System_Logger_Level> level, ref<java::lang::String> msg);
	void log(ref<java::lang::System_Logger_Level> level, ref<java::util::function::Supplier> msgSupplier);
	void log(ref<java::lang::System_Logger_Level> level, ref<java::lang::Object> obj);
	void log(ref<java::lang::System_Logger_Level> level, ref<java::lang::String> msg, ref<java::lang::Throwable> thrown);
	void log(ref<java::lang::System_Logger_Level> level, ref<java::util::function::Supplier> msgSupplier, ref<java::lang::Throwable> thrown);
	void log(ref<java::lang::System_Logger_Level> level, ref<java::lang::String> format, ref<link::java::array<java::lang::Object>> params);
	void log(ref<java::lang::System_Logger_Level> p1, ref<java::util::ResourceBundle> p2, ref<java::lang::String> p3, ref<java::lang::Throwable> p4);
	void log(ref<java::lang::System_Logger_Level> p1, ref<java::util::ResourceBundle> p2, ref<java::lang::String> p3, ref<link::java::array<java::lang::Object>> p4);

protected:

	System_Logger(handle_type h) : base_(h) {}

};

} // namespace java::lang
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/lang/System_Logger_Level.h>
#include <scapix/java_api/java/lang/Throwable.h>
#include <scapix/java_api/java/util/ResourceBundle.h>
#include <scapix/java_api/java/util/function/Supplier.h>

namespace scapix::java_api {
namespace java::lang {

inline ref<java::lang::String> System_Logger::getName() { return call_method<SCAPIX_META_STRING("getName"), ref<java::lang::String>>(); }
inline jboolean System_Logger::isLoggable(ref<java::lang::System_Logger_Level> p1) { return call_method<SCAPIX_META_STRING("isLoggable"), jboolean>(p1); }
inline void System_Logger::log(ref<java::lang::System_Logger_Level> level, ref<java::lang::String> msg) { return call_method<SCAPIX_META_STRING("log"), void>(level, msg); }
inline void System_Logger::log(ref<java::lang::System_Logger_Level> level, ref<java::util::function::Supplier> msgSupplier) { return call_method<SCAPIX_META_STRING("log"), void>(level, msgSupplier); }
inline void System_Logger::log(ref<java::lang::System_Logger_Level> level, ref<java::lang::Object> obj) { return call_method<SCAPIX_META_STRING("log"), void>(level, obj); }
inline void System_Logger::log(ref<java::lang::System_Logger_Level> level, ref<java::lang::String> msg, ref<java::lang::Throwable> thrown) { return call_method<SCAPIX_META_STRING("log"), void>(level, msg, thrown); }
inline void System_Logger::log(ref<java::lang::System_Logger_Level> level, ref<java::util::function::Supplier> msgSupplier, ref<java::lang::Throwable> thrown) { return call_method<SCAPIX_META_STRING("log"), void>(level, msgSupplier, thrown); }
inline void System_Logger::log(ref<java::lang::System_Logger_Level> level, ref<java::lang::String> format, ref<link::java::array<java::lang::Object>> params) { return call_method<SCAPIX_META_STRING("log"), void>(level, format, params); }
inline void System_Logger::log(ref<java::lang::System_Logger_Level> p1, ref<java::util::ResourceBundle> p2, ref<java::lang::String> p3, ref<java::lang::Throwable> p4) { return call_method<SCAPIX_META_STRING("log"), void>(p1, p2, p3, p4); }
inline void System_Logger::log(ref<java::lang::System_Logger_Level> p1, ref<java::util::ResourceBundle> p2, ref<java::lang::String> p3, ref<link::java::array<java::lang::Object>> p4) { return call_method<SCAPIX_META_STRING("log"), void>(p1, p2, p3, p4); }

} // namespace java::lang
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_LANG_SYSTEM_LOGGER_H
