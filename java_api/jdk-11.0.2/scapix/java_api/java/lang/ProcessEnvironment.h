// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/util/HashMap.h>

#ifndef SCAPIX_JAVA_LANG_PROCESSENVIRONMENT_H
#define SCAPIX_JAVA_LANG_PROCESSENVIRONMENT_H

namespace scapix::java_api {

namespace java::lang { class Object; }
namespace java::lang { class String; }
namespace java::util { class Collection; }
namespace java::util { class Set; }

namespace java::lang {

// private
class ProcessEnvironment : public object_base<SCAPIX_META_STRING("java/lang/ProcessEnvironment"),
	java::util::HashMap>
{
public:

	ref<java::lang::String> put(ref<java::lang::String> key, ref<java::lang::String> value);
	ref<java::lang::String> get(ref<java::lang::Object> key);
	jboolean containsKey(ref<java::lang::Object> key);
	jboolean containsValue(ref<java::lang::Object> value);
	ref<java::lang::String> remove(ref<java::lang::Object> key);
	ref<java::util::Set> keySet();
	ref<java::util::Collection> values();
	ref<java::util::Set> entrySet();

protected:

	ProcessEnvironment(handle_type h) : base_(h) {}

};

} // namespace java::lang
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Collection.h>
#include <scapix/java_api/java/util/Set.h>

namespace scapix::java_api {
namespace java::lang {

inline ref<java::lang::String> ProcessEnvironment::put(ref<java::lang::String> key, ref<java::lang::String> value) { return call_method<SCAPIX_META_STRING("put"), ref<java::lang::String>>(key, value); }
inline ref<java::lang::String> ProcessEnvironment::get(ref<java::lang::Object> key) { return call_method<SCAPIX_META_STRING("get"), ref<java::lang::String>>(key); }
inline jboolean ProcessEnvironment::containsKey(ref<java::lang::Object> key) { return call_method<SCAPIX_META_STRING("containsKey"), jboolean>(key); }
inline jboolean ProcessEnvironment::containsValue(ref<java::lang::Object> value) { return call_method<SCAPIX_META_STRING("containsValue"), jboolean>(value); }
inline ref<java::lang::String> ProcessEnvironment::remove(ref<java::lang::Object> key) { return call_method<SCAPIX_META_STRING("remove"), ref<java::lang::String>>(key); }
inline ref<java::util::Set> ProcessEnvironment::keySet() { return call_method<SCAPIX_META_STRING("keySet"), ref<java::util::Set>>(); }
inline ref<java::util::Collection> ProcessEnvironment::values() { return call_method<SCAPIX_META_STRING("values"), ref<java::util::Collection>>(); }
inline ref<java::util::Set> ProcessEnvironment::entrySet() { return call_method<SCAPIX_META_STRING("entrySet"), ref<java::util::Set>>(); }

} // namespace java::lang
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_LANG_PROCESSENVIRONMENT_H
