// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_TEXT_NORMALIZER_H
#define SCAPIX_JAVA_TEXT_NORMALIZER_H

namespace scapix::java_api {

namespace java::lang { class CharSequence; }
namespace java::lang { class String; }
namespace java::text { class Normalizer_Form; }

namespace java::text {

class Normalizer : public object_base<SCAPIX_META_STRING("java/text/Normalizer"),
	java::lang::Object>
{
public:

	using Form = Normalizer_Form;

	static ref<java::lang::String> normalize(ref<java::lang::CharSequence> src, ref<java::text::Normalizer_Form> form);
	static jboolean isNormalized(ref<java::lang::CharSequence> src, ref<java::text::Normalizer_Form> form);

protected:

	Normalizer(handle_type h) : base_(h) {}

};

} // namespace java::text
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/text/Normalizer_Form.h>

namespace scapix::java_api {
namespace java::text {

inline ref<java::lang::String> Normalizer::normalize(ref<java::lang::CharSequence> src, ref<java::text::Normalizer_Form> form) { return call_static_method<SCAPIX_META_STRING("normalize"), ref<java::lang::String>>(src, form); }
inline jboolean Normalizer::isNormalized(ref<java::lang::CharSequence> src, ref<java::text::Normalizer_Form> form) { return call_static_method<SCAPIX_META_STRING("isNormalized"), jboolean>(src, form); }

} // namespace java::text
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_TEXT_NORMALIZER_H
