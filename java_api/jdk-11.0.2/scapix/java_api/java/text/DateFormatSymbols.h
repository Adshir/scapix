// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/io/Serializable.h>
#include <scapix/java_api/java/lang/Cloneable.h>

#ifndef SCAPIX_JAVA_TEXT_DATEFORMATSYMBOLS_H
#define SCAPIX_JAVA_TEXT_DATEFORMATSYMBOLS_H

namespace scapix::java_api {

namespace java::lang { class String; }
namespace java::util { class Locale; }

namespace java::text {

class DateFormatSymbols : public object_base<SCAPIX_META_STRING("java/text/DateFormatSymbols"),
	java::lang::Object,
	java::io::Serializable,
	java::lang::Cloneable>
{
public:

	static ref<DateFormatSymbols> new_object();
	static ref<DateFormatSymbols> new_object(ref<java::util::Locale> locale);
	static ref<link::java::array<java::util::Locale>> getAvailableLocales();
	static ref<java::text::DateFormatSymbols> getInstance();
	static ref<java::text::DateFormatSymbols> getInstance(ref<java::util::Locale> locale);
	ref<link::java::array<java::lang::String>> getEras();
	void setEras(ref<link::java::array<java::lang::String>> newEras);
	ref<link::java::array<java::lang::String>> getMonths();
	void setMonths(ref<link::java::array<java::lang::String>> newMonths);
	ref<link::java::array<java::lang::String>> getShortMonths();
	void setShortMonths(ref<link::java::array<java::lang::String>> newShortMonths);
	ref<link::java::array<java::lang::String>> getWeekdays();
	void setWeekdays(ref<link::java::array<java::lang::String>> newWeekdays);
	ref<link::java::array<java::lang::String>> getShortWeekdays();
	void setShortWeekdays(ref<link::java::array<java::lang::String>> newShortWeekdays);
	ref<link::java::array<java::lang::String>> getAmPmStrings();
	void setAmPmStrings(ref<link::java::array<java::lang::String>> newAmpms);
	ref<link::java::array<link::java::array<java::lang::String>>> getZoneStrings();
	void setZoneStrings(ref<link::java::array<link::java::array<java::lang::String>>> newZoneStrings);
	ref<java::lang::String> getLocalPatternChars();
	void setLocalPatternChars(ref<java::lang::String> newLocalPatternChars);
	ref<java::lang::Object> clone();
	jint hashCode();
	jboolean equals(ref<java::lang::Object> obj);

protected:

	DateFormatSymbols(handle_type h) : base_(h) {}

};

} // namespace java::text
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Locale.h>

namespace scapix::java_api {
namespace java::text {

inline ref<DateFormatSymbols> DateFormatSymbols::new_object() { return base_::new_object(); }
inline ref<DateFormatSymbols> DateFormatSymbols::new_object(ref<java::util::Locale> locale) { return base_::new_object(locale); }
inline ref<link::java::array<java::util::Locale>> DateFormatSymbols::getAvailableLocales() { return call_static_method<SCAPIX_META_STRING("getAvailableLocales"), ref<link::java::array<java::util::Locale>>>(); }
inline ref<java::text::DateFormatSymbols> DateFormatSymbols::getInstance() { return call_static_method<SCAPIX_META_STRING("getInstance"), ref<java::text::DateFormatSymbols>>(); }
inline ref<java::text::DateFormatSymbols> DateFormatSymbols::getInstance(ref<java::util::Locale> locale) { return call_static_method<SCAPIX_META_STRING("getInstance"), ref<java::text::DateFormatSymbols>>(locale); }
inline ref<link::java::array<java::lang::String>> DateFormatSymbols::getEras() { return call_method<SCAPIX_META_STRING("getEras"), ref<link::java::array<java::lang::String>>>(); }
inline void DateFormatSymbols::setEras(ref<link::java::array<java::lang::String>> newEras) { return call_method<SCAPIX_META_STRING("setEras"), void>(newEras); }
inline ref<link::java::array<java::lang::String>> DateFormatSymbols::getMonths() { return call_method<SCAPIX_META_STRING("getMonths"), ref<link::java::array<java::lang::String>>>(); }
inline void DateFormatSymbols::setMonths(ref<link::java::array<java::lang::String>> newMonths) { return call_method<SCAPIX_META_STRING("setMonths"), void>(newMonths); }
inline ref<link::java::array<java::lang::String>> DateFormatSymbols::getShortMonths() { return call_method<SCAPIX_META_STRING("getShortMonths"), ref<link::java::array<java::lang::String>>>(); }
inline void DateFormatSymbols::setShortMonths(ref<link::java::array<java::lang::String>> newShortMonths) { return call_method<SCAPIX_META_STRING("setShortMonths"), void>(newShortMonths); }
inline ref<link::java::array<java::lang::String>> DateFormatSymbols::getWeekdays() { return call_method<SCAPIX_META_STRING("getWeekdays"), ref<link::java::array<java::lang::String>>>(); }
inline void DateFormatSymbols::setWeekdays(ref<link::java::array<java::lang::String>> newWeekdays) { return call_method<SCAPIX_META_STRING("setWeekdays"), void>(newWeekdays); }
inline ref<link::java::array<java::lang::String>> DateFormatSymbols::getShortWeekdays() { return call_method<SCAPIX_META_STRING("getShortWeekdays"), ref<link::java::array<java::lang::String>>>(); }
inline void DateFormatSymbols::setShortWeekdays(ref<link::java::array<java::lang::String>> newShortWeekdays) { return call_method<SCAPIX_META_STRING("setShortWeekdays"), void>(newShortWeekdays); }
inline ref<link::java::array<java::lang::String>> DateFormatSymbols::getAmPmStrings() { return call_method<SCAPIX_META_STRING("getAmPmStrings"), ref<link::java::array<java::lang::String>>>(); }
inline void DateFormatSymbols::setAmPmStrings(ref<link::java::array<java::lang::String>> newAmpms) { return call_method<SCAPIX_META_STRING("setAmPmStrings"), void>(newAmpms); }
inline ref<link::java::array<link::java::array<java::lang::String>>> DateFormatSymbols::getZoneStrings() { return call_method<SCAPIX_META_STRING("getZoneStrings"), ref<link::java::array<link::java::array<java::lang::String>>>>(); }
inline void DateFormatSymbols::setZoneStrings(ref<link::java::array<link::java::array<java::lang::String>>> newZoneStrings) { return call_method<SCAPIX_META_STRING("setZoneStrings"), void>(newZoneStrings); }
inline ref<java::lang::String> DateFormatSymbols::getLocalPatternChars() { return call_method<SCAPIX_META_STRING("getLocalPatternChars"), ref<java::lang::String>>(); }
inline void DateFormatSymbols::setLocalPatternChars(ref<java::lang::String> newLocalPatternChars) { return call_method<SCAPIX_META_STRING("setLocalPatternChars"), void>(newLocalPatternChars); }
inline ref<java::lang::Object> DateFormatSymbols::clone() { return call_method<SCAPIX_META_STRING("clone"), ref<java::lang::Object>>(); }
inline jint DateFormatSymbols::hashCode() { return call_method<SCAPIX_META_STRING("hashCode"), jint>(); }
inline jboolean DateFormatSymbols::equals(ref<java::lang::Object> obj) { return call_method<SCAPIX_META_STRING("equals"), jboolean>(obj); }

} // namespace java::text
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_TEXT_DATEFORMATSYMBOLS_H
