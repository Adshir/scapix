// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_TEXT_MERGECOLLATION_H
#define SCAPIX_JAVA_TEXT_MERGECOLLATION_H

namespace scapix::java_api {

namespace java::lang { class String; }
namespace java::text { class PatternEntry; }

namespace java::text {

// private
class MergeCollation : public object_base<SCAPIX_META_STRING("java/text/MergeCollation"),
	java::lang::Object>
{
public:

	static ref<MergeCollation> new_object(ref<java::lang::String> pattern);
	ref<java::lang::String> getPattern();
	ref<java::lang::String> getPattern(jboolean withWhiteSpace);
	ref<java::lang::String> emitPattern();
	ref<java::lang::String> emitPattern(jboolean withWhiteSpace);
	void setPattern(ref<java::lang::String> pattern);
	void addPattern(ref<java::lang::String> pattern);
	jint getCount();
	ref<java::text::PatternEntry> getItemAt(jint index);

protected:

	MergeCollation(handle_type h) : base_(h) {}

};

} // namespace java::text
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/text/PatternEntry.h>

namespace scapix::java_api {
namespace java::text {

inline ref<MergeCollation> MergeCollation::new_object(ref<java::lang::String> pattern) { return base_::new_object(pattern); }
inline ref<java::lang::String> MergeCollation::getPattern() { return call_method<SCAPIX_META_STRING("getPattern"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MergeCollation::getPattern(jboolean withWhiteSpace) { return call_method<SCAPIX_META_STRING("getPattern"), ref<java::lang::String>>(withWhiteSpace); }
inline ref<java::lang::String> MergeCollation::emitPattern() { return call_method<SCAPIX_META_STRING("emitPattern"), ref<java::lang::String>>(); }
inline ref<java::lang::String> MergeCollation::emitPattern(jboolean withWhiteSpace) { return call_method<SCAPIX_META_STRING("emitPattern"), ref<java::lang::String>>(withWhiteSpace); }
inline void MergeCollation::setPattern(ref<java::lang::String> pattern) { return call_method<SCAPIX_META_STRING("setPattern"), void>(pattern); }
inline void MergeCollation::addPattern(ref<java::lang::String> pattern) { return call_method<SCAPIX_META_STRING("addPattern"), void>(pattern); }
inline jint MergeCollation::getCount() { return call_method<SCAPIX_META_STRING("getCount"), jint>(); }
inline ref<java::text::PatternEntry> MergeCollation::getItemAt(jint index) { return call_method<SCAPIX_META_STRING("getItemAt"), ref<java::text::PatternEntry>>(index); }

} // namespace java::text
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_TEXT_MERGECOLLATION_H
