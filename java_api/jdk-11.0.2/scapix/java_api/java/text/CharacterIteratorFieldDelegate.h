// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/text/Format_FieldDelegate.h>

#ifndef SCAPIX_JAVA_TEXT_CHARACTERITERATORFIELDDELEGATE_H
#define SCAPIX_JAVA_TEXT_CHARACTERITERATORFIELDDELEGATE_H

namespace scapix::java_api {

namespace java::lang { class String; }
namespace java::lang { class StringBuffer; }
namespace java::text { class AttributedCharacterIterator; }
namespace java::text { class Format_Field; }

namespace java::text {

// private
class CharacterIteratorFieldDelegate : public object_base<SCAPIX_META_STRING("java/text/CharacterIteratorFieldDelegate"),
	java::lang::Object,
	java::text::Format_FieldDelegate>
{
public:

	void formatted(ref<java::text::Format_Field> attr, ref<java::lang::Object> value, jint start, jint end, ref<java::lang::StringBuffer> buffer);
	void formatted(jint fieldID, ref<java::text::Format_Field> attr, ref<java::lang::Object> value, jint start, jint end, ref<java::lang::StringBuffer> buffer);
	ref<java::text::AttributedCharacterIterator> getIterator(ref<java::lang::String> string);

protected:

	CharacterIteratorFieldDelegate(handle_type h) : base_(h) {}

};

} // namespace java::text
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/lang/StringBuffer.h>
#include <scapix/java_api/java/text/AttributedCharacterIterator.h>
#include <scapix/java_api/java/text/Format_Field.h>

namespace scapix::java_api {
namespace java::text {

inline void CharacterIteratorFieldDelegate::formatted(ref<java::text::Format_Field> attr, ref<java::lang::Object> value, jint start, jint end, ref<java::lang::StringBuffer> buffer) { return call_method<SCAPIX_META_STRING("formatted"), void>(attr, value, start, end, buffer); }
inline void CharacterIteratorFieldDelegate::formatted(jint fieldID, ref<java::text::Format_Field> attr, ref<java::lang::Object> value, jint start, jint end, ref<java::lang::StringBuffer> buffer) { return call_method<SCAPIX_META_STRING("formatted"), void>(fieldID, attr, value, start, end, buffer); }
inline ref<java::text::AttributedCharacterIterator> CharacterIteratorFieldDelegate::getIterator(ref<java::lang::String> string) { return call_method<SCAPIX_META_STRING("getIterator"), ref<java::text::AttributedCharacterIterator>>(string); }

} // namespace java::text
} // namespace scapix::java_api

#endif // SCAPIX_JAVA_TEXT_CHARACTERITERATORFIELDDELEGATE_H
