// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/io/Serializable.h>

#ifndef SCAPIX_JAVAX_SECURITY_AUTH_SUBJECT_H
#define SCAPIX_JAVAX_SECURITY_AUTH_SUBJECT_H

namespace scapix::java_api {

namespace java::lang { class Class; }
namespace java::lang { class String; }
namespace java::security { class AccessControlContext; }
namespace java::security { class PrivilegedAction; }
namespace java::security { class PrivilegedExceptionAction; }
namespace java::util { class Set; }

namespace javax::security::auth {

class Subject : public object_base<SCAPIX_META_STRING("javax/security/auth/Subject"),
	java::lang::Object,
	java::io::Serializable>
{
public:

	static ref<Subject> new_object();
	static ref<Subject> new_object(jboolean readOnly, ref<java::util::Set> principals, ref<java::util::Set> pubCredentials, ref<java::util::Set> privCredentials);
	void setReadOnly();
	jboolean isReadOnly();
	static ref<javax::security::auth::Subject> getSubject(ref<java::security::AccessControlContext> acc);
	static ref<java::lang::Object> doAs(ref<javax::security::auth::Subject> subject, ref<java::security::PrivilegedAction> action);
	static ref<java::lang::Object> doAs(ref<javax::security::auth::Subject> subject, ref<java::security::PrivilegedExceptionAction> action);
	static ref<java::lang::Object> doAsPrivileged(ref<javax::security::auth::Subject> subject, ref<java::security::PrivilegedAction> action, ref<java::security::AccessControlContext> acc);
	static ref<java::lang::Object> doAsPrivileged(ref<javax::security::auth::Subject> subject, ref<java::security::PrivilegedExceptionAction> action, ref<java::security::AccessControlContext> acc);
	ref<java::util::Set> getPrincipals();
	ref<java::util::Set> getPrincipals(ref<java::lang::Class> c);
	ref<java::util::Set> getPublicCredentials();
	ref<java::util::Set> getPrivateCredentials();
	ref<java::util::Set> getPublicCredentials(ref<java::lang::Class> c);
	ref<java::util::Set> getPrivateCredentials(ref<java::lang::Class> c);
	jboolean equals(ref<java::lang::Object> o);
	ref<java::lang::String> toString();
	jint hashCode();

protected:

	Subject(handle_type h) : base_(h) {}

};

} // namespace javax::security::auth
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/Class.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/security/AccessControlContext.h>
#include <scapix/java_api/java/security/PrivilegedAction.h>
#include <scapix/java_api/java/security/PrivilegedExceptionAction.h>
#include <scapix/java_api/java/util/Set.h>

namespace scapix::java_api {
namespace javax::security::auth {

inline ref<Subject> Subject::new_object() { return base_::new_object(); }
inline ref<Subject> Subject::new_object(jboolean readOnly, ref<java::util::Set> principals, ref<java::util::Set> pubCredentials, ref<java::util::Set> privCredentials) { return base_::new_object(readOnly, principals, pubCredentials, privCredentials); }
inline void Subject::setReadOnly() { return call_method<SCAPIX_META_STRING("setReadOnly"), void>(); }
inline jboolean Subject::isReadOnly() { return call_method<SCAPIX_META_STRING("isReadOnly"), jboolean>(); }
inline ref<javax::security::auth::Subject> Subject::getSubject(ref<java::security::AccessControlContext> acc) { return call_static_method<SCAPIX_META_STRING("getSubject"), ref<javax::security::auth::Subject>>(acc); }
inline ref<java::lang::Object> Subject::doAs(ref<javax::security::auth::Subject> subject, ref<java::security::PrivilegedAction> action) { return call_static_method<SCAPIX_META_STRING("doAs"), ref<java::lang::Object>>(subject, action); }
inline ref<java::lang::Object> Subject::doAs(ref<javax::security::auth::Subject> subject, ref<java::security::PrivilegedExceptionAction> action) { return call_static_method<SCAPIX_META_STRING("doAs"), ref<java::lang::Object>>(subject, action); }
inline ref<java::lang::Object> Subject::doAsPrivileged(ref<javax::security::auth::Subject> subject, ref<java::security::PrivilegedAction> action, ref<java::security::AccessControlContext> acc) { return call_static_method<SCAPIX_META_STRING("doAsPrivileged"), ref<java::lang::Object>>(subject, action, acc); }
inline ref<java::lang::Object> Subject::doAsPrivileged(ref<javax::security::auth::Subject> subject, ref<java::security::PrivilegedExceptionAction> action, ref<java::security::AccessControlContext> acc) { return call_static_method<SCAPIX_META_STRING("doAsPrivileged"), ref<java::lang::Object>>(subject, action, acc); }
inline ref<java::util::Set> Subject::getPrincipals() { return call_method<SCAPIX_META_STRING("getPrincipals"), ref<java::util::Set>>(); }
inline ref<java::util::Set> Subject::getPrincipals(ref<java::lang::Class> c) { return call_method<SCAPIX_META_STRING("getPrincipals"), ref<java::util::Set>>(c); }
inline ref<java::util::Set> Subject::getPublicCredentials() { return call_method<SCAPIX_META_STRING("getPublicCredentials"), ref<java::util::Set>>(); }
inline ref<java::util::Set> Subject::getPrivateCredentials() { return call_method<SCAPIX_META_STRING("getPrivateCredentials"), ref<java::util::Set>>(); }
inline ref<java::util::Set> Subject::getPublicCredentials(ref<java::lang::Class> c) { return call_method<SCAPIX_META_STRING("getPublicCredentials"), ref<java::util::Set>>(c); }
inline ref<java::util::Set> Subject::getPrivateCredentials(ref<java::lang::Class> c) { return call_method<SCAPIX_META_STRING("getPrivateCredentials"), ref<java::util::Set>>(c); }
inline jboolean Subject::equals(ref<java::lang::Object> o) { return call_method<SCAPIX_META_STRING("equals"), jboolean>(o); }
inline ref<java::lang::String> Subject::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }
inline jint Subject::hashCode() { return call_method<SCAPIX_META_STRING("hashCode"), jint>(); }

} // namespace javax::security::auth
} // namespace scapix::java_api

#endif // SCAPIX_JAVAX_SECURITY_AUTH_SUBJECT_H
