// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/security/Principal.h>
#include <scapix/java_api/java/io/Serializable.h>

#ifndef SCAPIX_JAVAX_SECURITY_AUTH_X500_X500PRINCIPAL_H
#define SCAPIX_JAVAX_SECURITY_AUTH_X500_X500PRINCIPAL_H

namespace scapix::java_api {

namespace java::io { class InputStream; }
namespace java::lang { class String; }
namespace java::util { class Map; }

namespace javax::security::auth::x500 {

class X500Principal : public object_base<SCAPIX_META_STRING("javax/security/auth/x500/X500Principal"),
	java::lang::Object,
	java::security::Principal,
	java::io::Serializable>
{
public:

	static ref<java::lang::String> RFC1779_();
	static ref<java::lang::String> RFC2253_();
	static ref<java::lang::String> CANONICAL_();

	static ref<X500Principal> new_object(ref<java::lang::String> name);
	static ref<X500Principal> new_object(ref<java::lang::String> name, ref<java::util::Map> keywordMap);
	static ref<X500Principal> new_object(ref<link::java::array<jbyte>> name);
	static ref<X500Principal> new_object(ref<java::io::InputStream> is);
	ref<java::lang::String> getName();
	ref<java::lang::String> getName(ref<java::lang::String> format);
	ref<java::lang::String> getName(ref<java::lang::String> format, ref<java::util::Map> oidMap);
	ref<link::java::array<jbyte>> getEncoded();
	ref<java::lang::String> toString();
	jboolean equals(ref<java::lang::Object> o);
	jint hashCode();

protected:

	X500Principal(handle_type h) : base_(h) {}

};

} // namespace javax::security::auth::x500
} // namespace scapix::java_api

#include <scapix/java_api/java/io/InputStream.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Map.h>

namespace scapix::java_api {
namespace javax::security::auth::x500 {

inline ref<java::lang::String> X500Principal::RFC1779_() { return get_static_field<SCAPIX_META_STRING("RFC1779"), ref<java::lang::String>>(); }
inline ref<java::lang::String> X500Principal::RFC2253_() { return get_static_field<SCAPIX_META_STRING("RFC2253"), ref<java::lang::String>>(); }
inline ref<java::lang::String> X500Principal::CANONICAL_() { return get_static_field<SCAPIX_META_STRING("CANONICAL"), ref<java::lang::String>>(); }
inline ref<X500Principal> X500Principal::new_object(ref<java::lang::String> name) { return base_::new_object(name); }
inline ref<X500Principal> X500Principal::new_object(ref<java::lang::String> name, ref<java::util::Map> keywordMap) { return base_::new_object(name, keywordMap); }
inline ref<X500Principal> X500Principal::new_object(ref<link::java::array<jbyte>> name) { return base_::new_object(name); }
inline ref<X500Principal> X500Principal::new_object(ref<java::io::InputStream> is) { return base_::new_object(is); }
inline ref<java::lang::String> X500Principal::getName() { return call_method<SCAPIX_META_STRING("getName"), ref<java::lang::String>>(); }
inline ref<java::lang::String> X500Principal::getName(ref<java::lang::String> format) { return call_method<SCAPIX_META_STRING("getName"), ref<java::lang::String>>(format); }
inline ref<java::lang::String> X500Principal::getName(ref<java::lang::String> format, ref<java::util::Map> oidMap) { return call_method<SCAPIX_META_STRING("getName"), ref<java::lang::String>>(format, oidMap); }
inline ref<link::java::array<jbyte>> X500Principal::getEncoded() { return call_method<SCAPIX_META_STRING("getEncoded"), ref<link::java::array<jbyte>>>(); }
inline ref<java::lang::String> X500Principal::toString() { return call_method<SCAPIX_META_STRING("toString"), ref<java::lang::String>>(); }
inline jboolean X500Principal::equals(ref<java::lang::Object> o) { return call_method<SCAPIX_META_STRING("equals"), jboolean>(o); }
inline jint X500Principal::hashCode() { return call_method<SCAPIX_META_STRING("hashCode"), jint>(); }

} // namespace javax::security::auth::x500
} // namespace scapix::java_api

#endif // SCAPIX_JAVAX_SECURITY_AUTH_X500_X500PRINCIPAL_H
