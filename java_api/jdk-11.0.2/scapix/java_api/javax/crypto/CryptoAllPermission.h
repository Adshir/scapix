// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/javax/crypto/CryptoPermission.h>

#ifndef SCAPIX_JAVAX_CRYPTO_CRYPTOALLPERMISSION_H
#define SCAPIX_JAVAX_CRYPTO_CRYPTOALLPERMISSION_H

namespace scapix::java_api {

namespace java::lang { class Object; }
namespace java::security { class Permission; }
namespace java::security { class PermissionCollection; }

namespace javax::crypto {

// private
class CryptoAllPermission : public object_base<SCAPIX_META_STRING("javax/crypto/CryptoAllPermission"),
	javax::crypto::CryptoPermission>
{
public:

	jboolean implies(ref<java::security::Permission> p);
	jboolean equals(ref<java::lang::Object> obj);
	jint hashCode();
	ref<java::security::PermissionCollection> newPermissionCollection();

protected:

	CryptoAllPermission(handle_type h) : base_(h) {}

};

} // namespace javax::crypto
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/security/Permission.h>
#include <scapix/java_api/java/security/PermissionCollection.h>

namespace scapix::java_api {
namespace javax::crypto {

inline jboolean CryptoAllPermission::implies(ref<java::security::Permission> p) { return call_method<SCAPIX_META_STRING("implies"), jboolean>(p); }
inline jboolean CryptoAllPermission::equals(ref<java::lang::Object> obj) { return call_method<SCAPIX_META_STRING("equals"), jboolean>(obj); }
inline jint CryptoAllPermission::hashCode() { return call_method<SCAPIX_META_STRING("hashCode"), jint>(); }
inline ref<java::security::PermissionCollection> CryptoAllPermission::newPermissionCollection() { return call_method<SCAPIX_META_STRING("newPermissionCollection"), ref<java::security::PermissionCollection>>(); }

} // namespace javax::crypto
} // namespace scapix::java_api

#endif // SCAPIX_JAVAX_CRYPTO_CRYPTOALLPERMISSION_H
