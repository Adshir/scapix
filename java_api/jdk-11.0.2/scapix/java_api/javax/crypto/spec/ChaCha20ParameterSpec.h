// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/security/spec/AlgorithmParameterSpec.h>

#ifndef SCAPIX_JAVAX_CRYPTO_SPEC_CHACHA20PARAMETERSPEC_H
#define SCAPIX_JAVAX_CRYPTO_SPEC_CHACHA20PARAMETERSPEC_H

namespace scapix::java_api {
namespace javax::crypto::spec {

class ChaCha20ParameterSpec : public object_base<SCAPIX_META_STRING("javax/crypto/spec/ChaCha20ParameterSpec"),
	java::lang::Object,
	java::security::spec::AlgorithmParameterSpec>
{
public:

	static ref<ChaCha20ParameterSpec> new_object(ref<link::java::array<jbyte>> nonce, jint counter);
	ref<link::java::array<jbyte>> getNonce();
	jint getCounter();

protected:

	ChaCha20ParameterSpec(handle_type h) : base_(h) {}

};

} // namespace javax::crypto::spec
} // namespace scapix::java_api


namespace scapix::java_api {
namespace javax::crypto::spec {

inline ref<ChaCha20ParameterSpec> ChaCha20ParameterSpec::new_object(ref<link::java::array<jbyte>> nonce, jint counter) { return base_::new_object(nonce, counter); }
inline ref<link::java::array<jbyte>> ChaCha20ParameterSpec::getNonce() { return call_method<SCAPIX_META_STRING("getNonce"), ref<link::java::array<jbyte>>>(); }
inline jint ChaCha20ParameterSpec::getCounter() { return call_method<SCAPIX_META_STRING("getCounter"), jint>(); }

} // namespace javax::crypto::spec
} // namespace scapix::java_api

#endif // SCAPIX_JAVAX_CRYPTO_SPEC_CHACHA20PARAMETERSPEC_H
