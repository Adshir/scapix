// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/security/spec/AlgorithmParameterSpec.h>

#ifndef SCAPIX_JAVAX_CRYPTO_SPEC_DHPARAMETERSPEC_H
#define SCAPIX_JAVAX_CRYPTO_SPEC_DHPARAMETERSPEC_H

namespace scapix::java_api {

namespace java::math { class BigInteger; }

namespace javax::crypto::spec {

class DHParameterSpec : public object_base<SCAPIX_META_STRING("javax/crypto/spec/DHParameterSpec"),
	java::lang::Object,
	java::security::spec::AlgorithmParameterSpec>
{
public:

	static ref<DHParameterSpec> new_object(ref<java::math::BigInteger> p, ref<java::math::BigInteger> g);
	static ref<DHParameterSpec> new_object(ref<java::math::BigInteger> p, ref<java::math::BigInteger> g, jint l);
	ref<java::math::BigInteger> getP();
	ref<java::math::BigInteger> getG();
	jint getL();

protected:

	DHParameterSpec(handle_type h) : base_(h) {}

};

} // namespace javax::crypto::spec
} // namespace scapix::java_api

#include <scapix/java_api/java/math/BigInteger.h>

namespace scapix::java_api {
namespace javax::crypto::spec {

inline ref<DHParameterSpec> DHParameterSpec::new_object(ref<java::math::BigInteger> p, ref<java::math::BigInteger> g) { return base_::new_object(p, g); }
inline ref<DHParameterSpec> DHParameterSpec::new_object(ref<java::math::BigInteger> p, ref<java::math::BigInteger> g, jint l) { return base_::new_object(p, g, l); }
inline ref<java::math::BigInteger> DHParameterSpec::getP() { return call_method<SCAPIX_META_STRING("getP"), ref<java::math::BigInteger>>(); }
inline ref<java::math::BigInteger> DHParameterSpec::getG() { return call_method<SCAPIX_META_STRING("getG"), ref<java::math::BigInteger>>(); }
inline jint DHParameterSpec::getL() { return call_method<SCAPIX_META_STRING("getL"), jint>(); }

} // namespace javax::crypto::spec
} // namespace scapix::java_api

#endif // SCAPIX_JAVAX_CRYPTO_SPEC_DHPARAMETERSPEC_H
