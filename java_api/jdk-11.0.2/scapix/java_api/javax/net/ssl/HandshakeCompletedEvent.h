// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/java/util/EventObject.h>

#ifndef SCAPIX_JAVAX_NET_SSL_HANDSHAKECOMPLETEDEVENT_H
#define SCAPIX_JAVAX_NET_SSL_HANDSHAKECOMPLETEDEVENT_H

namespace scapix::java_api {

namespace java::lang { class String; }
namespace java::security { class Principal; }
namespace java::security::cert { class Certificate; }
namespace javax::net::ssl { class SSLSession; }
namespace javax::net::ssl { class SSLSocket; }
namespace javax::security::cert { class X509Certificate; }

namespace javax::net::ssl {

class HandshakeCompletedEvent : public object_base<SCAPIX_META_STRING("javax/net/ssl/HandshakeCompletedEvent"),
	java::util::EventObject>
{
public:

	static ref<HandshakeCompletedEvent> new_object(ref<javax::net::ssl::SSLSocket> sock, ref<javax::net::ssl::SSLSession> s);
	ref<javax::net::ssl::SSLSession> getSession();
	ref<java::lang::String> getCipherSuite();
	ref<link::java::array<java::security::cert::Certificate>> getLocalCertificates();
	ref<link::java::array<java::security::cert::Certificate>> getPeerCertificates();
	ref<link::java::array<javax::security::cert::X509Certificate>> getPeerCertificateChain();
	ref<java::security::Principal> getPeerPrincipal();
	ref<java::security::Principal> getLocalPrincipal();
	ref<javax::net::ssl::SSLSocket> getSocket();

protected:

	HandshakeCompletedEvent(handle_type h) : base_(h) {}

};

} // namespace javax::net::ssl
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/security/Principal.h>
#include <scapix/java_api/java/security/cert/Certificate.h>
#include <scapix/java_api/javax/net/ssl/SSLSession.h>
#include <scapix/java_api/javax/net/ssl/SSLSocket.h>
#include <scapix/java_api/javax/security/cert/X509Certificate.h>

namespace scapix::java_api {
namespace javax::net::ssl {

inline ref<HandshakeCompletedEvent> HandshakeCompletedEvent::new_object(ref<javax::net::ssl::SSLSocket> sock, ref<javax::net::ssl::SSLSession> s) { return base_::new_object(sock, s); }
inline ref<javax::net::ssl::SSLSession> HandshakeCompletedEvent::getSession() { return call_method<SCAPIX_META_STRING("getSession"), ref<javax::net::ssl::SSLSession>>(); }
inline ref<java::lang::String> HandshakeCompletedEvent::getCipherSuite() { return call_method<SCAPIX_META_STRING("getCipherSuite"), ref<java::lang::String>>(); }
inline ref<link::java::array<java::security::cert::Certificate>> HandshakeCompletedEvent::getLocalCertificates() { return call_method<SCAPIX_META_STRING("getLocalCertificates"), ref<link::java::array<java::security::cert::Certificate>>>(); }
inline ref<link::java::array<java::security::cert::Certificate>> HandshakeCompletedEvent::getPeerCertificates() { return call_method<SCAPIX_META_STRING("getPeerCertificates"), ref<link::java::array<java::security::cert::Certificate>>>(); }
inline ref<link::java::array<javax::security::cert::X509Certificate>> HandshakeCompletedEvent::getPeerCertificateChain() { return call_method<SCAPIX_META_STRING("getPeerCertificateChain"), ref<link::java::array<javax::security::cert::X509Certificate>>>(); }
inline ref<java::security::Principal> HandshakeCompletedEvent::getPeerPrincipal() { return call_method<SCAPIX_META_STRING("getPeerPrincipal"), ref<java::security::Principal>>(); }
inline ref<java::security::Principal> HandshakeCompletedEvent::getLocalPrincipal() { return call_method<SCAPIX_META_STRING("getLocalPrincipal"), ref<java::security::Principal>>(); }
inline ref<javax::net::ssl::SSLSocket> HandshakeCompletedEvent::getSocket() { return call_method<SCAPIX_META_STRING("getSocket"), ref<javax::net::ssl::SSLSocket>>(); }

} // namespace javax::net::ssl
} // namespace scapix::java_api

#endif // SCAPIX_JAVAX_NET_SSL_HANDSHAKECOMPLETEDEVENT_H
