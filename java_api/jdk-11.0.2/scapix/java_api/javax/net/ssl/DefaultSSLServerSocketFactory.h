// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/javax/net/ssl/SSLServerSocketFactory.h>

#ifndef SCAPIX_JAVAX_NET_SSL_DEFAULTSSLSERVERSOCKETFACTORY_H
#define SCAPIX_JAVAX_NET_SSL_DEFAULTSSLSERVERSOCKETFACTORY_H

namespace scapix::java_api {

namespace java::lang { class String; }
namespace java::net { class InetAddress; }
namespace java::net { class ServerSocket; }

namespace javax::net::ssl {

// private
class DefaultSSLServerSocketFactory : public object_base<SCAPIX_META_STRING("javax/net/ssl/DefaultSSLServerSocketFactory"),
	javax::net::ssl::SSLServerSocketFactory>
{
public:

	ref<java::net::ServerSocket> createServerSocket();
	ref<java::net::ServerSocket> createServerSocket(jint port);
	ref<java::net::ServerSocket> createServerSocket(jint port, jint backlog);
	ref<java::net::ServerSocket> createServerSocket(jint port, jint backlog, ref<java::net::InetAddress> ifAddress);
	ref<link::java::array<java::lang::String>> getDefaultCipherSuites();
	ref<link::java::array<java::lang::String>> getSupportedCipherSuites();

protected:

	DefaultSSLServerSocketFactory(handle_type h) : base_(h) {}

};

} // namespace javax::net::ssl
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/net/InetAddress.h>
#include <scapix/java_api/java/net/ServerSocket.h>

namespace scapix::java_api {
namespace javax::net::ssl {

inline ref<java::net::ServerSocket> DefaultSSLServerSocketFactory::createServerSocket() { return call_method<SCAPIX_META_STRING("createServerSocket"), ref<java::net::ServerSocket>>(); }
inline ref<java::net::ServerSocket> DefaultSSLServerSocketFactory::createServerSocket(jint port) { return call_method<SCAPIX_META_STRING("createServerSocket"), ref<java::net::ServerSocket>>(port); }
inline ref<java::net::ServerSocket> DefaultSSLServerSocketFactory::createServerSocket(jint port, jint backlog) { return call_method<SCAPIX_META_STRING("createServerSocket"), ref<java::net::ServerSocket>>(port, backlog); }
inline ref<java::net::ServerSocket> DefaultSSLServerSocketFactory::createServerSocket(jint port, jint backlog, ref<java::net::InetAddress> ifAddress) { return call_method<SCAPIX_META_STRING("createServerSocket"), ref<java::net::ServerSocket>>(port, backlog, ifAddress); }
inline ref<link::java::array<java::lang::String>> DefaultSSLServerSocketFactory::getDefaultCipherSuites() { return call_method<SCAPIX_META_STRING("getDefaultCipherSuites"), ref<link::java::array<java::lang::String>>>(); }
inline ref<link::java::array<java::lang::String>> DefaultSSLServerSocketFactory::getSupportedCipherSuites() { return call_method<SCAPIX_META_STRING("getSupportedCipherSuites"), ref<link::java::array<java::lang::String>>>(); }

} // namespace javax::net::ssl
} // namespace scapix::java_api

#endif // SCAPIX_JAVAX_NET_SSL_DEFAULTSSLSERVERSOCKETFACTORY_H
