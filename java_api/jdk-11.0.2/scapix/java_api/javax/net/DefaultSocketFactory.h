// Generated by Scapix Java API
// https://www.scapix.com

#include <scapix/java_api/javax/net/SocketFactory.h>

#ifndef SCAPIX_JAVAX_NET_DEFAULTSOCKETFACTORY_H
#define SCAPIX_JAVAX_NET_DEFAULTSOCKETFACTORY_H

namespace scapix::java_api {

namespace java::lang { class String; }
namespace java::net { class InetAddress; }
namespace java::net { class Socket; }

namespace javax::net {

// private
class DefaultSocketFactory : public object_base<SCAPIX_META_STRING("javax/net/DefaultSocketFactory"),
	javax::net::SocketFactory>
{
public:

	ref<java::net::Socket> createSocket();
	ref<java::net::Socket> createSocket(ref<java::lang::String> host, jint port);
	ref<java::net::Socket> createSocket(ref<java::net::InetAddress> address, jint port);
	ref<java::net::Socket> createSocket(ref<java::lang::String> host, jint port, ref<java::net::InetAddress> clientAddress, jint clientPort);
	ref<java::net::Socket> createSocket(ref<java::net::InetAddress> address, jint port, ref<java::net::InetAddress> clientAddress, jint clientPort);

protected:

	DefaultSocketFactory(handle_type h) : base_(h) {}

};

} // namespace javax::net
} // namespace scapix::java_api

#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/net/InetAddress.h>
#include <scapix/java_api/java/net/Socket.h>

namespace scapix::java_api {
namespace javax::net {

inline ref<java::net::Socket> DefaultSocketFactory::createSocket() { return call_method<SCAPIX_META_STRING("createSocket"), ref<java::net::Socket>>(); }
inline ref<java::net::Socket> DefaultSocketFactory::createSocket(ref<java::lang::String> host, jint port) { return call_method<SCAPIX_META_STRING("createSocket"), ref<java::net::Socket>>(host, port); }
inline ref<java::net::Socket> DefaultSocketFactory::createSocket(ref<java::net::InetAddress> address, jint port) { return call_method<SCAPIX_META_STRING("createSocket"), ref<java::net::Socket>>(address, port); }
inline ref<java::net::Socket> DefaultSocketFactory::createSocket(ref<java::lang::String> host, jint port, ref<java::net::InetAddress> clientAddress, jint clientPort) { return call_method<SCAPIX_META_STRING("createSocket"), ref<java::net::Socket>>(host, port, clientAddress, clientPort); }
inline ref<java::net::Socket> DefaultSocketFactory::createSocket(ref<java::net::InetAddress> address, jint port, ref<java::net::InetAddress> clientAddress, jint clientPort) { return call_method<SCAPIX_META_STRING("createSocket"), ref<java::net::Socket>>(address, port, clientAddress, clientPort); }

} // namespace javax::net
} // namespace scapix::java_api

#endif // SCAPIX_JAVAX_NET_DEFAULTSOCKETFACTORY_H
